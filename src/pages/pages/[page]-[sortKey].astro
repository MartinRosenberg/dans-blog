---
import type { Page, PagePath, ArticlePost } from "../../types";
import { PostCollections, getArticleSortFn } from "../../shared/dataCache";
import { ArticleCard } from "../../components/ArticleCard";

export const partial = true;

type Props = {
  page: Page<ArticlePost>;
};

export async function getStaticPaths({ paginate }: any) {
  const sortKeys = [
    ["date", "asc"],
    ["date", "desc"],
    ["modified", "asc"],
    ["modified", "desc"],
  ] as const;

  const pages = sortKeys.flatMap(([field, direction]) => {
    const posts = PostCollections.getPosts() as ArticlePost[];
    const sortFn = getArticleSortFn(field, direction);
    const sortedPosts = posts.concat().sort(sortFn);
    
    return paginate(PostCollections.getStaticPaths(sortedPosts), {
      pageSize: 10,
    }).map((p: any) => ({
      ...p,
      params: {
        ...p.params,
        page: p.params.page ?? "1",
        sortKey: `${field}-${direction}`,
      },
    }))
  });
  console.warn("ðŸ“„ PAGES", pages);
  return pages as PagePath[];
}
const {
  page: { data },
} = Astro.props;
// , currentPage, start, end, size, lastPage, total, url 
console.log("ðŸ“„ Page", data);
---

{
  data.map(({ props }: any) => (
    <ArticleCard article={props as ArticlePost} width={200} />
  ))
}
