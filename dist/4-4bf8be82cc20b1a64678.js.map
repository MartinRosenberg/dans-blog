{"version":3,"sources":["webpack:///4-4bf8be82cc20b1a64678.js","webpack:///./src/components/Post/PostComments.js"],"names":["webpackJsonp","912","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_propTypes","_propTypes2","_reactJss","_reactJss2","_config","_config2","_AsyncComponent","_AsyncComponent2","DiscussionEmbed","Promise","resolve","e","require","then","catch","error","styles","theme","postComments","margin","padding","borderTop","DISQUS_DELAY","PostComments","props","_useState","useState","showComments","setShowComments","_ref","classes","slug","post","title","frontmatter","category","url","config","siteUrl","pathPrefix","disqusConfig","identifier","fields","prefix","isSSR","globalThis","createElement","className","useEffect","setTimeout","id","shortname","disqusShortname","propTypes","PropTypes","object","isRequired","string"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAwBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAtBvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,GDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,GDcKQ,EAAcP,EAAuBM,GCb1CE,EAAAT,EAAA,IDiBKU,EAAaT,EAAuBQ,GCdzCE,EAAAX,EAAA,IDkBKY,EAAWX,EAAuBU,GCjBvCE,EAAAb,EAAA,KDqBKc,EAAmBb,EAAuBY,GChBzCE,GAAkB,EAAAD,EAAAV,SAAe,iBACrC,IAAAY,SAAA,SAAAC,GAAAjB,EAAAkB,EAAA,WAAAC,GAAAF,EAAAjB,EAAO,WACJoB,KAAK,SAAAtB,GACJ,MAAOA,GAAOiB,kBAEfM,MAAM,SAAAC,QAILC,EAAS,SAAAC,GAAA,OACbC,cACEC,OAAQ,UACRC,QAAS,UACTC,UAAW,oBAQTC,EAAe,IAEfC,EAAe,SAAAC,GAAS,GAAAC,IACY,EAAA3B,EAAA4B,WAAS,GAA1CC,EADqBF,EAAA,GACPG,EADOH,EAAA,GAAAI,EAEIL,MAAxBM,EAFoBD,EAEpBC,QAASC,EAFWF,EAEXE,KAAMC,EAFKH,EAELG,KACjBC,EAAQD,GAAQA,EAAKE,aAAeF,EAAKE,YAAYD,MACrDE,EAAWH,GAAQA,EAAKE,aAAeF,EAAKE,YAAYC,SAExDC,EAAMC,UAAOC,QAAUD,UAAOE,WAAaR,EAC3CS,GACJC,YAAeT,GAAQA,EAAKU,QAAUV,EAAKU,OAAOC,QAAlD,IAA4DR,EAC5DF,MAAOA,GAASF,EAChBK,OAIIQ,EAA8B,mBAAfC,WAErB,OAAID,GAAc7C,EAAAF,QAAAiD,cAAA,OAAKC,UAAU,oCAEjC,EAAAjD,EAAAkD,WAAU,WACRC,WAAWrB,EAAiBN,GAAc,QAI1CvB,EAAAF,QAAAiD,cAAA,OAAKI,GAAG,gBAAgBH,UAAWjB,EAAQZ,cACxCS,GAAgB5B,EAAAF,QAAAiD,cAACtC,GAAgB2C,UAAWd,UAAOe,gBAAiBf,OAAQG,MAanFjB,GAAa8B,WACXvB,QAASwB,UAAUC,OAAOC,WAC1BxB,KAAMsB,UAAUC,OAAOC,WACvBzB,KAAMuB,UAAUG,OAAOD,WACvBvC,MAAOqC,UAAUC,OAAOC,YDgCzBhE,EAAQK,SC5BM,EAAAM,EAAAN,SAAYmB,GAAQO,GD6BlChC,EAAOC,QAAUA,EAAiB","file":"4-4bf8be82cc20b1a64678.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 912:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(3);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _reactJss = __webpack_require__(17);\n\t\n\tvar _reactJss2 = _interopRequireDefault(_reactJss);\n\t\n\tvar _config = __webpack_require__(76);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _AsyncComponent = __webpack_require__(197);\n\t\n\tvar _AsyncComponent2 = _interopRequireDefault(_AsyncComponent);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// const DiscussionEmbedAsync = React.lazy(() =>\n\t//   import(\"disqus-react\").then(({ DiscussionEmbed }) => DiscussionEmbed)\n\t// );\n\t\n\t// import FacebookProvider, { Comments } from \"react-facebook\";\n\t// import { DiscussionEmbed } from \"disqus-react\";\n\tvar DiscussionEmbed = (0, _AsyncComponent2.default)(function () {\n\t  return new Promise(function (resolve) {\n\t    __webpack_require__.e/* nsure */(2, function (require) {\n\t      resolve(__webpack_require__(1070));\n\t    });\n\t  }).then(function (module) {\n\t    return module.DiscussionEmbed;\n\t  }).catch(function (error) {});\n\t});\n\t\n\tvar styles = function styles(theme) {\n\t  return {\n\t    postComments: {\n\t      margin: \"3em 0 0\",\n\t      padding: \"3em 0 0\",\n\t      borderTop: \"1px solid #ddd\"\n\t    }\n\t  };\n\t};\n\t\n\t// {/* <Disqus.CommentCount shortname={disqusShortname} config={disqusConfig}>\n\t//   Comments\n\t// </Disqus.CommentCount> */}\n\t\n\tvar DISQUS_DELAY = 6000;\n\t\n\tvar PostComments = function PostComments(props) {\n\t  var _useState = (0, _react.useState)(false),\n\t      showComments = _useState[0],\n\t      setShowComments = _useState[1];\n\t\n\t  var _ref = props || {},\n\t      classes = _ref.classes,\n\t      slug = _ref.slug,\n\t      post = _ref.post;\n\t\n\t  var title = post && post.frontmatter && post.frontmatter.title;\n\t  var category = post && post.frontmatter && post.frontmatter.category;\n\t\n\t  var url = _config2.default.siteUrl + _config2.default.pathPrefix + slug;\n\t  var disqusConfig = {\n\t    identifier: (post && post.fields && post.fields.prefix) + \"/\" + category,\n\t    title: title || slug,\n\t    url: url\n\t  };\n\t\n\t  // eslint-disable-next-line no-undef\n\t  var isSSR = typeof globalThis === \"undefined\";\n\t\n\t  if (isSSR) return _react2.default.createElement(\"div\", { className: \"post-comments-ssr-placeholder\" });\n\t\n\t  (0, _react.useEffect)(function () {\n\t    setTimeout(setShowComments, DISQUS_DELAY, true);\n\t  }, []);\n\t\n\t  return _react2.default.createElement(\n\t    \"div\",\n\t    { id: \"post-comments\", className: classes.postComments },\n\t    showComments && _react2.default.createElement(DiscussionEmbed, { shortname: _config2.default.disqusShortname, config: disqusConfig })\n\t  );\n\t};\n\t\n\tPostComments.propTypes = {\n\t  classes: _propTypes2.default.object.isRequired,\n\t  post: _propTypes2.default.object.isRequired,\n\t  slug: _propTypes2.default.string.isRequired,\n\t  theme: _propTypes2.default.object.isRequired\n\t  // facebook: PropTypes.object.isRequired\n\t};\n\t\n\texports.default = (0, _reactJss2.default)(styles)(PostComments);\n\tmodule.exports = exports[\"default\"];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 4-4bf8be82cc20b1a64678.js","import React, { Suspense, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport injectSheet from \"react-jss\";\n// import FacebookProvider, { Comments } from \"react-facebook\";\n// import { DiscussionEmbed } from \"disqus-react\";\nimport config from \"../../../content/meta/config\";\nimport asyncComponent from \"../common/AsyncComponent\";\n\n// const DiscussionEmbedAsync = React.lazy(() =>\n//   import(\"disqus-react\").then(({ DiscussionEmbed }) => DiscussionEmbed)\n// );\nconst DiscussionEmbed = asyncComponent(() =>\n  import(\"disqus-react\")\n    .then(module => {\n      return module.DiscussionEmbed;\n    })\n    .catch(error => {})\n);\n\n\nconst styles = theme => ({\n  postComments: {\n    margin: \"3em 0 0\",\n    padding: \"3em 0 0\",\n    borderTop: \"1px solid #ddd\"\n  }\n});\n\n// {/* <Disqus.CommentCount shortname={disqusShortname} config={disqusConfig}>\n//   Comments\n// </Disqus.CommentCount> */}\n\nconst DISQUS_DELAY = 6000;\n\nconst PostComments = props => {\n  const [showComments, setShowComments] = useState(false);\n  const { classes, slug, post } = props || {};\n  const title = post && post.frontmatter && post.frontmatter.title;\n  const category = post && post.frontmatter && post.frontmatter.category;\n\n  const url = config.siteUrl + config.pathPrefix + slug;\n  const disqusConfig = {\n    identifier: `${post && post.fields && post.fields.prefix}/${category}`,\n    title: title || slug,\n    url\n  };\n\n  // eslint-disable-next-line no-undef\n  const isSSR = typeof globalThis === \"undefined\";\n\n  if (isSSR) return <div className=\"post-comments-ssr-placeholder\" />;\n\n  useEffect(() => {\n    setTimeout(setShowComments, DISQUS_DELAY, true);\n  }, []);\n\n  return (\n    <div id=\"post-comments\" className={classes.postComments}>\n      {showComments && <DiscussionEmbed shortname={config.disqusShortname} config={disqusConfig} />}\n\n      {/* <FacebookProvider appId={facebook}>\n        <Comments\n          href={`${config.siteUrl}${slug}`}\n          width=\"100%\"\n          colorScheme={props.theme.main.colors.fbCommentsColorscheme}\n        />\n      </FacebookProvider> */}\n    </div>\n  );\n};\n\nPostComments.propTypes = {\n  classes: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  slug: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired\n  // facebook: PropTypes.object.isRequired\n};\n\nexport default injectSheet(styles)(PostComments);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Post/PostComments.js"],"sourceRoot":""}