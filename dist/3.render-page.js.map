{"version":3,"sources":["webpack:///./src/components/Post/PostComments.js"],"names":["styles","postComments","margin","padding","borderTop","COMMENTS_DELAY","GitHubIssueComments","PostComments","showComments","setShowComments","props","classes","isSSR","globalThis","t","setTimeout","clearTimeout","propTypes","PropTypes","object","isRequired","post","slug","string","theme"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAMA,SAAS,SAATA,MAAS;AAAA,UAAU;AACvBC,mBAAc;AACZC,eAAQ,SADI;AAEZC,gBAAS,SAFG;AAGZC,kBAAW;AAHC;AADS,IAAV;AAAA,EAAf;;AAQA,KAAMC,iBAAiB,IAAvB;;AAEA,KAAMC,sBAAsB,SAAtBA,mBAAsB;AAAA,UAC1B;AACE,UAAI,+BADN;AAEE,WAAK,mBAFP;AAGE,mBAAW,UAHb;AAIE,YAAM,sBAJR;AAKE,YAAM,aALR;AAME,kBAAY,WANd;AAOE;AAPF,KAD0B;AAAA,EAA5B;;AAYA,KAAMC,eAAe,SAAfA,YAAe,QAAS;AAAA,mBACY,qBAAS,KAAT,CADZ;AAAA,OACrBC,YADqB;AAAA,OACPC,eADO;;AAAA,cAERC,SAAS,EAFD;AAAA,OAEpBC,OAFoB,QAEpBA,OAFoB;AAG5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,OAAMC,QAAQ,OAAOC,UAAP,KAAsB,WAApC;;AAEA,OAAID,KAAJ,EAAW,OAAO,uCAAK,WAAU,+BAAf,GAAP;;AAEX,yBAAU,YAAM;AACd,SAAME,IAAIC,WAAWN,eAAX,EAA4BJ,cAA5B,EAA4C,IAA5C,CAAV;AACA,YAAO;AAAA,cAAMW,aAAaF,CAAb,CAAN;AAAA,MAAP;AACD,IAHD,EAGG,EAHH;;AAKA,UACE;AAAA;AAAA,OAAK,IAAG,eAAR,EAAwB,WAAWH,QAAQV,YAA3C;AACGO,oBAAe,8BAAC,mBAAD,OAAf,GAAyC;AAD5C,IADF;AAKD,EA5BD;;AA8BAD,cAAaU,SAAb,GAAyB;AACvBN,YAASO,oBAAUC,MAAV,CAAiBC,UADH;AAEvBC,SAAMH,oBAAUC,MAAV,CAAiBC,UAFA;AAGvBE,SAAMJ,oBAAUK,MAAV,CAAiBH,UAHA;AAIvBI,UAAON,oBAAUC,MAAV,CAAiBC;AACxB;AALuB,EAAzB;;mBAQe,wBAAYpB,MAAZ,EAAoBO,YAApB,C","file":"3.render-page.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport injectSheet from \"react-jss\";\n// import FacebookProvider, { Comments } from \"react-facebook\";\n// import { DiscussionEmbed } from \"disqus-react\";\n// import config from \"../../../content/meta/config\";\n// import asyncComponent from \"../common/AsyncComponent\";\n\n// const DiscussionEmbedAsync = React.lazy(() =>\n//   import(\"disqus-react\").then(({ DiscussionEmbed }) => DiscussionEmbed)\n// );\n// const DiscussionEmbed = asyncComponent(() =>\n//   import(\"disqus-react\")\n//     .then(module => {\n//       return module.DiscussionEmbed;\n//     })\n//     .catch(error => {})\n// );\n\nconst styles = theme => ({\n  postComments: {\n    margin: \"3em 0 0\",\n    padding: \"3em 0 0\",\n    borderTop: \"1px solid #ddd\"\n  }\n});\n\nconst COMMENTS_DELAY = 3000;\n\nconst GitHubIssueComments = () => (\n  <script\n    src=\"https://utteranc.es/client.js\"\n    repo=\"justsml/dans-blog\"\n    issue-term=\"pathname\"\n    label=\"ðŸ’¬ comment\"\n    theme=\"photon-dark\"\n    crossOrigin=\"anonymous\"\n    async\n  />\n);\n\nconst PostComments = props => {\n  const [showComments, setShowComments] = useState(false);\n  const { classes } = props || {};\n  // const title = post && post.frontmatter && post.frontmatter.title;\n  // const category = post && post.frontmatter && post.frontmatter.category;\n\n  // const url = config.siteUrl + config.pathPrefix + slug;\n  // const disqusConfig = {\n  //   identifier: `${post && post.fields && post.fields.prefix}/${category}`,\n  //   title: title || slug,\n  //   url\n  // };\n\n  // eslint-disable-next-line no-undef\n  const isSSR = typeof globalThis === \"undefined\";\n\n  if (isSSR) return <div className=\"post-comments-ssr-placeholder\" />;\n\n  useEffect(() => {\n    const t = setTimeout(setShowComments, COMMENTS_DELAY, true);\n    return () => clearTimeout(t);\n  }, []);\n\n  return (\n    <div id=\"post-comments\" className={classes.postComments}>\n      {showComments ? <GitHubIssueComments /> : \"Loading comments...\"}\n    </div>\n  );\n};\n\nPostComments.propTypes = {\n  classes: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  slug: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired\n  // facebook: PropTypes.object.isRequired\n};\n\nexport default injectSheet(styles)(PostComments);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Post/PostComments.js"],"sourceRoot":""}