/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/ 		if(moreModules[0]) {
/******/ 			installedModules[0] = 0;
/******/ 			return __webpack_require__(0);
/******/ 		}
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		168707334958949:0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);
/******/
/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;
/******/
/******/ 			script.src = __webpack_require__.p + window["webpackManifest"][chunkId];
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// expose the chunks object
/******/ 	__webpack_require__.s = installedChunks;
/******/ })
/************************************************************************/
/******/ ([
/* 0 */,
/* 1 */
/***/ (function(module, exports) {

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    default: obj
	  };
	}
	
	module.exports = _interopRequireDefault;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(1190);
	} else {
	  module.exports = require('./cjs/react.development.js');
	}


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	if (false) {
	  var ReactIs = require('react-is');
	
	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(1543)();
	}


/***/ }),
/* 4 */
/***/ (function(module, exports) {

	function _extends() {
	  module.exports = _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  return _extends.apply(this, arguments);
	}
	
	module.exports = _extends;

/***/ }),
/* 5 */,
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	var objectWithoutPropertiesLoose = __webpack_require__(575);
	
	function _objectWithoutProperties(source, excluded) {
	  if (source == null) return {};
	  var target = objectWithoutPropertiesLoose(source, excluded);
	  var key, i;
	
	  if (Object.getOwnPropertySymbols) {
	    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
	
	    for (i = 0; i < sourceSymbolKeys.length; i++) {
	      key = sourceSymbolKeys[i];
	      if (excluded.indexOf(key) >= 0) continue;
	      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
	      target[key] = source[key];
	    }
	  }
	
	  return target;
	}
	
	module.exports = _objectWithoutProperties;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2018 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames() {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					if (arg.length) {
						var inner = classNames.apply(null, arg);
						if (inner) {
							classes.push(inner);
						}
					}
				} else if (argType === 'object') {
					if (arg.toString === Object.prototype.toString) {
						for (var key in arg) {
							if (hasOwn.call(arg, key) && arg[key]) {
								classes.push(key);
							}
						}
					} else {
						classes.push(arg.toString());
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			classNames.default = classNames;
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ }),
/* 8 */
/***/ (function(module, exports) {

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	}
	
	module.exports = _defineProperty;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.sheetsManager = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _extends3 = _interopRequireDefault(__webpack_require__(4));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _hoistNonReactStatics = _interopRequireDefault(__webpack_require__(114));
	
	var _utils = __webpack_require__(40);
	
	var _jss = __webpack_require__(195);
	
	var _reactJssContext = _interopRequireDefault(__webpack_require__(778));
	
	var _jssPreset = _interopRequireDefault(__webpack_require__(384));
	
	var _mergeClasses = _interopRequireDefault(__webpack_require__(385));
	
	var _multiKeyStore = _interopRequireDefault(__webpack_require__(777));
	
	var _createMuiTheme = _interopRequireDefault(__webpack_require__(244));
	
	var _themeListener = _interopRequireDefault(__webpack_require__(245));
	
	var _createGenerateClassName = _interopRequireDefault(__webpack_require__(382));
	
	var _getStylesCreator = _interopRequireDefault(__webpack_require__(776));
	
	var _getThemeProps = _interopRequireDefault(__webpack_require__(383));
	
	/* eslint-disable no-underscore-dangle */
	// Default JSS instance.
	var jss = (0, _jss.create)((0, _jssPreset.default)()); // Use a singleton or the provided one by the context.
	//
	// The counter-based approach doesn't tolerate any mistake.
	// It's much safer to use the same counter everywhere.
	
	var generateClassName = (0, _createGenerateClassName.default)(); // Global index counter to preserve source order.
	// We create the style sheet during at the creation of the component,
	// children are handled after the parents, so the order of style elements would be parent->child.
	// It is a problem though when a parent passes a className
	// which needs to override any childs styles.
	// StyleSheet of the child has a higher specificity, because of the source order.
	// So our solution is to render sheets them in the reverse order child->sheet, so
	// that parent has a higher specificity.
	
	var indexCounter = -10e10; // Exported for test purposes
	
	var sheetsManager = new Map(); // We use the same empty object to ref count the styles that don't need a theme object.
	
	exports.sheetsManager = sheetsManager;
	var noopTheme = {}; // In order to have self-supporting components, we rely on default theme when not provided.
	
	var defaultTheme = (0, _createMuiTheme.default)({
	  typography: {
	    suppressWarning: true
	  }
	}); // Link a style sheet with a component.
	// It does not modify the component passed to it;
	// instead, it returns a new component, with a `classes` property.
	
	var withStylesOld = function withStylesOld(stylesOrCreator) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  return function (Component) {
	    var _extends2;
	
	    var _options$withTheme = options.withTheme,
	        withTheme = _options$withTheme === void 0 ? false : _options$withTheme,
	        _options$flip = options.flip,
	        flip = _options$flip === void 0 ? null : _options$flip,
	        name = options.name,
	        styleSheetOptions = (0, _objectWithoutProperties2.default)(options, ["withTheme", "flip", "name"]);
	    var stylesCreator = (0, _getStylesCreator.default)(stylesOrCreator);
	    var listenToTheme = stylesCreator.themingEnabled || typeof name === 'string' || withTheme;
	    indexCounter += 1;
	    stylesCreator.options.index = indexCounter;
	     false ? (0, _warning.default)(indexCounter < 0, ['Material-UI: you might have a memory leak.', 'The indexCounter is not supposed to grow that much.'].join('\n')) : void 0;
	
	    var WithStyles =
	    /*#__PURE__*/
	    function (_React$Component) {
	      (0, _inherits2.default)(WithStyles, _React$Component);
	
	      function WithStyles(props, context) {
	        var _this;
	
	        (0, _classCallCheck2.default)(this, WithStyles);
	        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(WithStyles).call(this, props, context));
	        _this.jss = context[_reactJssContext.default.jss] || jss;
	        _this.sheetsManager = sheetsManager;
	        _this.unsubscribeId = null;
	        var muiThemeProviderOptions = context.muiThemeProviderOptions;
	
	        if (muiThemeProviderOptions) {
	          if (muiThemeProviderOptions.sheetsManager) {
	            _this.sheetsManager = muiThemeProviderOptions.sheetsManager;
	          }
	
	          _this.sheetsCache = muiThemeProviderOptions.sheetsCache;
	          _this.disableStylesGeneration = muiThemeProviderOptions.disableStylesGeneration;
	        } // Attach the stylesCreator to the instance of the component as in the context
	        // of react-hot-loader the hooks can be executed in a different closure context:
	        // https://github.com/gaearon/react-hot-loader/blob/master/src/patch.dev.js#L107
	
	
	        _this.stylesCreatorSaved = stylesCreator;
	        _this.sheetOptions = (0, _extends3.default)({
	          generateClassName: generateClassName
	        }, context[_reactJssContext.default.sheetOptions]); // We use || as the function call is lazy evaluated.
	
	        _this.theme = listenToTheme ? _themeListener.default.initial(context) || defaultTheme : noopTheme;
	
	        _this.attach(_this.theme);
	
	        _this.cacheClasses = {
	          // Cache for the finalized classes value.
	          value: null,
	          // Cache for the last used classes prop pointer.
	          lastProp: null,
	          // Cache for the last used rendered classes pointer.
	          lastJSS: {}
	        };
	        return _this;
	      }
	
	      (0, _createClass2.default)(WithStyles, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	          var _this2 = this;
	
	          if (!listenToTheme) {
	            return;
	          }
	
	          this.unsubscribeId = _themeListener.default.subscribe(this.context, function (theme) {
	            var oldTheme = _this2.theme;
	            _this2.theme = theme;
	
	            _this2.attach(_this2.theme); // Rerender the component so the underlying component gets the theme update.
	            // By theme update we mean receiving and applying the new class names.
	
	
	            _this2.setState({}, function () {
	              _this2.detach(oldTheme);
	            });
	          });
	        }
	      }, {
	        key: "componentDidUpdate",
	        value: function componentDidUpdate() {
	          // react-hot-loader specific logic
	          if (this.stylesCreatorSaved === stylesCreator || ("production") === 'production') {
	            return;
	          }
	
	          this.detach(this.theme);
	          this.stylesCreatorSaved = stylesCreator;
	          this.attach(this.theme);
	          this.forceUpdate();
	        }
	      }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	          this.detach(this.theme);
	
	          if (this.unsubscribeId !== null) {
	            _themeListener.default.unsubscribe(this.context, this.unsubscribeId);
	          }
	        }
	      }, {
	        key: "getClasses",
	        value: function getClasses() {
	          if (this.disableStylesGeneration) {
	            return this.props.classes || {};
	          } // Tracks if either the rendered classes or classes prop has changed,
	          // requiring the generation of a new finalized classes object.
	
	
	          var generate = false;
	
	          var sheetManager = _multiKeyStore.default.get(this.sheetsManager, this.stylesCreatorSaved, this.theme);
	
	          if (sheetManager.sheet.classes !== this.cacheClasses.lastJSS) {
	            this.cacheClasses.lastJSS = sheetManager.sheet.classes;
	            generate = true;
	          }
	
	          if (this.props.classes !== this.cacheClasses.lastProp) {
	            this.cacheClasses.lastProp = this.props.classes;
	            generate = true;
	          }
	
	          if (generate) {
	            this.cacheClasses.value = (0, _mergeClasses.default)({
	              baseClasses: this.cacheClasses.lastJSS,
	              newClasses: this.props.classes,
	              Component: Component
	            });
	          }
	
	          return this.cacheClasses.value;
	        }
	      }, {
	        key: "attach",
	        value: function attach(theme) {
	          if (this.disableStylesGeneration) {
	            return;
	          }
	
	          var stylesCreatorSaved = this.stylesCreatorSaved;
	
	          var sheetManager = _multiKeyStore.default.get(this.sheetsManager, stylesCreatorSaved, theme);
	
	          if (!sheetManager) {
	            sheetManager = {
	              refs: 0,
	              sheet: null
	            };
	
	            _multiKeyStore.default.set(this.sheetsManager, stylesCreatorSaved, theme, sheetManager);
	          }
	
	          if (sheetManager.refs === 0) {
	            var sheet;
	
	            if (this.sheetsCache) {
	              sheet = _multiKeyStore.default.get(this.sheetsCache, stylesCreatorSaved, theme);
	            }
	
	            if (!sheet) {
	              sheet = this.createSheet(theme);
	              sheet.attach();
	
	              if (this.sheetsCache) {
	                _multiKeyStore.default.set(this.sheetsCache, stylesCreatorSaved, theme, sheet);
	              }
	            }
	
	            sheetManager.sheet = sheet;
	            var sheetsRegistry = this.context[_reactJssContext.default.sheetsRegistry];
	
	            if (sheetsRegistry) {
	              sheetsRegistry.add(sheet);
	            }
	          }
	
	          sheetManager.refs += 1;
	        }
	      }, {
	        key: "createSheet",
	        value: function createSheet(theme) {
	          var styles = this.stylesCreatorSaved.create(theme, name);
	          var meta = name;
	
	          if (false) {
	            // Provide a better DX outside production.
	            meta = (0, _utils.getDisplayName)(Component);
	            process.env.NODE_ENV !== "production" ? (0, _warning.default)(typeof meta === 'string', ['Material-UI: the component displayName is invalid. It needs to be a string.', "Please fix the following component: ".concat(Component, ".")].join('\n')) : void 0;
	          }
	
	          var sheet = this.jss.createStyleSheet(styles, (0, _extends3.default)({
	            meta: meta,
	            classNamePrefix: meta,
	            flip: typeof flip === 'boolean' ? flip : theme.direction === 'rtl',
	            link: false
	          }, this.sheetOptions, this.stylesCreatorSaved.options, {
	            name: name || Component.displayName
	          }, styleSheetOptions));
	          return sheet;
	        }
	      }, {
	        key: "detach",
	        value: function detach(theme) {
	          if (this.disableStylesGeneration) {
	            return;
	          }
	
	          var sheetManager = _multiKeyStore.default.get(this.sheetsManager, this.stylesCreatorSaved, theme);
	
	          sheetManager.refs -= 1;
	
	          if (sheetManager.refs === 0) {
	            _multiKeyStore.default.delete(this.sheetsManager, this.stylesCreatorSaved, theme);
	
	            this.jss.removeStyleSheet(sheetManager.sheet);
	            var sheetsRegistry = this.context[_reactJssContext.default.sheetsRegistry];
	
	            if (sheetsRegistry) {
	              sheetsRegistry.remove(sheetManager.sheet);
	            }
	          }
	        }
	      }, {
	        key: "render",
	        value: function render() {
	          var _this$props = this.props,
	              classes = _this$props.classes,
	              innerRef = _this$props.innerRef,
	              other = (0, _objectWithoutProperties2.default)(_this$props, ["classes", "innerRef"]);
	          var more = (0, _getThemeProps.default)({
	            theme: this.theme,
	            name: name,
	            props: other
	          }); // Provide the theme to the wrapped component.
	          // So we don't have to use the `withTheme()` Higher-order Component.
	
	          if (withTheme && !more.theme) {
	            more.theme = this.theme;
	          }
	
	          return _react.default.createElement(Component, (0, _extends3.default)({}, more, {
	            classes: this.getClasses(),
	            ref: innerRef
	          }));
	        }
	      }]);
	      return WithStyles;
	    }(_react.default.Component);
	
	    WithStyles.propTypes =  false ? {
	      /**
	       * Override or extend the styles applied to the component.
	       */
	      classes: _propTypes.default.object,
	
	      /**
	       * Use that property to pass a ref callback to the decorated component.
	       */
	      innerRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])
	    } : {};
	    WithStyles.contextTypes = (0, _extends3.default)((_extends2 = {
	      muiThemeProviderOptions: _propTypes.default.object
	    }, (0, _defineProperty2.default)(_extends2, _reactJssContext.default.jss, _propTypes.default.object), (0, _defineProperty2.default)(_extends2, _reactJssContext.default.sheetOptions, _propTypes.default.object), (0, _defineProperty2.default)(_extends2, _reactJssContext.default.sheetsRegistry, _propTypes.default.object), _extends2), listenToTheme ? _themeListener.default.contextTypes : {});
	
	    if (false) {
	      WithStyles.displayName = "WithStyles(".concat((0, _utils.getDisplayName)(Component), ")");
	    }
	
	    (0, _hoistNonReactStatics.default)(WithStyles, Component);
	
	    if (false) {
	      // Exposed for test purposes.
	      WithStyles.Naked = Component;
	      WithStyles.options = options;
	    }
	
	    return WithStyles;
	  };
	};
	/* istanbul ignore if */
	
	
	if (!_utils.ponyfillGlobal.__MUI_STYLES__) {
	  _utils.ponyfillGlobal.__MUI_STYLES__ = {};
	}
	
	if (!_utils.ponyfillGlobal.__MUI_STYLES__.withStyles) {
	  _utils.ponyfillGlobal.__MUI_STYLES__.withStyles = withStylesOld;
	}
	
	var _default = function _default(styles, options) {
	  return _utils.ponyfillGlobal.__MUI_STYLES__.withStyles(styles, (0, _extends3.default)({
	    defaultTheme: defaultTheme
	  }, options));
	};
	
	exports.default = _default;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}
	
	module.exports = _classCallCheck;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

	function _defineProperties(target, props) {
	  for (var i = 0; i < props.length; i++) {
	    var descriptor = props[i];
	    descriptor.enumerable = descriptor.enumerable || false;
	    descriptor.configurable = true;
	    if ("value" in descriptor) descriptor.writable = true;
	    Object.defineProperty(target, descriptor.key, descriptor);
	  }
	}
	
	function _createClass(Constructor, protoProps, staticProps) {
	  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
	  if (staticProps) _defineProperties(Constructor, staticProps);
	  return Constructor;
	}
	
	module.exports = _createClass;

/***/ }),
/* 12 */
/***/ (function(module, exports) {

	function _getPrototypeOf(o) {
	  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
	    return o.__proto__ || Object.getPrototypeOf(o);
	  };
	  return _getPrototypeOf(o);
	}
	
	module.exports = _getPrototypeOf;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	var setPrototypeOf = __webpack_require__(576);
	
	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function");
	  }
	
	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) setPrototypeOf(subClass, superClass);
	}
	
	module.exports = _inherits;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	var _typeof = __webpack_require__(131);
	
	var assertThisInitialized = __webpack_require__(26);
	
	function _possibleConstructorReturn(self, call) {
	  if (call && (_typeof(call) === "object" || typeof call === "function")) {
	    return call;
	  }
	
	  return assertThisInitialized(self);
	}
	
	module.exports = _possibleConstructorReturn;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var __DEV__ = ("production") !== 'production';
	
	var warning = function() {};
	
	if (__DEV__) {
	  var printWarning = function printWarning(format, args) {
	    var len = arguments.length;
	    args = new Array(len > 1 ? len - 1 : 0);
	    for (var key = 1; key < len; key++) {
	      args[key - 1] = arguments[key];
	    }
	    var argIndex = 0;
	    var message = 'Warning: ' +
	      format.replace(/%s/g, function() {
	        return args[argIndex++];
	      });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  }
	
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	          '`warning(condition, format, ...args)` requires a warning ' +
	          'message argument'
	      );
	    }
	    if (!condition) {
	      printWarning.apply(null, [format].concat(args));
	    }
	  };
	}
	
	module.exports = warning;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var _exportNames = {
	  createInstantSearch: true,
	  createIndex: true,
	  createConnector: true,
	  HIGHLIGHT_TAGS: true,
	  version: true,
	  translatable: true,
	  Configure: true,
	  QueryRuleContext: true,
	  connectAutoComplete: true,
	  connectBreadcrumb: true,
	  connectConfigure: true,
	  connectCurrentRefinements: true,
	  connectGeoSearch: true,
	  connectHierarchicalMenu: true,
	  connectHighlight: true,
	  connectHits: true,
	  connectHitsPerPage: true,
	  connectInfiniteHits: true,
	  connectMenu: true,
	  connectNumericMenu: true,
	  connectPagination: true,
	  connectPoweredBy: true,
	  connectQueryRules: true,
	  connectRange: true,
	  connectRefinementList: true,
	  connectScrollTo: true,
	  connectSearchBox: true,
	  connectSortBy: true,
	  connectStateResults: true,
	  connectStats: true,
	  connectToggleRefinement: true,
	  connectHitInsights: true
	};
	Object.defineProperty(exports, "createInstantSearch", {
	  enumerable: true,
	  get: function get() {
	    return _createInstantSearch.default;
	  }
	});
	Object.defineProperty(exports, "createIndex", {
	  enumerable: true,
	  get: function get() {
	    return _createIndex.default;
	  }
	});
	Object.defineProperty(exports, "createConnector", {
	  enumerable: true,
	  get: function get() {
	    return _createConnector.default;
	  }
	});
	Object.defineProperty(exports, "HIGHLIGHT_TAGS", {
	  enumerable: true,
	  get: function get() {
	    return _highlight.HIGHLIGHT_TAGS;
	  }
	});
	Object.defineProperty(exports, "version", {
	  enumerable: true,
	  get: function get() {
	    return _version.default;
	  }
	});
	Object.defineProperty(exports, "translatable", {
	  enumerable: true,
	  get: function get() {
	    return _translatable.default;
	  }
	});
	Object.defineProperty(exports, "Configure", {
	  enumerable: true,
	  get: function get() {
	    return _Configure.default;
	  }
	});
	Object.defineProperty(exports, "QueryRuleContext", {
	  enumerable: true,
	  get: function get() {
	    return _QueryRuleContext.default;
	  }
	});
	Object.defineProperty(exports, "connectAutoComplete", {
	  enumerable: true,
	  get: function get() {
	    return _connectAutoComplete.default;
	  }
	});
	Object.defineProperty(exports, "connectBreadcrumb", {
	  enumerable: true,
	  get: function get() {
	    return _connectBreadcrumb.default;
	  }
	});
	Object.defineProperty(exports, "connectConfigure", {
	  enumerable: true,
	  get: function get() {
	    return _connectConfigure.default;
	  }
	});
	Object.defineProperty(exports, "connectCurrentRefinements", {
	  enumerable: true,
	  get: function get() {
	    return _connectCurrentRefinements.default;
	  }
	});
	Object.defineProperty(exports, "connectGeoSearch", {
	  enumerable: true,
	  get: function get() {
	    return _connectGeoSearch.default;
	  }
	});
	Object.defineProperty(exports, "connectHierarchicalMenu", {
	  enumerable: true,
	  get: function get() {
	    return _connectHierarchicalMenu.default;
	  }
	});
	Object.defineProperty(exports, "connectHighlight", {
	  enumerable: true,
	  get: function get() {
	    return _connectHighlight.default;
	  }
	});
	Object.defineProperty(exports, "connectHits", {
	  enumerable: true,
	  get: function get() {
	    return _connectHits.default;
	  }
	});
	Object.defineProperty(exports, "connectHitsPerPage", {
	  enumerable: true,
	  get: function get() {
	    return _connectHitsPerPage.default;
	  }
	});
	Object.defineProperty(exports, "connectInfiniteHits", {
	  enumerable: true,
	  get: function get() {
	    return _connectInfiniteHits.default;
	  }
	});
	Object.defineProperty(exports, "connectMenu", {
	  enumerable: true,
	  get: function get() {
	    return _connectMenu.default;
	  }
	});
	Object.defineProperty(exports, "connectNumericMenu", {
	  enumerable: true,
	  get: function get() {
	    return _connectNumericMenu.default;
	  }
	});
	Object.defineProperty(exports, "connectPagination", {
	  enumerable: true,
	  get: function get() {
	    return _connectPagination.default;
	  }
	});
	Object.defineProperty(exports, "connectPoweredBy", {
	  enumerable: true,
	  get: function get() {
	    return _connectPoweredBy.default;
	  }
	});
	Object.defineProperty(exports, "connectQueryRules", {
	  enumerable: true,
	  get: function get() {
	    return _connectQueryRules.default;
	  }
	});
	Object.defineProperty(exports, "connectRange", {
	  enumerable: true,
	  get: function get() {
	    return _connectRange.default;
	  }
	});
	Object.defineProperty(exports, "connectRefinementList", {
	  enumerable: true,
	  get: function get() {
	    return _connectRefinementList.default;
	  }
	});
	Object.defineProperty(exports, "connectScrollTo", {
	  enumerable: true,
	  get: function get() {
	    return _connectScrollTo.default;
	  }
	});
	Object.defineProperty(exports, "connectSearchBox", {
	  enumerable: true,
	  get: function get() {
	    return _connectSearchBox.default;
	  }
	});
	Object.defineProperty(exports, "connectSortBy", {
	  enumerable: true,
	  get: function get() {
	    return _connectSortBy.default;
	  }
	});
	Object.defineProperty(exports, "connectStateResults", {
	  enumerable: true,
	  get: function get() {
	    return _connectStateResults.default;
	  }
	});
	Object.defineProperty(exports, "connectStats", {
	  enumerable: true,
	  get: function get() {
	    return _connectStats.default;
	  }
	});
	Object.defineProperty(exports, "connectToggleRefinement", {
	  enumerable: true,
	  get: function get() {
	    return _connectToggleRefinement.default;
	  }
	});
	Object.defineProperty(exports, "connectHitInsights", {
	  enumerable: true,
	  get: function get() {
	    return _connectHitInsights.default;
	  }
	});
	
	var _createInstantSearch = _interopRequireDefault(__webpack_require__(1591));
	
	var _createIndex = _interopRequireDefault(__webpack_require__(1590));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _highlight = __webpack_require__(332);
	
	var _version = _interopRequireDefault(__webpack_require__(538));
	
	var _translatable = _interopRequireDefault(__webpack_require__(1595));
	
	var _Configure = _interopRequireDefault(__webpack_require__(1598));
	
	var _QueryRuleContext = _interopRequireDefault(__webpack_require__(1599));
	
	var _connectAutoComplete = _interopRequireDefault(__webpack_require__(1568));
	
	var _connectBreadcrumb = _interopRequireDefault(__webpack_require__(1569));
	
	var _connectConfigure = _interopRequireDefault(__webpack_require__(536));
	
	var _connectCurrentRefinements = _interopRequireDefault(__webpack_require__(1570));
	
	var _connectGeoSearch = _interopRequireDefault(__webpack_require__(1571));
	
	var _connectHierarchicalMenu = _interopRequireDefault(__webpack_require__(1572));
	
	var _connectHighlight = _interopRequireDefault(__webpack_require__(1573));
	
	var _connectHits = _interopRequireDefault(__webpack_require__(1575));
	
	var _connectHitsPerPage = _interopRequireDefault(__webpack_require__(1576));
	
	var _connectInfiniteHits = _interopRequireDefault(__webpack_require__(1577));
	
	var _connectMenu = _interopRequireDefault(__webpack_require__(1578));
	
	var _connectNumericMenu = _interopRequireDefault(__webpack_require__(1579));
	
	var _connectPagination = _interopRequireDefault(__webpack_require__(1580));
	
	var _connectPoweredBy = _interopRequireDefault(__webpack_require__(1581));
	
	var _connectQueryRules = _interopRequireDefault(__webpack_require__(537));
	
	var _connectRange = _interopRequireDefault(__webpack_require__(1582));
	
	var _connectRefinementList = _interopRequireDefault(__webpack_require__(1583));
	
	var _connectScrollTo = _interopRequireDefault(__webpack_require__(1584));
	
	var _connectSearchBox = _interopRequireDefault(__webpack_require__(1585));
	
	var _connectSortBy = _interopRequireDefault(__webpack_require__(1586));
	
	var _connectStateResults = _interopRequireDefault(__webpack_require__(1587));
	
	var _connectStats = _interopRequireDefault(__webpack_require__(1588));
	
	var _connectToggleRefinement = _interopRequireDefault(__webpack_require__(1589));
	
	var _connectHitInsights = _interopRequireDefault(__webpack_require__(1574));
	
	var _types = __webpack_require__(1596);
	
	Object.keys(_types).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _types[key];
	    }
	  });
	});

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _theming = __webpack_require__(567);
	
	Object.defineProperty(exports, 'ThemeProvider', {
	  enumerable: true,
	  get: function get() {
	    return _theming.ThemeProvider;
	  }
	});
	Object.defineProperty(exports, 'withTheme', {
	  enumerable: true,
	  get: function get() {
	    return _theming.withTheme;
	  }
	});
	Object.defineProperty(exports, 'createTheming', {
	  enumerable: true,
	  get: function get() {
	    return _theming.createTheming;
	  }
	});
	
	var _JssProvider = __webpack_require__(1655);
	
	Object.defineProperty(exports, 'JssProvider', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_JssProvider)['default'];
	  }
	});
	
	var _jss = __webpack_require__(334);
	
	Object.defineProperty(exports, 'jss', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_jss)['default'];
	  }
	});
	Object.defineProperty(exports, 'SheetsRegistry', {
	  enumerable: true,
	  get: function get() {
	    return _jss.SheetsRegistry;
	  }
	});
	Object.defineProperty(exports, 'createGenerateClassName', {
	  enumerable: true,
	  get: function get() {
	    return _jss.createGenerateClassNameDefault;
	  }
	});
	
	var _injectSheet = __webpack_require__(1659);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_injectSheet)['default'];
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/***/ }),
/* 18 */
/***/ (function(module, exports) {

	function _interopRequireWildcard(obj) {
	  if (obj && obj.__esModule) {
	    return obj;
	  } else {
	    var newObj = {};
	
	    if (obj != null) {
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
	
	          if (desc.get || desc.set) {
	            Object.defineProperty(newObj, key, desc);
	          } else {
	            newObj[key] = obj[key];
	          }
	        }
	      }
	    }
	
	    newObj.default = obj;
	    return newObj;
	  }
	}
	
	module.exports = _interopRequireWildcard;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.capitalize = capitalize;
	exports.contains = contains;
	exports.findIndex = findIndex;
	exports.find = find;
	exports.createChainedFunction = createChainedFunction;
	
	var _typeof2 = _interopRequireDefault(__webpack_require__(131));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.
	//
	// A strict capitalization should uppercase the first letter of each word a the sentence.
	// We only handle the first word.
	function capitalize(string) {
	  if (false) {
	    throw new Error('Material-UI: capitalize(string) expects a string argument.');
	  }
	
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}
	
	function contains(obj, pred) {
	  return Object.keys(pred).every(function (key) {
	    return obj.hasOwnProperty(key) && obj[key] === pred[key];
	  });
	}
	
	function findIndex(arr, pred) {
	  var predType = (0, _typeof2.default)(pred);
	
	  for (var i = 0; i < arr.length; i += 1) {
	    if (predType === 'function' && !!pred(arr[i], i, arr) === true) {
	      return i;
	    }
	
	    if (predType === 'object' && contains(arr[i], pred)) {
	      return i;
	    }
	
	    if (['string', 'number', 'boolean'].indexOf(predType) !== -1) {
	      return arr.indexOf(pred);
	    }
	  }
	
	  return -1;
	}
	
	function find(arr, pred) {
	  var index = findIndex(arr, pred);
	  return index > -1 ? arr[index] : undefined;
	}
	/**
	 * Safe chained function
	 *
	 * Will only create a new function if needed,
	 * otherwise will pass back existing functions or null.
	 *
	 * @param {function} functions to chain
	 * @returns {function|null}
	 */
	
	
	function createChainedFunction() {
	  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  return funcs.reduce(function (acc, func) {
	    if (func == null) {
	      return acc;
	    }
	
	     false ? (0, _warning.default)(typeof func === 'function', 'Material-UI: invalid Argument Type, must only provide functions, undefined, or null.') : void 0;
	    return function chainedFunction() {
	      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }
	
	      acc.apply(this, args);
	      func.apply(this, args);
	    };
	  }, function () {});
	}

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.capitalize = exports.isSpecialClick = exports.createClassNames = void 0;
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var createClassNames = function createClassNames(block) {
	  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ais';
	  return function () {
	    for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {
	      elements[_key] = arguments[_key];
	    }
	
	    var suitElements = elements.filter(function (element) {
	      return element || element === '';
	    }).map(function (element) {
	      var baseClassName = "".concat(prefix, "-").concat(block);
	      return element ? "".concat(baseClassName, "-").concat(element) : baseClassName;
	    });
	    return (0, _classnames.default)(suitElements);
	  };
	};
	
	exports.createClassNames = createClassNames;
	
	var isSpecialClick = function isSpecialClick(event) {
	  var isMiddleClick = event.button === 1;
	  return Boolean(isMiddleClick || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);
	};
	
	exports.isSpecialClick = isSpecialClick;
	
	var capitalize = function capitalize(key) {
	  return key.length === 0 ? '' : "".concat(key[0].toUpperCase()).concat(key.slice(1));
	};
	
	exports.capitalize = capitalize;

/***/ }),
/* 21 */,
/* 22 */,
/* 23 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = toDate;
	
	/**
	 * @name toDate
	 * @category Common Helpers
	 * @summary Convert the given argument to an instance of Date.
	 *
	 * @description
	 * Convert the given argument to an instance of Date.
	 *
	 * If the argument is an instance of Date, the function returns its clone.
	 *
	 * If the argument is a number, it is treated as a timestamp.
	 *
	 * If the argument is none of the above, the function returns Invalid Date.
	 *
	 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
	 *
	 * @param {Date|Number} argument - the value to convert
	 * @returns {Date} the parsed date in the local time zone
	 * @throws {TypeError} 1 argument required
	 *
	 * @example
	 * // Clone the date:
	 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
	 * //=> Tue Feb 11 2014 11:30:30
	 *
	 * @example
	 * // Convert the timestamp to date:
	 * const result = toDate(1392098430000)
	 * //=> Tue Feb 11 2014 11:30:30
	 */
	function toDate(argument) {
	  if (arguments.length < 1) {
	    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
	  }
	
	  var argStr = Object.prototype.toString.call(argument); // Clone the date
	
	  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {
	    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
	    return new Date(argument.getTime());
	  } else if (typeof argument === 'number' || argStr === '[object Number]') {
	    return new Date(argument);
	  } else {
	    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
	      // eslint-disable-next-line no-console
	      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"); // eslint-disable-next-line no-console
	
	      console.warn(new Error().stack);
	    }
	
	    return new Date(NaN);
	  }
	}
	
	module.exports = exports.default;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createConnector;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _find2 = _interopRequireDefault(__webpack_require__(71));
	
	var _isEqual2 = _interopRequireDefault(__webpack_require__(322));
	
	var _has2 = _interopRequireDefault(__webpack_require__(209));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _utils = __webpack_require__(169);
	
	/**
	 * @typedef {object} ConnectorDescription
	 * @property {string} displayName - the displayName used by the wrapper
	 * @property {function} refine - a function to filter the local state
	 * @property {function} getSearchParameters - function transforming the local state to a SearchParameters
	 * @property {function} getMetadata - metadata of the widget
	 * @property {function} transitionState - hook after the state has changed
	 * @property {function} getProvidedProps - transform the state into props passed to the wrapped component.
	 * Receives (props, widgetStates, searchState, metadata) and returns the local state.
	 * @property {function} getId - Receives props and return the id that will be used to identify the widget
	 * @property {function} cleanUp - hook when the widget will unmount. Receives (props, searchState) and return a cleaned state.
	 * @property {object} propTypes - PropTypes forwarded to the wrapped component.
	 * @property {object} defaultProps - default values for the props
	 */
	
	/**
	 * Connectors are the HOC used to transform React components
	 * into InstantSearch widgets.
	 * In order to simplify the construction of such connectors
	 * `createConnector` takes a description and transform it into
	 * a connector.
	 * @param {ConnectorDescription} connectorDesc the description of the connector
	 * @return {Connector} a function that wraps a component into
	 * an instantsearch connected one.
	 */
	function createConnector(connectorDesc) {
	  if (!connectorDesc.displayName) {
	    throw new Error('`createConnector` requires you to provide a `displayName` property.');
	  }
	
	  var hasRefine = (0, _has2.default)(connectorDesc, 'refine');
	  var hasSearchForFacetValues = (0, _has2.default)(connectorDesc, 'searchForFacetValues');
	  var hasSearchParameters = (0, _has2.default)(connectorDesc, 'getSearchParameters');
	  var hasMetadata = (0, _has2.default)(connectorDesc, 'getMetadata');
	  var hasTransitionState = (0, _has2.default)(connectorDesc, 'transitionState');
	  var hasCleanUp = (0, _has2.default)(connectorDesc, 'cleanUp');
	  var hasShouldComponentUpdate = (0, _has2.default)(connectorDesc, 'shouldComponentUpdate');
	  var isWidget = hasSearchParameters || hasMetadata || hasTransitionState;
	  return function (Composed) {
	    var _class, _temp;
	
	    return _temp = _class =
	    /*#__PURE__*/
	    function (_Component) {
	      (0, _inherits2.default)(Connector, _Component);
	
	      function Connector() {
	        var _getPrototypeOf2;
	
	        var _this;
	
	        (0, _classCallCheck2.default)(this, Connector);
	
	        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
	          _args[_key] = arguments[_key];
	        }
	
	        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Connector)).call.apply(_getPrototypeOf2, [this].concat(_args)));
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "mounted", false);
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "unmounting", false);
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "refine", function () {
	          var _connectorDesc$refine;
	
	          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	            args[_key2] = arguments[_key2];
	          }
	
	          _this.context.ais.onInternalStateUpdate((_connectorDesc$refine = connectorDesc.refine).call.apply(_connectorDesc$refine, [(0, _assertThisInitialized2.default)(_this), _this.props, _this.context.ais.store.getState().widgets].concat(args)));
	        });
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "createURL", function () {
	          var _connectorDesc$refine2;
	
	          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	            args[_key3] = arguments[_key3];
	          }
	
	          return _this.context.ais.createHrefForState((_connectorDesc$refine2 = connectorDesc.refine).call.apply(_connectorDesc$refine2, [(0, _assertThisInitialized2.default)(_this), _this.props, _this.context.ais.store.getState().widgets].concat(args)));
	        });
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "searchForFacetValues", function () {
	          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
	            args[_key4] = arguments[_key4];
	          }
	
	          _this.context.ais.onSearchForFacetValues(connectorDesc.searchForFacetValues.apply(connectorDesc, [_this.props, _this.context.ais.store.getState().widgets].concat(args)));
	        });
	        _this.state = {
	          props: _this.getProvidedProps((0, _objectSpread2.default)({}, _this.props, {
	            // @MAJOR: We cannot drop this beacuse it's a breaking change. The
	            // prop is provided to `createConnector.getProvidedProps`. All the
	            // custom connectors are impacted by this change. It should be fine
	            // to drop it in the next major though.
	            canRender: false
	          }))
	        };
	
	        if (false) {
	          var onlyGetProvidedPropsUsage = !(0, _find2.default)(Object.keys(connectorDesc), function (key) {
	            return ['getMetadata', 'getSearchParameters', 'refine', 'cleanUp'].indexOf(key) > -1;
	          });
	
	          if (onlyGetProvidedPropsUsage && connectorDesc.displayName.substr(0, 7) !== 'Algolia') {
	            // eslint-disable-next-line no-console
	            console.warn('react-instantsearch: it seems that you are using the `createConnector` api ' + 'only to access the `searchState` and the `searchResults` through `getProvidedProps`.' + 'We are now provided a dedicated API' + ' the `connectStateResults` connector that you should use instead. The `createConnector` API will be ' + 'soon deprecated and will break in future next major versions.' + '\n\n' + 'See more at https://www.algolia.com/doc/api-reference/widgets/state-results/react/' + '\n' + 'and https://www.algolia.com/doc/guides/building-search-ui/going-further/conditional-display/react/');
	          }
	        }
	
	        return _this;
	      }
	
	      (0, _createClass2.default)(Connector, [{
	        key: "componentWillMount",
	        value: function componentWillMount() {
	          if (connectorDesc.getSearchParameters) {
	            this.context.ais.onSearchParameters(connectorDesc.getSearchParameters.bind(this), this.context, this.props);
	          }
	        }
	      }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	          var _this2 = this;
	
	          this.mounted = true;
	          this.unsubscribe = this.context.ais.store.subscribe(function () {
	            if (!_this2.unmounting) {
	              _this2.setState({
	                props: _this2.getProvidedProps((0, _objectSpread2.default)({}, _this2.props, {
	                  // @MAJOR: see constructor
	                  canRender: true
	                }))
	              });
	            }
	          });
	
	          if (isWidget) {
	            this.unregisterWidget = this.context.ais.widgetsManager.registerWidget(this);
	          }
	        }
	      }, {
	        key: "componentWillReceiveProps",
	        value: function componentWillReceiveProps(nextProps) {
	          if (!(0, _isEqual2.default)(this.props, nextProps)) {
	            this.setState({
	              props: this.getProvidedProps((0, _objectSpread2.default)({}, nextProps, {
	                // @MAJOR: see constructor
	                canRender: this.mounted
	              }))
	            });
	
	            if (isWidget) {
	              this.context.ais.widgetsManager.update();
	
	              if (connectorDesc.transitionState) {
	                this.context.ais.onSearchStateChange(connectorDesc.transitionState.call(this, nextProps, this.context.ais.store.getState().widgets, this.context.ais.store.getState().widgets));
	              }
	            }
	          }
	        }
	      }, {
	        key: "shouldComponentUpdate",
	        value: function shouldComponentUpdate(nextProps, nextState) {
	          if (hasShouldComponentUpdate) {
	            return connectorDesc.shouldComponentUpdate.call(this, this.props, nextProps, this.state, nextState);
	          }
	
	          var propsEqual = (0, _utils.shallowEqual)(this.props, nextProps);
	
	          if (this.state.props === null || nextState.props === null) {
	            if (this.state.props === nextState.props) {
	              return !propsEqual;
	            }
	
	            return true;
	          }
	
	          return !propsEqual || !(0, _utils.shallowEqual)(this.state.props, nextState.props);
	        }
	      }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	          this.unmounting = true;
	
	          if (this.unsubscribe) {
	            this.unsubscribe();
	          }
	
	          if (this.unregisterWidget) {
	            this.unregisterWidget();
	
	            if (hasCleanUp) {
	              var nextState = connectorDesc.cleanUp.call(this, this.props, this.context.ais.store.getState().widgets);
	              this.context.ais.store.setState((0, _objectSpread2.default)({}, this.context.ais.store.getState(), {
	                widgets: nextState
	              }));
	              this.context.ais.onSearchStateChange((0, _utils.removeEmptyKey)(nextState));
	            }
	          }
	        }
	      }, {
	        key: "getProvidedProps",
	        value: function getProvidedProps(props) {
	          var _this$context$ais$sto = this.context.ais.store.getState(),
	              widgets = _this$context$ais$sto.widgets,
	              results = _this$context$ais$sto.results,
	              resultsFacetValues = _this$context$ais$sto.resultsFacetValues,
	              searching = _this$context$ais$sto.searching,
	              searchingForFacetValues = _this$context$ais$sto.searchingForFacetValues,
	              isSearchStalled = _this$context$ais$sto.isSearchStalled,
	              metadata = _this$context$ais$sto.metadata,
	              error = _this$context$ais$sto.error;
	
	          var searchResults = {
	            results: results,
	            searching: searching,
	            searchingForFacetValues: searchingForFacetValues,
	            isSearchStalled: isSearchStalled,
	            error: error
	          };
	          return connectorDesc.getProvidedProps.call(this, props, widgets, searchResults, metadata, // @MAJOR: move this attribute on the `searchResults` it doesn't
	          // makes sense to have it into a separate argument. The search
	          // flags are on the object why not the resutls?
	          resultsFacetValues);
	        }
	      }, {
	        key: "getSearchParameters",
	        value: function getSearchParameters(searchParameters) {
	          if (hasSearchParameters) {
	            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.context.ais.store.getState().widgets);
	          }
	
	          return null;
	        }
	      }, {
	        key: "getMetadata",
	        value: function getMetadata(nextWidgetsState) {
	          if (hasMetadata) {
	            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);
	          }
	
	          return {};
	        }
	      }, {
	        key: "transitionState",
	        value: function transitionState(prevWidgetsState, nextWidgetsState) {
	          if (hasTransitionState) {
	            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);
	          }
	
	          return nextWidgetsState;
	        }
	      }, {
	        key: "render",
	        value: function render() {
	          if (this.state.props === null) {
	            return null;
	          }
	
	          var refineProps = hasRefine ? {
	            refine: this.refine,
	            createURL: this.createURL
	          } : {};
	          var searchForFacetValuesProps = hasSearchForFacetValues ? {
	            searchForItems: this.searchForFacetValues
	          } : {};
	          return _react.default.createElement(Composed, (0, _extends2.default)({}, this.props, this.state.props, refineProps, searchForFacetValuesProps));
	        }
	      }]);
	      return Connector;
	    }(_react.Component), (0, _defineProperty2.default)(_class, "displayName", "".concat(connectorDesc.displayName, "(").concat((0, _utils.getDisplayName)(Composed), ")")), (0, _defineProperty2.default)(_class, "defaultClassNames", Composed.defaultClassNames), (0, _defineProperty2.default)(_class, "propTypes", connectorDesc.propTypes), (0, _defineProperty2.default)(_class, "defaultProps", connectorDesc.defaultProps), (0, _defineProperty2.default)(_class, "contextTypes", {
	      // @TODO: more precise state manager propType
	      ais: _propTypes.default.object.isRequired,
	      multiIndexContext: _propTypes.default.object
	    }), _temp;
	  };
	}

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getIndexId = getIndexId;
	exports.getResults = getResults;
	exports.hasMultipleIndices = hasMultipleIndices;
	exports.refineValue = refineValue;
	exports.getCurrentRefinementValue = getCurrentRefinementValue;
	exports.cleanUpValue = cleanUpValue;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectSpread12 = _interopRequireDefault(__webpack_require__(31));
	
	var _omit2 = _interopRequireDefault(__webpack_require__(97));
	
	function getIndexId(context) {
	  return context && context.multiIndexContext ? context.multiIndexContext.targetedIndex : context.ais.mainTargetedIndex;
	}
	
	function getResults(searchResults, context) {
	  if (searchResults.results && !searchResults.results.hits) {
	    return searchResults.results[getIndexId(context)] ? searchResults.results[getIndexId(context)] : null;
	  } else {
	    return searchResults.results ? searchResults.results : null;
	  }
	}
	
	function hasMultipleIndices(context) {
	  return context && context.multiIndexContext;
	} // eslint-disable-next-line max-params
	
	
	function refineValue(searchState, nextRefinement, context, resetPage, namespace) {
	  if (hasMultipleIndices(context)) {
	    var indexId = getIndexId(context);
	    return namespace ? refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) : refineMultiIndex(searchState, nextRefinement, indexId, resetPage);
	  } else {
	    // When we have a multi index page with shared widgets we should also
	    // reset their page to 1 if the resetPage is provided. Otherwise the
	    // indices will always be reset
	    // see: https://github.com/algolia/react-instantsearch/issues/310
	    // see: https://github.com/algolia/react-instantsearch/issues/637
	    if (searchState.indices && resetPage) {
	      Object.keys(searchState.indices).forEach(function (targetedIndex) {
	        searchState = refineValue(searchState, {
	          page: 1
	        }, {
	          multiIndexContext: {
	            targetedIndex: targetedIndex
	          }
	        }, true, namespace);
	      });
	    }
	
	    return namespace ? refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) : refineSingleIndex(searchState, nextRefinement, resetPage);
	  }
	}
	
	function refineMultiIndex(searchState, nextRefinement, indexId, resetPage) {
	  var page = resetPage ? {
	    page: 1
	  } : undefined;
	  var state = searchState.indices && searchState.indices[indexId] ? (0, _objectSpread12.default)({}, searchState.indices, (0, _defineProperty2.default)({}, indexId, (0, _objectSpread12.default)({}, searchState.indices[indexId], nextRefinement, page))) : (0, _objectSpread12.default)({}, searchState.indices, (0, _defineProperty2.default)({}, indexId, (0, _objectSpread12.default)({}, nextRefinement, page)));
	  return (0, _objectSpread12.default)({}, searchState, {
	    indices: state
	  });
	}
	
	function refineSingleIndex(searchState, nextRefinement, resetPage) {
	  var page = resetPage ? {
	    page: 1
	  } : undefined;
	  return (0, _objectSpread12.default)({}, searchState, nextRefinement, page);
	} // eslint-disable-next-line max-params
	
	
	function refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) {
	  var _objectSpread4;
	
	  var page = resetPage ? {
	    page: 1
	  } : undefined;
	  var state = searchState.indices && searchState.indices[indexId] ? (0, _objectSpread12.default)({}, searchState.indices, (0, _defineProperty2.default)({}, indexId, (0, _objectSpread12.default)({}, searchState.indices[indexId], (_objectSpread4 = {}, (0, _defineProperty2.default)(_objectSpread4, namespace, (0, _objectSpread12.default)({}, searchState.indices[indexId][namespace], nextRefinement)), (0, _defineProperty2.default)(_objectSpread4, "page", 1), _objectSpread4)))) : (0, _objectSpread12.default)({}, searchState.indices, (0, _defineProperty2.default)({}, indexId, (0, _objectSpread12.default)((0, _defineProperty2.default)({}, namespace, nextRefinement), page)));
	  return (0, _objectSpread12.default)({}, searchState, {
	    indices: state
	  });
	}
	
	function refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) {
	  var page = resetPage ? {
	    page: 1
	  } : undefined;
	  return (0, _objectSpread12.default)({}, searchState, (0, _defineProperty2.default)({}, namespace, (0, _objectSpread12.default)({}, searchState[namespace], nextRefinement)), page);
	}
	
	function getNamespaceAndAttributeName(id) {
	  var parts = id.match(/^([^.]*)\.(.*)/);
	  var namespace = parts && parts[1];
	  var attributeName = parts && parts[2];
	  return {
	    namespace: namespace,
	    attributeName: attributeName
	  };
	}
	
	function hasRefinements(_ref) {
	  var multiIndex = _ref.multiIndex,
	      indexId = _ref.indexId,
	      namespace = _ref.namespace,
	      attributeName = _ref.attributeName,
	      id = _ref.id,
	      searchState = _ref.searchState;
	
	  if (multiIndex && namespace) {
	    return searchState.indices && searchState.indices[indexId] && searchState.indices[indexId][namespace] && searchState.indices[indexId][namespace].hasOwnProperty(attributeName);
	  }
	
	  if (multiIndex) {
	    return searchState.indices && searchState.indices[indexId] && searchState.indices[indexId].hasOwnProperty(id);
	  }
	
	  if (namespace) {
	    return searchState[namespace] && searchState[namespace].hasOwnProperty(attributeName);
	  }
	
	  return searchState.hasOwnProperty(id);
	}
	
	function getRefinements(_ref2) {
	  var multiIndex = _ref2.multiIndex,
	      indexId = _ref2.indexId,
	      namespace = _ref2.namespace,
	      attributeName = _ref2.attributeName,
	      id = _ref2.id,
	      searchState = _ref2.searchState;
	
	  if (multiIndex && namespace) {
	    return searchState.indices[indexId][namespace][attributeName];
	  }
	
	  if (multiIndex) {
	    return searchState.indices[indexId][id];
	  }
	
	  if (namespace) {
	    return searchState[namespace][attributeName];
	  }
	
	  return searchState[id];
	}
	
	function getCurrentRefinementValue(props, searchState, context, id, defaultValue) {
	  var indexId = getIndexId(context);
	
	  var _getNamespaceAndAttri = getNamespaceAndAttributeName(id),
	      namespace = _getNamespaceAndAttri.namespace,
	      attributeName = _getNamespaceAndAttri.attributeName;
	
	  var multiIndex = hasMultipleIndices(context);
	  var args = {
	    multiIndex: multiIndex,
	    indexId: indexId,
	    namespace: namespace,
	    attributeName: attributeName,
	    id: id,
	    searchState: searchState
	  };
	  var hasRefinementsValue = hasRefinements(args);
	
	  if (hasRefinementsValue) {
	    return getRefinements(args);
	  }
	
	  if (props.defaultRefinement) {
	    return props.defaultRefinement;
	  }
	
	  return defaultValue;
	}
	
	function cleanUpValue(searchState, context, id) {
	  var indexId = getIndexId(context);
	
	  var _getNamespaceAndAttri2 = getNamespaceAndAttributeName(id),
	      namespace = _getNamespaceAndAttri2.namespace,
	      attributeName = _getNamespaceAndAttri2.attributeName;
	
	  if (hasMultipleIndices(context) && Boolean(searchState.indices)) {
	    return cleanUpValueWithMutliIndex({
	      attribute: attributeName,
	      searchState: searchState,
	      indexId: indexId,
	      id: id,
	      namespace: namespace
	    });
	  }
	
	  return cleanUpValueWithSingleIndex({
	    attribute: attributeName,
	    searchState: searchState,
	    id: id,
	    namespace: namespace
	  });
	}
	
	function cleanUpValueWithSingleIndex(_ref3) {
	  var searchState = _ref3.searchState,
	      id = _ref3.id,
	      namespace = _ref3.namespace,
	      attribute = _ref3.attribute;
	
	  if (namespace) {
	    return (0, _objectSpread12.default)({}, searchState, (0, _defineProperty2.default)({}, namespace, (0, _omit2.default)(searchState[namespace], attribute)));
	  }
	
	  return (0, _omit2.default)(searchState, id);
	}
	
	function cleanUpValueWithMutliIndex(_ref4) {
	  var searchState = _ref4.searchState,
	      indexId = _ref4.indexId,
	      id = _ref4.id,
	      namespace = _ref4.namespace,
	      attribute = _ref4.attribute;
	  var indexSearchState = searchState.indices[indexId];
	
	  if (namespace && indexSearchState) {
	    return (0, _objectSpread12.default)({}, searchState, {
	      indices: (0, _objectSpread12.default)({}, searchState.indices, (0, _defineProperty2.default)({}, indexId, (0, _objectSpread12.default)({}, indexSearchState, (0, _defineProperty2.default)({}, namespace, (0, _omit2.default)(indexSearchState[namespace], attribute)))))
	    });
	  }
	
	  return (0, _omit2.default)(searchState, "indices.".concat(indexId, ".").concat(id));
	}

/***/ }),
/* 26 */
/***/ (function(module, exports) {

	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return self;
	}
	
	module.exports = _assertThisInitialized;

/***/ }),
/* 27 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ }),
/* 28 */,
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	function checkDCE() {
	  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
	  if (
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
	  ) {
	    return;
	  }
	  if (false) {
	    // This branch is unreachable because this function is only called
	    // in production, but the condition is true only in development.
	    // Therefore if the branch is still here, dead code elimination wasn't
	    // properly applied.
	    // Don't change the message. React DevTools relies on it. Also make sure
	    // this message doesn't occur elsewhere in this function, or it will cause
	    // a false positive.
	    throw new Error('^_^');
	  }
	  try {
	    // Verify that the code above has been dead code eliminated (DCE'd).
	    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
	  } catch (err) {
	    // DevTools shouldn't crash React, no matter what.
	    // We should still report in case we break this code.
	    console.error(err);
	  }
	}
	
	if (true) {
	  // DCE check should happen before ReactDOM bundle executes so that
	  // DevTools can report bad minification during injection.
	  checkDCE();
	  module.exports = __webpack_require__(1189);
	} else {
	  module.exports = require('./cjs/react-dom.development.js');
	}


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _SvgIcon.default;
	  }
	});
	
	var _SvgIcon = _interopRequireDefault(__webpack_require__(706));

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(8);
	
	function _objectSpread(target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i] != null ? arguments[i] : {};
	    var ownKeys = Object.keys(source);
	
	    if (typeof Object.getOwnPropertySymbols === 'function') {
	      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
	        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
	      }));
	    }
	
	    ownKeys.forEach(function (key) {
	      defineProperty(target, key, source[key]);
	    });
	  }
	
	  return target;
	}
	
	module.exports = _objectSpread;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.navigateTo = exports.replace = exports.push = undefined;
	
	var _extends2 = __webpack_require__(256);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _keys = __webpack_require__(255);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _objectWithoutProperties2 = __webpack_require__(921);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _classCallCheck2 = __webpack_require__(87);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(108);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(107);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	exports.withPrefix = withPrefix;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(171);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _history = __webpack_require__(67);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*global __PREFIX_PATHS__, __PATH_PREFIX__ */
	var pathPrefix = "/";
	if (false) {
	  pathPrefix = __PATH_PREFIX__;
	}
	
	function withPrefix(path) {
	  return normalizePath(pathPrefix + path);
	}
	
	function normalizePath(path) {
	  return path.replace(/^\/\//g, "/");
	}
	
	function createLocation(path, history) {
	  var location = (0, _history.createLocation)(path, null, null, history.location);
	  location.pathname = withPrefix(location.pathname);
	  return location;
	}
	
	var NavLinkPropTypes = {
	  activeClassName: _propTypes2.default.string,
	  activeStyle: _propTypes2.default.object,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  isActive: _propTypes2.default.func,
	  location: _propTypes2.default.object
	
	  // Set up IntersectionObserver
	};var handleIntersection = function handleIntersection(el, cb) {
	  var io = new window.IntersectionObserver(function (entries) {
	    entries.forEach(function (entry) {
	      if (el === entry.target) {
	        // Check if element is within viewport, remove listener, destroy observer, and run link callback.
	        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0
	        if (entry.isIntersecting || entry.intersectionRatio > 0) {
	          io.unobserve(el);
	          io.disconnect();
	          cb();
	        }
	      }
	    });
	  });
	  // Add element to the observer
	  io.observe(el);
	};
	
	/* eslint-disable react/no-deprecated */
	
	var GatsbyLink = function (_React$Component) {
	  (0, _inherits3.default)(GatsbyLink, _React$Component);
	
	  function GatsbyLink(props, context) {
	    (0, _classCallCheck3.default)(this, GatsbyLink);
	
	    // Default to no support for IntersectionObserver
	    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this));
	
	    var IOSupported = false;
	    if (typeof window !== "undefined" && window.IntersectionObserver) {
	      IOSupported = true;
	    }
	
	    var history = context.router.history;
	
	    var to = createLocation(props.to, history);
	
	    _this.state = {
	      path: (0, _history.createPath)(to),
	      to: to,
	      IOSupported: IOSupported
	    };
	    _this.handleRef = _this.handleRef.bind(_this);
	    return _this;
	  }
	
	  GatsbyLink.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (this.props.to !== nextProps.to) {
	      var to = createLocation(nextProps.to, history);
	      this.setState({
	        path: (0, _history.createPath)(to),
	        to: to
	      });
	      // Preserve non IO functionality if no support
	      if (!this.state.IOSupported) {
	        ___loader.enqueue(this.state.to.pathname);
	      }
	    }
	  };
	
	  GatsbyLink.prototype.componentDidMount = function componentDidMount() {
	    // Preserve non IO functionality if no support
	    if (!this.state.IOSupported) {
	      ___loader.enqueue(this.state.to.pathname);
	    }
	  };
	
	  GatsbyLink.prototype.handleRef = function handleRef(ref) {
	    var _this2 = this;
	
	    this.props.innerRef && this.props.innerRef(ref);
	
	    if (this.state.IOSupported && ref) {
	      // If IO supported and element reference found, setup Observer functionality
	      handleIntersection(ref, function () {
	        ___loader.enqueue(_this2.state.to.pathname);
	      });
	    }
	  };
	
	  GatsbyLink.prototype.render = function render() {
	    var _this3 = this;
	
	    var _props = this.props,
	        _onClick = _props.onClick,
	        rest = (0, _objectWithoutProperties3.default)(_props, ["onClick"]);
	
	    var El = void 0;
	    if ((0, _keys2.default)(NavLinkPropTypes).some(function (propName) {
	      return _this3.props[propName];
	    })) {
	      El = _reactRouterDom.NavLink;
	    } else {
	      El = _reactRouterDom.Link;
	    }
	
	    return _react2.default.createElement(El, (0, _extends3.default)({
	      onClick: function onClick(e) {
	        // eslint-disable-line
	        _onClick && _onClick(e);
	
	        if (e.button === 0 && // ignore right clicks
	        !_this3.props.target && // let browser handle "target=_blank"
	        !e.defaultPrevented && // onClick prevented default
	        !e.metaKey && // ignore clicks with modifier keys...
	        !e.altKey && !e.ctrlKey && !e.shiftKey) {
	          // Is this link pointing to a hash on the same page? If so,
	          // just scroll there.
	          var pathname = _this3.state.path;
	          if (pathname.split("#").length > 1) {
	            pathname = pathname.split("#").slice(0, -1).join("");
	          }
	          if (pathname === window.location.pathname) {
	            var hashFragment = _this3.state.path.split("#").slice(1).join("#");
	            var element = document.getElementById(hashFragment);
	            if (element !== null) {
	              element.scrollIntoView();
	              return true;
	            } else {
	              // This is just a normal link to the current page so let's emulate default
	              // browser behavior by scrolling now to the top of the page.
	              window.scrollTo(0, 0);
	              return true;
	            }
	          }
	
	          // In production, make sure the necessary scripts are
	          // loaded before continuing.
	          if (true) {
	            e.preventDefault();
	            window.___push(_this3.state.to);
	          }
	        }
	
	        return true;
	      }
	    }, rest, {
	      to: this.state.to,
	      innerRef: this.handleRef
	    }));
	  };
	
	  return GatsbyLink;
	}(_react2.default.Component);
	/* eslint-enable */
	
	GatsbyLink.propTypes = (0, _extends3.default)({}, NavLinkPropTypes, {
	  innerRef: _propTypes2.default.func,
	  onClick: _propTypes2.default.func,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
	});
	
	GatsbyLink.contextTypes = {
	  router: _propTypes2.default.object
	};
	
	exports.default = GatsbyLink;
	var push = exports.push = function push(to) {
	  window.___push(to);
	};
	
	var replace = exports.replace = function replace(to) {
	  window.___replace(to);
	};
	
	var navigateTo = exports.navigateTo = push;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(494);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ }),
/* 34 */,
/* 35 */,
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _ButtonBase.default;
	  }
	});
	
	var _ButtonBase = _interopRequireDefault(__webpack_require__(588));

/***/ }),
/* 37 */,
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(172);
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var _shouldUpdate = _interopRequireDefault(__webpack_require__(1750));
	
	var _shallowEqual = _interopRequireDefault(__webpack_require__(1749));
	
	var _setDisplayName = _interopRequireDefault(__webpack_require__(557));
	
	var _wrapDisplayName = _interopRequireDefault(__webpack_require__(558));
	
	var pure = function pure(BaseComponent) {
	  var hoc = (0, _shouldUpdate.default)(function (props, nextProps) {
	    return !(0, _shallowEqual.default)(props, nextProps);
	  });
	
	  if (false) {
	    return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'pure'))(hoc(BaseComponent));
	  }
	
	  return hoc(BaseComponent);
	};
	
	var _default = pure;
	exports.default = _default;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Paper.default;
	  }
	});
	
	var _Paper = _interopRequireDefault(__webpack_require__(680));

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	/** @license Material-UI v3.0.0-alpha.3
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	"use strict";
	
	var _interopRequireDefault = __webpack_require__(249);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "componentPropType", {
	  enumerable: true,
	  get: function get() {
	    return _componentPropType.default;
	  }
	});
	Object.defineProperty(exports, "chainPropTypes", {
	  enumerable: true,
	  get: function get() {
	    return _chainPropTypes.default;
	  }
	});
	Object.defineProperty(exports, "exactProp", {
	  enumerable: true,
	  get: function get() {
	    return _exactProp.default;
	  }
	});
	Object.defineProperty(exports, "getDisplayName", {
	  enumerable: true,
	  get: function get() {
	    return _getDisplayName.default;
	  }
	});
	Object.defineProperty(exports, "ponyfillGlobal", {
	  enumerable: true,
	  get: function get() {
	    return _ponyfillGlobal.default;
	  }
	});
	
	var _componentPropType = _interopRequireDefault(__webpack_require__(810));
	
	var _chainPropTypes = _interopRequireDefault(__webpack_require__(809));
	
	var _exactProp = _interopRequireDefault(__webpack_require__(811));
	
	var _getDisplayName = _interopRequireDefault(__webpack_require__(812));
	
	var _ponyfillGlobal = _interopRequireDefault(__webpack_require__(816));

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	var store  = __webpack_require__(983)('wks')
	  , uid    = __webpack_require__(433)
	  , Symbol = __webpack_require__(52).Symbol;
	module.exports = function(name){
	  return store[name] || (store[name] =
	    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));
	};

/***/ }),
/* 42 */,
/* 43 */
/***/ (function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    if (superCtor) {
	      ctor.super_ = superCtor
	      ctor.prototype = Object.create(superCtor.prototype, {
	        constructor: {
	          value: ctor,
	          enumerable: false,
	          writable: true,
	          configurable: true
	        }
	      })
	    }
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    if (superCtor) {
	      ctor.super_ = superCtor
	      var TempCtor = function () {}
	      TempCtor.prototype = superCtor.prototype
	      ctor.prototype = new TempCtor()
	      ctor.prototype.constructor = ctor
	    }
	  }
	}


/***/ }),
/* 44 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;
	
	process.listeners = function (name) { return [] }
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.cloneElementWithClassName = cloneElementWithClassName;
	exports.cloneChildrenWithClassName = cloneChildrenWithClassName;
	exports.isMuiElement = isMuiElement;
	exports.setRef = setRef;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	function cloneElementWithClassName(child, className) {
	  return _react.default.cloneElement(child, {
	    className: (0, _classnames.default)(child.props.className, className)
	  });
	}
	
	function cloneChildrenWithClassName(children, className) {
	  return _react.default.Children.map(children, function (child) {
	    return _react.default.isValidElement(child) && cloneElementWithClassName(child, className);
	  });
	}
	
	function isMuiElement(element, muiNames) {
	  return _react.default.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
	}
	
	function setRef(ref, value) {
	  if (typeof ref === 'function') {
	    ref(value);
	  } else if (ref) {
	    ref.current = value;
	  }
	}

/***/ }),
/* 46 */
/***/ (function(module, exports) {

	var $Object = Object;
	module.exports = {
	  create:     $Object.create,
	  getProto:   $Object.getPrototypeOf,
	  isEnum:     {}.propertyIsEnumerable,
	  getDesc:    $Object.getOwnPropertyDescriptor,
	  setDesc:    $Object.defineProperty,
	  setDescs:   $Object.defineProperties,
	  getKeys:    $Object.keys,
	  getNames:   $Object.getOwnPropertyNames,
	  getSymbols: $Object.getOwnPropertySymbols,
	  each:       [].forEach
	};

/***/ }),
/* 47 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ }),
/* 48 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = __webpack_require__(2);
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var PanelCallbackHandler =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(PanelCallbackHandler, _Component);
	
	  function PanelCallbackHandler() {
	    (0, _classCallCheck2.default)(this, PanelCallbackHandler);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PanelCallbackHandler).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(PanelCallbackHandler, [{
	    key: "componentWillMount",
	    value: function componentWillMount() {
	      if (this.context.setCanRefine) {
	        this.context.setCanRefine(this.props.canRefine);
	      }
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.context.setCanRefine && this.props.canRefine !== nextProps.canRefine) {
	        this.context.setCanRefine(nextProps.canRefine);
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return this.props.children;
	    }
	  }]);
	  return PanelCallbackHandler;
	}(_react.Component);
	
	(0, _defineProperty2.default)(PanelCallbackHandler, "propTypes", {
	  children: _propTypes.default.node.isRequired,
	  canRefine: _propTypes.default.bool.isRequired
	});
	(0, _defineProperty2.default)(PanelCallbackHandler, "contextTypes", {
	  setCanRefine: _propTypes.default.func
	});
	var _default = PanelCallbackHandler;
	exports.default = _default;

/***/ }),
/* 50 */,
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.setBrowserActive = setBrowserActive;
	exports.setNavigatorPosition = setNavigatorPosition;
	exports.setNavigatorShape = setNavigatorShape;
	exports.setNavigatorFilter = setNavigatorFilter;
	exports.setIsWideScreen = setIsWideScreen;
	exports.setScrollToTop = setScrollToTop;
	exports.setFontSizeIncrease = setFontSizeIncrease;
	exports.setCategoryFilter = setCategoryFilter;
	
	var _redux = __webpack_require__(342);
	
	var _reduxDevtoolsExtension = __webpack_require__(1751);
	
	/*
	 * action types
	 */
	
	var SET_BROWSER_ACTIVE = "SET_BROWSER_ACTIVE";
	var SET_NAVIGATOR_POSITION = "SET_NAVIGATOR_POSITION";
	var SET_NAVIGATOR_SHAPE = "SET_NAVIGATOR_SHAPE";
	var SET_NAVIGATOR_FILTER = "SET_NAVIGATOR_FILTER";
	var SET_IS_WIDE_SCREEN = "SET_IS_WIDE_SCREEN";
	var SET_SCROLL_TO_TOP = "SET_SCROLL_TO_TOP";
	var SET_FONT_SIZE_INCREASE = "SET_FONT_SIZE_INCREASE";
	var SET_CATEGORY_FILTER = "SET_CATEGORY_FILTER";
	
	/*
	 * action creators
	 */
	
	function setBrowserActive(val) {
	  return { type: SET_BROWSER_ACTIVE, val: val };
	}
	
	function setNavigatorPosition(val) {
	  return { type: SET_NAVIGATOR_POSITION, val: val };
	}
	
	function setNavigatorShape(val) {
	  return { type: SET_NAVIGATOR_SHAPE, val: val };
	}
	
	function setNavigatorFilter(val) {
	  return { type: SET_NAVIGATOR_FILTER, val: val };
	}
	
	function setIsWideScreen(val) {
	  return { type: SET_IS_WIDE_SCREEN, val: val };
	}
	
	function setScrollToTop(val) {
	  return { type: SET_SCROLL_TO_TOP, val: val };
	}
	
	function setFontSizeIncrease(val) {
	  return { type: SET_FONT_SIZE_INCREASE, val: val };
	}
	
	function setCategoryFilter(val) {
	  return { type: SET_CATEGORY_FILTER, val: val };
	}
	
	/*
	 * reducer
	 */
	var reducer = function reducer(state, action) {
	  switch (action.type) {
	    case SET_NAVIGATOR_POSITION:
	      return _extends({}, state, {
	        navigatorPosition: action.val
	      });
	
	    case SET_BROWSER_ACTIVE:
	      return _extends({}, state, {
	        isBrowserActive: action.val
	      });
	
	    case SET_NAVIGATOR_SHAPE:
	      return _extends({}, state, {
	        navigatorShape: action.val
	      });
	
	    case SET_NAVIGATOR_FILTER:
	      return _extends({}, state, {
	        navigatorFilter: action.val
	      });
	
	    case SET_IS_WIDE_SCREEN:
	      return _extends({}, state, {
	        isWideScreen: action.val
	      });
	
	    case SET_SCROLL_TO_TOP:
	      return _extends({}, state, {
	        scrollToTop: action.val
	      });
	
	    case SET_FONT_SIZE_INCREASE:
	      return _extends({}, state, {
	        fontSizeIncrease: action.val
	      });
	
	    case SET_CATEGORY_FILTER:
	      return _extends({}, state, {
	        categoryFilter: action.val
	      });
	
	    default:
	      return state;
	  }
	};
	
	var initialState = {
	  isBrowserActive: false,
	  navigatorPosition: "is-aside",
	  navigatorShape: "open",
	  navigatorFilter: "",
	  isWideScreen: false,
	  scrollToTop: false,
	  fontSizeIncrease: 1,
	  categoryFilter: "all posts"
	};
	
	var createStore = function createStore() {
	  return (0, _redux.createStore)(reducer, initialState, (0, _reduxDevtoolsExtension.composeWithDevTools)((0, _redux.applyMiddleware)()));
	};
	exports.default = createStore;

/***/ }),
/* 52 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ }),
/* 53 */
/***/ (function(module, exports) {

	'use strict';
	
	var NS = exports.NAMESPACES = {
	    HTML: 'http://www.w3.org/1999/xhtml',
	    MATHML: 'http://www.w3.org/1998/Math/MathML',
	    SVG: 'http://www.w3.org/2000/svg',
	    XLINK: 'http://www.w3.org/1999/xlink',
	    XML: 'http://www.w3.org/XML/1998/namespace',
	    XMLNS: 'http://www.w3.org/2000/xmlns/'
	};
	
	exports.ATTRS = {
	    TYPE: 'type',
	    ACTION: 'action',
	    ENCODING: 'encoding',
	    PROMPT: 'prompt',
	    NAME: 'name',
	    COLOR: 'color',
	    FACE: 'face',
	    SIZE: 'size'
	};
	
	exports.DOCUMENT_MODE = {
	    NO_QUIRKS: 'no-quirks',
	    QUIRKS: 'quirks',
	    LIMITED_QUIRKS: 'limited-quirks'
	};
	
	var $ = exports.TAG_NAMES = {
	    A: 'a',
	    ADDRESS: 'address',
	    ANNOTATION_XML: 'annotation-xml',
	    APPLET: 'applet',
	    AREA: 'area',
	    ARTICLE: 'article',
	    ASIDE: 'aside',
	
	    B: 'b',
	    BASE: 'base',
	    BASEFONT: 'basefont',
	    BGSOUND: 'bgsound',
	    BIG: 'big',
	    BLOCKQUOTE: 'blockquote',
	    BODY: 'body',
	    BR: 'br',
	    BUTTON: 'button',
	
	    CAPTION: 'caption',
	    CENTER: 'center',
	    CODE: 'code',
	    COL: 'col',
	    COLGROUP: 'colgroup',
	
	    DD: 'dd',
	    DESC: 'desc',
	    DETAILS: 'details',
	    DIALOG: 'dialog',
	    DIR: 'dir',
	    DIV: 'div',
	    DL: 'dl',
	    DT: 'dt',
	
	    EM: 'em',
	    EMBED: 'embed',
	
	    FIELDSET: 'fieldset',
	    FIGCAPTION: 'figcaption',
	    FIGURE: 'figure',
	    FONT: 'font',
	    FOOTER: 'footer',
	    FOREIGN_OBJECT: 'foreignObject',
	    FORM: 'form',
	    FRAME: 'frame',
	    FRAMESET: 'frameset',
	
	    H1: 'h1',
	    H2: 'h2',
	    H3: 'h3',
	    H4: 'h4',
	    H5: 'h5',
	    H6: 'h6',
	    HEAD: 'head',
	    HEADER: 'header',
	    HGROUP: 'hgroup',
	    HR: 'hr',
	    HTML: 'html',
	
	    I: 'i',
	    IMG: 'img',
	    IMAGE: 'image',
	    INPUT: 'input',
	    IFRAME: 'iframe',
	
	    KEYGEN: 'keygen',
	
	    LABEL: 'label',
	    LI: 'li',
	    LINK: 'link',
	    LISTING: 'listing',
	
	    MAIN: 'main',
	    MALIGNMARK: 'malignmark',
	    MARQUEE: 'marquee',
	    MATH: 'math',
	    MENU: 'menu',
	    MENUITEM: 'menuitem',
	    META: 'meta',
	    MGLYPH: 'mglyph',
	    MI: 'mi',
	    MO: 'mo',
	    MN: 'mn',
	    MS: 'ms',
	    MTEXT: 'mtext',
	
	    NAV: 'nav',
	    NOBR: 'nobr',
	    NOFRAMES: 'noframes',
	    NOEMBED: 'noembed',
	    NOSCRIPT: 'noscript',
	
	    OBJECT: 'object',
	    OL: 'ol',
	    OPTGROUP: 'optgroup',
	    OPTION: 'option',
	
	    P: 'p',
	    PARAM: 'param',
	    PLAINTEXT: 'plaintext',
	    PRE: 'pre',
	
	    RB: 'rb',
	    RP: 'rp',
	    RT: 'rt',
	    RTC: 'rtc',
	    RUBY: 'ruby',
	
	    S: 's',
	    SCRIPT: 'script',
	    SECTION: 'section',
	    SELECT: 'select',
	    SOURCE: 'source',
	    SMALL: 'small',
	    SPAN: 'span',
	    STRIKE: 'strike',
	    STRONG: 'strong',
	    STYLE: 'style',
	    SUB: 'sub',
	    SUMMARY: 'summary',
	    SUP: 'sup',
	
	    TABLE: 'table',
	    TBODY: 'tbody',
	    TEMPLATE: 'template',
	    TEXTAREA: 'textarea',
	    TFOOT: 'tfoot',
	    TD: 'td',
	    TH: 'th',
	    THEAD: 'thead',
	    TITLE: 'title',
	    TR: 'tr',
	    TRACK: 'track',
	    TT: 'tt',
	
	    U: 'u',
	    UL: 'ul',
	
	    SVG: 'svg',
	
	    VAR: 'var',
	
	    WBR: 'wbr',
	
	    XMP: 'xmp'
	};
	
	var SPECIAL_ELEMENTS = exports.SPECIAL_ELEMENTS = Object.create(null);
	
	SPECIAL_ELEMENTS[NS.HTML] = Object.create(null);
	SPECIAL_ELEMENTS[NS.HTML][$.ADDRESS] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.APPLET] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.AREA] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.ARTICLE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.ASIDE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BASE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BASEFONT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BGSOUND] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BLOCKQUOTE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BODY] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BR] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BUTTON] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.CAPTION] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.CENTER] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.COL] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.COLGROUP] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DD] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DETAILS] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DIR] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DIV] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DL] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.EMBED] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FIELDSET] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FIGCAPTION] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FIGURE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FOOTER] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FORM] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FRAME] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FRAMESET] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H1] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H2] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H3] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H4] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H5] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H6] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.HEAD] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.HEADER] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.HGROUP] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.HR] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.HTML] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.IFRAME] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.IMG] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.INPUT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.LI] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.LINK] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.LISTING] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.MAIN] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.MARQUEE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.MENU] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.META] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.NAV] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.NOEMBED] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.NOFRAMES] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.NOSCRIPT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.OBJECT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.OL] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.P] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.PARAM] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.PLAINTEXT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.PRE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.SCRIPT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.SECTION] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.SELECT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.SOURCE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.STYLE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.SUMMARY] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TABLE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TBODY] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TD] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TEMPLATE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TEXTAREA] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TFOOT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TH] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.THEAD] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TITLE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TR] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TRACK] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.UL] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.WBR] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.XMP] = true;
	
	SPECIAL_ELEMENTS[NS.MATHML] = Object.create(null);
	SPECIAL_ELEMENTS[NS.MATHML][$.MI] = true;
	SPECIAL_ELEMENTS[NS.MATHML][$.MO] = true;
	SPECIAL_ELEMENTS[NS.MATHML][$.MN] = true;
	SPECIAL_ELEMENTS[NS.MATHML][$.MS] = true;
	SPECIAL_ELEMENTS[NS.MATHML][$.MTEXT] = true;
	SPECIAL_ELEMENTS[NS.MATHML][$.ANNOTATION_XML] = true;
	
	SPECIAL_ELEMENTS[NS.SVG] = Object.create(null);
	SPECIAL_ELEMENTS[NS.SVG][$.TITLE] = true;
	SPECIAL_ELEMENTS[NS.SVG][$.FOREIGN_OBJECT] = true;
	SPECIAL_ELEMENTS[NS.SVG][$.DESC] = true;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;
	
	var _Provider = __webpack_require__(1669);
	
	var _Provider2 = _interopRequireDefault(_Provider);
	
	var _connectAdvanced = __webpack_require__(546);
	
	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);
	
	var _connect = __webpack_require__(1670);
	
	var _connect2 = _interopRequireDefault(_connect);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Provider = _Provider2.default;
	exports.createProvider = _Provider.createProvider;
	exports.connectAdvanced = _connectAdvanced2.default;
	exports.connect = _connect2.default;

/***/ }),
/* 55 */,
/* 56 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	function ownerDocument(node) {
	  return node && node.ownerDocument || document;
	}
	
	var _default = ownerDocument;
	exports.default = _default;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(1387),
	    baseMatchesProperty = __webpack_require__(1388),
	    identity = __webpack_require__(96),
	    isArray = __webpack_require__(27),
	    property = __webpack_require__(1506);
	
	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}
	
	module.exports = baseIteratee;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(470),
	    baseKeys = __webpack_require__(478),
	    isArrayLike = __webpack_require__(72);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}
	
	module.exports = keys;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var _classCallCheck = _interopDefault(__webpack_require__(10));
	var _createClass = _interopDefault(__webpack_require__(11));
	var _possibleConstructorReturn = _interopDefault(__webpack_require__(14));
	var _getPrototypeOf = _interopDefault(__webpack_require__(12));
	var _inherits = _interopDefault(__webpack_require__(13));
	var _typeof = _interopDefault(__webpack_require__(131));
	var _objectWithoutProperties = _interopDefault(__webpack_require__(6));
	var _extends = _interopDefault(__webpack_require__(4));
	var React = _interopDefault(__webpack_require__(2));
	var PropTypes = _interopDefault(__webpack_require__(3));
	var warning = _interopDefault(__webpack_require__(15));
	
	function defineProperty(object, property, attr) {
	  return Object.defineProperty(object, property, attr);
	} // Passive options
	// Inspired by https://github.com/Modernizr/Modernizr/blob/master/feature-detects/dom/passiveeventlisteners.js
	
	
	var passiveOption = function () {
	  var cache = null;
	  return function () {
	    if (cache !== null) {
	      return cache;
	    }
	
	    var supportsPassiveOption = false;
	
	    try {
	      window.addEventListener('test', null, defineProperty({}, 'passive', {
	        get: function get() {
	          supportsPassiveOption = true;
	        }
	      }));
	    } catch (err) {//
	    }
	
	    cache = supportsPassiveOption;
	    return supportsPassiveOption;
	  }();
	}();
	
	var defaultEventOptions = {
	  capture: false,
	  passive: false
	};
	
	function mergeDefaultEventOptions(options) {
	  return _extends({}, defaultEventOptions, options);
	}
	
	function getEventListenerArgs(eventName, callback, options) {
	  var args = [eventName, callback];
	  args.push(passiveOption ? options : options.capture);
	  return args;
	}
	
	function on(target, eventName, callback, options) {
	  // eslint-disable-next-line prefer-spread
	  target.addEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
	}
	
	function off(target, eventName, callback, options) {
	  // eslint-disable-next-line prefer-spread
	  target.removeEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
	}
	
	function forEachListener(props, iteratee) {
	  var children = props.children,
	      target = props.target,
	      eventProps = _objectWithoutProperties(props, ["children", "target"]);
	
	  Object.keys(eventProps).forEach(function (name) {
	    if (name.substring(0, 2) !== 'on') {
	      return;
	    }
	
	    var prop = eventProps[name];
	
	    var type = _typeof(prop);
	
	    var isObject = type === 'object';
	    var isFunction = type === 'function';
	
	    if (!isObject && !isFunction) {
	      return;
	    }
	
	    var capture = name.substr(-7).toLowerCase() === 'capture';
	    var eventName = name.substring(2).toLowerCase();
	    eventName = capture ? eventName.substring(0, eventName.length - 7) : eventName;
	
	    if (isObject) {
	      iteratee(eventName, prop.handler, prop.options);
	    } else {
	      iteratee(eventName, prop, mergeDefaultEventOptions({
	        capture: capture
	      }));
	    }
	  });
	}
	
	function withOptions(handler, options) {
	   false ? warning(options, 'react-event-listener: should be specified options in withOptions.') : void 0;
	  return {
	    handler: handler,
	    options: mergeDefaultEventOptions(options)
	  };
	}
	
	var EventListener =
	/*#__PURE__*/
	function (_React$PureComponent) {
	  _inherits(EventListener, _React$PureComponent);
	
	  function EventListener() {
	    _classCallCheck(this, EventListener);
	
	    return _possibleConstructorReturn(this, _getPrototypeOf(EventListener).apply(this, arguments));
	  }
	
	  _createClass(EventListener, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.applyListeners(on);
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      this.applyListeners(off, prevProps);
	      this.applyListeners(on);
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.applyListeners(off);
	    }
	  }, {
	    key: "applyListeners",
	    value: function applyListeners(onOrOff) {
	      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;
	      var target = props.target;
	
	      if (target) {
	        var element = target;
	
	        if (typeof target === 'string') {
	          element = window[target];
	        }
	
	        forEachListener(props, onOrOff.bind(null, element));
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return this.props.children || null;
	    }
	  }]);
	
	  return EventListener;
	}(React.PureComponent);
	
	EventListener.propTypes =  false ? {
	  /**
	   * You can provide a single child too.
	   */
	  children: PropTypes.node,
	
	  /**
	   * The DOM target to listen to.
	   */
	  target: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired
	} : {};
	
	exports.withOptions = withOptions;
	exports.default = EventListener;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||
	  function getOwnPropertyDescriptors(obj) {
	    var keys = Object.keys(obj);
	    var descriptors = {};
	    for (var i = 0; i < keys.length; i++) {
	      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
	    }
	    return descriptors;
	  };
	
	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }
	
	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};
	
	
	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  if (typeof process !== 'undefined' && process.noDeprecation === true) {
	    return fn;
	  }
	
	  // Allow for deprecating things in the process of starting up.
	  if (typeof process === 'undefined') {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	};
	
	
	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = ({"NODE_ENV":"production","PUBLIC_DIR":"/Users/danlevy/code/oss/dans-blog/public"}).NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};
	
	
	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;
	
	
	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};
	
	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};
	
	
	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];
	
	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}
	
	
	function stylizeNoColor(str, styleType) {
	  return str;
	}
	
	
	function arrayToHash(array) {
	  var hash = {};
	
	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });
	
	  return hash;
	}
	
	
	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }
	
	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }
	
	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);
	
	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }
	
	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }
	
	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }
	
	  var base = '', array = false, braces = ['{', '}'];
	
	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }
	
	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }
	
	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }
	
	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }
	
	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }
	
	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }
	
	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }
	
	  ctx.seen.push(value);
	
	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }
	
	  ctx.seen.pop();
	
	  return reduceToSingleString(output, base, braces);
	}
	
	
	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}
	
	
	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}
	
	
	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}
	
	
	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }
	
	  return name + ': ' + str;
	}
	
	
	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);
	
	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }
	
	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}
	
	
	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;
	
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;
	
	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;
	
	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;
	
	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;
	
	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;
	
	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;
	
	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;
	
	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;
	
	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;
	
	exports.isBuffer = __webpack_require__(1785);
	
	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	
	
	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}
	
	
	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];
	
	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}
	
	
	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};
	
	
	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(1784);
	
	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;
	
	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};
	
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;
	
	exports.promisify = function promisify(original) {
	  if (typeof original !== 'function')
	    throw new TypeError('The "original" argument must be of type Function');
	
	  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
	    var fn = original[kCustomPromisifiedSymbol];
	    if (typeof fn !== 'function') {
	      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
	    }
	    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
	      value: fn, enumerable: false, writable: false, configurable: true
	    });
	    return fn;
	  }
	
	  function fn() {
	    var promiseResolve, promiseReject;
	    var promise = new Promise(function (resolve, reject) {
	      promiseResolve = resolve;
	      promiseReject = reject;
	    });
	
	    var args = [];
	    for (var i = 0; i < arguments.length; i++) {
	      args.push(arguments[i]);
	    }
	    args.push(function (err, value) {
	      if (err) {
	        promiseReject(err);
	      } else {
	        promiseResolve(value);
	      }
	    });
	
	    try {
	      original.apply(this, args);
	    } catch (err) {
	      promiseReject(err);
	    }
	
	    return promise;
	  }
	
	  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));
	
	  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
	    value: fn, enumerable: false, writable: false, configurable: true
	  });
	  return Object.defineProperties(
	    fn,
	    getOwnPropertyDescriptors(original)
	  );
	}
	
	exports.promisify.custom = kCustomPromisifiedSymbol
	
	function callbackifyOnRejected(reason, cb) {
	  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
	  // Because `null` is a special error value in callbacks which means "no error
	  // occurred", we error-wrap so the callback consumer can distinguish between
	  // "the promise rejected with null" or "the promise fulfilled with undefined".
	  if (!reason) {
	    var newReason = new Error('Promise was rejected with a falsy value');
	    newReason.reason = reason;
	    reason = newReason;
	  }
	  return cb(reason);
	}
	
	function callbackify(original) {
	  if (typeof original !== 'function') {
	    throw new TypeError('The "original" argument must be of type Function');
	  }
	
	  // We DO NOT return the promise as it gives the user a false sense that
	  // the promise is actually somehow related to the callback's execution
	  // and that the callback throwing will reject the promise.
	  function callbackified() {
	    var args = [];
	    for (var i = 0; i < arguments.length; i++) {
	      args.push(arguments[i]);
	    }
	
	    var maybeCb = args.pop();
	    if (typeof maybeCb !== 'function') {
	      throw new TypeError('The last argument must be of type Function');
	    }
	    var self = this;
	    var cb = function() {
	      return maybeCb.apply(self, arguments);
	    };
	    // In true node style we process the callback on `nextTick` with all the
	    // implications (stack, `uncaughtException`, `async_hooks`)
	    original.apply(this, args)
	      .then(function(ret) { process.nextTick(cb, null, ret) },
	            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });
	  }
	
	  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
	  Object.defineProperties(callbackified,
	                          getOwnPropertyDescriptors(original));
	  return callbackified;
	}
	exports.callbackify = callbackify;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)))

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.convertHexToRGB = convertHexToRGB;
	exports.rgbToHex = rgbToHex;
	exports.decomposeColor = decomposeColor;
	exports.recomposeColor = recomposeColor;
	exports.getContrastRatio = getContrastRatio;
	exports.getLuminance = getLuminance;
	exports.emphasize = emphasize;
	exports.fade = fade;
	exports.darken = darken;
	exports.lighten = lighten;
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	/* eslint-disable no-use-before-define */
	
	/**
	 * Returns a number whose value is limited to the given range.
	 *
	 * @param {number} value The value to be clamped
	 * @param {number} min The lower boundary of the output range
	 * @param {number} max The upper boundary of the output range
	 * @returns {number} A number in the range [min, max]
	 */
	function clamp(value) {
	  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
	   false ? (0, _warning.default)(value >= min && value <= max, "Material-UI: the value provided ".concat(value, " is out of range [").concat(min, ", ").concat(max, "].")) : void 0;
	
	  if (value < min) {
	    return min;
	  }
	
	  if (value > max) {
	    return max;
	  }
	
	  return value;
	}
	/**
	 * Converts a color from CSS hex format to CSS rgb format.
	 *
	 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
	 * @returns {string} A CSS rgb color string
	 */
	
	
	function convertHexToRGB(color) {
	  color = color.substr(1);
	  var re = new RegExp(".{1,".concat(color.length / 3, "}"), 'g');
	  var colors = color.match(re);
	
	  if (colors && colors[0].length === 1) {
	    colors = colors.map(function (n) {
	      return n + n;
	    });
	  }
	
	  return colors ? "rgb(".concat(colors.map(function (n) {
	    return parseInt(n, 16);
	  }).join(', '), ")") : '';
	}
	/**
	 * Converts a color from CSS rgb format to CSS hex format.
	 *
	 * @param {string} color - RGB color, i.e. rgb(n, n, n)
	 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
	 */
	
	
	function rgbToHex(color) {
	  // Pass hex straight through
	  if (color.indexOf('#') === 0) {
	    return color;
	  }
	
	  function intToHex(c) {
	    var hex = c.toString(16);
	    return hex.length === 1 ? "0".concat(hex) : hex;
	  }
	
	  var _decomposeColor = decomposeColor(color),
	      values = _decomposeColor.values;
	
	  values = values.map(function (n) {
	    return intToHex(n);
	  });
	  return "#".concat(values.join(''));
	}
	/**
	 * Returns an object with the type and values of a color.
	 *
	 * Note: Does not support rgb % values.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {object} - A MUI color object: {type: string, values: number[]}
	 */
	
	
	function decomposeColor(color) {
	  if (color.charAt(0) === '#') {
	    return decomposeColor(convertHexToRGB(color));
	  }
	
	  var marker = color.indexOf('(');
	  var type = color.substring(0, marker);
	  var values = color.substring(marker + 1, color.length - 1).split(',');
	  values = values.map(function (value) {
	    return parseFloat(value);
	  });
	
	  if (false) {
	    if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {
	      throw new Error(["Material-UI: unsupported `".concat(color, "` color."), 'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'].join('\n'));
	    }
	  }
	
	  return {
	    type: type,
	    values: values
	  };
	}
	/**
	 * Converts a color object with type and values to a string.
	 *
	 * @param {object} color - Decomposed color
	 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
	 * @param {array} color.values - [n,n,n] or [n,n,n,n]
	 * @returns {string} A CSS color string
	 */
	
	
	function recomposeColor(color) {
	  var type = color.type;
	  var values = color.values;
	
	  if (type.indexOf('rgb') !== -1) {
	    // Only convert the first 3 values to int (i.e. not alpha)
	    values = values.map(function (n, i) {
	      return i < 3 ? parseInt(n, 10) : n;
	    });
	  }
	
	  if (type.indexOf('hsl') !== -1) {
	    values[1] = "".concat(values[1], "%");
	    values[2] = "".concat(values[2], "%");
	  }
	
	  return "".concat(color.type, "(").concat(values.join(', '), ")");
	}
	/**
	 * Calculates the contrast ratio between two colors.
	 *
	 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
	 *
	 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {number} A contrast ratio value in the range 0 - 21.
	 */
	
	
	function getContrastRatio(foreground, background) {
	  var lumA = getLuminance(foreground);
	  var lumB = getLuminance(background);
	  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
	}
	/**
	 * The relative brightness of any point in a color space,
	 * normalized to 0 for darkest black and 1 for lightest white.
	 *
	 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {number} The relative brightness of the color in the range 0 - 1
	 */
	
	
	function getLuminance(color) {
	  var decomposedColor = decomposeColor(color);
	
	  if (decomposedColor.type.indexOf('rgb') !== -1) {
	    var rgb = decomposedColor.values.map(function (val) {
	      val /= 255; // normalized
	
	      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
	    }); // Truncate at 3 digits
	
	    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
	  } // else if (decomposedColor.type.indexOf('hsl') !== -1)
	
	
	  return decomposedColor.values[2] / 100;
	}
	/**
	 * Darken or lighten a colour, depending on its luminance.
	 * Light colors are darkened, dark colors are lightened.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	
	
	function emphasize(color) {
	  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;
	  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
	}
	/**
	 * Set the absolute transparency of a color.
	 * Any existing alpha values are overwritten.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} value - value to set the alpha channel to in the range 0 -1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	
	
	function fade(color, value) {
	   false ? (0, _warning.default)(color, "Material-UI: missing color argument in fade(".concat(color, ", ").concat(value, ").")) : void 0;
	  if (!color) return color;
	  color = decomposeColor(color);
	  value = clamp(value);
	
	  if (color.type === 'rgb' || color.type === 'hsl') {
	    color.type += 'a';
	  }
	
	  color.values[3] = value;
	  return recomposeColor(color);
	}
	/**
	 * Darkens a color.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	
	
	function darken(color, coefficient) {
	   false ? (0, _warning.default)(color, "Material-UI: missing color argument in darken(".concat(color, ", ").concat(coefficient, ").")) : void 0;
	  if (!color) return color;
	  color = decomposeColor(color);
	  coefficient = clamp(coefficient);
	
	  if (color.type.indexOf('hsl') !== -1) {
	    color.values[2] *= 1 - coefficient;
	  } else if (color.type.indexOf('rgb') !== -1) {
	    for (var i = 0; i < 3; i += 1) {
	      color.values[i] *= 1 - coefficient;
	    }
	  }
	
	  return recomposeColor(color);
	}
	/**
	 * Lightens a color.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	
	
	function lighten(color, coefficient) {
	   false ? (0, _warning.default)(color, "Material-UI: missing color argument in lighten(".concat(color, ", ").concat(coefficient, ").")) : void 0;
	  if (!color) return color;
	  color = decomposeColor(color);
	  coefficient = clamp(coefficient);
	
	  if (color.type.indexOf('hsl') !== -1) {
	    color.values[2] += (100 - color.values[2]) * coefficient;
	  } else if (color.type.indexOf('rgb') !== -1) {
	    for (var i = 0; i < 3; i += 1) {
	      color.values[i] += (255 - color.values[i]) * coefficient;
	    }
	  }
	
	  return recomposeColor(color);
	}

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.isNumber = exports.isString = exports.formatMs = exports.duration = exports.easing = void 0;
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	/* eslint-disable no-restricted-globals */
	// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
	// to learn the context in which each easing should be used.
	var easing = {
	  // This is the most common easing curve.
	  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
	  // Objects enter the screen at full velocity from off-screen and
	  // slowly decelerate to a resting point.
	  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
	  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
	  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
	  // The sharp curve is used by objects that may return to the screen at any time.
	  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
	}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
	// to learn when use what timing
	
	exports.easing = easing;
	var duration = {
	  shortest: 150,
	  shorter: 200,
	  short: 250,
	  // most basic recommended timing
	  standard: 300,
	  // this is to be used in complex animations
	  complex: 375,
	  // recommended when something is entering screen
	  enteringScreen: 225,
	  // recommended when something is leaving screen
	  leavingScreen: 195
	};
	exports.duration = duration;
	
	var formatMs = function formatMs(milliseconds) {
	  return "".concat(Math.round(milliseconds), "ms");
	};
	
	exports.formatMs = formatMs;
	
	var isString = function isString(value) {
	  return typeof value === 'string';
	};
	
	exports.isString = isString;
	
	var isNumber = function isNumber(value) {
	  return !isNaN(parseFloat(value));
	};
	/**
	 * @param {string|Array} props
	 * @param {object} param
	 * @param {string} param.prop
	 * @param {number} param.duration
	 * @param {string} param.easing
	 * @param {number} param.delay
	 */
	
	
	exports.isNumber = isNumber;
	var _default = {
	  easing: easing,
	  duration: duration,
	  create: function create() {
	    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];
	    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    var _options$duration = options.duration,
	        durationOption = _options$duration === void 0 ? duration.standard : _options$duration,
	        _options$easing = options.easing,
	        easingOption = _options$easing === void 0 ? easing.easeInOut : _options$easing,
	        _options$delay = options.delay,
	        delay = _options$delay === void 0 ? 0 : _options$delay,
	        other = (0, _objectWithoutProperties2.default)(options, ["duration", "easing", "delay"]);
	     false ? (0, _warning.default)(isString(props) || Array.isArray(props), 'Material-UI: argument "props" must be a string or Array.') : void 0;
	     false ? (0, _warning.default)(isNumber(durationOption) || isString(durationOption), "Material-UI: argument \"duration\" must be a number or a string but found ".concat(durationOption, ".")) : void 0;
	     false ? (0, _warning.default)(isString(easingOption), 'Material-UI: argument "easing" must be a string.') : void 0;
	     false ? (0, _warning.default)(isNumber(delay) || isString(delay), 'Material-UI: argument "delay" must be a number or a string.') : void 0;
	     false ? (0, _warning.default)(Object.keys(other).length === 0, "Material-UI: unrecognized argument(s) [".concat(Object.keys(other).join(','), "]")) : void 0;
	    return (Array.isArray(props) ? props : [props]).map(function (animatedProp) {
	      return "".concat(animatedProp, " ").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), " ").concat(easingOption, " ").concat(typeof delay === 'string' ? delay : formatMs(delay));
	    }).join(',');
	  },
	  getAutoHeightDuration: function getAutoHeightDuration(height) {
	    if (!height) {
	      return 0;
	    }
	
	    var constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10
	
	    return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);
	  }
	};
	exports.default = _default;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(17);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _article;
	
	  return {
	    article: (_article = {
	      outline: "0px",
	      // background: theme.main.colors.background,
	      maxWidth: theme.main.sizes.articleMaxWidth,
	      margin: "0 auto 0 auto",
	      padding: "1.5rem 1.5rem 1.5rem 1.5rem",
	      "& strong, & b": {
	        letterSpacing: "-.02em"
	      },
	      "& a": {
	        fontWeight: "bold",
	        letterSpacing: "-.02em",
	        textDecoration: "underline",
	        transition: "0.3s",
	        "&:hover": {
	          color: theme.base.colors.linkHover
	        }
	      }
	    }, _article["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      padding: "1.5rem 3.5rem 2.5rem 3.5rem"
	    }, _article["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      padding: "1.5rem 3.5rem"
	    }, _article)
	  };
	};
	
	var Article = function Article(_ref) {
	  var children = _ref.children,
	      classes = _ref.classes;
	
	  return _react2.default.createElement(
	    "article",
	    { tabIndex: "-1", className: classes.article },
	    children
	  );
	};
	
	Article.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.node.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Article);
	module.exports = exports["default"];

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Main = __webpack_require__(873);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Main).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.shareOnTwitter = exports.retryApp = undefined;
	exports.injectCssByUrl = injectCssByUrl;
	exports.injectJsByUrl = injectJsByUrl;
	exports.isWideScreen = isWideScreen;
	exports.timeoutThrottlerHandler = timeoutThrottlerHandler;
	exports.slugify = slugify;
	exports.trackCustomEvent = trackCustomEvent;
	
	var _theme = __webpack_require__(185);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import yup from "yup";
	
	function injectCssByUrl(url) {
	  if (document.querySelector("link[href=\"" + url + "\"]")) return false;
	  var resource = document.createElement("link");
	  var result = domToPromise(resource);
	  resource.setAttribute("rel", "stylesheet");
	  resource.setAttribute("type", "text/css");
	  resource.setAttribute("href", url);
	  var head = document.getElementsByTagName("head")[0];
	  head.appendChild(resource);
	  return result;
	} /* eslint-disable no-param-reassign */
	function injectJsByUrl(url) {
	  if (document.querySelector("script[src=\"" + url + "\"]")) return false;
	  var resource = document.createElement("script");
	  var result = domToPromise(resource);
	  resource.setAttribute("src", url);
	  var head = document.getElementsByTagName("head")[0];
	  head.appendChild(resource);
	  return result;
	}
	
	function domToPromise(element) {
	  if (!("onload" in element)) throw new Error("Element must have `onload` property!");
	  return new Promise(function (onLoad, onError) {
	    element.onload = onLoad;
	    element.onerror = onError;
	  });
	}
	
	function isWideScreen() {
	  if (typeof window !== "undefined") {
	    var windowWidth = window.innerWidth;
	    var mediaQueryL = _theme2.default.mediaQueryTresholds.L;
	
	    return windowWidth >= mediaQueryL;
	  }
	}
	
	function timeoutThrottlerHandler(timeouts, name, delay, handler) {
	  if (!timeouts[name]) {
	    timeouts[name] = setTimeout(function () {
	      timeouts[name] = null;
	      handler();
	    }, delay);
	  }
	}
	
	function slugify(text) {
	  return text.toString().toLowerCase().replace(/\s+/g, "-") // Replace spaces with -
	  .replace(/[^\w-]+/g, "") // Remove all non-word chars
	  .replace(/-+/g, "-") // Replace multiple - with single -
	  .replace(/^-+/g, "") // Trim - from start of text
	  .replace(/-+$/g, ""); // Trim - from end of text
	}
	
	var retryApp = exports.retryApp = function retryApp(fn, _ref) {
	  var _ref$limit = _ref.limit,
	      limit = _ref$limit === undefined ? 10 : _ref$limit,
	      _ref$delayMsec = _ref.delayMsec,
	      delayMsec = _ref$delayMsec === undefined ? 100 : _ref$delayMsec,
	      _ref$rateAmplifyDelay = _ref.rateAmplifyDelay,
	      rateAmplifyDelay = _ref$rateAmplifyDelay === undefined ? 2.0 : _ref$rateAmplifyDelay;
	
	  try {
	    if (rateAmplifyDelay < 0.5 || rateAmplifyDelay > 1000) rateAmplifyDelay = 1.0;
	
	    if (limit > 0 && fn() === false) {
	      // console.trace("retryApp Triggered!!!", { limit });
	      delayMsec = delayMsec * rateAmplifyDelay;
	      return setTimeout(function () {
	        return retryApp(fn, { limit: limit - 1, delayMsec: delayMsec, rateAmplifyDelay: rateAmplifyDelay });
	      }, delayMsec);
	    }
	  } catch (e) {
	    console.warn("retryFail #" + limit + " remain: ", e);
	  }
	};
	
	var shareOnTwitter = exports.shareOnTwitter = function shareOnTwitter(text, url) {
	  var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "danlevy.net";
	
	  return "https://twitter.com/intent/tweet?text=" + encodeURIComponent(text) + "&url=" + encodeURIComponent(url) + "&source=" + encodeURIComponent(source) + "&related=" + encodeURIComponent(source);
	};
	
	// function validateGoogleAnalyticsEvent(event) {
	//   let schema = yup.object().shape({
	//     eventCategory: yup.string().max(150),
	//     eventAction: yup.string().max(500),
	//     eventLabel: yup.string().max(500),
	//     eventValue: yup.number()
	//   });
	//   return schema.isValidSync(event);
	// }
	
	/**
	 * This allows the user to create custom events within their Gatsby projects.
	 *
	 * @param {import('gatsby-plugin-google-analytics').CustomEventArgs} args
	 * @see https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#events
	 */
	function trackCustomEvent(_ref2) {
	  var category = _ref2.category,
	      action = _ref2.action,
	      label = _ref2.label,
	      value = _ref2.value,
	      _ref2$nonInteraction = _ref2.nonInteraction,
	      nonInteraction = _ref2$nonInteraction === undefined ? false : _ref2$nonInteraction,
	      transport = _ref2.transport,
	      hitCallback = _ref2.hitCallback,
	      _ref2$callbackTimeout = _ref2.callbackTimeout,
	      callbackTimeout = _ref2$callbackTimeout === undefined ? 100 : _ref2$callbackTimeout;
	
	  if (typeof window !== "undefined" && window.ga) {
	    var trackingEventOptions = {
	      eventCategory: category,
	      eventAction: action,
	      eventLabel: label,
	      eventValue: value,
	      nonInteraction: nonInteraction,
	      transport: transport
	    };
	
	    // if (!validateGoogleAnalyticsEvent(trackingEventOptions)) {
	    //   console.error("WARNING: Analytics data invalid, may be truncated.", trackingEventOptions);
	    // }
	
	    if (hitCallback && typeof hitCallback === "function") {
	      trackingEventOptions.hitCallback = function () {
	        return setTimeout(hitCallback, callbackTimeout);
	      };
	    }
	
	    window.ga("send", "event", trackingEventOptions);
	  }
	}

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.extractH3 = exports.extractH2 = exports.extractH1 = exports.extractBlockquote = exports.isMarkdown = exports.isHtml = exports.stripHtml = exports.removeBySelector = exports.extractTagContent = undefined;
	exports.featureNavigator = featureNavigator;
	exports.moveNavigatorAside = moveNavigatorAside;
	
	var _cheerio = __webpack_require__(929);
	
	var _cheerio2 = _interopRequireDefault(_cheerio);
	
	var _reactLazyload = __webpack_require__(128);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import { navigateTo } from 'gatsby-link';
	
	var extractTagContent = exports.extractTagContent = function extractTagContent(selector, html) {
	  var $ = _cheerio2.default.load(html);
	  return $(selector).text().trim();
	};
	
	var removeBySelector = exports.removeBySelector = function removeBySelector(selector, html) {
	  var $ = _cheerio2.default.load(html);
	  // console.info(`$('${selector}')`, $(selector))
	  $(selector).first().remove();
	  return cleanupCheerioHtml($.html());
	};
	
	var cleanupCheerioHtml = function cleanupCheerioHtml(html) {
	  return html.replace("<html><head></head><body>", "").replace("</body></html>", "").trim();
	};
	
	var stripHtml = exports.stripHtml = function stripHtml(html) {
	  return html && html.replace(/<\/?[a-z][a-z0-9]*[^<>]*>|<!--.*?-->/gim, "");
	};
	
	var isHtml = exports.isHtml = function isHtml(text) {
	  return (/^---/.test(text) || text.split(/<[^>]+>/).length > 1
	  );
	};
	var isMarkdown = exports.isMarkdown = function isMarkdown(text) {
	  return (/^---/.test(text) || /^#/.test(text) >= 1
	  );
	};
	
	var extractBlockquote = exports.extractBlockquote = function extractBlockquote(html) {
	  return html && html.match(/<blockquote>[^<]*<\/blockquote>/gim);
	};
	var extractH1 = exports.extractH1 = function extractH1(html) {
	  return html && /(<\/?h1>)/gim.test(html) ? html.split(/(<\/?h1>)/gim)[0] : "";
	};
	var extractH2 = exports.extractH2 = function extractH2(html) {
	  return html && /(<\/?h2>)/gim.test(html) ? html.split(/(<\/?h2>)/gim)[0] : "";
	};
	var extractH3 = exports.extractH3 = function extractH3(html) {
	  return html && /(<\/?h3>)/gim.test(html) ? html.split(/(<\/?h3>)/gim)[0] : "";
	};
	
	function featureNavigator(e) {
	  var _this = this;
	
	  e && e.preventDefault();
	
	  if (this.props.navigatorPosition === "is-aside") {
	    if (this.props.isWideScreen) {
	      this.props.setNavigatorPosition("moving-featured");
	
	      setTimeout(function () {
	        _this.props.setNavigatorPosition("resizing-featured");
	        setTimeout(function () {
	          _this.props.setNavigatorPosition("is-featured");
	          _this.props.setNavigatorShape("open");
	
	          // uncomment following lines if you want to count featuring Navigator as a visit
	          // to index page ('/'), you have to also uncomment import { navigateTo }...
	          /*
	          setTimeout(() => {
	            navigateTo("/");
	          }, 1000);
	          */
	        });
	      }, 300);
	    } else {
	      setTimeout(function () {
	        _this.props.setNavigatorPosition("is-featured");
	      }, 0);
	    }
	  }
	}
	
	function moveNavigatorAside(e) {
	  var _this2 = this;
	
	  var target = e ? e.currentTarget : null;
	  var dataShape = target ? target.getAttribute("data-shape") : null;
	  var navigatorShape = dataShape ? dataShape : "open";
	
	  if (this.props.navigatorPosition === "is-featured") {
	    if (this.props.isWideScreen) {
	      this.props.setNavigatorPosition("moving-aside");
	
	      setTimeout(function () {
	        if (typeof window !== "undefined") {
	          if (window.location.pathname !== "/") {
	            _this2.props.setNavigatorPosition("resizing-aside");
	            _this2.props.setNavigatorShape(navigatorShape);
	            setTimeout(function () {
	              _this2.props.setNavigatorPosition("is-aside");
	              setTimeout(_reactLazyload.forceCheck, 600);
	            });
	          }
	        }
	      }, 1000);
	    } else {
	      setTimeout(function () {
	        _this2.props.setNavigatorPosition("is-aside");
	      }, 100);
	    }
	  }
	}

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(1200);
	} else {
	  module.exports = require('./cjs/history.js');
	}


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

	var Parser = __webpack_require__(448);
	var DomHandler = __webpack_require__(77);
	
	function defineProp(name, value) {
	    delete module.exports[name];
	    module.exports[name] = value;
	    return value;
	}
	
	module.exports = {
	    Parser: Parser,
	    Tokenizer: __webpack_require__(449),
	    ElementType: __webpack_require__(111),
	    DomHandler: DomHandler,
	    get FeedHandler() {
	        return defineProp("FeedHandler", __webpack_require__(1204));
	    },
	    get Stream() {
	        return defineProp("Stream", __webpack_require__(1206));
	    },
	    get WritableStream() {
	        return defineProp("WritableStream", __webpack_require__(450));
	    },
	    get ProxyHandler() {
	        return defineProp("ProxyHandler", __webpack_require__(1205));
	    },
	    get DomUtils() {
	        return defineProp("DomUtils", __webpack_require__(78));
	    },
	    get CollectingHandler() {
	        return defineProp(
	            "CollectingHandler",
	            __webpack_require__(1203)
	        );
	    },
	    // For legacy support
	    DefaultHandler: DomHandler,
	    get RssHandler() {
	        return defineProp("RssHandler", this.FeedHandler);
	    },
	    //helper methods
	    parseDOM: function(data, options) {
	        var handler = new DomHandler(options);
	        new Parser(handler, options).end(data);
	        return handler.dom;
	    },
	    parseFeed: function(feed, options) {
	        var handler = new module.exports.FeedHandler(options);
	        new Parser(handler, options).end(feed);
	        return handler.dom;
	    },
	    createDomStream: function(cb, options, elementCb) {
	        var handler = new DomHandler(cb, options, elementCb);
	        return new Parser(handler, options);
	    },
	    // List of all events that the parser emits
	    EVENTS: {
	        /* Format: eventname: number of arguments */
	        attribute: 2,
	        cdatastart: 0,
	        cdataend: 0,
	        text: 1,
	        processinginstruction: 2,
	        comment: 1,
	        commentend: 0,
	        closetag: 1,
	        opentag: 2,
	        opentagname: 1,
	        error: 1,
	        end: 0
	    }
	};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;


/***/ }),
/* 70 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

	var createFind = __webpack_require__(1424),
	    findIndex = __webpack_require__(511);
	
	/**
	 * Iterates over elements of `collection`, returning the first element
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {*} Returns the matched element, else `undefined`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'age': 36, 'active': true },
	 *   { 'user': 'fred',    'age': 40, 'active': false },
	 *   { 'user': 'pebbles', 'age': 1,  'active': true }
	 * ];
	 *
	 * _.find(users, function(o) { return o.age < 40; });
	 * // => object for 'barney'
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.find(users, { 'age': 1, 'active': true });
	 * // => object for 'pebbles'
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.find(users, ['active', false]);
	 * // => object for 'fred'
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.find(users, 'active');
	 * // => object for 'barney'
	 */
	var find = createFind(findIndex);
	
	module.exports = find;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(125),
	    isLength = __webpack_require__(323);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = withFormControlContext;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _hoistNonReactStatics = _interopRequireDefault(__webpack_require__(114));
	
	var _FormControlContext = _interopRequireDefault(__webpack_require__(231));
	
	var _utils = __webpack_require__(40);
	
	function withFormControlContext(Component) {
	  var EnhancedComponent = function EnhancedComponent(props) {
	    return _react.default.createElement(_FormControlContext.default.Consumer, null, function (context) {
	      return _react.default.createElement(Component, (0, _extends2.default)({
	        muiFormControl: context
	      }, props));
	    });
	  };
	
	  if (false) {
	    EnhancedComponent.displayName = "WithFormControlContext(".concat((0, _utils.getDisplayName)(Component), ")");
	  }
	
	  (0, _hoistNonReactStatics.default)(EnhancedComponent, Component);
	  return EnhancedComponent;
	}

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _hoistNonReactStatics = _interopRequireDefault(__webpack_require__(114));
	
	var _utils = __webpack_require__(40);
	
	var _createMuiTheme = _interopRequireDefault(__webpack_require__(244));
	
	var _themeListener = _interopRequireDefault(__webpack_require__(245));
	
	/* eslint-disable no-underscore-dangle */
	var defaultTheme;
	
	function getDefaultTheme() {
	  if (defaultTheme) {
	    return defaultTheme;
	  }
	
	  defaultTheme = (0, _createMuiTheme.default)({
	    typography: {
	      suppressWarning: true
	    }
	  });
	  return defaultTheme;
	} // Provide the theme object as a property to the input component.
	
	
	var withThemeOld = function withThemeOld() {
	  return function (Component) {
	    var WithTheme =
	    /*#__PURE__*/
	    function (_React$Component) {
	      (0, _inherits2.default)(WithTheme, _React$Component);
	
	      function WithTheme(props, context) {
	        var _this;
	
	        (0, _classCallCheck2.default)(this, WithTheme);
	        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(WithTheme).call(this));
	        _this.state = {
	          // We use || as the function call is lazy evaluated.
	          theme: _themeListener.default.initial(context) || getDefaultTheme()
	        };
	        return _this;
	      }
	
	      (0, _createClass2.default)(WithTheme, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	          var _this2 = this;
	
	          this.unsubscribeId = _themeListener.default.subscribe(this.context, function (theme) {
	            _this2.setState({
	              theme: theme
	            });
	          });
	        }
	      }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	          if (this.unsubscribeId !== null) {
	            _themeListener.default.unsubscribe(this.context, this.unsubscribeId);
	          }
	        }
	      }, {
	        key: "render",
	        value: function render() {
	          var _this$props = this.props,
	              innerRef = _this$props.innerRef,
	              other = (0, _objectWithoutProperties2.default)(_this$props, ["innerRef"]);
	          return _react.default.createElement(Component, (0, _extends2.default)({
	            theme: this.state.theme,
	            ref: innerRef
	          }, other));
	        }
	      }]);
	      return WithTheme;
	    }(_react.default.Component);
	
	    WithTheme.propTypes =  false ? {
	      /**
	       * Use that property to pass a ref callback to the decorated component.
	       */
	      innerRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])
	    } : {};
	    WithTheme.contextTypes = _themeListener.default.contextTypes;
	
	    if (false) {
	      WithTheme.displayName = "WithTheme(".concat((0, _utils.getDisplayName)(Component), ")");
	    }
	
	    (0, _hoistNonReactStatics.default)(WithTheme, Component);
	
	    if (false) {
	      // Exposed for test purposes.
	      WithTheme.Naked = Component;
	    }
	
	    return WithTheme;
	  };
	};
	/* istanbul ignore if */
	
	
	if (!_utils.ponyfillGlobal.__MUI_STYLES__) {
	  _utils.ponyfillGlobal.__MUI_STYLES__ = {};
	}
	
	if (!_utils.ponyfillGlobal.__MUI_STYLES__.withTheme) {
	  _utils.ponyfillGlobal.__MUI_STYLES__.withTheme = withThemeOld;
	}
	
	var _default = _utils.ponyfillGlobal.__MUI_STYLES__.withTheme;
	exports.default = _default;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var colors = __webpack_require__(400);
	
	module.exports = {
	  siteTitle: "Dan Levy's Articles, Guides and Cats", // <title>
	  shortSiteTitle: "Dan Levy's Programming Blog", // <title> ending for posts and pages
	  siteDescription: "Come for the JavaScript, stay for the cat memes.",
	  siteUrl: "https://danlevy.net",
	  pathPrefix: "",
	  disqusShortname: "danlevy-1",
	  // siteImage: "preview.jpg",
	  siteLanguage: "en",
	  // author
	  authorName: "Dan Levy",
	  authorTwitterAccount: "justsml",
	  // info
	  infoTitle: "dan levy",
	  infoTitleNote: "fights for the user",
	  // manifest.json
	  manifestName: "Dan Levy's Personal Blog",
	  manifestShortName: "DansSite", // max 12 characters
	  manifestStartUrl: "/",
	  manifestBackgroundColor: colors.background,
	  manifestThemeColor: colors.background,
	  manifestDisplay: "standalone",
	  // contact
	  contactEmail: "dan@danlevy.net",
	  // social
	  authorSocialLinks: [{ name: "github", url: "https://github.com/justsml" }, { name: "twitter", url: "https://twitter.com/justsml" }, {
	    name: "youtube",
	    url: "https://www.youtube.com/user/justsml/videos?shelf_id=0&amp;sort=dd&amp;view=0"
	  }]
	};

/***/ }),
/* 76 */
/***/ (function(module, exports) {

	var core = module.exports = {version: '1.2.6'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(111);
	
	var re_whitespace = /\s+/g;
	var NodePrototype = __webpack_require__(443);
	var ElementPrototype = __webpack_require__(1037);
	
	function DomHandler(callback, options, elementCB){
		if(typeof callback === "object"){
			elementCB = options;
			options = callback;
			callback = null;
		} else if(typeof options === "function"){
			elementCB = options;
			options = defaultOpts;
		}
		this._callback = callback;
		this._options = options || defaultOpts;
		this._elementCB = elementCB;
		this.dom = [];
		this._done = false;
		this._tagStack = [];
		this._parser = this._parser || null;
	}
	
	//default options
	var defaultOpts = {
		normalizeWhitespace: false, //Replace all whitespace with single spaces
		withStartIndices: false, //Add startIndex properties to nodes
		withEndIndices: false, //Add endIndex properties to nodes
	};
	
	DomHandler.prototype.onparserinit = function(parser){
		this._parser = parser;
	};
	
	//Resets the handler back to starting state
	DomHandler.prototype.onreset = function(){
		DomHandler.call(this, this._callback, this._options, this._elementCB);
	};
	
	//Signals the handler that parsing is done
	DomHandler.prototype.onend = function(){
		if(this._done) return;
		this._done = true;
		this._parser = null;
		this._handleCallback(null);
	};
	
	DomHandler.prototype._handleCallback =
	DomHandler.prototype.onerror = function(error){
		if(typeof this._callback === "function"){
			this._callback(error, this.dom);
		} else {
			if(error) throw error;
		}
	};
	
	DomHandler.prototype.onclosetag = function(){
		//if(this._tagStack.pop().name !== name) this._handleCallback(Error("Tagname didn't match!"));
		
		var elem = this._tagStack.pop();
	
		if(this._options.withEndIndices && elem){
			elem.endIndex = this._parser.endIndex;
		}
	
		if(this._elementCB) this._elementCB(elem);
	};
	
	DomHandler.prototype._createDomElement = function(properties){
		if (!this._options.withDomLvl1) return properties;
	
		var element;
		if (properties.type === "tag") {
			element = Object.create(ElementPrototype);
		} else {
			element = Object.create(NodePrototype);
		}
	
		for (var key in properties) {
			if (properties.hasOwnProperty(key)) {
				element[key] = properties[key];
			}
		}
	
		return element;
	};
	
	DomHandler.prototype._addDomElement = function(element){
		var parent = this._tagStack[this._tagStack.length - 1];
		var siblings = parent ? parent.children : this.dom;
		var previousSibling = siblings[siblings.length - 1];
	
		element.next = null;
	
		if(this._options.withStartIndices){
			element.startIndex = this._parser.startIndex;
		}
		if(this._options.withEndIndices){
			element.endIndex = this._parser.endIndex;
		}
	
		if(previousSibling){
			element.prev = previousSibling;
			previousSibling.next = element;
		} else {
			element.prev = null;
		}
	
		siblings.push(element);
		element.parent = parent || null;
	};
	
	DomHandler.prototype.onopentag = function(name, attribs){
		var properties = {
			type: name === "script" ? ElementType.Script : name === "style" ? ElementType.Style : ElementType.Tag,
			name: name,
			attribs: attribs,
			children: []
		};
	
		var element = this._createDomElement(properties);
	
		this._addDomElement(element);
	
		this._tagStack.push(element);
	};
	
	DomHandler.prototype.ontext = function(data){
		//the ignoreWhitespace is officially dropped, but for now,
		//it's an alias for normalizeWhitespace
		var normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;
	
		var lastTag;
	
		if(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length-1]).type === ElementType.Text){
			if(normalize){
				lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
			} else {
				lastTag.data += data;
			}
		} else {
			if(
				this._tagStack.length &&
				(lastTag = this._tagStack[this._tagStack.length - 1]) &&
				(lastTag = lastTag.children[lastTag.children.length - 1]) &&
				lastTag.type === ElementType.Text
			){
				if(normalize){
					lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
				} else {
					lastTag.data += data;
				}
			} else {
				if(normalize){
					data = data.replace(re_whitespace, " ");
				}
	
				var element = this._createDomElement({
					data: data,
					type: ElementType.Text
				});
	
				this._addDomElement(element);
			}
		}
	};
	
	DomHandler.prototype.oncomment = function(data){
		var lastTag = this._tagStack[this._tagStack.length - 1];
	
		if(lastTag && lastTag.type === ElementType.Comment){
			lastTag.data += data;
			return;
		}
	
		var properties = {
			data: data,
			type: ElementType.Comment
		};
	
		var element = this._createDomElement(properties);
	
		this._addDomElement(element);
		this._tagStack.push(element);
	};
	
	DomHandler.prototype.oncdatastart = function(){
		var properties = {
			children: [{
				data: "",
				type: ElementType.Text
			}],
			type: ElementType.CDATA
		};
	
		var element = this._createDomElement(properties);
	
		this._addDomElement(element);
		this._tagStack.push(element);
	};
	
	DomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){
		this._tagStack.pop();
	};
	
	DomHandler.prototype.onprocessinginstruction = function(name, data){
		var element = this._createDomElement({
			name: name,
			data: data,
			type: ElementType.Directive
		});
	
		this._addDomElement(element);
	};
	
	module.exports = DomHandler;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

	var DomUtils = module.exports;
	
	[
		__webpack_require__(1043),
		__webpack_require__(1044),
		__webpack_require__(1041),
		__webpack_require__(1042),
		__webpack_require__(1040),
		__webpack_require__(1039)
	].forEach(function(ext){
		Object.keys(ext).forEach(function(key){
			DomUtils[key] = ext[key].bind(DomUtils);
		});
	});


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(117),
	    getRawTag = __webpack_require__(1434),
	    objectToString = __webpack_require__(1466);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	var baseKeys = __webpack_require__(478),
	    getTag = __webpack_require__(159),
	    isArguments = __webpack_require__(161),
	    isArray = __webpack_require__(27),
	    isArrayLike = __webpack_require__(72),
	    isBuffer = __webpack_require__(162),
	    isPrototype = __webpack_require__(207),
	    isTypedArray = __webpack_require__(211);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    setTag = '[object Set]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if `value` is an empty object, collection, map, or set.
	 *
	 * Objects are considered empty if they have no own enumerable string keyed
	 * properties.
	 *
	 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	 * jQuery-like collections are considered empty if they have a `length` of `0`.
	 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	 * @example
	 *
	 * _.isEmpty(null);
	 * // => true
	 *
	 * _.isEmpty(true);
	 * // => true
	 *
	 * _.isEmpty(1);
	 * // => true
	 *
	 * _.isEmpty([1, 2, 3]);
	 * // => false
	 *
	 * _.isEmpty({ 'a': 1 });
	 * // => false
	 */
	function isEmpty(value) {
	  if (value == null) {
	    return true;
	  }
	  if (isArrayLike(value) &&
	      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	    return !value.length;
	  }
	  var tag = getTag(value);
	  if (tag == mapTag || tag == setTag) {
	    return !value.size;
	  }
	  if (isPrototype(value)) {
	    return !baseKeys(value).length;
	  }
	  for (var key in value) {
	    if (hasOwnProperty.call(value, key)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	module.exports = isEmpty;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(70),
	    baseIteratee = __webpack_require__(57),
	    baseMap = __webpack_require__(479),
	    isArray = __webpack_require__(27);
	
	/**
	 * Creates an array of values by running each element in `collection` thru
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	 *
	 * The guarded methods are:
	 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * _.map([4, 8], square);
	 * // => [16, 64]
	 *
	 * _.map({ 'a': 4, 'b': 8 }, square);
	 * // => [16, 64] (iteration order is not guaranteed)
	 *
	 * var users = [
	 *   { 'user': 'barney' },
	 *   { 'user': 'fred' }
	 * ];
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.map(users, 'user');
	 * // => ['barney', 'fred']
	 */
	function map(collection, iteratee) {
	  var func = isArray(collection) ? arrayMap : baseMap;
	  return func(collection, baseIteratee(iteratee, 3));
	}
	
	module.exports = map;


/***/ }),
/* 82 */,
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {/*! *****************************************************************************
	Copyright (c) Microsoft Corporation.
	
	Permission to use, copy, modify, and/or distribute this software for any
	purpose with or without fee is hereby granted.
	
	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
	REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
	AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
	INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
	LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
	OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
	PERFORMANCE OF THIS SOFTWARE.
	***************************************************************************** */
	
	/* global global, define, System, Reflect, Promise */
	var __extends;
	var __assign;
	var __rest;
	var __decorate;
	var __param;
	var __metadata;
	var __awaiter;
	var __generator;
	var __exportStar;
	var __values;
	var __read;
	var __spread;
	var __spreadArrays;
	var __await;
	var __asyncGenerator;
	var __asyncDelegator;
	var __asyncValues;
	var __makeTemplateObject;
	var __importStar;
	var __importDefault;
	var __classPrivateFieldGet;
	var __classPrivateFieldSet;
	var __createBinding;
	(function (factory) {
	    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_RESULT__ = function (exports) { factory(createExporter(root, createExporter(exports))); }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    }
	    else if (typeof module === "object" && typeof module.exports === "object") {
	        factory(createExporter(root, createExporter(module.exports)));
	    }
	    else {
	        factory(createExporter(root));
	    }
	    function createExporter(exports, previous) {
	        if (exports !== root) {
	            if (typeof Object.create === "function") {
	                Object.defineProperty(exports, "__esModule", { value: true });
	            }
	            else {
	                exports.__esModule = true;
	            }
	        }
	        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
	    }
	})
	(function (exporter) {
	    var extendStatics = Object.setPrototypeOf ||
	        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	
	    __extends = function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	
	    __assign = Object.assign || function (t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	        return t;
	    };
	
	    __rest = function (s, e) {
	        var t = {};
	        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
	            t[p] = s[p];
	        if (s != null && typeof Object.getOwnPropertySymbols === "function")
	            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
	                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
	                    t[p[i]] = s[p[i]];
	            }
	        return t;
	    };
	
	    __decorate = function (decorators, target, key, desc) {
	        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	        return c > 3 && r && Object.defineProperty(target, key, r), r;
	    };
	
	    __param = function (paramIndex, decorator) {
	        return function (target, key) { decorator(target, key, paramIndex); }
	    };
	
	    __metadata = function (metadataKey, metadataValue) {
	        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
	    };
	
	    __awaiter = function (thisArg, _arguments, P, generator) {
	        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
	        return new (P || (P = Promise))(function (resolve, reject) {
	            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
	            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
	            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
	            step((generator = generator.apply(thisArg, _arguments || [])).next());
	        });
	    };
	
	    __generator = function (thisArg, body) {
	        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
	        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
	        function verb(n) { return function (v) { return step([n, v]); }; }
	        function step(op) {
	            if (f) throw new TypeError("Generator is already executing.");
	            while (_) try {
	                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
	                if (y = 0, t) op = [op[0] & 2, t.value];
	                switch (op[0]) {
	                    case 0: case 1: t = op; break;
	                    case 4: _.label++; return { value: op[1], done: false };
	                    case 5: _.label++; y = op[1]; op = [0]; continue;
	                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
	                    default:
	                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
	                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
	                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
	                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
	                        if (t[2]) _.ops.pop();
	                        _.trys.pop(); continue;
	                }
	                op = body.call(thisArg, _);
	            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
	            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
	        }
	    };
	
	    __createBinding = function(o, m, k, k2) {
	        if (k2 === undefined) k2 = k;
	        o[k2] = m[k];
	    };
	
	    __exportStar = function (m, exports) {
	        for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
	    };
	
	    __values = function (o) {
	        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	        if (m) return m.call(o);
	        if (o && typeof o.length === "number") return {
	            next: function () {
	                if (o && i >= o.length) o = void 0;
	                return { value: o && o[i++], done: !o };
	            }
	        };
	        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	    };
	
	    __read = function (o, n) {
	        var m = typeof Symbol === "function" && o[Symbol.iterator];
	        if (!m) return o;
	        var i = m.call(o), r, ar = [], e;
	        try {
	            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	        }
	        catch (error) { e = { error: error }; }
	        finally {
	            try {
	                if (r && !r.done && (m = i["return"])) m.call(i);
	            }
	            finally { if (e) throw e.error; }
	        }
	        return ar;
	    };
	
	    __spread = function () {
	        for (var ar = [], i = 0; i < arguments.length; i++)
	            ar = ar.concat(__read(arguments[i]));
	        return ar;
	    };
	
	    __spreadArrays = function () {
	        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
	        for (var r = Array(s), k = 0, i = 0; i < il; i++)
	            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
	                r[k] = a[j];
	        return r;
	    };
	
	    __await = function (v) {
	        return this instanceof __await ? (this.v = v, this) : new __await(v);
	    };
	
	    __asyncGenerator = function (thisArg, _arguments, generator) {
	        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
	        var g = generator.apply(thisArg, _arguments || []), i, q = [];
	        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
	        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
	        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
	        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
	        function fulfill(value) { resume("next", value); }
	        function reject(value) { resume("throw", value); }
	        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
	    };
	
	    __asyncDelegator = function (o) {
	        var i, p;
	        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
	        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
	    };
	
	    __asyncValues = function (o) {
	        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
	        var m = o[Symbol.asyncIterator], i;
	        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
	        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
	        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
	    };
	
	    __makeTemplateObject = function (cooked, raw) {
	        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
	        return cooked;
	    };
	
	    __importStar = function (mod) {
	        if (mod && mod.__esModule) return mod;
	        var result = {};
	        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
	        result["default"] = mod;
	        return result;
	    };
	
	    __importDefault = function (mod) {
	        return (mod && mod.__esModule) ? mod : { "default": mod };
	    };
	
	    __classPrivateFieldGet = function (receiver, privateMap) {
	        if (!privateMap.has(receiver)) {
	            throw new TypeError("attempted to get private field on non-instance");
	        }
	        return privateMap.get(receiver);
	    };
	
	    __classPrivateFieldSet = function (receiver, privateMap, value) {
	        if (!privateMap.has(receiver)) {
	            throw new TypeError("attempted to set private field on non-instance");
	        }
	        privateMap.set(receiver, value);
	        return value;
	    };
	
	    exporter("__extends", __extends);
	    exporter("__assign", __assign);
	    exporter("__rest", __rest);
	    exporter("__decorate", __decorate);
	    exporter("__param", __param);
	    exporter("__metadata", __metadata);
	    exporter("__awaiter", __awaiter);
	    exporter("__generator", __generator);
	    exporter("__exportStar", __exportStar);
	    exporter("__createBinding", __createBinding);
	    exporter("__values", __values);
	    exporter("__read", __read);
	    exporter("__spread", __spread);
	    exporter("__spreadArrays", __spreadArrays);
	    exporter("__await", __await);
	    exporter("__asyncGenerator", __asyncGenerator);
	    exporter("__asyncDelegator", __asyncDelegator);
	    exporter("__asyncValues", __asyncValues);
	    exporter("__makeTemplateObject", __makeTemplateObject);
	    exporter("__importStar", __importStar);
	    exporter("__importDefault", __importDefault);
	    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
	    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
	});
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayWithoutHoles = __webpack_require__(570);
	
	var iterableToArray = __webpack_require__(571);
	
	var nonIterableSpread = __webpack_require__(574);
	
	function _toConsumableArray(arr) {
	  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
	}
	
	module.exports = _toConsumableArray;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Button.default;
	  }
	});
	
	var _Button = _interopRequireDefault(__webpack_require__(587));

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "createGenerateClassName", {
	  enumerable: true,
	  get: function get() {
	    return _createGenerateClassName.default;
	  }
	});
	Object.defineProperty(exports, "createMuiTheme", {
	  enumerable: true,
	  get: function get() {
	    return _createMuiTheme.default;
	  }
	});
	Object.defineProperty(exports, "jssPreset", {
	  enumerable: true,
	  get: function get() {
	    return _jssPreset.default;
	  }
	});
	Object.defineProperty(exports, "MuiThemeProvider", {
	  enumerable: true,
	  get: function get() {
	    return _MuiThemeProvider.default;
	  }
	});
	Object.defineProperty(exports, "createStyles", {
	  enumerable: true,
	  get: function get() {
	    return _createStyles.default;
	  }
	});
	Object.defineProperty(exports, "withStyles", {
	  enumerable: true,
	  get: function get() {
	    return _withStyles.default;
	  }
	});
	Object.defineProperty(exports, "withTheme", {
	  enumerable: true,
	  get: function get() {
	    return _withTheme.default;
	  }
	});
	
	var _createGenerateClassName = _interopRequireDefault(__webpack_require__(382));
	
	var _createMuiTheme = _interopRequireDefault(__webpack_require__(244));
	
	var _jssPreset = _interopRequireDefault(__webpack_require__(384));
	
	var _MuiThemeProvider = _interopRequireDefault(__webpack_require__(771));
	
	var _createStyles = _interopRequireDefault(__webpack_require__(774));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _withTheme = _interopRequireDefault(__webpack_require__(74));

/***/ }),
/* 87 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ }),
/* 88 */
/***/ (function(module, exports) {

	var $Object = Object;
	module.exports = {
	  create:     $Object.create,
	  getProto:   $Object.getPrototypeOf,
	  isEnum:     {}.propertyIsEnumerable,
	  getDesc:    $Object.getOwnPropertyDescriptor,
	  setDesc:    $Object.defineProperty,
	  setDescs:   $Object.defineProperties,
	  getKeys:    $Object.keys,
	  getNames:   $Object.getOwnPropertyNames,
	  getSymbols: $Object.getOwnPropertySymbols,
	  each:       [].forEach
	};

/***/ }),
/* 89 */,
/* 90 */,
/* 91 */
/***/ (function(module, exports) {

	/**
	 * Returns a function, that, as long as it continues to be invoked, will not
	 * be triggered. The function will be called after it stops being called for
	 * N milliseconds. If `immediate` is passed, trigger the function on the
	 * leading edge, instead of the trailing. The function also has a property 'clear' 
	 * that is a function which will clear the timer to prevent previously scheduled executions. 
	 *
	 * @source underscore.js
	 * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/
	 * @param {Function} function to wrap
	 * @param {Number} timeout in ms (`100`)
	 * @param {Boolean} whether to execute at the beginning (`false`)
	 * @api public
	 */
	function debounce(func, wait, immediate){
	  var timeout, args, context, timestamp, result;
	  if (null == wait) wait = 100;
	
	  function later() {
	    var last = Date.now() - timestamp;
	
	    if (last < wait && last >= 0) {
	      timeout = setTimeout(later, wait - last);
	    } else {
	      timeout = null;
	      if (!immediate) {
	        result = func.apply(context, args);
	        context = args = null;
	      }
	    }
	  };
	
	  var debounced = function(){
	    context = this;
	    args = arguments;
	    timestamp = Date.now();
	    var callNow = immediate && !timeout;
	    if (!timeout) timeout = setTimeout(later, wait);
	    if (callNow) {
	      result = func.apply(context, args);
	      context = args = null;
	    }
	
	    return result;
	  };
	
	  debounced.clear = function() {
	    if (timeout) {
	      clearTimeout(timeout);
	      timeout = null;
	    }
	  };
	  
	  debounced.flush = function() {
	    if (timeout) {
	      result = func.apply(context, args);
	      context = args = null;
	      
	      clearTimeout(timeout);
	      timeout = null;
	    }
	  };
	
	  return debounced;
	};
	
	// Adds compatibility for ES modules
	debounce.debounce = debounce;
	
	module.exports = debounce;


/***/ }),
/* 92 */
/***/ (function(module, exports) {

	var toString = {}.toString;
	
	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ }),
/* 93 */,
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(96),
	    overRest = __webpack_require__(504),
	    setToString = __webpack_require__(317);
	
	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  return setToString(overRest(func, start, identity), func + '');
	}
	
	module.exports = baseRest;


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(1383),
	    getValue = __webpack_require__(1435);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}
	
	module.exports = getNative;


/***/ }),
/* 96 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(70),
	    baseClone = __webpack_require__(1370),
	    baseUnset = __webpack_require__(1403),
	    castPath = __webpack_require__(119),
	    copyObject = __webpack_require__(120),
	    customOmitClone = __webpack_require__(1428),
	    flatRest = __webpack_require__(493),
	    getAllKeysIn = __webpack_require__(312);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;
	
	/**
	 * The opposite of `_.pick`; this method creates an object composed of the
	 * own and inherited enumerable property paths of `object` that are not omitted.
	 *
	 * **Note:** This method is considerably slower than `_.pick`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to omit.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omit(object, ['a', 'c']);
	 * // => { 'b': '2' }
	 */
	var omit = flatRest(function(object, paths) {
	  var result = {};
	  if (object == null) {
	    return result;
	  }
	  var isDeep = false;
	  paths = arrayMap(paths, function(path) {
	    path = castPath(path, object);
	    isDeep || (isDeep = path.length > 1);
	    return path;
	  });
	  copyObject(object, getAllKeysIn(object), result);
	  if (isDeep) {
	    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
	  }
	  var length = paths.length;
	  while (length--) {
	    baseUnset(result, paths[length]);
	  }
	  return result;
	});
	
	module.exports = omit;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(519);
	
	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;
	
	  return result === result ? (remainder ? result - remainder : result) : 0;
	}
	
	module.exports = toInteger;


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// a duplex stream is just a stream that is both readable and writable.
	// Since JS doesn't have multiple prototypal inheritance, this class
	// prototypally inherits from Readable, and then parasitically from
	// Writable.
	
	'use strict';
	
	/*<replacement>*/
	
	var pna = __webpack_require__(216);
	/*</replacement>*/
	
	/*<replacement>*/
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) {
	    keys.push(key);
	  }return keys;
	};
	/*</replacement>*/
	
	module.exports = Duplex;
	
	/*<replacement>*/
	var util = Object.create(__webpack_require__(146));
	util.inherits = __webpack_require__(43);
	/*</replacement>*/
	
	var Readable = __webpack_require__(561);
	var Writable = __webpack_require__(343);
	
	util.inherits(Duplex, Readable);
	
	{
	  // avoid scope creep, the keys array can then be collected
	  var keys = objectKeys(Writable.prototype);
	  for (var v = 0; v < keys.length; v++) {
	    var method = keys[v];
	    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
	  }
	}
	
	function Duplex(options) {
	  if (!(this instanceof Duplex)) return new Duplex(options);
	
	  Readable.call(this, options);
	  Writable.call(this, options);
	
	  if (options && options.readable === false) this.readable = false;
	
	  if (options && options.writable === false) this.writable = false;
	
	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;
	
	  this.once('end', onend);
	}
	
	Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
	  // making it explicit this property is not enumerable
	  // because otherwise some prototype manipulation in
	  // userland will fail
	  enumerable: false,
	  get: function () {
	    return this._writableState.highWaterMark;
	  }
	});
	
	// the no-half-open enforcer
	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended) return;
	
	  // no more data can be written.
	  // But allow more writes to happen in this tick.
	  pna.nextTick(onEndNT, this);
	}
	
	function onEndNT(self) {
	  self.end();
	}
	
	Object.defineProperty(Duplex.prototype, 'destroyed', {
	  get: function () {
	    if (this._readableState === undefined || this._writableState === undefined) {
	      return false;
	    }
	    return this._readableState.destroyed && this._writableState.destroyed;
	  },
	  set: function (value) {
	    // we ignore the value if the stream
	    // has not been initialized yet
	    if (this._readableState === undefined || this._writableState === undefined) {
	      return;
	    }
	
	    // backward compatibility, the user is explicitly
	    // managing destroyed
	    this._readableState.destroyed = value;
	    this._writableState.destroyed = value;
	  }
	});
	
	Duplex.prototype._destroy = function (err, cb) {
	  this.push(null);
	  this.end();
	
	  pna.nextTick(cb, err);
	};

/***/ }),
/* 100 */,
/* 101 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = formControlState;
	
	function formControlState(_ref) {
	  var props = _ref.props,
	      states = _ref.states,
	      muiFormControl = _ref.muiFormControl;
	  return states.reduce(function (acc, state) {
	    acc[state] = props[state];
	
	    if (muiFormControl) {
	      if (typeof props[state] === 'undefined') {
	        acc[state] = muiFormControl[state];
	      }
	    }
	
	    return acc;
	  }, {});
	}

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Grow.default;
	  }
	});
	
	var _Grow = _interopRequireDefault(__webpack_require__(645));

/***/ }),
/* 103 */,
/* 104 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getTransitionProps = getTransitionProps;
	exports.reflow = void 0;
	
	var reflow = function reflow(node) {
	  return node.scrollTop;
	};
	
	exports.reflow = reflow;
	
	function getTransitionProps(props, options) {
	  var timeout = props.timeout,
	      _props$style = props.style,
	      style = _props$style === void 0 ? {} : _props$style;
	  return {
	    duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode],
	    delay: style.transitionDelay
	  };
	}

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	function chainPropTypes(propType1, propType2) {
	  /* istanbul ignore if */
	  if (true) {
	    return function () {
	      return null;
	    };
	  }
	
	  return function validate() {
	    return propType1.apply(void 0, arguments) || propType2.apply(void 0, arguments);
	  };
	}
	
	var _default = chainPropTypes;
	exports.default = _default;

/***/ }),
/* 106 */
/***/ (function(module, exports) {

	module.exports = function clone(obj) {
	  return JSON.parse(JSON.stringify(obj));
	};


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _setPrototypeOf = __webpack_require__(918);
	
	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);
	
	var _create = __webpack_require__(916);
	
	var _create2 = _interopRequireDefault(_create);
	
	var _typeof2 = __webpack_require__(257);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }
	
	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _typeof2 = __webpack_require__(257);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isHtml = exports.cloneDom = exports.domEach = exports.cssCase = exports.camelCase = exports.isCheerio = exports.isTag = void 0;
	var htmlparser2_1 = __webpack_require__(68);
	var domhandler_1 = __webpack_require__(77);
	/**
	 * Check if the DOM element is a tag.
	 *
	 * `isTag(type)` includes `<script>` and `<style>` tags.
	 *
	 * @private
	 * @category Utils
	 * @param type - DOM node to check.
	 * @returns Whether the node is a tag.
	 */
	exports.isTag = htmlparser2_1.DomUtils.isTag;
	/**
	 * Checks if an object is a Cheerio instance.
	 *
	 * @category Utils
	 * @param maybeCheerio - The object to check.
	 * @returns Whether the object is a Cheerio instance.
	 */
	function isCheerio(maybeCheerio) {
	    return maybeCheerio.cheerio != null;
	}
	exports.isCheerio = isCheerio;
	/**
	 * Convert a string to camel case notation.
	 *
	 * @private
	 * @category Utils
	 * @param str - String to be converted.
	 * @returns String in camel case notation.
	 */
	function camelCase(str) {
	    return str.replace(/[_.-](\w|$)/g, function (_, x) { return x.toUpperCase(); });
	}
	exports.camelCase = camelCase;
	/**
	 * Convert a string from camel case to "CSS case", where word boundaries are
	 * described by hyphens ("-") and all characters are lower-case.
	 *
	 * @private
	 * @category Utils
	 * @param str - String to be converted.
	 * @returns String in "CSS case".
	 */
	function cssCase(str) {
	    return str.replace(/[A-Z]/g, '-$&').toLowerCase();
	}
	exports.cssCase = cssCase;
	/**
	 * Iterate over each DOM element without creating intermediary Cheerio instances.
	 *
	 * This is indented for use internally to avoid otherwise unnecessary memory
	 * pressure introduced by _make.
	 *
	 * @category Utils
	 * @param array - Array to iterate over.
	 * @param fn - Function to call.
	 * @returns The original instance.
	 */
	function domEach(array, fn) {
	    var len = array.length;
	    for (var i = 0; i < len && fn(i, array[i]) !== false; i++)
	        ;
	    return array;
	}
	exports.domEach = domEach;
	/**
	 * Create a deep copy of the given DOM structure. Sets the parents of the copies
	 * of the passed nodes to `null`.
	 *
	 * @private
	 * @category Utils
	 * @param dom - The htmlparser2-compliant DOM structure.
	 * @returns - The cloned DOM.
	 */
	function cloneDom(dom) {
	    var clone = 'length' in dom
	        ? Array.prototype.map.call(dom, function (el) { return domhandler_1.cloneNode(el, true); })
	        : [domhandler_1.cloneNode(dom, true)];
	    // Add a root node around the cloned nodes
	    var root = new domhandler_1.Document(clone);
	    clone.forEach(function (node) {
	        node.parent = root;
	    });
	    return clone;
	}
	exports.cloneDom = cloneDom;
	/**
	 * A simple way to check for HTML strings. Tests for a `<` within a string,
	 * immediate followed by a letter and eventually followed by a `>`.
	 *
	 * @private
	 */
	var quickExpr = /<[a-zA-Z][^]*>/;
	/**
	 * Check if string is HTML.
	 *
	 * @private
	 * @category Utils
	 * @param str - String to check.
	 * @returns Indicates if `str` is HTML.
	 */
	function isHtml(str) {
	    // Run the regex
	    return quickExpr.test(str);
	}
	exports.isHtml = isHtml;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	var $          = __webpack_require__(88)
	  , createDesc = __webpack_require__(431);
	module.exports = __webpack_require__(270) ? function(object, key, value){
	  return $.setDesc(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ }),
/* 111 */
/***/ (function(module, exports) {

	//Types of elements found in the DOM
	module.exports = {
		Text: "text", //Text
		Directive: "directive", //<? ... ?>
		Comment: "comment", //<!-- ... -->
		Script: "script", //<script> tags
		Style: "style", //<style> tags
		Tag: "tag", //Any tag
		CDATA: "cdata", //<![CDATA[ ... ]]>
		Doctype: "doctype",
	
		isTag: function(elem){
			return elem.type === "tag" || elem.type === "script" || elem.type === "style";
		}
	};


/***/ }),
/* 112 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	var R = typeof Reflect === 'object' ? Reflect : null
	var ReflectApply = R && typeof R.apply === 'function'
	  ? R.apply
	  : function ReflectApply(target, receiver, args) {
	    return Function.prototype.apply.call(target, receiver, args);
	  }
	
	var ReflectOwnKeys
	if (R && typeof R.ownKeys === 'function') {
	  ReflectOwnKeys = R.ownKeys
	} else if (Object.getOwnPropertySymbols) {
	  ReflectOwnKeys = function ReflectOwnKeys(target) {
	    return Object.getOwnPropertyNames(target)
	      .concat(Object.getOwnPropertySymbols(target));
	  };
	} else {
	  ReflectOwnKeys = function ReflectOwnKeys(target) {
	    return Object.getOwnPropertyNames(target);
	  };
	}
	
	function ProcessEmitWarning(warning) {
	  if (console && console.warn) console.warn(warning);
	}
	
	var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
	  return value !== value;
	}
	
	function EventEmitter() {
	  EventEmitter.init.call(this);
	}
	module.exports = EventEmitter;
	module.exports.once = once;
	
	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;
	
	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._eventsCount = 0;
	EventEmitter.prototype._maxListeners = undefined;
	
	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	var defaultMaxListeners = 10;
	
	function checkListener(listener) {
	  if (typeof listener !== 'function') {
	    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
	  }
	}
	
	Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
	  enumerable: true,
	  get: function() {
	    return defaultMaxListeners;
	  },
	  set: function(arg) {
	    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
	      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
	    }
	    defaultMaxListeners = arg;
	  }
	});
	
	EventEmitter.init = function() {
	
	  if (this._events === undefined ||
	      this._events === Object.getPrototypeOf(this)._events) {
	    this._events = Object.create(null);
	    this._eventsCount = 0;
	  }
	
	  this._maxListeners = this._maxListeners || undefined;
	};
	
	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
	  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
	    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
	  }
	  this._maxListeners = n;
	  return this;
	};
	
	function _getMaxListeners(that) {
	  if (that._maxListeners === undefined)
	    return EventEmitter.defaultMaxListeners;
	  return that._maxListeners;
	}
	
	EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
	  return _getMaxListeners(this);
	};
	
	EventEmitter.prototype.emit = function emit(type) {
	  var args = [];
	  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
	  var doError = (type === 'error');
	
	  var events = this._events;
	  if (events !== undefined)
	    doError = (doError && events.error === undefined);
	  else if (!doError)
	    return false;
	
	  // If there is no 'error' event listener then throw.
	  if (doError) {
	    var er;
	    if (args.length > 0)
	      er = args[0];
	    if (er instanceof Error) {
	      // Note: The comments on the `throw` lines are intentional, they show
	      // up in Node's output if this results in an unhandled exception.
	      throw er; // Unhandled 'error' event
	    }
	    // At least give some kind of context to the user
	    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
	    err.context = er;
	    throw err; // Unhandled 'error' event
	  }
	
	  var handler = events[type];
	
	  if (handler === undefined)
	    return false;
	
	  if (typeof handler === 'function') {
	    ReflectApply(handler, this, args);
	  } else {
	    var len = handler.length;
	    var listeners = arrayClone(handler, len);
	    for (var i = 0; i < len; ++i)
	      ReflectApply(listeners[i], this, args);
	  }
	
	  return true;
	};
	
	function _addListener(target, type, listener, prepend) {
	  var m;
	  var events;
	  var existing;
	
	  checkListener(listener);
	
	  events = target._events;
	  if (events === undefined) {
	    events = target._events = Object.create(null);
	    target._eventsCount = 0;
	  } else {
	    // To avoid recursion in the case that type === "newListener"! Before
	    // adding it to the listeners, first emit "newListener".
	    if (events.newListener !== undefined) {
	      target.emit('newListener', type,
	                  listener.listener ? listener.listener : listener);
	
	      // Re-assign `events` because a newListener handler could have caused the
	      // this._events to be assigned to a new object
	      events = target._events;
	    }
	    existing = events[type];
	  }
	
	  if (existing === undefined) {
	    // Optimize the case of one listener. Don't need the extra array object.
	    existing = events[type] = listener;
	    ++target._eventsCount;
	  } else {
	    if (typeof existing === 'function') {
	      // Adding the second element, need to change to array.
	      existing = events[type] =
	        prepend ? [listener, existing] : [existing, listener];
	      // If we've already got an array, just append.
	    } else if (prepend) {
	      existing.unshift(listener);
	    } else {
	      existing.push(listener);
	    }
	
	    // Check for listener leak
	    m = _getMaxListeners(target);
	    if (m > 0 && existing.length > m && !existing.warned) {
	      existing.warned = true;
	      // No error code for this since it is a Warning
	      // eslint-disable-next-line no-restricted-syntax
	      var w = new Error('Possible EventEmitter memory leak detected. ' +
	                          existing.length + ' ' + String(type) + ' listeners ' +
	                          'added. Use emitter.setMaxListeners() to ' +
	                          'increase limit');
	      w.name = 'MaxListenersExceededWarning';
	      w.emitter = target;
	      w.type = type;
	      w.count = existing.length;
	      ProcessEmitWarning(w);
	    }
	  }
	
	  return target;
	}
	
	EventEmitter.prototype.addListener = function addListener(type, listener) {
	  return _addListener(this, type, listener, false);
	};
	
	EventEmitter.prototype.on = EventEmitter.prototype.addListener;
	
	EventEmitter.prototype.prependListener =
	    function prependListener(type, listener) {
	      return _addListener(this, type, listener, true);
	    };
	
	function onceWrapper() {
	  if (!this.fired) {
	    this.target.removeListener(this.type, this.wrapFn);
	    this.fired = true;
	    if (arguments.length === 0)
	      return this.listener.call(this.target);
	    return this.listener.apply(this.target, arguments);
	  }
	}
	
	function _onceWrap(target, type, listener) {
	  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
	  var wrapped = onceWrapper.bind(state);
	  wrapped.listener = listener;
	  state.wrapFn = wrapped;
	  return wrapped;
	}
	
	EventEmitter.prototype.once = function once(type, listener) {
	  checkListener(listener);
	  this.on(type, _onceWrap(this, type, listener));
	  return this;
	};
	
	EventEmitter.prototype.prependOnceListener =
	    function prependOnceListener(type, listener) {
	      checkListener(listener);
	      this.prependListener(type, _onceWrap(this, type, listener));
	      return this;
	    };
	
	// Emits a 'removeListener' event if and only if the listener was removed.
	EventEmitter.prototype.removeListener =
	    function removeListener(type, listener) {
	      var list, events, position, i, originalListener;
	
	      checkListener(listener);
	
	      events = this._events;
	      if (events === undefined)
	        return this;
	
	      list = events[type];
	      if (list === undefined)
	        return this;
	
	      if (list === listener || list.listener === listener) {
	        if (--this._eventsCount === 0)
	          this._events = Object.create(null);
	        else {
	          delete events[type];
	          if (events.removeListener)
	            this.emit('removeListener', type, list.listener || listener);
	        }
	      } else if (typeof list !== 'function') {
	        position = -1;
	
	        for (i = list.length - 1; i >= 0; i--) {
	          if (list[i] === listener || list[i].listener === listener) {
	            originalListener = list[i].listener;
	            position = i;
	            break;
	          }
	        }
	
	        if (position < 0)
	          return this;
	
	        if (position === 0)
	          list.shift();
	        else {
	          spliceOne(list, position);
	        }
	
	        if (list.length === 1)
	          events[type] = list[0];
	
	        if (events.removeListener !== undefined)
	          this.emit('removeListener', type, originalListener || listener);
	      }
	
	      return this;
	    };
	
	EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
	
	EventEmitter.prototype.removeAllListeners =
	    function removeAllListeners(type) {
	      var listeners, events, i;
	
	      events = this._events;
	      if (events === undefined)
	        return this;
	
	      // not listening for removeListener, no need to emit
	      if (events.removeListener === undefined) {
	        if (arguments.length === 0) {
	          this._events = Object.create(null);
	          this._eventsCount = 0;
	        } else if (events[type] !== undefined) {
	          if (--this._eventsCount === 0)
	            this._events = Object.create(null);
	          else
	            delete events[type];
	        }
	        return this;
	      }
	
	      // emit removeListener for all listeners on all events
	      if (arguments.length === 0) {
	        var keys = Object.keys(events);
	        var key;
	        for (i = 0; i < keys.length; ++i) {
	          key = keys[i];
	          if (key === 'removeListener') continue;
	          this.removeAllListeners(key);
	        }
	        this.removeAllListeners('removeListener');
	        this._events = Object.create(null);
	        this._eventsCount = 0;
	        return this;
	      }
	
	      listeners = events[type];
	
	      if (typeof listeners === 'function') {
	        this.removeListener(type, listeners);
	      } else if (listeners !== undefined) {
	        // LIFO order
	        for (i = listeners.length - 1; i >= 0; i--) {
	          this.removeListener(type, listeners[i]);
	        }
	      }
	
	      return this;
	    };
	
	function _listeners(target, type, unwrap) {
	  var events = target._events;
	
	  if (events === undefined)
	    return [];
	
	  var evlistener = events[type];
	  if (evlistener === undefined)
	    return [];
	
	  if (typeof evlistener === 'function')
	    return unwrap ? [evlistener.listener || evlistener] : [evlistener];
	
	  return unwrap ?
	    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
	}
	
	EventEmitter.prototype.listeners = function listeners(type) {
	  return _listeners(this, type, true);
	};
	
	EventEmitter.prototype.rawListeners = function rawListeners(type) {
	  return _listeners(this, type, false);
	};
	
	EventEmitter.listenerCount = function(emitter, type) {
	  if (typeof emitter.listenerCount === 'function') {
	    return emitter.listenerCount(type);
	  } else {
	    return listenerCount.call(emitter, type);
	  }
	};
	
	EventEmitter.prototype.listenerCount = listenerCount;
	function listenerCount(type) {
	  var events = this._events;
	
	  if (events !== undefined) {
	    var evlistener = events[type];
	
	    if (typeof evlistener === 'function') {
	      return 1;
	    } else if (evlistener !== undefined) {
	      return evlistener.length;
	    }
	  }
	
	  return 0;
	}
	
	EventEmitter.prototype.eventNames = function eventNames() {
	  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
	};
	
	function arrayClone(arr, n) {
	  var copy = new Array(n);
	  for (var i = 0; i < n; ++i)
	    copy[i] = arr[i];
	  return copy;
	}
	
	function spliceOne(list, index) {
	  for (; index + 1 < list.length; index++)
	    list[index] = list[index + 1];
	  list.pop();
	}
	
	function unwrapListeners(arr) {
	  var ret = new Array(arr.length);
	  for (var i = 0; i < ret.length; ++i) {
	    ret[i] = arr[i].listener || arr[i];
	  }
	  return ret;
	}
	
	function once(emitter, name) {
	  return new Promise(function (resolve, reject) {
	    function errorListener(err) {
	      emitter.removeListener(name, resolver);
	      reject(err);
	    }
	
	    function resolver() {
	      if (typeof emitter.removeListener === 'function') {
	        emitter.removeListener('error', errorListener);
	      }
	      resolve([].slice.call(arguments));
	    };
	
	    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
	    if (name !== 'error') {
	      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
	    }
	  });
	}
	
	function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
	  if (typeof emitter.on === 'function') {
	    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
	  }
	}
	
	function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
	  if (typeof emitter.on === 'function') {
	    if (flags.once) {
	      emitter.once(name, listener);
	    } else {
	      emitter.on(name, listener);
	    }
	  } else if (typeof emitter.addEventListener === 'function') {
	    // EventTarget does not have `error` event semantics like Node
	    // EventEmitters, we do not listen for `error` events here.
	    emitter.addEventListener(name, function wrapListener(arg) {
	      // IE does not have builtin `{ once: true }` support so we
	      // have to do it manually.
	      if (flags.once) {
	        emitter.removeEventListener(name, wrapListener);
	      }
	      listener(arg);
	    });
	  } else {
	    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
	  }
	}


/***/ }),
/* 113 */
/***/ (function(module, exports) {

	
	var hasOwn = Object.prototype.hasOwnProperty;
	var toString = Object.prototype.toString;
	
	module.exports = function forEach (obj, fn, ctx) {
	    if (toString.call(fn) !== '[object Function]') {
	        throw new TypeError('iterator must be a function');
	    }
	    var l = obj.length;
	    if (l === +l) {
	        for (var i = 0; i < l; i++) {
	            fn.call(ctx, obj[i], i, obj);
	        }
	    } else {
	        for (var k in obj) {
	            if (hasOwn.call(obj, k)) {
	                fn.call(ctx, obj[k], k, obj);
	            }
	        }
	    }
	};
	


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var reactIs = __webpack_require__(543);
	
	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	var REACT_STATICS = {
	  childContextTypes: true,
	  contextType: true,
	  contextTypes: true,
	  defaultProps: true,
	  displayName: true,
	  getDefaultProps: true,
	  getDerivedStateFromError: true,
	  getDerivedStateFromProps: true,
	  mixins: true,
	  propTypes: true,
	  type: true
	};
	var KNOWN_STATICS = {
	  name: true,
	  length: true,
	  prototype: true,
	  caller: true,
	  callee: true,
	  arguments: true,
	  arity: true
	};
	var FORWARD_REF_STATICS = {
	  '$$typeof': true,
	  render: true,
	  defaultProps: true,
	  displayName: true,
	  propTypes: true
	};
	var MEMO_STATICS = {
	  '$$typeof': true,
	  compare: true,
	  defaultProps: true,
	  displayName: true,
	  propTypes: true,
	  type: true
	};
	var TYPE_STATICS = {};
	TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
	TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
	
	function getStatics(component) {
	  // React v16.11 and below
	  if (reactIs.isMemo(component)) {
	    return MEMO_STATICS;
	  } // React v16.12 and above
	
	
	  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
	}
	
	var defineProperty = Object.defineProperty;
	var getOwnPropertyNames = Object.getOwnPropertyNames;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
	var getPrototypeOf = Object.getPrototypeOf;
	var objectPrototype = Object.prototype;
	function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	  if (typeof sourceComponent !== 'string') {
	    // don't hoist over string (html) components
	    if (objectPrototype) {
	      var inheritedComponent = getPrototypeOf(sourceComponent);
	
	      if (inheritedComponent && inheritedComponent !== objectPrototype) {
	        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
	      }
	    }
	
	    var keys = getOwnPropertyNames(sourceComponent);
	
	    if (getOwnPropertySymbols) {
	      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
	    }
	
	    var targetStatics = getStatics(targetComponent);
	    var sourceStatics = getStatics(sourceComponent);
	
	    for (var i = 0; i < keys.length; ++i) {
	      var key = keys[i];
	
	      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
	        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
	
	        try {
	          // Avoid failures from read-only properties
	          defineProperty(targetComponent, key, descriptor);
	        } catch (e) {}
	      }
	    }
	  }
	
	  return targetComponent;
	}
	
	module.exports = hoistNonReactStatics;


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _toCss = __webpack_require__(296);
	
	var _toCss2 = _interopRequireDefault(_toCss);
	
	var _toCssValue = __webpack_require__(197);
	
	var _toCssValue2 = _interopRequireDefault(_toCssValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var StyleRule = function () {
	  function StyleRule(key, style, options) {
	    _classCallCheck(this, StyleRule);
	
	    this.type = 'style';
	    this.isProcessed = false;
	    var sheet = options.sheet,
	        Renderer = options.Renderer,
	        selector = options.selector;
	
	    this.key = key;
	    this.options = options;
	    this.style = style;
	    if (selector) this.selectorText = selector;
	    this.renderer = sheet ? sheet.renderer : new Renderer();
	  }
	
	  /**
	   * Set selector string.
	   * Attention: use this with caution. Most browsers didn't implement
	   * selectorText setter, so this may result in rerendering of entire Style Sheet.
	   */
	
	
	  _createClass(StyleRule, [{
	    key: 'prop',
	
	
	    /**
	     * Get or set a style property.
	     */
	    value: function prop(name, value) {
	      // It's a getter.
	      if (value === undefined) return this.style[name];
	
	      // Don't do anything if the value has not changed.
	      if (this.style[name] === value) return this;
	
	      value = this.options.jss.plugins.onChangeValue(value, name, this);
	
	      var isEmpty = value == null || value === false;
	      var isDefined = name in this.style;
	
	      // Value is empty and wasn't defined before.
	      if (isEmpty && !isDefined) return this;
	
	      // We are going to remove this value.
	      var remove = isEmpty && isDefined;
	
	      if (remove) delete this.style[name];else this.style[name] = value;
	
	      // Renderable is defined if StyleSheet option `link` is true.
	      if (this.renderable) {
	        if (remove) this.renderer.removeProperty(this.renderable, name);else this.renderer.setProperty(this.renderable, name, value);
	        return this;
	      }
	
	      var sheet = this.options.sheet;
	
	      if (sheet && sheet.attached) {
	        (0, _warning2['default'])(false, 'Rule is not linked. Missing sheet option "link: true".');
	      }
	      return this;
	    }
	
	    /**
	     * Apply rule to an element inline.
	     */
	
	  }, {
	    key: 'applyTo',
	    value: function applyTo(renderable) {
	      var json = this.toJSON();
	      for (var prop in json) {
	        this.renderer.setProperty(renderable, prop, json[prop]);
	      }return this;
	    }
	
	    /**
	     * Returns JSON representation of the rule.
	     * Fallbacks are not supported.
	     * Useful for inline styles.
	     */
	
	  }, {
	    key: 'toJSON',
	    value: function toJSON() {
	      var json = {};
	      for (var prop in this.style) {
	        var value = this.style[prop];
	        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = (0, _toCssValue2['default'])(value);
	      }
	      return json;
	    }
	
	    /**
	     * Generates a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      var sheet = this.options.sheet;
	
	      var link = sheet ? sheet.options.link : false;
	      var opts = link ? _extends({}, options, { allowEmpty: true }) : options;
	      return (0, _toCss2['default'])(this.selector, this.style, opts);
	    }
	  }, {
	    key: 'selector',
	    set: function set(selector) {
	      if (selector === this.selectorText) return;
	
	      this.selectorText = selector;
	
	      if (!this.renderable) return;
	
	      var hasChanged = this.renderer.setSelector(this.renderable, selector);
	
	      // If selector setter is not implemented, rerender the rule.
	      if (!hasChanged && this.renderable) {
	        var renderable = this.renderer.replaceRule(this.renderable, this);
	        if (renderable) this.renderable = renderable;
	      }
	    }
	
	    /**
	     * Get selector string.
	     */
	    ,
	    get: function get() {
	      return this.selectorText;
	    }
	  }]);
	
	  return StyleRule;
	}();
	
	exports['default'] = StyleRule;

/***/ }),
/* 116 */
/***/ (function(module, exports) {

	// Source: http://jsfiddle.net/vWx8V/
	// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes
	
	/**
	 * Conenience method returns corresponding value for given keyName or keyCode.
	 *
	 * @param {Mixed} keyCode {Number} or keyName {String}
	 * @return {Mixed}
	 * @api public
	 */
	
	function keyCode(searchInput) {
	  // Keyboard Events
	  if (searchInput && 'object' === typeof searchInput) {
	    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode
	    if (hasKeyCode) searchInput = hasKeyCode
	  }
	
	  // Numbers
	  if ('number' === typeof searchInput) return names[searchInput]
	
	  // Everything else (cast to string)
	  var search = String(searchInput)
	
	  // check codes
	  var foundNamedKey = codes[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey
	
	  // check aliases
	  var foundNamedKey = aliases[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey
	
	  // weird character?
	  if (search.length === 1) return search.charCodeAt(0)
	
	  return undefined
	}
	
	/**
	 * Compares a keyboard event with a given keyCode or keyName.
	 *
	 * @param {Event} event Keyboard event that should be tested
	 * @param {Mixed} keyCode {Number} or keyName {String}
	 * @return {Boolean}
	 * @api public
	 */
	keyCode.isEventKey = function isEventKey(event, nameOrCode) {
	  if (event && 'object' === typeof event) {
	    var keyCode = event.which || event.keyCode || event.charCode
	    if (keyCode === null || keyCode === undefined) { return false; }
	    if (typeof nameOrCode === 'string') {
	      // check codes
	      var foundNamedKey = codes[nameOrCode.toLowerCase()]
	      if (foundNamedKey) { return foundNamedKey === keyCode; }
	    
	      // check aliases
	      var foundNamedKey = aliases[nameOrCode.toLowerCase()]
	      if (foundNamedKey) { return foundNamedKey === keyCode; }
	    } else if (typeof nameOrCode === 'number') {
	      return nameOrCode === keyCode;
	    }
	    return false;
	  }
	}
	
	exports = module.exports = keyCode;
	
	/**
	 * Get by name
	 *
	 *   exports.code['enter'] // => 13
	 */
	
	var codes = exports.code = exports.codes = {
	  'backspace': 8,
	  'tab': 9,
	  'enter': 13,
	  'shift': 16,
	  'ctrl': 17,
	  'alt': 18,
	  'pause/break': 19,
	  'caps lock': 20,
	  'esc': 27,
	  'space': 32,
	  'page up': 33,
	  'page down': 34,
	  'end': 35,
	  'home': 36,
	  'left': 37,
	  'up': 38,
	  'right': 39,
	  'down': 40,
	  'insert': 45,
	  'delete': 46,
	  'command': 91,
	  'left command': 91,
	  'right command': 93,
	  'numpad *': 106,
	  'numpad +': 107,
	  'numpad -': 109,
	  'numpad .': 110,
	  'numpad /': 111,
	  'num lock': 144,
	  'scroll lock': 145,
	  'my computer': 182,
	  'my calculator': 183,
	  ';': 186,
	  '=': 187,
	  ',': 188,
	  '-': 189,
	  '.': 190,
	  '/': 191,
	  '`': 192,
	  '[': 219,
	  '\\': 220,
	  ']': 221,
	  "'": 222
	}
	
	// Helper aliases
	
	var aliases = exports.aliases = {
	  'windows': 91,
	  '⇧': 16,
	  '⌥': 18,
	  '⌃': 17,
	  '⌘': 91,
	  'ctl': 17,
	  'control': 17,
	  'option': 18,
	  'pause': 19,
	  'break': 19,
	  'caps': 20,
	  'return': 13,
	  'escape': 27,
	  'spc': 32,
	  'spacebar': 32,
	  'pgup': 33,
	  'pgdn': 34,
	  'ins': 45,
	  'del': 46,
	  'cmd': 91
	}
	
	/*!
	 * Programatically add the following
	 */
	
	// lower case chars
	for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32
	
	// numbers
	for (var i = 48; i < 58; i++) codes[i - 48] = i
	
	// function keys
	for (i = 1; i < 13; i++) codes['f'+i] = i + 111
	
	// numpad keys
	for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96
	
	/**
	 * Get by code
	 *
	 *   exports.name[13] // => 'Enter'
	 */
	
	var names = exports.names = exports.title = {} // title for backward compat
	
	// Create reverse mapping
	for (i in codes) names[codes[i]] = i
	
	// Add aliases
	for (var alias in aliases) {
	  codes[alias] = aliases[alias]
	}


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(33);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ }),
/* 118 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(27),
	    isKey = __webpack_require__(315),
	    stringToPath = __webpack_require__(1480),
	    toString = __webpack_require__(167);
	
	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value, object) {
	  if (isArray(value)) {
	    return value;
	  }
	  return isKey(value, object) ? [value] : stringToPath(toString(value));
	}
	
	module.exports = castPath;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(305),
	    baseAssignValue = __webpack_require__(154);
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  var isNew = !object;
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;
	
	    if (newValue === undefined) {
	      newValue = source[key];
	    }
	    if (isNew) {
	      baseAssignValue(object, key, newValue);
	    } else {
	      assignValue(object, key, newValue);
	    }
	  }
	  return object;
	}
	
	module.exports = copyObject;


/***/ }),
/* 121 */
/***/ (function(module, exports) {

	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';
	
	/**
	 * Replaces all `placeholder` elements in `array` with an internal placeholder
	 * and returns an array of their indexes.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {*} placeholder The placeholder to replace.
	 * @returns {Array} Returns the new array of placeholder indexes.
	 */
	function replaceHolders(array, placeholder) {
	  var index = -1,
	      length = array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (value === placeholder || value === PLACEHOLDER) {
	      array[index] = PLACEHOLDER;
	      result[resIndex++] = index;
	    }
	  }
	  return result;
	}
	
	module.exports = replaceHolders;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(165);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = toKey;


/***/ }),
/* 123 */
/***/ (function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(302),
	    baseEach = __webpack_require__(202),
	    castFunction = __webpack_require__(484),
	    isArray = __webpack_require__(27);
	
	/**
	 * Iterates over elements of `collection` and invokes `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length"
	 * property are iterated like arrays. To avoid this behavior use `_.forIn`
	 * or `_.forOwn` for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @see _.forEachRight
	 * @example
	 *
	 * _.forEach([1, 2], function(value) {
	 *   console.log(value);
	 * });
	 * // => Logs `1` then `2`.
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forEach(collection, iteratee) {
	  var func = isArray(collection) ? arrayEach : baseEach;
	  return func(collection, castFunction(iteratee));
	}
	
	module.exports = forEach;


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(79),
	    isObject = __webpack_require__(47);
	
	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}
	
	module.exports = isFunction;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(470),
	    baseKeysIn = __webpack_require__(1386),
	    isArrayLike = __webpack_require__(72);
	
	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	}
	
	module.exports = keysIn;


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Preprocessor = __webpack_require__(1539),
	    UNICODE = __webpack_require__(168),
	    neTree = __webpack_require__(1538);
	
	//Aliases
	var $ = UNICODE.CODE_POINTS,
	    $$ = UNICODE.CODE_POINT_SEQUENCES;
	
	//Replacement code points for numeric entities
	var NUMERIC_ENTITY_REPLACEMENTS = {
	    0x00: 0xFFFD, 0x0D: 0x000D, 0x80: 0x20AC, 0x81: 0x0081, 0x82: 0x201A, 0x83: 0x0192, 0x84: 0x201E,
	    0x85: 0x2026, 0x86: 0x2020, 0x87: 0x2021, 0x88: 0x02C6, 0x89: 0x2030, 0x8A: 0x0160, 0x8B: 0x2039,
	    0x8C: 0x0152, 0x8D: 0x008D, 0x8E: 0x017D, 0x8F: 0x008F, 0x90: 0x0090, 0x91: 0x2018, 0x92: 0x2019,
	    0x93: 0x201C, 0x94: 0x201D, 0x95: 0x2022, 0x96: 0x2013, 0x97: 0x2014, 0x98: 0x02DC, 0x99: 0x2122,
	    0x9A: 0x0161, 0x9B: 0x203A, 0x9C: 0x0153, 0x9D: 0x009D, 0x9E: 0x017E, 0x9F: 0x0178
	};
	
	// Named entity tree flags
	var HAS_DATA_FLAG = 1 << 0;
	var DATA_DUPLET_FLAG = 1 << 1;
	var HAS_BRANCHES_FLAG = 1 << 2;
	var MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;
	
	
	//States
	var DATA_STATE = 'DATA_STATE',
	    CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',
	    RCDATA_STATE = 'RCDATA_STATE',
	    CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',
	    RAWTEXT_STATE = 'RAWTEXT_STATE',
	    SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',
	    PLAINTEXT_STATE = 'PLAINTEXT_STATE',
	    TAG_OPEN_STATE = 'TAG_OPEN_STATE',
	    END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',
	    TAG_NAME_STATE = 'TAG_NAME_STATE',
	    RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',
	    RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',
	    RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',
	    RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',
	    RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',
	    RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',
	    SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',
	    SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',
	    SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',
	    SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',
	    SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',
	    SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',
	    SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',
	    SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',
	    SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',
	    SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',
	    SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',
	    BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',
	    ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',
	    AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',
	    BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',
	    ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',
	    ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',
	    ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',
	    CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',
	    AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',
	    SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',
	    BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',
	    BOGUS_COMMENT_STATE_CONTINUATION = 'BOGUS_COMMENT_STATE_CONTINUATION',
	    MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',
	    COMMENT_START_STATE = 'COMMENT_START_STATE',
	    COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',
	    COMMENT_STATE = 'COMMENT_STATE',
	    COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',
	    COMMENT_END_STATE = 'COMMENT_END_STATE',
	    COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',
	    DOCTYPE_STATE = 'DOCTYPE_STATE',
	    DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',
	    AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',
	    BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',
	    DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',
	    DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',
	    BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',
	    BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',
	    DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',
	    DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',
	    AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',
	    BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',
	    CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';
	
	//Utils
	
	//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline
	//this functions if they will be situated in another module due to context switch.
	//Always perform inlining check before modifying this functions ('node --trace-inlining').
	function isWhitespace(cp) {
	    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;
	}
	
	function isAsciiDigit(cp) {
	    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;
	}
	
	function isAsciiUpper(cp) {
	    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;
	}
	
	function isAsciiLower(cp) {
	    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;
	}
	
	function isAsciiLetter(cp) {
	    return isAsciiLower(cp) || isAsciiUpper(cp);
	}
	
	function isAsciiAlphaNumeric(cp) {
	    return isAsciiLetter(cp) || isAsciiDigit(cp);
	}
	
	function isDigit(cp, isHex) {
	    return isAsciiDigit(cp) || isHex && (cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F ||
	                                         cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F);
	}
	
	function isReservedCodePoint(cp) {
	    return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;
	}
	
	function toAsciiLowerCodePoint(cp) {
	    return cp + 0x0020;
	}
	
	//NOTE: String.fromCharCode() function can handle only characters from BMP subset.
	//So, we need to workaround this manually.
	//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)
	function toChar(cp) {
	    if (cp <= 0xFFFF)
	        return String.fromCharCode(cp);
	
	    cp -= 0x10000;
	    return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);
	}
	
	function toAsciiLowerChar(cp) {
	    return String.fromCharCode(toAsciiLowerCodePoint(cp));
	}
	
	function findNamedEntityTreeBranch(nodeIx, cp) {
	    var branchCount = neTree[++nodeIx],
	        lo = ++nodeIx,
	        hi = lo + branchCount - 1;
	
	    while (lo <= hi) {
	        var mid = lo + hi >>> 1,
	            midCp = neTree[mid];
	
	        if (midCp < cp)
	            lo = mid + 1;
	
	        else if (midCp > cp)
	            hi = mid - 1;
	
	        else
	            return neTree[mid + branchCount];
	    }
	
	    return -1;
	}
	
	
	//Tokenizer
	var Tokenizer = module.exports = function () {
	    this.preprocessor = new Preprocessor();
	
	    this.tokenQueue = [];
	
	    this.allowCDATA = false;
	
	    this.state = DATA_STATE;
	    this.returnState = '';
	
	    this.tempBuff = [];
	    this.additionalAllowedCp = void 0;
	    this.lastStartTagName = '';
	
	    this.consumedAfterSnapshot = -1;
	    this.active = false;
	
	    this.currentCharacterToken = null;
	    this.currentToken = null;
	    this.currentAttr = null;
	};
	
	//Token types
	Tokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';
	Tokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';
	Tokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';
	Tokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';
	Tokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';
	Tokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';
	Tokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';
	Tokenizer.EOF_TOKEN = 'EOF_TOKEN';
	Tokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';
	
	//Tokenizer initial states for different modes
	Tokenizer.MODE = {
	    DATA: DATA_STATE,
	    RCDATA: RCDATA_STATE,
	    RAWTEXT: RAWTEXT_STATE,
	    SCRIPT_DATA: SCRIPT_DATA_STATE,
	    PLAINTEXT: PLAINTEXT_STATE
	};
	
	//Static
	Tokenizer.getTokenAttr = function (token, attrName) {
	    for (var i = token.attrs.length - 1; i >= 0; i--) {
	        if (token.attrs[i].name === attrName)
	            return token.attrs[i].value;
	    }
	
	    return null;
	};
	
	//API
	Tokenizer.prototype.getNextToken = function () {
	    while (!this.tokenQueue.length && this.active) {
	        this._hibernationSnapshot();
	
	        var cp = this._consume();
	
	        if (!this._ensureHibernation())
	            this[this.state](cp);
	    }
	
	    return this.tokenQueue.shift();
	};
	
	Tokenizer.prototype.write = function (chunk, isLastChunk) {
	    this.active = true;
	    this.preprocessor.write(chunk, isLastChunk);
	};
	
	Tokenizer.prototype.insertHtmlAtCurrentPos = function (chunk) {
	    this.active = true;
	    this.preprocessor.insertHtmlAtCurrentPos(chunk);
	};
	
	//Hibernation
	Tokenizer.prototype._hibernationSnapshot = function () {
	    this.consumedAfterSnapshot = 0;
	};
	
	Tokenizer.prototype._ensureHibernation = function () {
	    if (this.preprocessor.endOfChunkHit) {
	        for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--)
	            this.preprocessor.retreat();
	
	        this.active = false;
	        this.tokenQueue.push({type: Tokenizer.HIBERNATION_TOKEN});
	
	        return true;
	    }
	
	    return false;
	};
	
	
	//Consumption
	Tokenizer.prototype._consume = function () {
	    this.consumedAfterSnapshot++;
	    return this.preprocessor.advance();
	};
	
	Tokenizer.prototype._unconsume = function () {
	    this.consumedAfterSnapshot--;
	    this.preprocessor.retreat();
	};
	
	Tokenizer.prototype._unconsumeSeveral = function (count) {
	    while (count--)
	        this._unconsume();
	};
	
	Tokenizer.prototype._reconsumeInState = function (state) {
	    this.state = state;
	    this._unconsume();
	};
	
	Tokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {
	    var consumedCount = 0,
	        isMatch = true,
	        patternLength = pattern.length,
	        patternPos = 0,
	        cp = startCp,
	        patternCp = void 0;
	
	    for (; patternPos < patternLength; patternPos++) {
	        if (patternPos > 0) {
	            cp = this._consume();
	            consumedCount++;
	        }
	
	        if (cp === $.EOF) {
	            isMatch = false;
	            break;
	        }
	
	        patternCp = pattern[patternPos];
	
	        if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {
	            isMatch = false;
	            break;
	        }
	    }
	
	    if (!isMatch)
	        this._unconsumeSeveral(consumedCount);
	
	    return isMatch;
	};
	
	//Lookahead
	Tokenizer.prototype._lookahead = function () {
	    var cp = this._consume();
	
	    this._unconsume();
	
	    return cp;
	};
	
	//Temp buffer
	Tokenizer.prototype.isTempBufferEqualToScriptString = function () {
	    if (this.tempBuff.length !== $$.SCRIPT_STRING.length)
	        return false;
	
	    for (var i = 0; i < this.tempBuff.length; i++) {
	        if (this.tempBuff[i] !== $$.SCRIPT_STRING[i])
	            return false;
	    }
	
	    return true;
	};
	
	//Token creation
	Tokenizer.prototype._createStartTagToken = function () {
	    this.currentToken = {
	        type: Tokenizer.START_TAG_TOKEN,
	        tagName: '',
	        selfClosing: false,
	        attrs: []
	    };
	};
	
	Tokenizer.prototype._createEndTagToken = function () {
	    this.currentToken = {
	        type: Tokenizer.END_TAG_TOKEN,
	        tagName: '',
	        attrs: []
	    };
	};
	
	Tokenizer.prototype._createCommentToken = function () {
	    this.currentToken = {
	        type: Tokenizer.COMMENT_TOKEN,
	        data: ''
	    };
	};
	
	Tokenizer.prototype._createDoctypeToken = function (initialName) {
	    this.currentToken = {
	        type: Tokenizer.DOCTYPE_TOKEN,
	        name: initialName,
	        forceQuirks: false,
	        publicId: null,
	        systemId: null
	    };
	};
	
	Tokenizer.prototype._createCharacterToken = function (type, ch) {
	    this.currentCharacterToken = {
	        type: type,
	        chars: ch
	    };
	};
	
	//Tag attributes
	Tokenizer.prototype._createAttr = function (attrNameFirstCh) {
	    this.currentAttr = {
	        name: attrNameFirstCh,
	        value: ''
	    };
	};
	
	Tokenizer.prototype._isDuplicateAttr = function () {
	    return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;
	};
	
	Tokenizer.prototype._leaveAttrName = function (toState) {
	    this.state = toState;
	
	    if (!this._isDuplicateAttr())
	        this.currentToken.attrs.push(this.currentAttr);
	};
	
	Tokenizer.prototype._leaveAttrValue = function (toState) {
	    this.state = toState;
	};
	
	//Appropriate end tag token
	//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#appropriate-end-tag-token)
	Tokenizer.prototype._isAppropriateEndTagToken = function () {
	    return this.lastStartTagName === this.currentToken.tagName;
	};
	
	//Token emission
	Tokenizer.prototype._emitCurrentToken = function () {
	    this._emitCurrentCharacterToken();
	
	    //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.
	    if (this.currentToken.type === Tokenizer.START_TAG_TOKEN)
	        this.lastStartTagName = this.currentToken.tagName;
	
	    this.tokenQueue.push(this.currentToken);
	    this.currentToken = null;
	};
	
	Tokenizer.prototype._emitCurrentCharacterToken = function () {
	    if (this.currentCharacterToken) {
	        this.tokenQueue.push(this.currentCharacterToken);
	        this.currentCharacterToken = null;
	    }
	};
	
	Tokenizer.prototype._emitEOFToken = function () {
	    this._emitCurrentCharacterToken();
	    this.tokenQueue.push({type: Tokenizer.EOF_TOKEN});
	};
	
	//Characters emission
	
	//OPTIMIZATION: specification uses only one type of character tokens (one token per character).
	//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
	//If we have a sequence of characters that belong to the same group, parser can process it
	//as a single solid character token.
	//So, there are 3 types of character tokens in parse5:
	//1)NULL_CHARACTER_TOKEN - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
	//2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
	//3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
	Tokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {
	    if (this.currentCharacterToken && this.currentCharacterToken.type !== type)
	        this._emitCurrentCharacterToken();
	
	    if (this.currentCharacterToken)
	        this.currentCharacterToken.chars += ch;
	
	    else
	        this._createCharacterToken(type, ch);
	};
	
	Tokenizer.prototype._emitCodePoint = function (cp) {
	    var type = Tokenizer.CHARACTER_TOKEN;
	
	    if (isWhitespace(cp))
	        type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;
	
	    else if (cp === $.NULL)
	        type = Tokenizer.NULL_CHARACTER_TOKEN;
	
	    this._appendCharToCurrentCharacterToken(type, toChar(cp));
	};
	
	Tokenizer.prototype._emitSeveralCodePoints = function (codePoints) {
	    for (var i = 0; i < codePoints.length; i++)
	        this._emitCodePoint(codePoints[i]);
	};
	
	//NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.
	//So we can avoid additional checks here.
	Tokenizer.prototype._emitChar = function (ch) {
	    this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);
	};
	
	//Character reference tokenization
	Tokenizer.prototype._consumeNumericEntity = function (isHex) {
	    var digits = '',
	        nextCp = void 0;
	
	    do {
	        digits += toChar(this._consume());
	        nextCp = this._lookahead();
	    } while (nextCp !== $.EOF && isDigit(nextCp, isHex));
	
	    if (this._lookahead() === $.SEMICOLON)
	        this._consume();
	
	    var referencedCp = parseInt(digits, isHex ? 16 : 10),
	        replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];
	
	    if (replacement)
	        return replacement;
	
	    if (isReservedCodePoint(referencedCp))
	        return $.REPLACEMENT_CHARACTER;
	
	    return referencedCp;
	};
	
	// NOTE: for the details on this algorithm see
	// https://github.com/inikulin/parse5/tree/master/scripts/generate_named_entity_data/README.md
	Tokenizer.prototype._consumeNamedEntity = function (inAttr) {
	    var referencedCodePoints = null,
	        referenceSize = 0,
	        cp = null,
	        consumedCount = 0,
	        semicolonTerminated = false;
	
	    for (var i = 0; i > -1;) {
	        var current = neTree[i],
	            inNode = current < MAX_BRANCH_MARKER_VALUE,
	            nodeWithData = inNode && current & HAS_DATA_FLAG;
	
	        if (nodeWithData) {
	            referencedCodePoints = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];
	            referenceSize = consumedCount;
	
	            if (cp === $.SEMICOLON) {
	                semicolonTerminated = true;
	                break;
	            }
	        }
	
	        cp = this._consume();
	        consumedCount++;
	
	        if (cp === $.EOF)
	            break;
	
	        if (inNode)
	            i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;
	
	        else
	            i = cp === current ? ++i : -1;
	    }
	
	
	    if (referencedCodePoints) {
	        if (!semicolonTerminated) {
	            //NOTE: unconsume excess (e.g. 'it' in '&notit')
	            this._unconsumeSeveral(consumedCount - referenceSize);
	
	            //NOTE: If the character reference is being consumed as part of an attribute and the next character
	            //is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical
	            //reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be
	            //unconsumed, and nothing is returned.
	            //However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a
	            //parse error, because some legacy user agents will misinterpret the markup in those cases.
	            //(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references)
	            if (inAttr) {
	                var nextCp = this._lookahead();
	
	                if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {
	                    this._unconsumeSeveral(referenceSize);
	                    return null;
	                }
	            }
	        }
	
	        return referencedCodePoints;
	    }
	
	    this._unconsumeSeveral(consumedCount);
	
	    return null;
	};
	
	Tokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {
	    if (isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN ||
	        startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {
	        //NOTE: not a character reference. No characters are consumed, and nothing is returned.
	        this._unconsume();
	        return null;
	    }
	
	    if (startCp === $.NUMBER_SIGN) {
	        //NOTE: we have a numeric entity candidate, now we should determine if it's hex or decimal
	        var isHex = false,
	            nextCp = this._lookahead();
	
	        if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {
	            this._consume();
	            isHex = true;
	        }
	
	        nextCp = this._lookahead();
	
	        //NOTE: if we have at least one digit this is a numeric entity for sure, so we consume it
	        if (nextCp !== $.EOF && isDigit(nextCp, isHex))
	            return [this._consumeNumericEntity(isHex)];
	
	        //NOTE: otherwise this is a bogus number entity and a parse error. Unconsume the number sign
	        //and the 'x'-character if appropriate.
	        this._unconsumeSeveral(isHex ? 2 : 1);
	        return null;
	    }
	
	    this._unconsume();
	
	    return this._consumeNamedEntity(inAttr);
	};
	
	//State machine
	var _ = Tokenizer.prototype;
	
	//12.2.4.1 Data state
	//------------------------------------------------------------------
	_[DATA_STATE] = function dataState(cp) {
	    this.preprocessor.dropParsedChunk();
	
	    if (cp === $.AMPERSAND)
	        this.state = CHARACTER_REFERENCE_IN_DATA_STATE;
	
	    else if (cp === $.LESS_THAN_SIGN)
	        this.state = TAG_OPEN_STATE;
	
	    else if (cp === $.NULL)
	        this._emitCodePoint(cp);
	
	    else if (cp === $.EOF)
	        this._emitEOFToken();
	
	    else
	        this._emitCodePoint(cp);
	};
	
	
	//12.2.4.2 Character reference in data state
	//------------------------------------------------------------------
	_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {
	    this.additionalAllowedCp = void 0;
	
	    var referencedCodePoints = this._consumeCharacterReference(cp, false);
	
	    if (!this._ensureHibernation()) {
	        if (referencedCodePoints)
	            this._emitSeveralCodePoints(referencedCodePoints);
	
	        else
	            this._emitChar('&');
	
	        this.state = DATA_STATE;
	    }
	};
	
	
	//12.2.4.3 RCDATA state
	//------------------------------------------------------------------
	_[RCDATA_STATE] = function rcdataState(cp) {
	    this.preprocessor.dropParsedChunk();
	
	    if (cp === $.AMPERSAND)
	        this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;
	
	    else if (cp === $.LESS_THAN_SIGN)
	        this.state = RCDATA_LESS_THAN_SIGN_STATE;
	
	    else if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	
	    else if (cp === $.EOF)
	        this._emitEOFToken();
	
	    else
	        this._emitCodePoint(cp);
	};
	
	
	//12.2.4.4 Character reference in RCDATA state
	//------------------------------------------------------------------
	_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {
	    this.additionalAllowedCp = void 0;
	
	    var referencedCodePoints = this._consumeCharacterReference(cp, false);
	
	    if (!this._ensureHibernation()) {
	        if (referencedCodePoints)
	            this._emitSeveralCodePoints(referencedCodePoints);
	
	        else
	            this._emitChar('&');
	
	        this.state = RCDATA_STATE;
	    }
	};
	
	
	//12.2.4.5 RAWTEXT state
	//------------------------------------------------------------------
	_[RAWTEXT_STATE] = function rawtextState(cp) {
	    this.preprocessor.dropParsedChunk();
	
	    if (cp === $.LESS_THAN_SIGN)
	        this.state = RAWTEXT_LESS_THAN_SIGN_STATE;
	
	    else if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	
	    else if (cp === $.EOF)
	        this._emitEOFToken();
	
	    else
	        this._emitCodePoint(cp);
	};
	
	
	//12.2.4.6 Script data state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {
	    this.preprocessor.dropParsedChunk();
	
	    if (cp === $.LESS_THAN_SIGN)
	        this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;
	
	    else if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	
	    else if (cp === $.EOF)
	        this._emitEOFToken();
	
	    else
	        this._emitCodePoint(cp);
	};
	
	
	//12.2.4.7 PLAINTEXT state
	//------------------------------------------------------------------
	_[PLAINTEXT_STATE] = function plaintextState(cp) {
	    this.preprocessor.dropParsedChunk();
	
	    if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	
	    else if (cp === $.EOF)
	        this._emitEOFToken();
	
	    else
	        this._emitCodePoint(cp);
	};
	
	
	//12.2.4.8 Tag open state
	//------------------------------------------------------------------
	_[TAG_OPEN_STATE] = function tagOpenState(cp) {
	    if (cp === $.EXCLAMATION_MARK)
	        this.state = MARKUP_DECLARATION_OPEN_STATE;
	
	    else if (cp === $.SOLIDUS)
	        this.state = END_TAG_OPEN_STATE;
	
	    else if (isAsciiLetter(cp)) {
	        this._createStartTagToken();
	        this._reconsumeInState(TAG_NAME_STATE);
	    }
	
	    else if (cp === $.QUESTION_MARK)
	        this._reconsumeInState(BOGUS_COMMENT_STATE);
	
	    else {
	        this._emitChar('<');
	        this._reconsumeInState(DATA_STATE);
	    }
	};
	
	
	//12.2.4.9 End tag open state
	//------------------------------------------------------------------
	_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {
	    if (isAsciiLetter(cp)) {
	        this._createEndTagToken();
	        this._reconsumeInState(TAG_NAME_STATE);
	    }
	
	    else if (cp === $.GREATER_THAN_SIGN)
	        this.state = DATA_STATE;
	
	    else if (cp === $.EOF) {
	        this._reconsumeInState(DATA_STATE);
	        this._emitChar('<');
	        this._emitChar('/');
	    }
	
	    else
	        this._reconsumeInState(BOGUS_COMMENT_STATE);
	};
	
	
	//12.2.4.10 Tag name state
	//------------------------------------------------------------------
	_[TAG_NAME_STATE] = function tagNameState(cp) {
	    if (isWhitespace(cp))
	        this.state = BEFORE_ATTRIBUTE_NAME_STATE;
	
	    else if (cp === $.SOLIDUS)
	        this.state = SELF_CLOSING_START_TAG_STATE;
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }
	
	    else if (isAsciiUpper(cp))
	        this.currentToken.tagName += toAsciiLowerChar(cp);
	
	    else if (cp === $.NULL)
	        this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else
	        this.currentToken.tagName += toChar(cp);
	};
	
	
	//12.2.4.11 RCDATA less-than sign state
	//------------------------------------------------------------------
	_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {
	    if (cp === $.SOLIDUS) {
	        this.tempBuff = [];
	        this.state = RCDATA_END_TAG_OPEN_STATE;
	    }
	
	    else {
	        this._emitChar('<');
	        this._reconsumeInState(RCDATA_STATE);
	    }
	};
	
	
	//12.2.4.12 RCDATA end tag open state
	//------------------------------------------------------------------
	_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {
	    if (isAsciiLetter(cp)) {
	        this._createEndTagToken();
	        this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);
	    }
	
	    else {
	        this._emitChar('<');
	        this._emitChar('/');
	        this._reconsumeInState(RCDATA_STATE);
	    }
	};
	
	
	//12.2.4.13 RCDATA end tag name state
	//------------------------------------------------------------------
	_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {
	    if (isAsciiUpper(cp)) {
	        this.currentToken.tagName += toAsciiLowerChar(cp);
	        this.tempBuff.push(cp);
	    }
	
	    else if (isAsciiLower(cp)) {
	        this.currentToken.tagName += toChar(cp);
	        this.tempBuff.push(cp);
	    }
	
	    else {
	        if (this._isAppropriateEndTagToken()) {
	            if (isWhitespace(cp)) {
	                this.state = BEFORE_ATTRIBUTE_NAME_STATE;
	                return;
	            }
	
	            if (cp === $.SOLIDUS) {
	                this.state = SELF_CLOSING_START_TAG_STATE;
	                return;
	            }
	
	            if (cp === $.GREATER_THAN_SIGN) {
	                this.state = DATA_STATE;
	                this._emitCurrentToken();
	                return;
	            }
	        }
	
	        this._emitChar('<');
	        this._emitChar('/');
	        this._emitSeveralCodePoints(this.tempBuff);
	        this._reconsumeInState(RCDATA_STATE);
	    }
	};
	
	
	//12.2.4.14 RAWTEXT less-than sign state
	//------------------------------------------------------------------
	_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {
	    if (cp === $.SOLIDUS) {
	        this.tempBuff = [];
	        this.state = RAWTEXT_END_TAG_OPEN_STATE;
	    }
	
	    else {
	        this._emitChar('<');
	        this._reconsumeInState(RAWTEXT_STATE);
	    }
	};
	
	
	//12.2.4.15 RAWTEXT end tag open state
	//------------------------------------------------------------------
	_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {
	    if (isAsciiLetter(cp)) {
	        this._createEndTagToken();
	        this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);
	    }
	
	    else {
	        this._emitChar('<');
	        this._emitChar('/');
	        this._reconsumeInState(RAWTEXT_STATE);
	    }
	};
	
	
	//12.2.4.16 RAWTEXT end tag name state
	//------------------------------------------------------------------
	_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {
	    if (isAsciiUpper(cp)) {
	        this.currentToken.tagName += toAsciiLowerChar(cp);
	        this.tempBuff.push(cp);
	    }
	
	    else if (isAsciiLower(cp)) {
	        this.currentToken.tagName += toChar(cp);
	        this.tempBuff.push(cp);
	    }
	
	    else {
	        if (this._isAppropriateEndTagToken()) {
	            if (isWhitespace(cp)) {
	                this.state = BEFORE_ATTRIBUTE_NAME_STATE;
	                return;
	            }
	
	            if (cp === $.SOLIDUS) {
	                this.state = SELF_CLOSING_START_TAG_STATE;
	                return;
	            }
	
	            if (cp === $.GREATER_THAN_SIGN) {
	                this._emitCurrentToken();
	                this.state = DATA_STATE;
	                return;
	            }
	        }
	
	        this._emitChar('<');
	        this._emitChar('/');
	        this._emitSeveralCodePoints(this.tempBuff);
	        this._reconsumeInState(RAWTEXT_STATE);
	    }
	};
	
	
	//12.2.4.17 Script data less-than sign state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {
	    if (cp === $.SOLIDUS) {
	        this.tempBuff = [];
	        this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;
	    }
	
	    else if (cp === $.EXCLAMATION_MARK) {
	        this.state = SCRIPT_DATA_ESCAPE_START_STATE;
	        this._emitChar('<');
	        this._emitChar('!');
	    }
	
	    else {
	        this._emitChar('<');
	        this._reconsumeInState(SCRIPT_DATA_STATE);
	    }
	};
	
	
	//12.2.4.18 Script data end tag open state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {
	    if (isAsciiLetter(cp)) {
	        this._createEndTagToken();
	        this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);
	    }
	
	    else {
	        this._emitChar('<');
	        this._emitChar('/');
	        this._reconsumeInState(SCRIPT_DATA_STATE);
	    }
	};
	
	
	//12.2.4.19 Script data end tag name state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {
	    if (isAsciiUpper(cp)) {
	        this.currentToken.tagName += toAsciiLowerChar(cp);
	        this.tempBuff.push(cp);
	    }
	
	    else if (isAsciiLower(cp)) {
	        this.currentToken.tagName += toChar(cp);
	        this.tempBuff.push(cp);
	    }
	
	    else {
	        if (this._isAppropriateEndTagToken()) {
	            if (isWhitespace(cp)) {
	                this.state = BEFORE_ATTRIBUTE_NAME_STATE;
	                return;
	            }
	
	            else if (cp === $.SOLIDUS) {
	                this.state = SELF_CLOSING_START_TAG_STATE;
	                return;
	            }
	
	            else if (cp === $.GREATER_THAN_SIGN) {
	                this._emitCurrentToken();
	                this.state = DATA_STATE;
	                return;
	            }
	        }
	
	        this._emitChar('<');
	        this._emitChar('/');
	        this._emitSeveralCodePoints(this.tempBuff);
	        this._reconsumeInState(SCRIPT_DATA_STATE);
	    }
	};
	
	
	//12.2.4.20 Script data escape start state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;
	        this._emitChar('-');
	    }
	
	    else
	        this._reconsumeInState(SCRIPT_DATA_STATE);
	};
	
	
	//12.2.4.21 Script data escape start dash state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;
	        this._emitChar('-');
	    }
	
	    else
	        this._reconsumeInState(SCRIPT_DATA_STATE);
	};
	
	
	//12.2.4.22 Script data escaped state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;
	        this._emitChar('-');
	    }
	
	    else if (cp === $.LESS_THAN_SIGN)
	        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
	
	    else if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else
	        this._emitCodePoint(cp);
	};
	
	
	//12.2.4.23 Script data escaped dash state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;
	        this._emitChar('-');
	    }
	
	    else if (cp === $.LESS_THAN_SIGN)
	        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
	
	    else if (cp === $.NULL) {
	        this.state = SCRIPT_DATA_ESCAPED_STATE;
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	    }
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else {
	        this.state = SCRIPT_DATA_ESCAPED_STATE;
	        this._emitCodePoint(cp);
	    }
	};
	
	
	//12.2.4.24 Script data escaped dash dash state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this._emitChar('-');
	
	    else if (cp === $.LESS_THAN_SIGN)
	        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = SCRIPT_DATA_STATE;
	        this._emitChar('>');
	    }
	
	    else if (cp === $.NULL) {
	        this.state = SCRIPT_DATA_ESCAPED_STATE;
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	    }
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else {
	        this.state = SCRIPT_DATA_ESCAPED_STATE;
	        this._emitCodePoint(cp);
	    }
	};
	
	
	//12.2.4.25 Script data escaped less-than sign state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {
	    if (cp === $.SOLIDUS) {
	        this.tempBuff = [];
	        this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;
	    }
	
	    else if (isAsciiLetter(cp)) {
	        this.tempBuff = [];
	        this._emitChar('<');
	        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);
	    }
	
	    else {
	        this._emitChar('<');
	        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
	    }
	};
	
	
	//12.2.4.26 Script data escaped end tag open state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {
	    if (isAsciiLetter(cp)) {
	        this._createEndTagToken();
	        this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);
	    }
	
	    else {
	        this._emitChar('<');
	        this._emitChar('/');
	        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
	    }
	};
	
	
	//12.2.4.27 Script data escaped end tag name state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {
	    if (isAsciiUpper(cp)) {
	        this.currentToken.tagName += toAsciiLowerChar(cp);
	        this.tempBuff.push(cp);
	    }
	
	    else if (isAsciiLower(cp)) {
	        this.currentToken.tagName += toChar(cp);
	        this.tempBuff.push(cp);
	    }
	
	    else {
	        if (this._isAppropriateEndTagToken()) {
	            if (isWhitespace(cp)) {
	                this.state = BEFORE_ATTRIBUTE_NAME_STATE;
	                return;
	            }
	
	            if (cp === $.SOLIDUS) {
	                this.state = SELF_CLOSING_START_TAG_STATE;
	                return;
	            }
	
	            if (cp === $.GREATER_THAN_SIGN) {
	                this._emitCurrentToken();
	                this.state = DATA_STATE;
	                return;
	            }
	        }
	
	        this._emitChar('<');
	        this._emitChar('/');
	        this._emitSeveralCodePoints(this.tempBuff);
	        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
	    }
	};
	
	
	//12.2.4.28 Script data double escape start state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {
	    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {
	        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;
	        this._emitCodePoint(cp);
	    }
	
	    else if (isAsciiUpper(cp)) {
	        this.tempBuff.push(toAsciiLowerCodePoint(cp));
	        this._emitCodePoint(cp);
	    }
	
	    else if (isAsciiLower(cp)) {
	        this.tempBuff.push(cp);
	        this._emitCodePoint(cp);
	    }
	
	    else
	        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
	};
	
	
	//12.2.4.29 Script data double escaped state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;
	        this._emitChar('-');
	    }
	
	    else if (cp === $.LESS_THAN_SIGN) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
	        this._emitChar('<');
	    }
	
	    else if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else
	        this._emitCodePoint(cp);
	};
	
	
	//12.2.4.30 Script data double escaped dash state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;
	        this._emitChar('-');
	    }
	
	    else if (cp === $.LESS_THAN_SIGN) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
	        this._emitChar('<');
	    }
	
	    else if (cp === $.NULL) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	    }
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
	        this._emitCodePoint(cp);
	    }
	};
	
	
	//12.2.4.31 Script data double escaped dash dash state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this._emitChar('-');
	
	    else if (cp === $.LESS_THAN_SIGN) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
	        this._emitChar('<');
	    }
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = SCRIPT_DATA_STATE;
	        this._emitChar('>');
	    }
	
	    else if (cp === $.NULL) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	    }
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
	        this._emitCodePoint(cp);
	    }
	};
	
	
	//12.2.4.32 Script data double escaped less-than sign state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {
	    if (cp === $.SOLIDUS) {
	        this.tempBuff = [];
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;
	        this._emitChar('/');
	    }
	
	    else
	        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
	};
	
	
	//12.2.4.33 Script data double escape end state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {
	    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {
	        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
	
	        this._emitCodePoint(cp);
	    }
	
	    else if (isAsciiUpper(cp)) {
	        this.tempBuff.push(toAsciiLowerCodePoint(cp));
	        this._emitCodePoint(cp);
	    }
	
	    else if (isAsciiLower(cp)) {
	        this.tempBuff.push(cp);
	        this._emitCodePoint(cp);
	    }
	
	    else
	        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
	};
	
	
	//12.2.4.34 Before attribute name state
	//------------------------------------------------------------------
	_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {
	    if (isWhitespace(cp))
	        return;
	
	    if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF)
	        this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);
	
	    else if (cp === $.EQUALS_SIGN) {
	        this._createAttr('=');
	        this.state = ATTRIBUTE_NAME_STATE;
	    }
	
	    else {
	        this._createAttr('');
	        this._reconsumeInState(ATTRIBUTE_NAME_STATE);
	    }
	};
	
	
	//12.2.4.35 Attribute name state
	//------------------------------------------------------------------
	_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {
	    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {
	        this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);
	        this._unconsume();
	    }
	
	    else if (cp === $.EQUALS_SIGN)
	        this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);
	
	    else if (isAsciiUpper(cp))
	        this.currentAttr.name += toAsciiLowerChar(cp);
	
	    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN)
	        this.currentAttr.name += toChar(cp);
	
	    else if (cp === $.NULL)
	        this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;
	
	    else
	        this.currentAttr.name += toChar(cp);
	};
	
	
	//12.2.4.36 After attribute name state
	//------------------------------------------------------------------
	_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {
	    if (isWhitespace(cp))
	        return;
	
	    if (cp === $.SOLIDUS)
	        this.state = SELF_CLOSING_START_TAG_STATE;
	
	    else if (cp === $.EQUALS_SIGN)
	        this.state = BEFORE_ATTRIBUTE_VALUE_STATE;
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else {
	        this._createAttr('');
	        this._reconsumeInState(ATTRIBUTE_NAME_STATE);
	    }
	};
	
	
	//12.2.4.37 Before attribute value state
	//------------------------------------------------------------------
	_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {
	    if (isWhitespace(cp))
	        return;
	
	    if (cp === $.QUOTATION_MARK)
	        this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;
	
	    else if (cp === $.APOSTROPHE)
	        this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;
	
	    else
	        this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);
	};
	
	
	//12.2.4.38 Attribute value (double-quoted) state
	//------------------------------------------------------------------
	_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {
	    if (cp === $.QUOTATION_MARK)
	        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;
	
	    else if (cp === $.AMPERSAND) {
	        this.additionalAllowedCp = $.QUOTATION_MARK;
	        this.returnState = this.state;
	        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;
	    }
	
	    else if (cp === $.NULL)
	        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else
	        this.currentAttr.value += toChar(cp);
	};
	
	
	//12.2.4.39 Attribute value (single-quoted) state
	//------------------------------------------------------------------
	_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {
	    if (cp === $.APOSTROPHE)
	        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;
	
	    else if (cp === $.AMPERSAND) {
	        this.additionalAllowedCp = $.APOSTROPHE;
	        this.returnState = this.state;
	        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;
	    }
	
	    else if (cp === $.NULL)
	        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else
	        this.currentAttr.value += toChar(cp);
	};
	
	
	//12.2.4.40 Attribute value (unquoted) state
	//------------------------------------------------------------------
	_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {
	    if (isWhitespace(cp))
	        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);
	
	    else if (cp === $.AMPERSAND) {
	        this.additionalAllowedCp = $.GREATER_THAN_SIGN;
	        this.returnState = this.state;
	        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;
	    }
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this._leaveAttrValue(DATA_STATE);
	        this._emitCurrentToken();
	    }
	
	    else if (cp === $.NULL)
	        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;
	
	    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN ||
	             cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT)
	        this.currentAttr.value += toChar(cp);
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else
	        this.currentAttr.value += toChar(cp);
	};
	
	
	//12.2.4.41 Character reference in attribute value state
	//------------------------------------------------------------------
	_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {
	    var referencedCodePoints = this._consumeCharacterReference(cp, true);
	
	    if (!this._ensureHibernation()) {
	        if (referencedCodePoints) {
	            for (var i = 0; i < referencedCodePoints.length; i++)
	                this.currentAttr.value += toChar(referencedCodePoints[i]);
	        }
	        else
	            this.currentAttr.value += '&';
	
	        this.state = this.returnState;
	    }
	};
	
	
	//12.2.4.42 After attribute value (quoted) state
	//------------------------------------------------------------------
	_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {
	    if (isWhitespace(cp))
	        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);
	
	    else if (cp === $.SOLIDUS)
	        this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this._leaveAttrValue(DATA_STATE);
	        this._emitCurrentToken();
	    }
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else
	        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
	};
	
	
	//12.2.4.43 Self-closing start tag state
	//------------------------------------------------------------------
	_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {
	    if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.selfClosing = true;
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }
	
	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);
	
	    else
	        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
	};
	
	
	//12.2.4.44 Bogus comment state
	//------------------------------------------------------------------
	_[BOGUS_COMMENT_STATE] = function bogusCommentState() {
	    this._createCommentToken();
	    this._reconsumeInState(BOGUS_COMMENT_STATE_CONTINUATION);
	};
	
	//HACK: to support streaming and make BOGUS_COMMENT_STATE reentrant we've
	//introduced BOGUS_COMMENT_STATE_CONTINUATION state which will not produce
	//comment token on each call.
	_[BOGUS_COMMENT_STATE_CONTINUATION] = function bogusCommentStateContinuation(cp) {
	    while (true) {
	        if (cp === $.GREATER_THAN_SIGN) {
	            this.state = DATA_STATE;
	            break;
	        }
	
	        else if (cp === $.EOF) {
	            this._reconsumeInState(DATA_STATE);
	            break;
	        }
	
	        else {
	            this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);
	
	            this._hibernationSnapshot();
	            cp = this._consume();
	
	            if (this._ensureHibernation())
	                return;
	        }
	    }
	
	    this._emitCurrentToken();
	};
	
	//12.2.4.45 Markup declaration open state
	//------------------------------------------------------------------
	_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {
	    var dashDashMatch = this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true),
	        doctypeMatch = !dashDashMatch && this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false),
	        cdataMatch = !dashDashMatch && !doctypeMatch &&
	                     this.allowCDATA &&
	                     this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true);
	
	    if (!this._ensureHibernation()) {
	        if (dashDashMatch) {
	            this._createCommentToken();
	            this.state = COMMENT_START_STATE;
	        }
	
	        else if (doctypeMatch)
	            this.state = DOCTYPE_STATE;
	
	        else if (cdataMatch)
	            this.state = CDATA_SECTION_STATE;
	
	        else
	            this._reconsumeInState(BOGUS_COMMENT_STATE);
	    }
	};
	
	
	//12.2.4.46 Comment start state
	//------------------------------------------------------------------
	_[COMMENT_START_STATE] = function commentStartState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this.state = COMMENT_START_DASH_STATE;
	
	    else if (cp === $.NULL) {
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = COMMENT_STATE;
	    }
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }
	
	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	
	    else {
	        this.currentToken.data += toChar(cp);
	        this.state = COMMENT_STATE;
	    }
	};
	
	
	//12.2.4.47 Comment start dash state
	//------------------------------------------------------------------
	_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this.state = COMMENT_END_STATE;
	
	    else if (cp === $.NULL) {
	        this.currentToken.data += '-';
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = COMMENT_STATE;
	    }
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }
	
	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	
	    else {
	        this.currentToken.data += '-';
	        this.currentToken.data += toChar(cp);
	        this.state = COMMENT_STATE;
	    }
	};
	
	
	//12.2.4.48 Comment state
	//------------------------------------------------------------------
	_[COMMENT_STATE] = function commentState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this.state = COMMENT_END_DASH_STATE;
	
	    else if (cp === $.NULL)
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	
	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	
	    else
	        this.currentToken.data += toChar(cp);
	};
	
	
	//12.2.4.49 Comment end dash state
	//------------------------------------------------------------------
	_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this.state = COMMENT_END_STATE;
	
	    else if (cp === $.NULL) {
	        this.currentToken.data += '-';
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = COMMENT_STATE;
	    }
	
	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	
	    else {
	        this.currentToken.data += '-';
	        this.currentToken.data += toChar(cp);
	        this.state = COMMENT_STATE;
	    }
	};
	
	
	//12.2.4.50 Comment end state
	//------------------------------------------------------------------
	_[COMMENT_END_STATE] = function commentEndState(cp) {
	    if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }
	
	    else if (cp === $.EXCLAMATION_MARK)
	        this.state = COMMENT_END_BANG_STATE;
	
	    else if (cp === $.HYPHEN_MINUS)
	        this.currentToken.data += '-';
	
	    else if (cp === $.NULL) {
	        this.currentToken.data += '--';
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = COMMENT_STATE;
	    }
	
	    else if (cp === $.EOF) {
	        this._reconsumeInState(DATA_STATE);
	        this._emitCurrentToken();
	    }
	
	    else {
	        this.currentToken.data += '--';
	        this.currentToken.data += toChar(cp);
	        this.state = COMMENT_STATE;
	    }
	};
	
	
	//12.2.4.51 Comment end bang state
	//------------------------------------------------------------------
	_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.currentToken.data += '--!';
	        this.state = COMMENT_END_DASH_STATE;
	    }
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }
	
	    else if (cp === $.NULL) {
	        this.currentToken.data += '--!';
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = COMMENT_STATE;
	    }
	
	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	
	    else {
	        this.currentToken.data += '--!';
	        this.currentToken.data += toChar(cp);
	        this.state = COMMENT_STATE;
	    }
	};
	
	
	//12.2.4.52 DOCTYPE state
	//------------------------------------------------------------------
	_[DOCTYPE_STATE] = function doctypeState(cp) {
	    if (isWhitespace(cp))
	        return;
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this._createDoctypeToken(null);
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }
	
	    else if (cp === $.EOF) {
	        this._createDoctypeToken(null);
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	    else {
	        this._createDoctypeToken('');
	        this._reconsumeInState(DOCTYPE_NAME_STATE);
	    }
	};
	
	
	//12.2.4.54 DOCTYPE name state
	//------------------------------------------------------------------
	_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {
	    if (isWhitespace(cp) || cp === $.GREATER_THAN_SIGN || cp === $.EOF)
	        this._reconsumeInState(AFTER_DOCTYPE_NAME_STATE);
	
	    else if (isAsciiUpper(cp))
	        this.currentToken.name += toAsciiLowerChar(cp);
	
	    else if (cp === $.NULL)
	        this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;
	
	    else
	        this.currentToken.name += toChar(cp);
	};
	
	
	//12.2.4.55 After DOCTYPE name state
	//------------------------------------------------------------------
	_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {
	    if (isWhitespace(cp))
	        return;
	
	    if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }
	
	    else {
	        var publicMatch = this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false),
	            systemMatch = !publicMatch && this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false);
	
	        if (!this._ensureHibernation()) {
	            if (publicMatch)
	                this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
	
	            else if (systemMatch)
	                this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
	
	            else {
	                this.currentToken.forceQuirks = true;
	                this.state = BOGUS_DOCTYPE_STATE;
	            }
	        }
	    }
	};
	
	
	//12.2.4.57 Before DOCTYPE public identifier state
	//------------------------------------------------------------------
	_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {
	    if (isWhitespace(cp))
	        return;
	
	    if (cp === $.QUOTATION_MARK) {
	        this.currentToken.publicId = '';
	        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
	    }
	
	    else if (cp === $.APOSTROPHE) {
	        this.currentToken.publicId = '';
	        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
	    }
	
	    else {
	        this.currentToken.forceQuirks = true;
	        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
	    }
	};
	
	
	//12.2.4.58 DOCTYPE public identifier (double-quoted) state
	//------------------------------------------------------------------
	_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {
	    if (cp === $.QUOTATION_MARK)
	        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;
	
	    else if (cp === $.NULL)
	        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }
	
	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	
	    else
	        this.currentToken.publicId += toChar(cp);
	};
	
	
	//12.2.4.59 DOCTYPE public identifier (single-quoted) state
	//------------------------------------------------------------------
	_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {
	    if (cp === $.APOSTROPHE)
	        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;
	
	    else if (cp === $.NULL)
	        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }
	
	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	
	    else
	        this.currentToken.publicId += toChar(cp);
	};
	
	
	//12.2.4.61 Between DOCTYPE public and system identifiers state
	//------------------------------------------------------------------
	_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {
	    if (isWhitespace(cp))
	        return;
	
	    if (cp === $.GREATER_THAN_SIGN) {
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }
	
	    else if (cp === $.QUOTATION_MARK) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
	    }
	
	
	    else if (cp === $.APOSTROPHE) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
	    }
	
	    else {
	        this.currentToken.forceQuirks = true;
	        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
	    }
	};
	
	
	//12.2.4.63 Before DOCTYPE system identifier state
	//------------------------------------------------------------------
	_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {
	    if (isWhitespace(cp))
	        return;
	
	    if (cp === $.QUOTATION_MARK) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
	    }
	
	    else if (cp === $.APOSTROPHE) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
	    }
	
	    else {
	        this.currentToken.forceQuirks = true;
	        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
	    }
	};
	
	
	//12.2.4.64 DOCTYPE system identifier (double-quoted) state
	//------------------------------------------------------------------
	_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {
	    if (cp === $.QUOTATION_MARK)
	        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }
	
	    else if (cp === $.NULL)
	        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;
	
	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	
	    else
	        this.currentToken.systemId += toChar(cp);
	};
	
	
	//12.2.4.65 DOCTYPE system identifier (single-quoted) state
	//------------------------------------------------------------------
	_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {
	    if (cp === $.APOSTROPHE)
	        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
	
	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }
	
	    else if (cp === $.NULL)
	        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;
	
	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	
	    else
	        this.currentToken.systemId += toChar(cp);
	};
	
	
	//12.2.4.66 After DOCTYPE system identifier state
	//------------------------------------------------------------------
	_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {
	    if (isWhitespace(cp))
	        return;
	
	    if (cp === $.GREATER_THAN_SIGN) {
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }
	
	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	
	    else
	        this.state = BOGUS_DOCTYPE_STATE;
	};
	
	
	//12.2.4.67 Bogus DOCTYPE state
	//------------------------------------------------------------------
	_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {
	    if (cp === $.GREATER_THAN_SIGN) {
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }
	
	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	};
	
	
	//12.2.4.68 CDATA section state
	//------------------------------------------------------------------
	_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {
	    while (true) {
	        if (cp === $.EOF) {
	            this._reconsumeInState(DATA_STATE);
	            break;
	        }
	
	        else {
	            var cdataEndMatch = this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true);
	
	            if (this._ensureHibernation())
	                break;
	
	            if (cdataEndMatch) {
	                this.state = DATA_STATE;
	                break;
	            }
	
	            this._emitCodePoint(cp);
	
	            this._hibernationSnapshot();
	            cp = this._consume();
	
	            if (this._ensureHibernation())
	                break;
	        }
	    }
	};


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.forceCheck = exports.lazyload = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(29);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _event = __webpack_require__(1662);
	
	var _scrollParent = __webpack_require__(1663);
	
	var _scrollParent2 = _interopRequireDefault(_scrollParent);
	
	var _debounce = __webpack_require__(1661);
	
	var _debounce2 = _interopRequireDefault(_debounce);
	
	var _throttle = __webpack_require__(1664);
	
	var _throttle2 = _interopRequireDefault(_throttle);
	
	var _decorator = __webpack_require__(1660);
	
	var _decorator2 = _interopRequireDefault(_decorator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * react-lazyload
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */
	
	
	var defaultBoundingClientRect = { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 };
	var LISTEN_FLAG = 'data-lazyload-listened';
	var listeners = [];
	var pending = [];
	
	// try to handle passive events
	var passiveEventSupported = false;
	try {
	  var opts = Object.defineProperty({}, 'passive', {
	    get: function get() {
	      passiveEventSupported = true;
	    }
	  });
	  window.addEventListener('test', null, opts);
	} catch (e) {}
	// if they are supported, setup the optional params
	// IMPORTANT: FALSE doubles as the default CAPTURE value!
	var passiveEvent = passiveEventSupported ? { capture: false, passive: true } : false;
	
	/**
	 * Check if `component` is visible in overflow container `parent`
	 * @param  {node} component React component
	 * @param  {node} parent    component's scroll parent
	 * @return {bool}
	 */
	var checkOverflowVisible = function checkOverflowVisible(component, parent) {
	  var node = _reactDom2.default.findDOMNode(component);
	
	  var parentTop = void 0;
	  var parentHeight = void 0;
	
	  try {
	    var _parent$getBoundingCl = parent.getBoundingClientRect();
	
	    parentTop = _parent$getBoundingCl.top;
	    parentHeight = _parent$getBoundingCl.height;
	  } catch (e) {
	    parentTop = defaultBoundingClientRect.top;
	    parentHeight = defaultBoundingClientRect.height;
	  }
	
	  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;
	
	  // calculate top and height of the intersection of the element's scrollParent and viewport
	  var intersectionTop = Math.max(parentTop, 0); // intersection's top relative to viewport
	  var intersectionHeight = Math.min(windowInnerHeight, parentTop + parentHeight) - intersectionTop; // height
	
	  // check whether the element is visible in the intersection
	  var top = void 0;
	  var height = void 0;
	
	  try {
	    var _node$getBoundingClie = node.getBoundingClientRect();
	
	    top = _node$getBoundingClie.top;
	    height = _node$getBoundingClie.height;
	  } catch (e) {
	    top = defaultBoundingClientRect.top;
	    height = defaultBoundingClientRect.height;
	  }
	
	  var offsetTop = top - intersectionTop; // element's top relative to intersection
	
	  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API
	
	  return offsetTop - offsets[0] <= intersectionHeight && offsetTop + height + offsets[1] >= 0;
	};
	
	/**
	 * Check if `component` is visible in document
	 * @param  {node} component React component
	 * @return {bool}
	 */
	var checkNormalVisible = function checkNormalVisible(component) {
	  var node = _reactDom2.default.findDOMNode(component);
	
	  // If this element is hidden by css rules somehow, it's definitely invisible
	  if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return false;
	
	  var top = void 0;
	  var elementHeight = void 0;
	
	  try {
	    var _node$getBoundingClie2 = node.getBoundingClientRect();
	
	    top = _node$getBoundingClie2.top;
	    elementHeight = _node$getBoundingClie2.height;
	  } catch (e) {
	    top = defaultBoundingClientRect.top;
	    elementHeight = defaultBoundingClientRect.height;
	  }
	
	  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;
	
	  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API
	
	  return top - offsets[0] <= windowInnerHeight && top + elementHeight + offsets[1] >= 0;
	};
	
	/**
	 * Detect if element is visible in viewport, if so, set `visible` state to true.
	 * If `once` prop is provided true, remove component as listener after checkVisible
	 *
	 * @param  {React} component   React component that respond to scroll and resize
	 */
	var checkVisible = function checkVisible(component) {
	  var node = _reactDom2.default.findDOMNode(component);
	  if (!node) {
	    return;
	  }
	
	  var parent = (0, _scrollParent2.default)(node);
	  var isOverflow = component.props.overflow && parent !== node.ownerDocument && parent !== document && parent !== document.documentElement;
	  var visible = isOverflow ? checkOverflowVisible(component, parent) : checkNormalVisible(component);
	  if (visible) {
	    // Avoid extra render if previously is visible
	    if (!component.visible) {
	      if (component.props.once) {
	        pending.push(component);
	      }
	
	      component.visible = true;
	      component.forceUpdate();
	    }
	  } else if (!(component.props.once && component.visible)) {
	    component.visible = false;
	    if (component.props.unmountIfInvisible) {
	      component.forceUpdate();
	    }
	  }
	};
	
	var purgePending = function purgePending() {
	  pending.forEach(function (component) {
	    var index = listeners.indexOf(component);
	    if (index !== -1) {
	      listeners.splice(index, 1);
	    }
	  });
	
	  pending = [];
	};
	
	var lazyLoadHandler = function lazyLoadHandler() {
	  for (var i = 0; i < listeners.length; ++i) {
	    var listener = listeners[i];
	    checkVisible(listener);
	  }
	  // Remove `once` component in listeners
	  purgePending();
	};
	
	// Depending on component's props
	var delayType = void 0;
	var finalLazyLoadHandler = null;
	
	var LazyLoad = function (_Component) {
	  _inherits(LazyLoad, _Component);
	
	  function LazyLoad(props) {
	    _classCallCheck(this, LazyLoad);
	
	    var _this = _possibleConstructorReturn(this, (LazyLoad.__proto__ || Object.getPrototypeOf(LazyLoad)).call(this, props));
	
	    _this.visible = false;
	    return _this;
	  }
	
	  _createClass(LazyLoad, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (typeof process !== 'undefined' && ("production") !== 'production') {
	        if (_react2.default.Children.count(this.props.children) > 1) {
	          console.warn('[react-lazyload] Only one child is allowed to be passed to `LazyLoad`.');
	        }
	
	        if (this.props.wheel) {
	          // eslint-disable-line
	          console.warn('[react-lazyload] Props `wheel` is not supported anymore, try set `overflow` for lazy loading in overflow containers.');
	        }
	
	        // Warn the user if placeholder and height is not specified and the rendered height is 0
	        if (!this.props.placeholder && this.props.height === undefined && _reactDom2.default.findDOMNode(this).offsetHeight === 0) {
	          console.warn('[react-lazyload] Please add `height` props to <LazyLoad> for better performance.');
	        }
	      }
	
	      // It's unlikely to change delay type on the fly, this is mainly
	      // designed for tests
	      var needResetFinalLazyLoadHandler = false;
	      if (this.props.debounce !== undefined && delayType === 'throttle') {
	        console.warn('[react-lazyload] Previous delay function is `throttle`, now switching to `debounce`, try setting them unanimously');
	        needResetFinalLazyLoadHandler = true;
	      } else if (delayType === 'debounce' && this.props.debounce === undefined) {
	        console.warn('[react-lazyload] Previous delay function is `debounce`, now switching to `throttle`, try setting them unanimously');
	        needResetFinalLazyLoadHandler = true;
	      }
	
	      if (needResetFinalLazyLoadHandler) {
	        (0, _event.off)(window, 'scroll', finalLazyLoadHandler, passiveEvent);
	        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);
	        finalLazyLoadHandler = null;
	      }
	
	      if (!finalLazyLoadHandler) {
	        if (this.props.debounce !== undefined) {
	          finalLazyLoadHandler = (0, _debounce2.default)(lazyLoadHandler, typeof this.props.debounce === 'number' ? this.props.debounce : 300);
	          delayType = 'debounce';
	        } else if (this.props.throttle !== undefined) {
	          finalLazyLoadHandler = (0, _throttle2.default)(lazyLoadHandler, typeof this.props.throttle === 'number' ? this.props.throttle : 300);
	          delayType = 'throttle';
	        } else {
	          finalLazyLoadHandler = lazyLoadHandler;
	        }
	      }
	
	      if (this.props.overflow) {
	        var parent = (0, _scrollParent2.default)(_reactDom2.default.findDOMNode(this));
	        if (parent && typeof parent.getAttribute === 'function') {
	          var listenerCount = 1 + +parent.getAttribute(LISTEN_FLAG);
	          if (listenerCount === 1) {
	            parent.addEventListener('scroll', finalLazyLoadHandler, passiveEvent);
	          }
	          parent.setAttribute(LISTEN_FLAG, listenerCount);
	        }
	      } else if (listeners.length === 0 || needResetFinalLazyLoadHandler) {
	        var _props = this.props,
	            scroll = _props.scroll,
	            resize = _props.resize;
	
	
	        if (scroll) {
	          (0, _event.on)(window, 'scroll', finalLazyLoadHandler, passiveEvent);
	        }
	
	        if (resize) {
	          (0, _event.on)(window, 'resize', finalLazyLoadHandler, passiveEvent);
	        }
	      }
	
	      listeners.push(this);
	      checkVisible(this);
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate() {
	      return this.visible;
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (this.props.overflow) {
	        var parent = (0, _scrollParent2.default)(_reactDom2.default.findDOMNode(this));
	        if (parent && typeof parent.getAttribute === 'function') {
	          var listenerCount = +parent.getAttribute(LISTEN_FLAG) - 1;
	          if (listenerCount === 0) {
	            parent.removeEventListener('scroll', finalLazyLoadHandler, passiveEvent);
	            parent.removeAttribute(LISTEN_FLAG);
	          } else {
	            parent.setAttribute(LISTEN_FLAG, listenerCount);
	          }
	        }
	      }
	
	      var index = listeners.indexOf(this);
	      if (index !== -1) {
	        listeners.splice(index, 1);
	      }
	
	      if (listeners.length === 0) {
	        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);
	        (0, _event.off)(window, 'scroll', finalLazyLoadHandler, passiveEvent);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.visible ? this.props.children : this.props.placeholder ? this.props.placeholder : _react2.default.createElement('div', { style: { height: this.props.height }, className: 'lazyload-placeholder' });
	    }
	  }]);
	
	  return LazyLoad;
	}(_react.Component);
	
	LazyLoad.propTypes = {
	  once: _propTypes2.default.bool,
	  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
	  offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
	  overflow: _propTypes2.default.bool,
	  resize: _propTypes2.default.bool,
	  scroll: _propTypes2.default.bool,
	  children: _propTypes2.default.node,
	  throttle: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),
	  debounce: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),
	  placeholder: _propTypes2.default.node,
	  unmountIfInvisible: _propTypes2.default.bool
	};
	
	LazyLoad.defaultProps = {
	  once: false,
	  offset: 0,
	  overflow: false,
	  resize: false,
	  scroll: true,
	  unmountIfInvisible: false
	};
	
	var lazyload = exports.lazyload = _decorator2.default;
	exports.default = LazyLoad;
	exports.forceCheck = lazyLoadHandler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)))

/***/ }),
/* 129 */,
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;
	
	var PropTypes = _interopRequireWildcard(__webpack_require__(3));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(29));
	
	var _reactLifecyclesCompat = __webpack_require__(336);
	
	var _PropTypes = __webpack_require__(1743);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }
	
	function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
	
	function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }
	
	var UNMOUNTED = 'unmounted';
	exports.UNMOUNTED = UNMOUNTED;
	var EXITED = 'exited';
	exports.EXITED = EXITED;
	var ENTERING = 'entering';
	exports.ENTERING = ENTERING;
	var ENTERED = 'entered';
	exports.ENTERED = ENTERED;
	var EXITING = 'exiting';
	/**
	 * The Transition component lets you describe a transition from one component
	 * state to another _over time_ with a simple declarative API. Most commonly
	 * it's used to animate the mounting and unmounting of a component, but can also
	 * be used to describe in-place transition states as well.
	 *
	 * ---
	 *
	 * **Note**: `Transition` is a platform-agnostic base component. If you're using
	 * transitions in CSS, you'll probably want to use
	 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
	 * instead. It inherits all the features of `Transition`, but contains
	 * additional features necessary to play nice with CSS transitions (hence the
	 * name of the component).
	 *
	 * ---
	 *
	 * By default the `Transition` component does not alter the behavior of the
	 * component it renders, it only tracks "enter" and "exit" states for the
	 * components. It's up to you to give meaning and effect to those states. For
	 * example we can add styles to a component when it enters or exits:
	 *
	 * ```jsx
	 * import { Transition } from 'react-transition-group';
	 *
	 * const duration = 300;
	 *
	 * const defaultStyle = {
	 *   transition: `opacity ${duration}ms ease-in-out`,
	 *   opacity: 0,
	 * }
	 *
	 * const transitionStyles = {
	 *   entering: { opacity: 0 },
	 *   entered:  { opacity: 1 },
	 * };
	 *
	 * const Fade = ({ in: inProp }) => (
	 *   <Transition in={inProp} timeout={duration}>
	 *     {state => (
	 *       <div style={{
	 *         ...defaultStyle,
	 *         ...transitionStyles[state]
	 *       }}>
	 *         I'm a fade Transition!
	 *       </div>
	 *     )}
	 *   </Transition>
	 * );
	 * ```
	 *
	 * There are 4 main states a Transition can be in:
	 *  - `'entering'`
	 *  - `'entered'`
	 *  - `'exiting'`
	 *  - `'exited'`
	 *
	 * Transition state is toggled via the `in` prop. When `true` the component
	 * begins the "Enter" stage. During this stage, the component will shift from
	 * its current transition state, to `'entering'` for the duration of the
	 * transition and then to the `'entered'` stage once it's complete. Let's take
	 * the following example (we'll use the
	 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
	 *
	 * ```jsx
	 * function App() {
	 *   const [inProp, setInProp] = useState(false);
	 *   return (
	 *     <div>
	 *       <Transition in={inProp} timeout={500}>
	 *         {state => (
	 *           // ...
	 *         )}
	 *       </Transition>
	 *       <button onClick={() => setInProp(true)}>
	 *         Click to Enter
	 *       </button>
	 *     </div>
	 *   );
	 * }
	 * ```
	 *
	 * When the button is clicked the component will shift to the `'entering'` state
	 * and stay there for 500ms (the value of `timeout`) before it finally switches
	 * to `'entered'`.
	 *
	 * When `in` is `false` the same thing happens except the state moves from
	 * `'exiting'` to `'exited'`.
	 */
	
	exports.EXITING = EXITING;
	
	var Transition =
	/*#__PURE__*/
	function (_React$Component) {
	  _inheritsLoose(Transition, _React$Component);
	
	  function Transition(props, context) {
	    var _this;
	
	    _this = _React$Component.call(this, props, context) || this;
	    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears
	
	    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
	    var initialStatus;
	    _this.appearStatus = null;
	
	    if (props.in) {
	      if (appear) {
	        initialStatus = EXITED;
	        _this.appearStatus = ENTERING;
	      } else {
	        initialStatus = ENTERED;
	      }
	    } else {
	      if (props.unmountOnExit || props.mountOnEnter) {
	        initialStatus = UNMOUNTED;
	      } else {
	        initialStatus = EXITED;
	      }
	    }
	
	    _this.state = {
	      status: initialStatus
	    };
	    _this.nextCallback = null;
	    return _this;
	  }
	
	  var _proto = Transition.prototype;
	
	  _proto.getChildContext = function getChildContext() {
	    return {
	      transitionGroup: null // allows for nested Transitions
	
	    };
	  };
	
	  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
	    var nextIn = _ref.in;
	
	    if (nextIn && prevState.status === UNMOUNTED) {
	      return {
	        status: EXITED
	      };
	    }
	
	    return null;
	  }; // getSnapshotBeforeUpdate(prevProps) {
	  //   let nextStatus = null
	  //   if (prevProps !== this.props) {
	  //     const { status } = this.state
	  //     if (this.props.in) {
	  //       if (status !== ENTERING && status !== ENTERED) {
	  //         nextStatus = ENTERING
	  //       }
	  //     } else {
	  //       if (status === ENTERING || status === ENTERED) {
	  //         nextStatus = EXITING
	  //       }
	  //     }
	  //   }
	  //   return { nextStatus }
	  // }
	
	
	  _proto.componentDidMount = function componentDidMount() {
	    this.updateStatus(true, this.appearStatus);
	  };
	
	  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var nextStatus = null;
	
	    if (prevProps !== this.props) {
	      var status = this.state.status;
	
	      if (this.props.in) {
	        if (status !== ENTERING && status !== ENTERED) {
	          nextStatus = ENTERING;
	        }
	      } else {
	        if (status === ENTERING || status === ENTERED) {
	          nextStatus = EXITING;
	        }
	      }
	    }
	
	    this.updateStatus(false, nextStatus);
	  };
	
	  _proto.componentWillUnmount = function componentWillUnmount() {
	    this.cancelNextCallback();
	  };
	
	  _proto.getTimeouts = function getTimeouts() {
	    var timeout = this.props.timeout;
	    var exit, enter, appear;
	    exit = enter = appear = timeout;
	
	    if (timeout != null && typeof timeout !== 'number') {
	      exit = timeout.exit;
	      enter = timeout.enter; // TODO: remove fallback for next major
	
	      appear = timeout.appear !== undefined ? timeout.appear : enter;
	    }
	
	    return {
	      exit: exit,
	      enter: enter,
	      appear: appear
	    };
	  };
	
	  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
	    if (mounting === void 0) {
	      mounting = false;
	    }
	
	    if (nextStatus !== null) {
	      // nextStatus will always be ENTERING or EXITING.
	      this.cancelNextCallback();
	
	      var node = _reactDom.default.findDOMNode(this);
	
	      if (nextStatus === ENTERING) {
	        this.performEnter(node, mounting);
	      } else {
	        this.performExit(node);
	      }
	    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
	      this.setState({
	        status: UNMOUNTED
	      });
	    }
	  };
	
	  _proto.performEnter = function performEnter(node, mounting) {
	    var _this2 = this;
	
	    var enter = this.props.enter;
	    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
	    var timeouts = this.getTimeouts();
	    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
	    // if we are mounting and running this it means appear _must_ be set
	
	    if (!mounting && !enter) {
	      this.safeSetState({
	        status: ENTERED
	      }, function () {
	        _this2.props.onEntered(node);
	      });
	      return;
	    }
	
	    this.props.onEnter(node, appearing);
	    this.safeSetState({
	      status: ENTERING
	    }, function () {
	      _this2.props.onEntering(node, appearing);
	
	      _this2.onTransitionEnd(node, enterTimeout, function () {
	        _this2.safeSetState({
	          status: ENTERED
	        }, function () {
	          _this2.props.onEntered(node, appearing);
	        });
	      });
	    });
	  };
	
	  _proto.performExit = function performExit(node) {
	    var _this3 = this;
	
	    var exit = this.props.exit;
	    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED
	
	    if (!exit) {
	      this.safeSetState({
	        status: EXITED
	      }, function () {
	        _this3.props.onExited(node);
	      });
	      return;
	    }
	
	    this.props.onExit(node);
	    this.safeSetState({
	      status: EXITING
	    }, function () {
	      _this3.props.onExiting(node);
	
	      _this3.onTransitionEnd(node, timeouts.exit, function () {
	        _this3.safeSetState({
	          status: EXITED
	        }, function () {
	          _this3.props.onExited(node);
	        });
	      });
	    });
	  };
	
	  _proto.cancelNextCallback = function cancelNextCallback() {
	    if (this.nextCallback !== null) {
	      this.nextCallback.cancel();
	      this.nextCallback = null;
	    }
	  };
	
	  _proto.safeSetState = function safeSetState(nextState, callback) {
	    // This shouldn't be necessary, but there are weird race conditions with
	    // setState callbacks and unmounting in testing, so always make sure that
	    // we can cancel any pending setState callbacks after we unmount.
	    callback = this.setNextCallback(callback);
	    this.setState(nextState, callback);
	  };
	
	  _proto.setNextCallback = function setNextCallback(callback) {
	    var _this4 = this;
	
	    var active = true;
	
	    this.nextCallback = function (event) {
	      if (active) {
	        active = false;
	        _this4.nextCallback = null;
	        callback(event);
	      }
	    };
	
	    this.nextCallback.cancel = function () {
	      active = false;
	    };
	
	    return this.nextCallback;
	  };
	
	  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
	    this.setNextCallback(handler);
	    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
	
	    if (!node || doesNotHaveTimeoutOrListener) {
	      setTimeout(this.nextCallback, 0);
	      return;
	    }
	
	    if (this.props.addEndListener) {
	      this.props.addEndListener(node, this.nextCallback);
	    }
	
	    if (timeout != null) {
	      setTimeout(this.nextCallback, timeout);
	    }
	  };
	
	  _proto.render = function render() {
	    var status = this.state.status;
	
	    if (status === UNMOUNTED) {
	      return null;
	    }
	
	    var _this$props = this.props,
	        children = _this$props.children,
	        childProps = _objectWithoutPropertiesLoose(_this$props, ["children"]); // filter props for Transtition
	
	
	    delete childProps.in;
	    delete childProps.mountOnEnter;
	    delete childProps.unmountOnExit;
	    delete childProps.appear;
	    delete childProps.enter;
	    delete childProps.exit;
	    delete childProps.timeout;
	    delete childProps.addEndListener;
	    delete childProps.onEnter;
	    delete childProps.onEntering;
	    delete childProps.onEntered;
	    delete childProps.onExit;
	    delete childProps.onExiting;
	    delete childProps.onExited;
	
	    if (typeof children === 'function') {
	      return children(status, childProps);
	    }
	
	    var child = _react.default.Children.only(children);
	
	    return _react.default.cloneElement(child, childProps);
	  };
	
	  return Transition;
	}(_react.default.Component);
	
	Transition.contextTypes = {
	  transitionGroup: PropTypes.object
	};
	Transition.childContextTypes = {
	  transitionGroup: function transitionGroup() {}
	};
	Transition.propTypes =  false ? {
	  /**
	   * A `function` child can be used instead of a React element. This function is
	   * called with the current transition status (`'entering'`, `'entered'`,
	   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context
	   * specific props to a component.
	   *
	   * ```jsx
	   * <Transition in={this.state.in} timeout={150}>
	   *   {state => (
	   *     <MyComponent className={`fade fade-${state}`} />
	   *   )}
	   * </Transition>
	   * ```
	   */
	  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,
	
	  /**
	   * Show the component; triggers the enter or exit states
	   */
	  in: PropTypes.bool,
	
	  /**
	   * By default the child component is mounted immediately along with
	   * the parent `Transition` component. If you want to "lazy mount" the component on the
	   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
	   * mounted, even on "exited", unless you also specify `unmountOnExit`.
	   */
	  mountOnEnter: PropTypes.bool,
	
	  /**
	   * By default the child component stays mounted after it reaches the `'exited'` state.
	   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
	   */
	  unmountOnExit: PropTypes.bool,
	
	  /**
	   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
	   * If you want to transition on the first mount set `appear` to `true`, and the
	   * component will transition in as soon as the `<Transition>` mounts.
	   *
	   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
	   */
	  appear: PropTypes.bool,
	
	  /**
	   * Enable or disable enter transitions.
	   */
	  enter: PropTypes.bool,
	
	  /**
	   * Enable or disable exit transitions.
	   */
	  exit: PropTypes.bool,
	
	  /**
	   * The duration of the transition, in milliseconds.
	   * Required unless `addEndListener` is provided.
	   *
	   * You may specify a single timeout for all transitions:
	   *
	   * ```jsx
	   * timeout={500}
	   * ```
	   *
	   * or individually:
	   *
	   * ```jsx
	   * timeout={{
	   *  appear: 500,
	   *  enter: 300,
	   *  exit: 500,
	   * }}
	   * ```
	   *
	   * - `appear` defaults to the value of `enter`
	   * - `enter` defaults to `0`
	   * - `exit` defaults to `0`
	   *
	   * @type {number | { enter?: number, exit?: number, appear?: number }}
	   */
	  timeout: function timeout(props) {
	    var pt = _PropTypes.timeoutsShape;
	    if (!props.addEndListener) pt = pt.isRequired;
	
	    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }
	
	    return pt.apply(void 0, [props].concat(args));
	  },
	
	  /**
	   * Add a custom transition end trigger. Called with the transitioning
	   * DOM node and a `done` callback. Allows for more fine grained transition end
	   * logic. **Note:** Timeouts are still used as a fallback if provided.
	   *
	   * ```jsx
	   * addEndListener={(node, done) => {
	   *   // use the css transitionend event to mark the finish of a transition
	   *   node.addEventListener('transitionend', done, false);
	   * }}
	   * ```
	   */
	  addEndListener: PropTypes.func,
	
	  /**
	   * Callback fired before the "entering" status is applied. An extra parameter
	   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
	   *
	   * @type Function(node: HtmlElement, isAppearing: bool) -> void
	   */
	  onEnter: PropTypes.func,
	
	  /**
	   * Callback fired after the "entering" status is applied. An extra parameter
	   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
	   *
	   * @type Function(node: HtmlElement, isAppearing: bool)
	   */
	  onEntering: PropTypes.func,
	
	  /**
	   * Callback fired after the "entered" status is applied. An extra parameter
	   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
	   *
	   * @type Function(node: HtmlElement, isAppearing: bool) -> void
	   */
	  onEntered: PropTypes.func,
	
	  /**
	   * Callback fired before the "exiting" status is applied.
	   *
	   * @type Function(node: HtmlElement) -> void
	   */
	  onExit: PropTypes.func,
	
	  /**
	   * Callback fired after the "exiting" status is applied.
	   *
	   * @type Function(node: HtmlElement) -> void
	   */
	  onExiting: PropTypes.func,
	
	  /**
	   * Callback fired after the "exited" status is applied.
	   *
	   * @type Function(node: HtmlElement) -> void
	   */
	  onExited: PropTypes.func // Name the function so it is clearer in the documentation
	
	} : {};
	
	function noop() {}
	
	Transition.defaultProps = {
	  in: false,
	  mountOnEnter: false,
	  unmountOnExit: false,
	  appear: false,
	  enter: true,
	  exit: true,
	  onEnter: noop,
	  onEntering: noop,
	  onEntered: noop,
	  onExit: noop,
	  onExiting: noop,
	  onExited: noop
	};
	Transition.UNMOUNTED = 0;
	Transition.EXITED = 1;
	Transition.ENTERING = 2;
	Transition.ENTERED = 3;
	Transition.EXITING = 4;
	
	var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);
	
	exports.default = _default;

/***/ }),
/* 131 */
/***/ (function(module, exports) {

	function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }
	
	function _typeof(obj) {
	  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
	    module.exports = _typeof = function _typeof(obj) {
	      return _typeof2(obj);
	    };
	  } else {
	    module.exports = _typeof = function _typeof(obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
	    };
	  }
	
	  return _typeof(obj);
	}
	
	module.exports = _typeof;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _InputBase.default;
	  }
	});
	
	var _InputBase = _interopRequireDefault(__webpack_require__(655));

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	/**
	 * @ignore - internal component.
	 */
	var ListContext = _react.default.createContext({});
	
	var _default = ListContext;
	exports.default = _default;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _MenuList.default;
	  }
	});
	
	var _MenuList = _interopRequireDefault(__webpack_require__(671));

/***/ }),
/* 135 */,
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createBreakpoints;
	exports.keys = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	// Sorted ASC by size. That's important.
	// It can't be configured as it's used statically for propTypes.
	var keys = ['xs', 'sm', 'md', 'lg', 'xl']; // Keep in mind that @media is inclusive by the CSS specification.
	
	exports.keys = keys;
	
	function createBreakpoints(breakpoints) {
	  var _breakpoints$values = breakpoints.values,
	      values = _breakpoints$values === void 0 ? {
	    xs: 0,
	    sm: 600,
	    md: 960,
	    lg: 1280,
	    xl: 1920
	  } : _breakpoints$values,
	      _breakpoints$unit = breakpoints.unit,
	      unit = _breakpoints$unit === void 0 ? 'px' : _breakpoints$unit,
	      _breakpoints$step = breakpoints.step,
	      step = _breakpoints$step === void 0 ? 5 : _breakpoints$step,
	      other = (0, _objectWithoutProperties2.default)(breakpoints, ["values", "unit", "step"]);
	
	  function up(key) {
	    var value = typeof values[key] === 'number' ? values[key] : key;
	    return "@media (min-width:".concat(value).concat(unit, ")");
	  }
	
	  function down(key) {
	    var endIndex = keys.indexOf(key) + 1;
	    var upperbound = values[keys[endIndex]];
	
	    if (endIndex === keys.length) {
	      // xl down applies to all sizes
	      return up('xs');
	    }
	
	    var value = typeof upperbound === 'number' && endIndex > 0 ? upperbound : key;
	    return "@media (max-width:".concat(value - step / 100).concat(unit, ")");
	  }
	
	  function between(start, end) {
	    var endIndex = keys.indexOf(end) + 1;
	
	    if (endIndex === keys.length) {
	      return up(start);
	    }
	
	    return "@media (min-width:".concat(values[start]).concat(unit, ") and ") + "(max-width:".concat(values[keys[endIndex]] - step / 100).concat(unit, ")");
	  }
	
	  function only(key) {
	    return between(key, key);
	  }
	
	  function width(key) {
	    return values[key];
	  }
	
	  return (0, _extends2.default)({
	    keys: keys,
	    values: values,
	    up: up,
	    down: down,
	    between: between,
	    only: only,
	    width: width
	  }, other);
	}

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(17);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _algoliaFull = __webpack_require__(1772);
	
	var _algoliaFull2 = _interopRequireDefault(_algoliaFull);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _title, _mark;
	
	  return {
	    header: {
	      margin: "0 0 3em",
	      display: "flex",
	      flexDirection: "row",
	      justifyContent: "flex-start",
	      alignContent: "center"
	    },
	    title: (_title = {
	      color: theme.main.colors.title,
	      fontSize: theme.main.fonts.title.size + "em",
	      letterSpacing: "-0.04em",
	      fontWeight: theme.main.fonts.title.weight,
	      lineHeight: theme.main.fonts.title.lineHeight,
	      margin: "0 0 0.4em"
	    }, _title["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      fontSize: theme.main.fonts.title.sizeM + "em"
	    }, _title["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      fontSize: theme.main.fonts.title.sizeL + "em",
	      letterSpacing: "-0.05em"
	    }, _title),
	    mark: (_mark = {
	      width: "130px",
	      display: "block",
	      margin: "0 0 0 10px"
	    }, _mark["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      width: "170px"
	    }, _mark["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      width: "190px"
	    }, _mark)
	  };
	};
	
	var Header = function Header(props) {
	  var classes = props.classes,
	      title = props.title,
	      algolia = props.algolia;
	
	
	  return _react2.default.createElement(
	    "header",
	    { className: classes.header },
	    _react2.default.createElement(
	      "h1",
	      { className: classes.title },
	      title
	    ),
	    algolia && _react2.default.createElement(
	      "a",
	      {
	        className: classes.mark,
	        href: "https://www.algolia.com",
	        rel: "noopener noreferrer",
	        target: "_blank"
	      },
	      _react2.default.createElement(_algoliaFull2.default, null)
	    )
	  );
	};
	
	Header.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  title: _propTypes2.default.string.isRequired,
	  algolia: _propTypes2.default.bool
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Header);
	module.exports = exports["default"];

/***/ }),
/* 138 */
/***/ (function(module, exports) {

	module.exports = {
		trueFunc: function trueFunc(){
			return true;
		},
		falseFunc: function falseFunc(){
			return false;
		}
	};

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.merge = exports.contains = exports.root = exports.parseHTML = exports.text = exports.xml = exports.html = void 0;
	var tslib_1 = __webpack_require__(83);
	var options_1 = tslib_1.__importStar(__webpack_require__(259));
	var cheerio_select_1 = __webpack_require__(406);
	var htmlparser2_1 = __webpack_require__(68);
	var parse5_1 = __webpack_require__(411);
	var htmlparser2_2 = __webpack_require__(410);
	/**
	 * Helper function to render a DOM.
	 *
	 * @param that - Cheerio instance to render.
	 * @param dom - The DOM to render. Defaults to `that`'s root.
	 * @param options - Options for rendering.
	 * @returns The rendered document.
	 */
	function render(that, dom, options) {
	    var _a, _b;
	    if (!dom) {
	        if ((_a = that === null || that === void 0 ? void 0 : that._root) === null || _a === void 0 ? void 0 : _a.children) {
	            dom = that._root.children;
	        }
	        else {
	            return '';
	        }
	    }
	    else if (typeof dom === 'string') {
	        dom = cheerio_select_1.select(dom, (_b = that === null || that === void 0 ? void 0 : that._root) !== null && _b !== void 0 ? _b : [], options);
	    }
	    return options.xmlMode || options._useHtmlParser2
	        ? // FIXME: Pull in new version of dom-serializer to fix this.
	            htmlparser2_2.render(dom, options)
	        : parse5_1.render(dom);
	}
	/**
	 * Checks if a passed object is an options object.
	 *
	 * @param dom - Object to check if it is an options object.
	 * @returns Whether the object is an options object.
	 */
	function isOptions(dom) {
	    return (typeof dom === 'object' &&
	        dom != null &&
	        !('length' in dom) &&
	        !('type' in dom));
	}
	function html(dom, options) {
	    /*
	     * Be flexible about parameters, sometimes we call html(),
	     * with options as only parameter
	     * check dom argument for dom element specific properties
	     * assume there is no 'length' or 'type' properties in the options object
	     */
	    if (!options && isOptions(dom)) {
	        options = dom;
	        dom = undefined;
	    }
	    /*
	     * Sometimes `$.html()` is used without preloading html,
	     * so fallback non-existing options to the default ones.
	     */
	    options = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, options_1.default), (this ? this._options : {})), options_1.flatten(options !== null && options !== void 0 ? options : {}));
	    return render(this || undefined, dom, options);
	}
	exports.html = html;
	/**
	 * Render the document as XML.
	 *
	 * @param dom - Element to render.
	 * @returns THe rendered document.
	 */
	function xml(dom) {
	    var options = tslib_1.__assign(tslib_1.__assign({}, this._options), { xmlMode: true });
	    return render(this, dom, options);
	}
	exports.xml = xml;
	/**
	 * Render the document as text.
	 *
	 * @param elements - Elements to render.
	 * @returns The rendered document.
	 */
	function text(elements) {
	    var elems = elements ? elements : this ? this.root() : [];
	    var ret = '';
	    for (var i = 0; i < elems.length; i++) {
	        var elem = elems[i];
	        if (htmlparser2_1.DomUtils.isText(elem))
	            ret += elem.data;
	        else if (htmlparser2_1.DomUtils.hasChildren(elem) &&
	            elem.type !== htmlparser2_1.ElementType.Comment &&
	            elem.type !== htmlparser2_1.ElementType.Script &&
	            elem.type !== htmlparser2_1.ElementType.Style) {
	            ret += text(elem.children);
	        }
	    }
	    return ret;
	}
	exports.text = text;
	function parseHTML(data, context, keepScripts) {
	    if (keepScripts === void 0) { keepScripts = typeof context === 'boolean' ? context : false; }
	    if (!data || typeof data !== 'string') {
	        return null;
	    }
	    if (typeof context === 'boolean') {
	        keepScripts = context;
	    }
	    var parsed = this.load(data, options_1.default, false);
	    if (!keepScripts) {
	        parsed('script').remove();
	    }
	    /*
	     * The `children` array is used by Cheerio internally to group elements that
	     * share the same parents. When nodes created through `parseHTML` are
	     * inserted into previously-existing DOM structures, they will be removed
	     * from the `children` array. The results of `parseHTML` should remain
	     * constant across these operations, so a shallow copy should be returned.
	     */
	    return parsed.root()[0].children.slice();
	}
	exports.parseHTML = parseHTML;
	/**
	 * Sometimes you need to work with the top-level root element. To query it, you
	 * can use `$.root()`.
	 *
	 * @example
	 *
	 * ```js
	 * $.root().append('<ul id="vegetables"></ul>').html();
	 * //=> <ul id="fruits">...</ul><ul id="vegetables"></ul>
	 * ```
	 *
	 * @returns Cheerio instance wrapping the root node.
	 * @alias Cheerio.root
	 */
	function root() {
	    var fn = this;
	    return fn(this._root);
	}
	exports.root = root;
	/**
	 * Checks to see if the `contained` DOM element is a descendant of the
	 * `container` DOM element.
	 *
	 * @param container - Potential parent node.
	 * @param contained - Potential child node.
	 * @returns Indicates if the nodes contain one another.
	 * @alias Cheerio.contains
	 * @see {@link https://api.jquery.com/jQuery.contains/}
	 */
	function contains(container, contained) {
	    // According to the jQuery API, an element does not "contain" itself
	    if (contained === container) {
	        return false;
	    }
	    /*
	     * Step up the descendants, stopping when the root element is reached
	     * (signaled by `.parent` returning a reference to the same object)
	     */
	    var next = contained;
	    while (next && next !== next.parent) {
	        next = next.parent;
	        if (next === container) {
	            return true;
	        }
	    }
	    return false;
	}
	exports.contains = contains;
	/**
	 * $.merge().
	 *
	 * @param arr1 - First array.
	 * @param arr2 - Second array.
	 * @returns `arr1`, with elements of `arr2` inserted.
	 * @alias Cheerio.merge
	 * @see {@link https://api.jquery.com/jQuery.merge/}
	 */
	function merge(arr1, arr2) {
	    if (!isArrayLike(arr1) || !isArrayLike(arr2)) {
	        return;
	    }
	    var newLength = arr1.length;
	    var len = +arr2.length;
	    for (var i = 0; i < len; i++) {
	        arr1[newLength++] = arr2[i];
	    }
	    arr1.length = newLength;
	    return arr1;
	}
	exports.merge = merge;
	/**
	 * @param item - Item to check.
	 * @returns Indicates if the item is array-like.
	 */
	function isArrayLike(item) {
	    if (Array.isArray(item)) {
	        return true;
	    }
	    if (typeof item !== 'object' ||
	        !Object.prototype.hasOwnProperty.call(item, 'length') ||
	        typeof item.length !== 'number' ||
	        item.length < 0) {
	        return false;
	    }
	    for (var i = 0; i < item.length; i++) {
	        if (!(i in item)) {
	            return false;
	        }
	    }
	    return true;
	}


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(188)
	  , core      = __webpack_require__(76)
	  , ctx       = __webpack_require__(416)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && key in target;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(param){
	        return this instanceof C ? new C(param) : C(param);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;
	  }
	};
	// type bitmap
	$export.F = 1;  // forced
	$export.G = 2;  // global
	$export.S = 4;  // static
	$export.P = 8;  // proto
	$export.B = 16; // bind
	$export.W = 32; // wrap
	module.exports = $export;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	var store  = __webpack_require__(424)('wks')
	  , uid    = __webpack_require__(425)
	  , Symbol = __webpack_require__(188).Symbol;
	module.exports = function(name){
	  return store[name] || (store[name] =
	    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));
	};

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(191);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ }),
/* 143 */
/***/ (function(module, exports) {

	var core = module.exports = {version: '1.2.6'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(268);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ }),
/* 145 */
/***/ (function(module, exports) {

	module.exports = {};

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	
	function isArray(arg) {
	  if (Array.isArray) {
	    return Array.isArray(arg);
	  }
	  return objectToString(arg) === '[object Array]';
	}
	exports.isArray = isArray;
	
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;
	
	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;
	
	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;
	
	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;
	
	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;
	
	function isRegExp(re) {
	  return objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;
	
	function isDate(d) {
	  return objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;
	
	function isError(e) {
	  return (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;
	
	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;
	
	exports.isBuffer = Buffer.isBuffer;
	
	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(186).Buffer))

/***/ }),
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * This is the web browser implementation of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */
	
	exports = module.exports = __webpack_require__(1018);
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	exports.storage = 'undefined' != typeof chrome
	               && 'undefined' != typeof chrome.storage
	                  ? chrome.storage.local
	                  : localstorage();
	
	/**
	 * Colors.
	 */
	
	exports.colors = [
	  'lightseagreen',
	  'forestgreen',
	  'goldenrod',
	  'dodgerblue',
	  'darkorchid',
	  'crimson'
	];
	
	/**
	 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	 * and the Firebug extension (any Firefox version) are known
	 * to support "%c" CSS customizations.
	 *
	 * TODO: add a `localStorage` variable to explicitly enable/disable colors
	 */
	
	function useColors() {
	  // NB: In an Electron preload script, document will be defined but not fully
	  // initialized. Since we know we're in Chrome, we'll just detect this case
	  // explicitly
	  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
	    return true;
	  }
	
	  // is webkit? http://stackoverflow.com/a/16459606/376773
	  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
	    // is firebug? http://stackoverflow.com/a/398120/376773
	    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
	    // is firefox >= v31?
	    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
	    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
	    // double check webkit in userAgent just in case we are in a worker
	    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
	}
	
	/**
	 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	 */
	
	exports.formatters.j = function(v) {
	  try {
	    return JSON.stringify(v);
	  } catch (err) {
	    return '[UnexpectedJSONParseError]: ' + err.message;
	  }
	};
	
	
	/**
	 * Colorize log arguments if enabled.
	 *
	 * @api public
	 */
	
	function formatArgs(args) {
	  var useColors = this.useColors;
	
	  args[0] = (useColors ? '%c' : '')
	    + this.namespace
	    + (useColors ? ' %c' : ' ')
	    + args[0]
	    + (useColors ? '%c ' : ' ')
	    + '+' + exports.humanize(this.diff);
	
	  if (!useColors) return;
	
	  var c = 'color: ' + this.color;
	  args.splice(1, 0, c, 'color: inherit')
	
	  // the final "%c" is somewhat tricky, because there could be other
	  // arguments passed either before or after the %c, so we need to
	  // figure out the correct index to insert the CSS into
	  var index = 0;
	  var lastC = 0;
	  args[0].replace(/%[a-zA-Z%]/g, function(match) {
	    if ('%%' === match) return;
	    index++;
	    if ('%c' === match) {
	      // we only are interested in the *last* %c
	      // (the user may have provided their own)
	      lastC = index;
	    }
	  });
	
	  args.splice(lastC, 0, c);
	}
	
	/**
	 * Invokes `console.log()` when available.
	 * No-op when `console.log` is not a "function".
	 *
	 * @api public
	 */
	
	function log() {
	  // this hackery is required for IE8/9, where
	  // the `console.log` function doesn't have 'apply'
	  return 'object' === typeof console
	    && console.log
	    && Function.prototype.apply.call(console.log, console, arguments);
	}
	
	/**
	 * Save `namespaces`.
	 *
	 * @param {String} namespaces
	 * @api private
	 */
	
	function save(namespaces) {
	  try {
	    if (null == namespaces) {
	      exports.storage.removeItem('debug');
	    } else {
	      exports.storage.debug = namespaces;
	    }
	  } catch(e) {}
	}
	
	/**
	 * Load `namespaces`.
	 *
	 * @return {String} returns the previously persisted debug modes
	 * @api private
	 */
	
	function load() {
	  var r;
	  try {
	    r = exports.storage.debug;
	  } catch(e) {}
	
	  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	  if (!r && typeof process !== 'undefined' && 'env' in process) {
	    r = ({"NODE_ENV":"production","PUBLIC_DIR":"/Users/danlevy/code/oss/dans-blog/public"}).DEBUG;
	  }
	
	  return r;
	}
	
	/**
	 * Enable namespaces listed in `localStorage.debug` initially.
	 */
	
	exports.enable(load());
	
	/**
	 * Localstorage attempts to return the localstorage.
	 *
	 * This is necessary because safari throws
	 * when a user disables cookies/localstorage
	 * and you attempt to access it.
	 *
	 * @return {LocalStorage}
	 * @api private
	 */
	
	function localstorage() {
	  try {
	    return window.localStorage;
	  } catch (e) {}
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)))

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var keys = __webpack_require__(326);
	var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';
	
	var toStr = Object.prototype.toString;
	var concat = Array.prototype.concat;
	var origDefineProperty = Object.defineProperty;
	
	var isFunction = function (fn) {
		return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
	};
	
	var arePropertyDescriptorsSupported = function () {
		var obj = {};
		try {
			origDefineProperty(obj, 'x', { enumerable: false, value: obj });
			// eslint-disable-next-line no-unused-vars, no-restricted-syntax
			for (var _ in obj) { // jscs:ignore disallowUnusedVariables
				return false;
			}
			return obj.x === obj;
		} catch (e) { /* this is IE 8. */
			return false;
		}
	};
	var supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();
	
	var defineProperty = function (object, name, value, predicate) {
		if (name in object && (!isFunction(predicate) || !predicate())) {
			return;
		}
		if (supportsDescriptors) {
			origDefineProperty(object, name, {
				configurable: true,
				enumerable: false,
				value: value,
				writable: true
			});
		} else {
			object[name] = value;
		}
	};
	
	var defineProperties = function (object, map) {
		var predicates = arguments.length > 2 ? arguments[2] : {};
		var props = keys(map);
		if (hasSymbols) {
			props = concat.call(props, Object.getOwnPropertySymbols(map));
		}
		for (var i = 0; i < props.length; i += 1) {
			defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
		}
	};
	
	defineProperties.supportsDescriptors = !!supportsDescriptors;
	
	module.exports = defineProperties;


/***/ }),
/* 152 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var _default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	exports.default = _default;
	module.exports = exports["default"];

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _createRule = __webpack_require__(196);
	
	var _createRule2 = _interopRequireDefault(_createRule);
	
	var _linkRule = __webpack_require__(464);
	
	var _linkRule2 = _interopRequireDefault(_linkRule);
	
	var _StyleRule = __webpack_require__(115);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _escape = __webpack_require__(1356);
	
	var _escape2 = _interopRequireDefault(_escape);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Contains rules objects and allows adding/removing etc.
	 * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
	 */
	var RuleList = function () {
	
	  // Original styles object.
	  function RuleList(options) {
	    var _this = this;
	
	    _classCallCheck(this, RuleList);
	
	    this.map = {};
	    this.raw = {};
	    this.index = [];
	
	    this.update = function (name, data) {
	      var _options = _this.options,
	          plugins = _options.jss.plugins,
	          sheet = _options.sheet;
	
	      if (typeof name === 'string') {
	        plugins.onUpdate(data, _this.get(name), sheet);
	      } else {
	        for (var index = 0; index < _this.index.length; index++) {
	          plugins.onUpdate(name, _this.index[index], sheet);
	        }
	      }
	    };
	
	    this.options = options;
	    this.classes = options.classes;
	  }
	
	  /**
	   * Create and register rule.
	   *
	   * Will not render after Style Sheet was rendered the first time.
	   */
	
	
	  // Used to ensure correct rules order.
	
	  // Rules registry for access by .get() method.
	  // It contains the same rule registered by name and by selector.
	
	
	  _createClass(RuleList, [{
	    key: 'add',
	    value: function add(name, decl, options) {
	      var _options2 = this.options,
	          parent = _options2.parent,
	          sheet = _options2.sheet,
	          jss = _options2.jss,
	          Renderer = _options2.Renderer,
	          generateClassName = _options2.generateClassName;
	
	
	      options = _extends({
	        classes: this.classes,
	        parent: parent,
	        sheet: sheet,
	        jss: jss,
	        Renderer: Renderer,
	        generateClassName: generateClassName
	      }, options);
	
	      if (!options.selector && this.classes[name]) {
	        options.selector = '.' + (0, _escape2['default'])(this.classes[name]);
	      }
	
	      this.raw[name] = decl;
	
	      var rule = (0, _createRule2['default'])(name, decl, options);
	
	      var className = void 0;
	
	      if (!options.selector && rule instanceof _StyleRule2['default']) {
	        className = generateClassName(rule, sheet);
	        rule.selector = '.' + (0, _escape2['default'])(className);
	      }
	
	      this.register(rule, className);
	
	      var index = options.index === undefined ? this.index.length : options.index;
	      this.index.splice(index, 0, rule);
	
	      return rule;
	    }
	
	    /**
	     * Get a rule.
	     */
	
	  }, {
	    key: 'get',
	    value: function get(name) {
	      return this.map[name];
	    }
	
	    /**
	     * Delete a rule.
	     */
	
	  }, {
	    key: 'remove',
	    value: function remove(rule) {
	      this.unregister(rule);
	      this.index.splice(this.indexOf(rule), 1);
	    }
	
	    /**
	     * Get index of a rule.
	     */
	
	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.index.indexOf(rule);
	    }
	
	    /**
	     * Run `onProcessRule()` plugins on every rule.
	     */
	
	  }, {
	    key: 'process',
	    value: function process() {
	      var plugins = this.options.jss.plugins;
	      // We need to clone array because if we modify the index somewhere else during a loop
	      // we end up with very hard-to-track-down side effects.
	
	      this.index.slice(0).forEach(plugins.onProcessRule, plugins);
	    }
	
	    /**
	     * Register a rule in `.map` and `.classes` maps.
	     */
	
	  }, {
	    key: 'register',
	    value: function register(rule, className) {
	      this.map[rule.key] = rule;
	      if (rule instanceof _StyleRule2['default']) {
	        this.map[rule.selector] = rule;
	        if (className) this.classes[rule.key] = className;
	      }
	    }
	
	    /**
	     * Unregister a rule.
	     */
	
	  }, {
	    key: 'unregister',
	    value: function unregister(rule) {
	      delete this.map[rule.key];
	      if (rule instanceof _StyleRule2['default']) {
	        delete this.map[rule.selector];
	        delete this.classes[rule.key];
	      }
	    }
	
	    /**
	     * Update the function values with a new data.
	     */
	
	  }, {
	    key: 'link',
	
	
	    /**
	     * Link renderable rules with CSSRuleList.
	     */
	    value: function link(cssRules) {
	      var map = this.options.sheet.renderer.getUnescapedKeysMap(this.index);
	
	      for (var i = 0; i < cssRules.length; i++) {
	        var cssRule = cssRules[i];
	        var _key = this.options.sheet.renderer.getKey(cssRule);
	        if (map[_key]) _key = map[_key];
	        var rule = this.map[_key];
	        if (rule) (0, _linkRule2['default'])(rule, cssRule);
	      }
	    }
	
	    /**
	     * Convert rules to a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      var str = '';
	      var sheet = this.options.sheet;
	
	      var link = sheet ? sheet.options.link : false;
	
	      for (var index = 0; index < this.index.length; index++) {
	        var rule = this.index[index];
	        var css = rule.toString(options);
	
	        // No need to render an empty rule.
	        if (!css && !link) continue;
	
	        if (str) str += '\n';
	        str += css;
	      }
	
	      return str;
	    }
	  }]);
	
	  return RuleList;
	}();
	
	exports['default'] = RuleList;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(491);
	
	/**
	 * The base implementation of `assignValue` and `assignMergeValue` without
	 * value checks.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function baseAssignValue(object, key, value) {
	  if (key == '__proto__' && defineProperty) {
	    defineProperty(object, key, {
	      'configurable': true,
	      'enumerable': true,
	      'value': value,
	      'writable': true
	    });
	  } else {
	    object[key] = value;
	  }
	}
	
	module.exports = baseAssignValue;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(476),
	    keys = __webpack_require__(58);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(119),
	    toKey = __webpack_require__(122);
	
	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = castPath(path, object);
	
	  var index = 0,
	      length = path.length;
	
	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}
	
	module.exports = baseGet;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(474),
	    baseIsNaN = __webpack_require__(1382),
	    strictIndexOf = __webpack_require__(1478);
	
	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  return value === value
	    ? strictIndexOf(array, value, fromIndex)
	    : baseFindIndex(array, baseIsNaN, fromIndex);
	}
	
	module.exports = baseIndexOf;


/***/ }),
/* 158 */
/***/ (function(module, exports) {

	/**
	 * Gets the argument placeholder value for `func`.
	 *
	 * @private
	 * @param {Function} func The function to inspect.
	 * @returns {*} Returns the placeholder value.
	 */
	function getHolder(func) {
	  var object = func;
	  return object.placeholder;
	}
	
	module.exports = getHolder;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(1361),
	    Map = __webpack_require__(298),
	    Promise = __webpack_require__(1363),
	    Set = __webpack_require__(1364),
	    WeakMap = __webpack_require__(467),
	    baseGetTag = __webpack_require__(79),
	    toSource = __webpack_require__(509);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';
	
	var dataViewTag = '[object DataView]';
	
	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;
	
	// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = baseGetTag(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : '';
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	module.exports = getTag;


/***/ }),
/* 160 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  var type = typeof value;
	  length = length == null ? MAX_SAFE_INTEGER : length;
	
	  return !!length &&
	    (type == 'number' ||
	      (type != 'symbol' && reIsUint.test(value))) &&
	        (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsArguments = __webpack_require__(1378),
	    isObjectLike = __webpack_require__(48);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	    !propertyIsEnumerable.call(value, 'callee');
	};
	
	module.exports = isArguments;


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(33),
	    stubFalse = __webpack_require__(1509);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
	
	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;
	
	module.exports = isBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(223)(module)))

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(79),
	    getPrototype = __webpack_require__(313),
	    isObjectLike = __webpack_require__(48);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(79),
	    isArray = __webpack_require__(27),
	    isObjectLike = __webpack_require__(48);
	
	/** `Object#toString` result references. */
	var stringTag = '[object String]';
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	}
	
	module.exports = isString;


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(79),
	    isObjectLike = __webpack_require__(48);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(471),
	    baseEach = __webpack_require__(202),
	    baseIteratee = __webpack_require__(57),
	    baseReduce = __webpack_require__(1397),
	    isArray = __webpack_require__(27);
	
	/**
	 * Reduces `collection` to a value which is the accumulated result of running
	 * each element in `collection` thru `iteratee`, where each successive
	 * invocation is supplied the return value of the previous. If `accumulator`
	 * is not given, the first element of `collection` is used as the initial
	 * value. The iteratee is invoked with four arguments:
	 * (accumulator, value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.reduce`, `_.reduceRight`, and `_.transform`.
	 *
	 * The guarded methods are:
	 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	 * and `sortBy`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @returns {*} Returns the accumulated value.
	 * @see _.reduceRight
	 * @example
	 *
	 * _.reduce([1, 2], function(sum, n) {
	 *   return sum + n;
	 * }, 0);
	 * // => 3
	 *
	 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 *   return result;
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	 */
	function reduce(collection, iteratee, accumulator) {
	  var func = isArray(collection) ? arrayReduce : baseReduce,
	      initAccum = arguments.length < 3;
	
	  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	}
	
	module.exports = reduce;


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(308);
	
	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}
	
	module.exports = toString;


/***/ }),
/* 168 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.REPLACEMENT_CHARACTER = '\uFFFD';
	
	exports.CODE_POINTS = {
	    EOF: -1,
	    NULL: 0x00,
	    TABULATION: 0x09,
	    CARRIAGE_RETURN: 0x0D,
	    LINE_FEED: 0x0A,
	    FORM_FEED: 0x0C,
	    SPACE: 0x20,
	    EXCLAMATION_MARK: 0x21,
	    QUOTATION_MARK: 0x22,
	    NUMBER_SIGN: 0x23,
	    AMPERSAND: 0x26,
	    APOSTROPHE: 0x27,
	    HYPHEN_MINUS: 0x2D,
	    SOLIDUS: 0x2F,
	    DIGIT_0: 0x30,
	    DIGIT_9: 0x39,
	    SEMICOLON: 0x3B,
	    LESS_THAN_SIGN: 0x3C,
	    EQUALS_SIGN: 0x3D,
	    GREATER_THAN_SIGN: 0x3E,
	    QUESTION_MARK: 0x3F,
	    LATIN_CAPITAL_A: 0x41,
	    LATIN_CAPITAL_F: 0x46,
	    LATIN_CAPITAL_X: 0x58,
	    LATIN_CAPITAL_Z: 0x5A,
	    GRAVE_ACCENT: 0x60,
	    LATIN_SMALL_A: 0x61,
	    LATIN_SMALL_F: 0x66,
	    LATIN_SMALL_X: 0x78,
	    LATIN_SMALL_Z: 0x7A,
	    REPLACEMENT_CHARACTER: 0xFFFD
	};
	
	exports.CODE_POINT_SEQUENCES = {
	    DASH_DASH_STRING: [0x2D, 0x2D], //--
	    DOCTYPE_STRING: [0x44, 0x4F, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE
	    CDATA_START_STRING: [0x5B, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5B], //[CDATA[
	    CDATA_END_STRING: [0x5D, 0x5D, 0x3E], //]]>
	    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script
	    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4C, 0x49, 0x43], //PUBLIC
	    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4D] //SYSTEM
	};


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.addAbsolutePositions = addAbsolutePositions;
	exports.addQueryID = addQueryID;
	exports.removeEmptyKey = exports.defer = exports.getDisplayName = exports.shallowEqual = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _isPlainObject2 = _interopRequireDefault(__webpack_require__(163));
	
	var _isEmpty2 = _interopRequireDefault(__webpack_require__(80));
	
	// From https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js
	var shallowEqual = function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  } // Test for A's keys different from B.
	
	
	  var hasOwn = Object.prototype.hasOwnProperty;
	
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	};
	
	exports.shallowEqual = shallowEqual;
	
	var getDisplayName = function getDisplayName(Component) {
	  return Component.displayName || Component.name || 'UnknownComponent';
	};
	
	exports.getDisplayName = getDisplayName;
	var resolved = Promise.resolve();
	
	var defer = function defer(f) {
	  resolved.then(f);
	};
	
	exports.defer = defer;
	
	var removeEmptyKey = function removeEmptyKey(obj) {
	  Object.keys(obj).forEach(function (key) {
	    var value = obj[key];
	
	    if ((0, _isEmpty2.default)(value) && (0, _isPlainObject2.default)(value)) {
	      delete obj[key];
	    } else if ((0, _isPlainObject2.default)(value)) {
	      removeEmptyKey(value);
	    }
	  });
	  return obj;
	};
	
	exports.removeEmptyKey = removeEmptyKey;
	
	function addAbsolutePositions(hits, hitsPerPage, page) {
	  return hits.map(function (hit, index) {
	    return (0, _objectSpread2.default)({}, hit, {
	      __position: hitsPerPage * page + index + 1
	    });
	  });
	}
	
	function addQueryID(hits, queryID) {
	  if (!queryID) {
	    return hits;
	  }
	
	  return hits.map(function (hit) {
	    return (0, _objectSpread2.default)({}, hit, {
	      __queryID: queryID
	    });
	  });
	}

/***/ }),
/* 170 */,
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.withRouter = exports.matchPath = exports.generatePath = exports.Switch = exports.StaticRouter = exports.Router = exports.Route = exports.Redirect = exports.Prompt = exports.NavLink = exports.MemoryRouter = exports.Link = exports.HashRouter = exports.BrowserRouter = undefined;
	
	var _BrowserRouter2 = __webpack_require__(1684);
	
	var _BrowserRouter3 = _interopRequireDefault(_BrowserRouter2);
	
	var _HashRouter2 = __webpack_require__(1685);
	
	var _HashRouter3 = _interopRequireDefault(_HashRouter2);
	
	var _Link2 = __webpack_require__(550);
	
	var _Link3 = _interopRequireDefault(_Link2);
	
	var _MemoryRouter2 = __webpack_require__(1686);
	
	var _MemoryRouter3 = _interopRequireDefault(_MemoryRouter2);
	
	var _NavLink2 = __webpack_require__(1687);
	
	var _NavLink3 = _interopRequireDefault(_NavLink2);
	
	var _Prompt2 = __webpack_require__(1688);
	
	var _Prompt3 = _interopRequireDefault(_Prompt2);
	
	var _Redirect2 = __webpack_require__(1689);
	
	var _Redirect3 = _interopRequireDefault(_Redirect2);
	
	var _Route2 = __webpack_require__(551);
	
	var _Route3 = _interopRequireDefault(_Route2);
	
	var _Router2 = __webpack_require__(339);
	
	var _Router3 = _interopRequireDefault(_Router2);
	
	var _StaticRouter2 = __webpack_require__(1690);
	
	var _StaticRouter3 = _interopRequireDefault(_StaticRouter2);
	
	var _Switch2 = __webpack_require__(1691);
	
	var _Switch3 = _interopRequireDefault(_Switch2);
	
	var _generatePath2 = __webpack_require__(1692);
	
	var _generatePath3 = _interopRequireDefault(_generatePath2);
	
	var _matchPath2 = __webpack_require__(1693);
	
	var _matchPath3 = _interopRequireDefault(_matchPath2);
	
	var _withRouter2 = __webpack_require__(1694);
	
	var _withRouter3 = _interopRequireDefault(_withRouter2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.BrowserRouter = _BrowserRouter3.default;
	exports.HashRouter = _HashRouter3.default;
	exports.Link = _Link3.default;
	exports.MemoryRouter = _MemoryRouter3.default;
	exports.NavLink = _NavLink3.default;
	exports.Prompt = _Prompt3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	exports.Router = _Router3.default;
	exports.StaticRouter = _StaticRouter3.default;
	exports.Switch = _Switch3.default;
	exports.generatePath = _generatePath3.default;
	exports.matchPath = _matchPath3.default;
	exports.withRouter = _withRouter3.default;

/***/ }),
/* 172 */
/***/ (function(module, exports) {

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    "default": obj
	  };
	}
	
	module.exports = _interopRequireDefault;
	module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Input.default;
	  }
	});
	
	var _Input = _interopRequireDefault(__webpack_require__(652));

/***/ }),
/* 177 */,
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Modal.default;
	  }
	});
	Object.defineProperty(exports, "ModalManager", {
	  enumerable: true,
	  get: function get() {
	    return _ModalManager.default;
	  }
	});
	
	var _Modal = _interopRequireDefault(__webpack_require__(674));
	
	var _ModalManager = _interopRequireDefault(__webpack_require__(360));

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(56));
	
	function ownerWindow(node) {
	  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;
	  var doc = (0, _ownerDocument.default)(node);
	  return doc.defaultView || doc.parentView || fallback;
	}
	
	var _default = ownerWindow;
	exports.default = _default;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This file hosts our error definitions
	// We use custom error "types" so that we can act on them when we need it
	// e.g.: if error instanceof errors.UnparsableJSON then..
	
	var inherits = __webpack_require__(43);
	
	function AlgoliaSearchError(message, extraProperties) {
	  var forEach = __webpack_require__(113);
	
	  var error = this;
	
	  // try to get a stacktrace
	  if (typeof Error.captureStackTrace === 'function') {
	    Error.captureStackTrace(this, this.constructor);
	  } else {
	    error.stack = (new Error()).stack || 'Cannot get a stacktrace, browser is too old';
	  }
	
	  this.name = 'AlgoliaSearchError';
	  this.message = message || 'Unknown error';
	
	  if (extraProperties) {
	    forEach(extraProperties, function addToErrorObject(value, key) {
	      error[key] = value;
	    });
	  }
	}
	
	inherits(AlgoliaSearchError, Error);
	
	function createCustomError(name, message) {
	  function AlgoliaSearchCustomError() {
	    var args = Array.prototype.slice.call(arguments, 0);
	
	    // custom message not set, use default
	    if (typeof args[0] !== 'string') {
	      args.unshift(message);
	    }
	
	    AlgoliaSearchError.apply(this, args);
	    this.name = 'AlgoliaSearch' + name + 'Error';
	  }
	
	  inherits(AlgoliaSearchCustomError, AlgoliaSearchError);
	
	  return AlgoliaSearchCustomError;
	}
	
	// late exports to let various fn defs and inherits take place
	module.exports = {
	  AlgoliaSearchError: AlgoliaSearchError,
	  UnparsableJSON: createCustomError(
	    'UnparsableJSON',
	    'Could not parse the incoming response as JSON, see err.more for details'
	  ),
	  RequestTimeout: createCustomError(
	    'RequestTimeout',
	    'Request timed out before getting a response'
	  ),
	  Network: createCustomError(
	    'Network',
	    'Network issue, see err.more for details'
	  ),
	  JSONPScriptFail: createCustomError(
	    'JSONPScriptFail',
	    '<script> was loaded but did not call our provided callback'
	  ),
	  ValidUntilNotFound: createCustomError(
	    'ValidUntilNotFound',
	    'The SecuredAPIKey does not have a validUntil parameter.'
	  ),
	  JSONPScriptError: createCustomError(
	    'JSONPScriptError',
	    '<script> unable to load due to an `error` event on it'
	  ),
	  ObjectNotFound: createCustomError(
	    'ObjectNotFound',
	    'Object not found'
	  ),
	  Unknown: createCustomError(
	    'Unknown',
	    'Unknown error occured'
	  )
	};


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

	var foreach = __webpack_require__(113);
	
	module.exports = function map(arr, fn) {
	  var newArr = [];
	  foreach(arr, function(item, itemIndex) {
	    newArr.push(fn(item, itemIndex, arr));
	  });
	  return newArr;
	};


/***/ }),
/* 182 */,
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(17);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _reactRedux = __webpack_require__(54);
	
	var _store = __webpack_require__(51);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _gatsbyRespImage, _ul, _content;
	
	  return {
	    content: (_content = {
	      color: theme.main.colors.content,
	      fontSize: function fontSize(props) {
	        return "calc(" + theme.main.fonts.content.size + "em * " + props.fontSizeIncrease + ")";
	      },
	      lineHeight: theme.main.fonts.content.lineHeight,
	      "& a": {
	        color: theme.base.colors.link
	      },
	      "& .gatsby-highlight": {
	        margin: "2em 0"
	      },
	      "& .gatsby-resp-iframe-wrapper": {
	        margin: "2em 0"
	      },
	      "& .gatsby-resp-image-link": (_gatsbyRespImage = {
	        margin: "2em -1.5rem",
	        border: "none"
	      }, _gatsbyRespImage["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	        margin: "2.5em -3.5rem"
	      }, _gatsbyRespImage),
	      "& h2, & h3": {
	        color: theme.main.colors.contentHeading,
	        fontSize: theme.main.fonts.contentHeading.h2Size + "em",
	        fontWeight: theme.main.fonts.contentHeading.weight,
	        lineHeight: theme.main.fonts.contentHeading.lineHeight,
	        margin: "2em 0 1em",
	        letterSpacing: "-0.02em"
	      },
	      "& h3": {
	        fontSize: theme.main.fonts.contentHeading.h3Size + "em"
	      },
	      "& p": {
	        margin: "0 0 0.5em 0",
	        fontWeight: 400
	      },
	      "& ul": (_ul = {
	        listStyle: "circle",
	        padding: "0 0 0 1.3em"
	      }, _ul["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	        padding: "0 0 0 2em"
	      }, _ul),
	      "& li": {
	        margin: "0 0 .5em 0"
	      },
	      "& blockquote": {
	        border: "2.5px solid " + theme.main.colors.blockquoteFrame,
	        fontStyle: "italic",
	        margin: "2.5em 0",
	        padding: "1em 1.1em 1em 1.3em",
	        position: "relative",
	        "& p": {
	          margin: 0
	        },
	        "&::before, &::after": {
	          background: theme.main.colors.background,
	          content: "\"\"",
	          height: "5px",
	          left: "50%",
	          marginLeft: "-47%",
	          position: "absolute",
	          top: "-5px",
	          width: "94%"
	        },
	        "&::after": {
	          top: "auto",
	          bottom: "-5px"
	        }
	      },
	      "& table": {
	        width: "100%"
	      }
	    }, _content["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      fontSize: theme.main.fonts.content.sizeM + "em"
	    }, _content["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      fontSize: theme.main.fonts.content.sizeL + "em"
	    }, _content)
	  };
	};
	
	var Content = function Content(props) {
	  var classes = props.classes,
	      html = props.html,
	      children = props.children;
	
	
	  if (html) {
	    return _react2.default.createElement("div", { className: classes.content, dangerouslySetInnerHTML: { __html: html } });
	  } else {
	    return _react2.default.createElement(
	      "div",
	      { className: classes.content },
	      children
	    );
	  }
	};
	
	Content.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  html: _propTypes2.default.string,
	  children: _propTypes2.default.node,
	  setFontSizeIncrease: _propTypes2.default.func.isRequired,
	  fontSizeIncrease: _propTypes2.default.number.isRequired
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    fontSizeIncrease: state.fontSizeIncrease
	  };
	};
	
	var mapDispatchToProps = {
	  setFontSizeIncrease: _store.setFontSizeIncrease
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _reactJss2.default)(styles)(Content));
	module.exports = exports["default"];

/***/ }),
/* 184 */,
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _styles = __webpack_require__(86);
	
	var _color = __webpack_require__(934);
	
	var _color2 = _interopRequireDefault(_color);
	
	var _colors = __webpack_require__(400);
	
	var _colors2 = _interopRequireDefault(_colors);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var theme = (0, _styles.createMuiTheme)({
	  base: {
	    colors: {
	      background: _colors2.default.background,
	      text: _colors2.default.dark,
	      link: _colors2.default.accent,
	      linkHover: (0, _color2.default)(_colors2.default.accent).lighten(0.1).string(),
	      accent: _colors2.default.accent,
	      lines: _colors2.default.superLightGray
	    },
	    sizes: {
	      linesMargin: "20px"
	    },
	    fonts: {
	      unstyledFamily: "Arial",
	      styledFamily: "Open Sans",
	      styledFonts: "300,400,600"
	    }
	  },
	  info: {
	    colors: {
	      text: _colors2.default.gray,
	      background: _colors2.default.background,
	      socialIcons: _colors2.default.lightGray,
	      socialIconsHover: _colors2.default.accent,
	      menuLink: _colors2.default.gray,
	      menuLinkHover: _colors2.default.accent
	    },
	    sizes: {
	      width: 320,
	      headerHeight: 170
	    },
	    fonts: {
	      boxTitleSize: 1.3,
	      boxTitleSizeM: 1.5,
	      boxTitleSizeL: 1.7
	    }
	  },
	  navigator: {
	    colors: {
	      background: _colors2.default.background,
	      postsListItemLink: _colors2.default.gray,
	      postsListItemLinkHover: _colors2.default.accent,
	      postsHeader: _colors2.default.gray
	    },
	    sizes: {
	      closedHeight: 80,
	      postsListItemH1Font: 1.3,
	      postsListItemH2Font: 1.1,
	      fontIncraseForM: 1.15,
	      fontIncraseForL: 1.3
	    }
	  },
	  main: {
	    colors: {
	      background: _colors2.default.background,
	      title: _colors2.default.gray,
	      subTitle: _colors2.default.gray,
	      meta: _colors2.default.gray,
	      content: _colors2.default.dark,
	      footer: _colors2.default.gray,
	      contentHeading: _colors2.default.gray,
	      blockquoteFrame: _colors2.default.lightGray,
	      link: _colors2.default.accent,
	      linkHover: _colors2.default.dark,
	      fbCommentsColorscheme: "light"
	    },
	    sizes: {
	      articleMaxWidth: "50em"
	    },
	    fonts: {
	      title: {
	        size: 1.9,
	        sizeM: 2.5,
	        sizeL: 2.7,
	        weight: 600,
	        lineHeight: 1.1
	      },
	      subTitle: {
	        size: 1.5,
	        sizeM: 1.8,
	        sizeL: 1.95,
	        weight: 300,
	        lineHeight: 1.1
	      },
	      meta: {
	        size: 0.9,
	        weight: 600
	      },
	      content: {
	        size: 1.0,
	        sizeM: 1.15,
	        sizeL: 1.1,
	        lineHeight: 1.6
	      },
	      contentHeading: {
	        h2Size: 1.5,
	        h3Size: 1.3,
	        weight: 600,
	        lineHeight: 1.3
	      },
	      footer: {
	        size: 1,
	        lineHeight: 1.4
	      }
	    }
	  },
	  footer: {
	    colors: {
	      text: (0, _color2.default)(_colors2.default.gray).lighten(0.5).string(),
	      link: _colors2.default.accent,
	      linkHover: (0, _color2.default)(_colors2.default.accent).lighten(0.2).string()
	    },
	    fonts: {
	      footnote: {
	        size: 0.8,
	        lineHeight: 1.4
	      }
	    }
	  },
	  bars: {
	    colors: {
	      background: _colors2.default.background,
	      icon: _colors2.default.gray,
	      text: _colors2.default.gray
	    },
	    sizes: {
	      actionsBar: 60,
	      infoBar: 60
	    }
	  },
	  mediaQueryTresholds: {
	    M: 600,
	    L: 1024
	  },
	  palette: {
	    primary: {
	      main: _colors2.default.accent
	    },
	    action: {
	      hover: "rgba(0, 0, 0, 0.01)"
	    }
	  },
	  typography: {
	    fontFamily: "Lato, Arial, sans-serif",
	    fontSize: 16,
	    useNextVariants: true
	  }
	});
	
	exports.default = theme;
	module.exports = exports["default"];

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */
	
	'use strict'
	
	var base64 = __webpack_require__(922)
	var ieee754 = __webpack_require__(1208)
	var isArray = __webpack_require__(92)
	
	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	
	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.
	
	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()
	
	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()
	
	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}
	
	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}
	
	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }
	
	  return that
	}
	
	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */
	
	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }
	
	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}
	
	Buffer.poolSize = 8192 // not used by this implementation
	
	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}
	
	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }
	
	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }
	
	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }
	
	  return fromObject(that, value)
	}
	
	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}
	
	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}
	
	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}
	
	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}
	
	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}
	
	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}
	
	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}
	
	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }
	
	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }
	
	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)
	
	  var actual = that.write(string, encoding)
	
	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }
	
	  return that
	}
	
	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer
	
	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }
	
	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }
	
	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }
	
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}
	
	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)
	
	    if (that.length === 0) {
	      return that
	    }
	
	    obj.copy(that, 0, 0, len)
	    return that
	  }
	
	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }
	
	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }
	
	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}
	
	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}
	
	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}
	
	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}
	
	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }
	
	  if (a === b) return 0
	
	  var x = a.length
	  var y = b.length
	
	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}
	
	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }
	
	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }
	
	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }
	
	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}
	
	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }
	
	  var len = string.length
	  if (len === 0) return 0
	
	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength
	
	function slowToString (encoding, start, end) {
	  var loweredCase = false
	
	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.
	
	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }
	
	  if (end === undefined || end > this.length) {
	    end = this.length
	  }
	
	  if (end <= 0) {
	    return ''
	  }
	
	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0
	
	  if (end <= start) {
	    return ''
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)
	
	      case 'ascii':
	        return asciiSlice(this, start, end)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)
	
	      case 'base64':
	        return base64Slice(this, start, end)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true
	
	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}
	
	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}
	
	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}
	
	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}
	
	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}
	
	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}
	
	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}
	
	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }
	
	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }
	
	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }
	
	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }
	
	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0
	
	  if (this === target) return 0
	
	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)
	
	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)
	
	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1
	
	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }
	
	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }
	
	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }
	
	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }
	
	  throw new TypeError('val must be string, number or Buffer')
	}
	
	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length
	
	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }
	
	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }
	
	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }
	
	  return -1
	}
	
	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}
	
	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}
	
	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}
	
	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }
	
	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')
	
	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}
	
	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}
	
	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}
	
	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}
	
	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }
	
	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining
	
	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)
	
	      case 'ascii':
	        return asciiWrite(this, string, offset, length)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)
	
	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}
	
	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}
	
	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []
	
	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1
	
	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint
	
	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }
	
	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }
	
	    res.push(codePoint)
	    i += bytesPerSequence
	  }
	
	  return decodeCodePointsArray(res)
	}
	
	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000
	
	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }
	
	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}
	
	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}
	
	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}
	
	function hexSlice (buf, start, end) {
	  var len = buf.length
	
	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len
	
	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}
	
	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}
	
	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end
	
	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }
	
	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }
	
	  if (end < start) end = start
	
	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }
	
	  return newBuf
	}
	
	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}
	
	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }
	
	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}
	
	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}
	
	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}
	
	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}
	
	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}
	
	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}
	
	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}
	
	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}
	
	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}
	
	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}
	
	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}
	
	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}
	
	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}
	
	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}
	
	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}
	
	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}
	
	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}
	
	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}
	
	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}
	
	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}
	
	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start
	
	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0
	
	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')
	
	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }
	
	  var len = end - start
	  var i
	
	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }
	
	  return len
	}
	
	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }
	
	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }
	
	  if (end <= start) {
	    return this
	  }
	
	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0
	
	  if (!val) val = 0
	
	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }
	
	  return this
	}
	
	// HELPER FUNCTIONS
	// ================
	
	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g
	
	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}
	
	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}
	
	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}
	
	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []
	
	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)
	
	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }
	
	        // valid lead
	        leadSurrogate = codePoint
	
	        continue
	      }
	
	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }
	
	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }
	
	    leadSurrogate = null
	
	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }
	
	  return bytes
	}
	
	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}
	
	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break
	
	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }
	
	  return byteArray
	}
	
	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}
	
	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}
	
	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 187 */
/***/ (function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ }),
/* 188 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(418)
	  , defined = __webpack_require__(261);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ }),
/* 190 */
/***/ (function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ }),
/* 191 */
/***/ (function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	// add fake Function#toString
	// for correct work wrapped methods / constructors with methods like LoDash isNative
	var global    = __webpack_require__(52)
	  , hide      = __webpack_require__(110)
	  , SRC       = __webpack_require__(433)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);
	
	__webpack_require__(143).inspectSource = function(it){
	  return $toString.call(it);
	};
	
	(module.exports = function(O, key, val, safe){
	  if(typeof val == 'function'){
	    val.hasOwnProperty(SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	    val.hasOwnProperty('name') || hide(val, 'name', key);
	  }
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe)delete O[key];
	    hide(O, key, val);
	  }
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global = global || self, global.deepmerge = factory());
	}(this, function () { 'use strict';
	
		var isMergeableObject = function isMergeableObject(value) {
			return isNonNullObject(value)
				&& !isSpecial(value)
		};
	
		function isNonNullObject(value) {
			return !!value && typeof value === 'object'
		}
	
		function isSpecial(value) {
			var stringValue = Object.prototype.toString.call(value);
	
			return stringValue === '[object RegExp]'
				|| stringValue === '[object Date]'
				|| isReactElement(value)
		}
	
		// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
		var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
		var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;
	
		function isReactElement(value) {
			return value.$$typeof === REACT_ELEMENT_TYPE
		}
	
		function emptyTarget(val) {
			return Array.isArray(val) ? [] : {}
		}
	
		function cloneUnlessOtherwiseSpecified(value, options) {
			return (options.clone !== false && options.isMergeableObject(value))
				? deepmerge(emptyTarget(value), value, options)
				: value
		}
	
		function defaultArrayMerge(target, source, options) {
			return target.concat(source).map(function(element) {
				return cloneUnlessOtherwiseSpecified(element, options)
			})
		}
	
		function getMergeFunction(key, options) {
			if (!options.customMerge) {
				return deepmerge
			}
			var customMerge = options.customMerge(key);
			return typeof customMerge === 'function' ? customMerge : deepmerge
		}
	
		function getEnumerableOwnPropertySymbols(target) {
			return Object.getOwnPropertySymbols
				? Object.getOwnPropertySymbols(target).filter(function(symbol) {
					return target.propertyIsEnumerable(symbol)
				})
				: []
		}
	
		function getKeys(target) {
			return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))
		}
	
		function mergeObject(target, source, options) {
			var destination = {};
			if (options.isMergeableObject(target)) {
				getKeys(target).forEach(function(key) {
					destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
				});
			}
			getKeys(source).forEach(function(key) {
				if (!options.isMergeableObject(source[key]) || !target[key]) {
					destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
				} else {
					destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
				}
			});
			return destination
		}
	
		function deepmerge(target, source, options) {
			options = options || {};
			options.arrayMerge = options.arrayMerge || defaultArrayMerge;
			options.isMergeableObject = options.isMergeableObject || isMergeableObject;
	
			var sourceIsArray = Array.isArray(source);
			var targetIsArray = Array.isArray(target);
			var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
	
			if (!sourceAndTargetTypesMatch) {
				return cloneUnlessOtherwiseSpecified(source, options)
			} else if (sourceIsArray) {
				return options.arrayMerge(target, source, options)
			} else {
				return mergeObject(target, source, options)
			}
		}
	
		deepmerge.all = function deepmergeAll(array, options) {
			if (!Array.isArray(array)) {
				throw new Error('first argument should be an array')
			}
	
			return array.reduce(function(prev, next) {
				return deepmerge(prev, next, options)
			}, {})
		};
	
		var deepmerge_1 = deepmerge;
	
		return deepmerge_1;
	
	}));


/***/ }),
/* 194 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var isBrowser = exports.isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === 'object' && document.nodeType === 9;
	
	exports.default = isBrowser;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.create = exports.createGenerateClassName = exports.sheets = exports.RuleList = exports.SheetsManager = exports.SheetsRegistry = exports.toCssValue = exports.getDynamicStyles = undefined;
	
	var _getDynamicStyles = __webpack_require__(1357);
	
	Object.defineProperty(exports, 'getDynamicStyles', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getDynamicStyles)['default'];
	  }
	});
	
	var _toCssValue = __webpack_require__(197);
	
	Object.defineProperty(exports, 'toCssValue', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_toCssValue)['default'];
	  }
	});
	
	var _SheetsRegistry = __webpack_require__(460);
	
	Object.defineProperty(exports, 'SheetsRegistry', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SheetsRegistry)['default'];
	  }
	});
	
	var _SheetsManager = __webpack_require__(1344);
	
	Object.defineProperty(exports, 'SheetsManager', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SheetsManager)['default'];
	  }
	});
	
	var _RuleList = __webpack_require__(153);
	
	Object.defineProperty(exports, 'RuleList', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RuleList)['default'];
	  }
	});
	
	var _sheets = __webpack_require__(295);
	
	Object.defineProperty(exports, 'sheets', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_sheets)['default'];
	  }
	});
	
	var _createGenerateClassName = __webpack_require__(462);
	
	Object.defineProperty(exports, 'createGenerateClassName', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_createGenerateClassName)['default'];
	  }
	});
	
	var _Jss = __webpack_require__(1342);
	
	var _Jss2 = _interopRequireDefault(_Jss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Creates a new instance of Jss.
	 */
	var create = exports.create = function create(options) {
	  return new _Jss2['default'](options);
	};
	
	/**
	 * A global Jss instance.
	 */
	exports['default'] = create();

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = createRule;
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _StyleRule = __webpack_require__(115);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _cloneStyle = __webpack_require__(1355);
	
	var _cloneStyle2 = _interopRequireDefault(_cloneStyle);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Create a rule instance.
	 */
	function createRule() {
	  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'unnamed';
	  var decl = arguments[1];
	  var options = arguments[2];
	  var jss = options.jss;
	
	  var declCopy = (0, _cloneStyle2['default'])(decl);
	
	  var rule = jss.plugins.onCreateRule(name, declCopy, options);
	  if (rule) return rule;
	
	  // It is an at-rule and it has no instance.
	  if (name[0] === '@') {
	    (0, _warning2['default'])(false, '[JSS] Unknown at-rule %s', name);
	  }
	
	  return new _StyleRule2['default'](name, declCopy, options);
	}

/***/ }),
/* 197 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = toCssValue;
	var join = function join(value, by) {
	  var result = '';
	  for (var i = 0; i < value.length; i++) {
	    // Remove !important from the value, it will be readded later.
	    if (value[i] === '!important') break;
	    if (result) result += by;
	    result += value[i];
	  }
	  return result;
	};
	
	/**
	 * Converts array values to string.
	 *
	 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
	 * `border: ['1px', '2px']` > `border: 1px, 2px;`
	 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
	 * `color: ['red', !important]` > `color: red !important;`
	 */
	function toCssValue(value) {
	  var ignoreImportant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  if (!Array.isArray(value)) return value;
	
	  var cssValue = '';
	
	  // Support space separated values via `[['5px', '10px']]`.
	  if (Array.isArray(value[0])) {
	    for (var i = 0; i < value.length; i++) {
	      if (value[i] === '!important') break;
	      if (cssValue) cssValue += ', ';
	      cssValue += join(value[i], ' ');
	    }
	  } else cssValue = join(value, ', ');
	
	  // Add !important, because it was ignored.
	  if (!ignoreImportant && value[value.length - 1] === '!important') {
	    cssValue += ' !important';
	  }
	
	  return cssValue;
	}

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(1451),
	    listCacheDelete = __webpack_require__(1452),
	    listCacheGet = __webpack_require__(1453),
	    listCacheHas = __webpack_require__(1454),
	    listCacheSet = __webpack_require__(1455);
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	module.exports = ListCache;


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(198),
	    stackClear = __webpack_require__(1473),
	    stackDelete = __webpack_require__(1474),
	    stackGet = __webpack_require__(1475),
	    stackHas = __webpack_require__(1476),
	    stackSet = __webpack_require__(1477);
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  var data = this.__data__ = new ListCache(entries);
	  this.size = data.size;
	}
	
	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	module.exports = Stack;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(123);
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(47);
	
	/** Built-in value references. */
	var objectCreate = Object.create;
	
	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} proto The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	var baseCreate = (function() {
	  function object() {}
	  return function(proto) {
	    if (!isObject(proto)) {
	      return {};
	    }
	    if (objectCreate) {
	      return objectCreate(proto);
	    }
	    object.prototype = proto;
	    var result = new object;
	    object.prototype = undefined;
	    return result;
	  };
	}());
	
	module.exports = baseCreate;


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(155),
	    createBaseEach = __webpack_require__(1419);
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	module.exports = baseEach;


/***/ }),
/* 203 */
/***/ (function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	module.exports = copyArray;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(201),
	    isObject = __webpack_require__(47);
	
	/**
	 * Creates a function that produces an instance of `Ctor` regardless of
	 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	 *
	 * @private
	 * @param {Function} Ctor The constructor to wrap.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCtor(Ctor) {
	  return function() {
	    // Use a `switch` statement to work with class constructors. See
	    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	    // for more details.
	    var args = arguments;
	    switch (args.length) {
	      case 0: return new Ctor;
	      case 1: return new Ctor(args[0]);
	      case 2: return new Ctor(args[0], args[1]);
	      case 3: return new Ctor(args[0], args[1], args[2]);
	      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	    }
	    var thisBinding = baseCreate(Ctor.prototype),
	        result = Ctor.apply(thisBinding, args);
	
	    // Mimic the constructor's `return` behavior.
	    // See https://es5.github.io/#x13.2.2 for more details.
	    return isObject(result) ? result : thisBinding;
	  };
	}
	
	module.exports = createCtor;


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(1448);
	
	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	module.exports = getMapData;


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(123),
	    isArrayLike = __webpack_require__(72),
	    isIndex = __webpack_require__(160),
	    isObject = __webpack_require__(47);
	
	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}
	
	module.exports = isIterateeCall;


/***/ }),
/* 207 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(95);
	
	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');
	
	module.exports = nativeCreate;


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(1374),
	    hasPath = __webpack_require__(498);
	
	/**
	 * Checks if `path` is a direct property of `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = { 'a': { 'b': 2 } };
	 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.has(object, 'a');
	 * // => true
	 *
	 * _.has(object, 'a.b');
	 * // => true
	 *
	 * _.has(object, ['a', 'b']);
	 * // => true
	 *
	 * _.has(other, 'a');
	 * // => false
	 */
	function has(object, path) {
	  return object != null && hasPath(object, path, baseHas);
	}
	
	module.exports = has;


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(157),
	    toInteger = __webpack_require__(98);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Gets the index at which the first occurrence of `value` is found in `array`
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. If `fromIndex` is negative, it's used as the
	 * offset from the end of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 * @example
	 *
	 * _.indexOf([1, 2, 1, 2], 2);
	 * // => 1
	 *
	 * // Search from the `fromIndex`.
	 * _.indexOf([1, 2, 1, 2], 2, 2);
	 * // => 3
	 */
	function indexOf(array, value, fromIndex) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return -1;
	  }
	  var index = fromIndex == null ? 0 : toInteger(fromIndex);
	  if (index < 0) {
	    index = nativeMax(length + index, 0);
	  }
	  return baseIndexOf(array, value, index);
	}
	
	module.exports = indexOf;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(1385),
	    baseUnary = __webpack_require__(118),
	    nodeUtil = __webpack_require__(316);
	
	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	module.exports = isTypedArray;


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

	var basePick = __webpack_require__(1392),
	    flatRest = __webpack_require__(493);
	
	/**
	 * Creates an object composed of the picked `object` properties.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to pick.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pick(object, ['a', 'c']);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var pick = flatRest(function(object, paths) {
	  return object == null ? {} : basePick(object, paths);
	});
	
	module.exports = pick;


/***/ }),
/* 213 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	
	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var DOCUMENT_MODE = __webpack_require__(53).DOCUMENT_MODE;
	
	//Const
	var VALID_DOCTYPE_NAME = 'html',
	    QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd',
	    QUIRKS_MODE_PUBLIC_ID_PREFIXES = [
	        '+//silmaril//dtd html pro v0r11 19970101//en',
	        '-//advasoft ltd//dtd html 3.0 aswedit + extensions//en',
	        '-//as//dtd html 3.0 aswedit + extensions//en',
	        '-//ietf//dtd html 2.0 level 1//en',
	        '-//ietf//dtd html 2.0 level 2//en',
	        '-//ietf//dtd html 2.0 strict level 1//en',
	        '-//ietf//dtd html 2.0 strict level 2//en',
	        '-//ietf//dtd html 2.0 strict//en',
	        '-//ietf//dtd html 2.0//en',
	        '-//ietf//dtd html 2.1e//en',
	        '-//ietf//dtd html 3.0//en',
	        '-//ietf//dtd html 3.0//en//',
	        '-//ietf//dtd html 3.2 final//en',
	        '-//ietf//dtd html 3.2//en',
	        '-//ietf//dtd html 3//en',
	        '-//ietf//dtd html level 0//en',
	        '-//ietf//dtd html level 0//en//2.0',
	        '-//ietf//dtd html level 1//en',
	        '-//ietf//dtd html level 1//en//2.0',
	        '-//ietf//dtd html level 2//en',
	        '-//ietf//dtd html level 2//en//2.0',
	        '-//ietf//dtd html level 3//en',
	        '-//ietf//dtd html level 3//en//3.0',
	        '-//ietf//dtd html strict level 0//en',
	        '-//ietf//dtd html strict level 0//en//2.0',
	        '-//ietf//dtd html strict level 1//en',
	        '-//ietf//dtd html strict level 1//en//2.0',
	        '-//ietf//dtd html strict level 2//en',
	        '-//ietf//dtd html strict level 2//en//2.0',
	        '-//ietf//dtd html strict level 3//en',
	        '-//ietf//dtd html strict level 3//en//3.0',
	        '-//ietf//dtd html strict//en',
	        '-//ietf//dtd html strict//en//2.0',
	        '-//ietf//dtd html strict//en//3.0',
	        '-//ietf//dtd html//en',
	        '-//ietf//dtd html//en//2.0',
	        '-//ietf//dtd html//en//3.0',
	        '-//metrius//dtd metrius presentational//en',
	        '-//microsoft//dtd internet explorer 2.0 html strict//en',
	        '-//microsoft//dtd internet explorer 2.0 html//en',
	        '-//microsoft//dtd internet explorer 2.0 tables//en',
	        '-//microsoft//dtd internet explorer 3.0 html strict//en',
	        '-//microsoft//dtd internet explorer 3.0 html//en',
	        '-//microsoft//dtd internet explorer 3.0 tables//en',
	        '-//netscape comm. corp.//dtd html//en',
	        '-//netscape comm. corp.//dtd strict html//en',
	        '-//o\'reilly and associates//dtd html 2.0//en',
	        '-//o\'reilly and associates//dtd html extended 1.0//en',
	        '-//spyglass//dtd html 2.0 extended//en',
	        '-//sq//dtd html 2.0 hotmetal + extensions//en',
	        '-//sun microsystems corp.//dtd hotjava html//en',
	        '-//sun microsystems corp.//dtd hotjava strict html//en',
	        '-//w3c//dtd html 3 1995-03-24//en',
	        '-//w3c//dtd html 3.2 draft//en',
	        '-//w3c//dtd html 3.2 final//en',
	        '-//w3c//dtd html 3.2//en',
	        '-//w3c//dtd html 3.2s draft//en',
	        '-//w3c//dtd html 4.0 frameset//en',
	        '-//w3c//dtd html 4.0 transitional//en',
	        '-//w3c//dtd html experimental 19960712//en',
	        '-//w3c//dtd html experimental 970421//en',
	        '-//w3c//dtd w3 html//en',
	        '-//w3o//dtd w3 html 3.0//en',
	        '-//w3o//dtd w3 html 3.0//en//',
	        '-//webtechs//dtd mozilla html 2.0//en',
	        '-//webtechs//dtd mozilla html//en'
	    ],
	    QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([
	        '-//w3c//dtd html 4.01 frameset//',
	        '-//w3c//dtd html 4.01 transitional//'
	    ]),
	    QUIRKS_MODE_PUBLIC_IDS = [
	        '-//w3o//dtd w3 html strict 3.0//en//',
	        '-/w3c/dtd html 4.0 transitional/en',
	        'html'
	    ],
	    LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = [
	        '-//W3C//DTD XHTML 1.0 Frameset//',
	        '-//W3C//DTD XHTML 1.0 Transitional//'
	    ],
	    LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([
	        '-//W3C//DTD HTML 4.01 Frameset//',
	        '-//W3C//DTD HTML 4.01 Transitional//'
	    ]);
	
	
	//Utils
	function enquoteDoctypeId(id) {
	    var quote = id.indexOf('"') !== -1 ? '\'' : '"';
	
	    return quote + id + quote;
	}
	
	function hasPrefix(publicId, prefixes) {
	    for (var i = 0; i < prefixes.length; i++) {
	        if (publicId.indexOf(prefixes[i]) === 0)
	            return true;
	    }
	
	    return false;
	}
	
	
	//API
	exports.getDocumentMode = function (name, publicId, systemId) {
	    if (name !== VALID_DOCTYPE_NAME)
	        return DOCUMENT_MODE.QUIRKS;
	
	    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID)
	        return DOCUMENT_MODE.QUIRKS;
	
	    if (publicId !== null) {
	        publicId = publicId.toLowerCase();
	
	        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1)
	            return DOCUMENT_MODE.QUIRKS;
	
	        var prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;
	
	        if (hasPrefix(publicId, prefixes))
	            return DOCUMENT_MODE.QUIRKS;
	
	        prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;
	
	        if (hasPrefix(publicId, prefixes))
	            return DOCUMENT_MODE.LIMITED_QUIRKS;
	    }
	
	    return DOCUMENT_MODE.NO_QUIRKS;
	};
	
	exports.serializeContent = function (name, publicId, systemId) {
	    var str = '!DOCTYPE ';
	
	    if (name)
	        str += name;
	
	    if (publicId !== null)
	        str += ' PUBLIC ' + enquoteDoctypeId(publicId);
	
	    else if (systemId !== null)
	        str += ' SYSTEM';
	
	    if (systemId !== null)
	        str += ' ' + enquoteDoctypeId(systemId);
	
	    return str;
	};


/***/ }),
/* 215 */
/***/ (function(module, exports) {

	'use strict';
	
	var Mixin = module.exports = function (host) {
	    var originalMethods = {},
	        overriddenMethods = this._getOverriddenMethods(this, originalMethods);
	
	    Object.keys(overriddenMethods).forEach(function (key) {
	        if (typeof overriddenMethods[key] === 'function') {
	            originalMethods[key] = host[key];
	            host[key] = overriddenMethods[key];
	        }
	    });
	};
	
	Mixin.prototype._getOverriddenMethods = function () {
	    throw new Error('Not implemented');
	};
	


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	if (typeof process === 'undefined' ||
	    !process.version ||
	    process.version.indexOf('v0.') === 0 ||
	    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
	  module.exports = { nextTick: nextTick };
	} else {
	  module.exports = process
	}
	
	function nextTick(fn, arg1, arg2, arg3) {
	  if (typeof fn !== 'function') {
	    throw new TypeError('"callback" argument must be a function');
	  }
	  var len = arguments.length;
	  var args, i;
	  switch (len) {
	  case 0:
	  case 1:
	    return process.nextTick(fn);
	  case 2:
	    return process.nextTick(function afterTickOne() {
	      fn.call(null, arg1);
	    });
	  case 3:
	    return process.nextTick(function afterTickTwo() {
	      fn.call(null, arg1, arg2);
	    });
	  case 4:
	    return process.nextTick(function afterTickThree() {
	      fn.call(null, arg1, arg2, arg3);
	    });
	  default:
	    args = new Array(len - 1);
	    i = 0;
	    while (i < args.length) {
	      args[i++] = arguments[i];
	    }
	    return process.nextTick(function afterTick() {
	      fn.apply(null, args);
	    });
	  }
	}
	
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)))

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _omit2 = _interopRequireDefault(__webpack_require__(97));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _utils = __webpack_require__(20);
	
	var Link =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Link, _Component);
	
	  function Link() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Link);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Link)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onClick", function (e) {
	      if ((0, _utils.isSpecialClick)(e)) {
	        return;
	      }
	
	      _this.props.onClick();
	
	      e.preventDefault();
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(Link, [{
	    key: "render",
	    value: function render() {
	      return _react.default.createElement("a", (0, _extends2.default)({}, (0, _omit2.default)(this.props, 'onClick'), {
	        onClick: this.onClick
	      }));
	    }
	  }]);
	  return Link;
	}(_react.Component);
	
	exports.default = Link;
	(0, _defineProperty2.default)(Link, "propTypes", {
	  onClick: _propTypes.default.func.isRequired
	});

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _SearchBox = _interopRequireDefault(__webpack_require__(540));
	
	var itemsPropType = _propTypes.default.arrayOf(_propTypes.default.shape({
	  value: _propTypes.default.any,
	  label: _propTypes.default.node.isRequired,
	  items: function items() {
	    return itemsPropType.apply(void 0, arguments);
	  }
	}));
	
	var List =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(List, _Component);
	
	  function List() {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, List);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(List).call(this));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onShowMoreClick", function () {
	      _this.setState(function (state) {
	        return {
	          extended: !state.extended
	        };
	      });
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getLimit", function () {
	      var _this$props = _this.props,
	          limit = _this$props.limit,
	          showMoreLimit = _this$props.showMoreLimit;
	      var extended = _this.state.extended;
	      return extended ? showMoreLimit : limit;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "resetQuery", function () {
	      _this.setState({
	        query: ''
	      });
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderItem", function (item, resetQuery) {
	      var itemHasChildren = item.items && Boolean(item.items.length);
	      return _react.default.createElement("li", {
	        key: item.key || item.label,
	        className: _this.props.cx('item', item.isRefined && 'item--selected', item.noRefinement && 'item--noRefinement', itemHasChildren && 'item--parent')
	      }, _this.props.renderItem(item, resetQuery), itemHasChildren && _react.default.createElement("ul", {
	        className: _this.props.cx('list', 'list--child')
	      }, item.items.slice(0, _this.getLimit()).map(function (child) {
	        return _this.renderItem(child, item);
	      })));
	    });
	    _this.state = {
	      extended: false,
	      query: ''
	    };
	    return _this;
	  }
	
	  (0, _createClass2.default)(List, [{
	    key: "renderShowMore",
	    value: function renderShowMore() {
	      var _this$props2 = this.props,
	          showMore = _this$props2.showMore,
	          translate = _this$props2.translate,
	          cx = _this$props2.cx;
	      var extended = this.state.extended;
	      var disabled = this.props.limit >= this.props.items.length;
	
	      if (!showMore) {
	        return null;
	      }
	
	      return _react.default.createElement("button", {
	        disabled: disabled,
	        className: cx('showMore', disabled && 'showMore--disabled'),
	        onClick: this.onShowMoreClick
	      }, translate('showMore', extended));
	    }
	  }, {
	    key: "renderSearchBox",
	    value: function renderSearchBox() {
	      var _this2 = this;
	
	      var _this$props3 = this.props,
	          cx = _this$props3.cx,
	          searchForItems = _this$props3.searchForItems,
	          isFromSearch = _this$props3.isFromSearch,
	          translate = _this$props3.translate,
	          items = _this$props3.items,
	          selectItem = _this$props3.selectItem;
	      var noResults = items.length === 0 && this.state.query !== '' ? _react.default.createElement("div", {
	        className: cx('noResults')
	      }, translate('noResults')) : null;
	      return _react.default.createElement("div", {
	        className: cx('searchBox')
	      }, _react.default.createElement(_SearchBox.default, {
	        currentRefinement: this.state.query,
	        refine: function refine(value) {
	          _this2.setState({
	            query: value
	          });
	
	          searchForItems(value);
	        },
	        focusShortcuts: [],
	        translate: translate,
	        onSubmit: function onSubmit(e) {
	          e.preventDefault();
	          e.stopPropagation();
	
	          if (isFromSearch) {
	            selectItem(items[0], _this2.resetQuery);
	          }
	        }
	      }), noResults);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this3 = this;
	
	      var _this$props4 = this.props,
	          cx = _this$props4.cx,
	          items = _this$props4.items,
	          className = _this$props4.className,
	          searchable = _this$props4.searchable,
	          canRefine = _this$props4.canRefine;
	      var searchBox = searchable ? this.renderSearchBox() : null;
	      var rootClassName = (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className);
	
	      if (items.length === 0) {
	        return _react.default.createElement("div", {
	          className: rootClassName
	        }, searchBox);
	      } // Always limit the number of items we show on screen, since the actual
	      // number of retrieved items might vary with the `maxValuesPerFacet` config
	      // option.
	
	
	      return _react.default.createElement("div", {
	        className: rootClassName
	      }, searchBox, _react.default.createElement("ul", {
	        className: cx('list', !canRefine && 'list--noRefinement')
	      }, items.slice(0, this.getLimit()).map(function (item) {
	        return _this3.renderItem(item, _this3.resetQuery);
	      })), this.renderShowMore());
	    }
	  }]);
	  return List;
	}(_react.Component);
	
	(0, _defineProperty2.default)(List, "propTypes", {
	  cx: _propTypes.default.func.isRequired,
	  // Only required with showMore.
	  translate: _propTypes.default.func,
	  items: itemsPropType,
	  renderItem: _propTypes.default.func.isRequired,
	  selectItem: _propTypes.default.func,
	  className: _propTypes.default.string,
	  showMore: _propTypes.default.bool,
	  limit: _propTypes.default.number,
	  showMoreLimit: _propTypes.default.number,
	  show: _propTypes.default.func,
	  searchForItems: _propTypes.default.func,
	  searchable: _propTypes.default.bool,
	  isFromSearch: _propTypes.default.bool,
	  canRefine: _propTypes.default.bool
	});
	(0, _defineProperty2.default)(List, "defaultProps", {
	  className: '',
	  isFromSearch: false
	});
	var _default = List;
	exports.default = _default;

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

	/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
	/* eslint-disable node/no-deprecated-api */
	var buffer = __webpack_require__(186)
	var Buffer = buffer.Buffer
	
	// alternative to using Object.keys for old browsers
	function copyProps (src, dst) {
	  for (var key in src) {
	    dst[key] = src[key]
	  }
	}
	if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
	  module.exports = buffer
	} else {
	  // Copy properties from require('buffer')
	  copyProps(buffer, exports)
	  exports.Buffer = SafeBuffer
	}
	
	function SafeBuffer (arg, encodingOrOffset, length) {
	  return Buffer(arg, encodingOrOffset, length)
	}
	
	SafeBuffer.prototype = Object.create(Buffer.prototype)
	
	// Copy static methods from Buffer
	copyProps(Buffer, SafeBuffer)
	
	SafeBuffer.from = function (arg, encodingOrOffset, length) {
	  if (typeof arg === 'number') {
	    throw new TypeError('Argument must not be a number')
	  }
	  return Buffer(arg, encodingOrOffset, length)
	}
	
	SafeBuffer.alloc = function (size, fill, encoding) {
	  if (typeof size !== 'number') {
	    throw new TypeError('Argument must be a number')
	  }
	  var buf = Buffer(size)
	  if (fill !== undefined) {
	    if (typeof encoding === 'string') {
	      buf.fill(fill, encoding)
	    } else {
	      buf.fill(fill)
	    }
	  } else {
	    buf.fill(0)
	  }
	  return buf
	}
	
	SafeBuffer.allocUnsafe = function (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('Argument must be a number')
	  }
	  return Buffer(size)
	}
	
	SafeBuffer.allocUnsafeSlow = function (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('Argument must be a number')
	  }
	  return buffer.SlowBuffer(size)
	}


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	module.exports = Stream;
	
	var EE = __webpack_require__(112).EventEmitter;
	var inherits = __webpack_require__(43);
	
	inherits(Stream, EE);
	Stream.Readable = __webpack_require__(344);
	Stream.Writable = __webpack_require__(1770);
	Stream.Duplex = __webpack_require__(1765);
	Stream.Transform = __webpack_require__(1769);
	Stream.PassThrough = __webpack_require__(1768);
	
	// Backwards-compat with node 0.4.x
	Stream.Stream = Stream;
	
	
	
	// old-style streams.  Note that the pipe method (the only relevant
	// part of this class) is overridden in the Readable class.
	
	function Stream() {
	  EE.call(this);
	}
	
	Stream.prototype.pipe = function(dest, options) {
	  var source = this;
	
	  function ondata(chunk) {
	    if (dest.writable) {
	      if (false === dest.write(chunk) && source.pause) {
	        source.pause();
	      }
	    }
	  }
	
	  source.on('data', ondata);
	
	  function ondrain() {
	    if (source.readable && source.resume) {
	      source.resume();
	    }
	  }
	
	  dest.on('drain', ondrain);
	
	  // If the 'end' option is not supplied, dest.end() will be called when
	  // source gets the 'end' or 'close' events.  Only dest.end() once.
	  if (!dest._isStdio && (!options || options.end !== false)) {
	    source.on('end', onend);
	    source.on('close', onclose);
	  }
	
	  var didOnEnd = false;
	  function onend() {
	    if (didOnEnd) return;
	    didOnEnd = true;
	
	    dest.end();
	  }
	
	
	  function onclose() {
	    if (didOnEnd) return;
	    didOnEnd = true;
	
	    if (typeof dest.destroy === 'function') dest.destroy();
	  }
	
	  // don't leave dangling pipes when there are errors.
	  function onerror(er) {
	    cleanup();
	    if (EE.listenerCount(this, 'error') === 0) {
	      throw er; // Unhandled stream error in pipe.
	    }
	  }
	
	  source.on('error', onerror);
	  dest.on('error', onerror);
	
	  // remove all the event listeners that were added.
	  function cleanup() {
	    source.removeListener('data', ondata);
	    dest.removeListener('drain', ondrain);
	
	    source.removeListener('end', onend);
	    source.removeListener('close', onclose);
	
	    source.removeListener('error', onerror);
	    dest.removeListener('error', onerror);
	
	    source.removeListener('end', cleanup);
	    source.removeListener('close', cleanup);
	
	    dest.removeListener('close', cleanup);
	  }
	
	  source.on('end', cleanup);
	  source.on('close', cleanup);
	
	  dest.on('close', cleanup);
	
	  dest.emit('pipe', source);
	
	  // Allow for unix-like usage: A.pipe(B).pipe(C)
	  return dest;
	};


/***/ }),
/* 221 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = '__THEMING__';

/***/ }),
/* 222 */,
/* 223 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Fade.default;
	  }
	});
	
	var _Fade = _interopRequireDefault(__webpack_require__(629));

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	/**
	 * @ignore - internal component.
	 */
	var FormControlContext = _react.default.createContext();
	
	var _default = FormControlContext;
	exports.default = _default;

/***/ }),
/* 232 */,
/* 233 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.hasValue = hasValue;
	exports.isFilled = isFilled;
	exports.isAdornedStart = isAdornedStart;
	
	// Supports determination of isControlled().
	// Controlled input accepts its current value as a prop.
	//
	// @see https://facebook.github.io/react/docs/forms.html#controlled-components
	// @param value
	// @returns {boolean} true if string (including '') or number (including zero)
	function hasValue(value) {
	  return value != null && !(Array.isArray(value) && value.length === 0);
	} // Determine if field is empty or filled.
	// Response determines if label is presented above field or as placeholder.
	//
	// @param obj
	// @param SSR
	// @returns {boolean} False when not present or empty string.
	//                    True when any number or string with length.
	
	
	function isFilled(obj) {
	  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');
	} // Determine if an Input is adorned on start.
	// It's corresponding to the left with LTR.
	//
	// @param obj
	// @returns {boolean} False when no adornments.
	//                    True when adorned at the start.
	
	
	function isAdornedStart(obj) {
	  return obj.startAdornment;
	}

/***/ }),
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _NoSsr.default;
	  }
	});
	
	var _NoSsr = _interopRequireDefault(__webpack_require__(677));

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Portal.default;
	  }
	});
	
	var _Portal = _interopRequireDefault(__webpack_require__(683));

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _RootRef.default;
	  }
	});
	
	var _RootRef = _interopRequireDefault(__webpack_require__(688));

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Select.default;
	  }
	});
	
	var _Select = _interopRequireDefault(__webpack_require__(689));

/***/ }),
/* 241 */,
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _TextField.default;
	  }
	});
	
	var _TextField = _interopRequireDefault(__webpack_require__(735));

/***/ }),
/* 243 */,
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _deepmerge = _interopRequireDefault(__webpack_require__(193));
	
	var _isPlainObject = _interopRequireDefault(__webpack_require__(451));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _createBreakpoints = _interopRequireDefault(__webpack_require__(136));
	
	var _createMixins = _interopRequireDefault(__webpack_require__(772));
	
	var _createPalette = _interopRequireDefault(__webpack_require__(773));
	
	var _createTypography = _interopRequireDefault(__webpack_require__(775));
	
	var _shadows = _interopRequireDefault(__webpack_require__(779));
	
	var _shape = _interopRequireDefault(__webpack_require__(780));
	
	var _spacing = _interopRequireDefault(__webpack_require__(781));
	
	var _transitions = _interopRequireDefault(__webpack_require__(62));
	
	var _zIndex = _interopRequireDefault(__webpack_require__(782));
	
	// < 1kb payload overhead when lodash/merge is > 3kb.
	function createMuiTheme() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var _options$breakpoints = options.breakpoints,
	      breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints,
	      _options$mixins = options.mixins,
	      mixinsInput = _options$mixins === void 0 ? {} : _options$mixins,
	      _options$palette = options.palette,
	      paletteInput = _options$palette === void 0 ? {} : _options$palette,
	      shadowsInput = options.shadows,
	      _options$spacing = options.spacing,
	      spacingInput = _options$spacing === void 0 ? {} : _options$spacing,
	      _options$typography = options.typography,
	      typographyInput = _options$typography === void 0 ? {} : _options$typography,
	      other = (0, _objectWithoutProperties2.default)(options, ["breakpoints", "mixins", "palette", "shadows", "spacing", "typography"]);
	  var palette = (0, _createPalette.default)(paletteInput);
	  var breakpoints = (0, _createBreakpoints.default)(breakpointsInput);
	  var spacing = (0, _extends2.default)({}, _spacing.default, spacingInput);
	  var muiTheme = (0, _extends2.default)({
	    breakpoints: breakpoints,
	    direction: 'ltr',
	    mixins: (0, _createMixins.default)(breakpoints, spacing, mixinsInput),
	    overrides: {},
	    // Inject custom styles
	    palette: palette,
	    props: {},
	    // Inject custom properties
	    shadows: shadowsInput || _shadows.default,
	    typography: (0, _createTypography.default)(palette, typographyInput)
	  }, (0, _deepmerge.default)({
	    shape: _shape.default,
	    spacing: spacing,
	    transitions: _transitions.default,
	    zIndex: _zIndex.default
	  }, other, {
	    isMergeableObject: _isPlainObject.default
	  }));
	   false ? (0, _warning.default)(muiTheme.shadows.length === 25, 'Material-UI: the shadows array provided to createMuiTheme should support 25 elevations.') : void 0;
	  return muiTheme;
	}
	
	var _default = createMuiTheme;
	exports.default = _default;

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.CHANNEL = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	// Same value used by react-jss
	var CHANNEL = '__THEMING__';
	exports.CHANNEL = CHANNEL;
	var themeListener = {
	  contextTypes: (0, _defineProperty2.default)({}, CHANNEL, function () {}),
	  initial: function initial(context) {
	    if (!context[CHANNEL]) {
	      return null;
	    }
	
	    return context[CHANNEL].getState();
	  },
	  subscribe: function subscribe(context, cb) {
	    if (!context[CHANNEL]) {
	      return null;
	    }
	
	    return context[CHANNEL].subscribe(cb);
	  },
	  unsubscribe: function unsubscribe(context, subscriptionId) {
	    if (context[CHANNEL]) {
	      context[CHANNEL].unsubscribe(subscriptionId);
	    }
	  }
	};
	var _default = themeListener;
	exports.default = _default;

/***/ }),
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */
/***/ (function(module, exports) {

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    "default": obj
	  };
	}
	
	module.exports = _interopRequireDefault;
	module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var keys = __webpack_require__(58);
	var intersection = __webpack_require__(1493);
	var forOwn = __webpack_require__(1491);
	var forEach = __webpack_require__(124);
	var filter = __webpack_require__(319);
	var map = __webpack_require__(81);
	var reduce = __webpack_require__(166);
	var omit = __webpack_require__(97);
	var indexOf = __webpack_require__(210);
	var isNaN = __webpack_require__(1496);
	var isEmpty = __webpack_require__(80);
	var isEqual = __webpack_require__(322);
	var isUndefined = __webpack_require__(516);
	var isString = __webpack_require__(164);
	var isFunction = __webpack_require__(125);
	var find = __webpack_require__(71);
	var trim = __webpack_require__(520);
	
	var defaults = __webpack_require__(318);
	var merge = __webpack_require__(324);
	
	var valToNumber = __webpack_require__(824);
	
	var filterState = __webpack_require__(820);
	
	var RefinementList = __webpack_require__(819);
	
	/**
	 * like _.find but using _.isEqual to be able to use it
	 * to find arrays.
	 * @private
	 * @param {any[]} array array to search into
	 * @param {any} searchedValue the value we're looking for
	 * @return {any} the searched value or undefined
	 */
	function findArray(array, searchedValue) {
	  return find(array, function(currentValue) {
	    return isEqual(currentValue, searchedValue);
	  });
	}
	
	/**
	 * The facet list is the structure used to store the list of values used to
	 * filter a single attribute.
	 * @typedef {string[]} SearchParameters.FacetList
	 */
	
	/**
	 * Structure to store numeric filters with the operator as the key. The supported operators
	 * are `=`, `>`, `<`, `>=`, `<=` and `!=`.
	 * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList
	 */
	
	/**
	 * SearchParameters is the data structure that contains all the information
	 * usable for making a search to Algolia API. It doesn't do the search itself,
	 * nor does it contains logic about the parameters.
	 * It is an immutable object, therefore it has been created in a way that each
	 * changes does not change the object itself but returns a copy with the
	 * modification.
	 * This object should probably not be instantiated outside of the helper. It will
	 * be provided when needed. This object is documented for reference as you'll
	 * get it from events generated by the {@link AlgoliaSearchHelper}.
	 * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}
	 * @constructor
	 * @classdesc contains all the parameters of a search
	 * @param {object|SearchParameters} newParameters existing parameters or partial object
	 * for the properties of a new SearchParameters
	 * @see SearchParameters.make
	 * @example <caption>SearchParameters of the first query in
	 *   <a href="http://demos.algolia.com/instant-search-demo/">the instant search demo</a></caption>
	{
	   "query": "",
	   "disjunctiveFacets": [
	      "customerReviewCount",
	      "category",
	      "salePrice_range",
	      "manufacturer"
	  ],
	   "maxValuesPerFacet": 30,
	   "page": 0,
	   "hitsPerPage": 10,
	   "facets": [
	      "type",
	      "shipping"
	  ]
	}
	 */
	function SearchParameters(newParameters) {
	  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};
	
	  /**
	   * Targeted index. This parameter is mandatory.
	   * @member {string}
	   */
	  this.index = params.index || '';
	
	  // Query
	  /**
	   * Query string of the instant search. The empty string is a valid query.
	   * @member {string}
	   * @see https://www.algolia.com/doc/rest#param-query
	   */
	  this.query = params.query || '';
	
	  // Facets
	  /**
	   * This attribute contains the list of all the conjunctive facets
	   * used. This list will be added to requested facets in the
	   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.
	   * @member {string[]}
	   */
	  this.facets = params.facets || [];
	  /**
	   * This attribute contains the list of all the disjunctive facets
	   * used. This list will be added to requested facets in the
	   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.
	   * @member {string[]}
	   */
	  this.disjunctiveFacets = params.disjunctiveFacets || [];
	  /**
	   * This attribute contains the list of all the hierarchical facets
	   * used. This list will be added to requested facets in the
	   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.
	   * Hierarchical facets are a sub type of disjunctive facets that
	   * let you filter faceted attributes hierarchically.
	   * @member {string[]|object[]}
	   */
	  this.hierarchicalFacets = params.hierarchicalFacets || [];
	
	  // Refinements
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the conjunctive facets. Each facet must be properly
	   * defined in the `facets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters selected for the associated facet name.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.facetsRefinements = params.facetsRefinements || {};
	  /**
	   * This attribute contains all the filters that need to be
	   * excluded from the conjunctive facets. Each facet must be properly
	   * defined in the `facets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters excluded for the associated facet name.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.facetsExcludes = params.facetsExcludes || {};
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the disjunctive facets. Each facet must be properly
	   * defined in the `disjunctiveFacets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters selected for the associated facet name.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the numeric attributes.
	   *
	   * The key is the name of the attribute, and the value is the
	   * filters to apply to this attribute.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `numericFilters` attribute.
	   * @member {Object.<string, SearchParameters.OperatorList>}
	   */
	  this.numericRefinements = params.numericRefinements || {};
	  /**
	   * This attribute contains all the tags used to refine the query.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `tagFilters` attribute.
	   * @member {string[]}
	   */
	  this.tagRefinements = params.tagRefinements || [];
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the hierarchical facets. Each facet must be properly
	   * defined in the `hierarchicalFacets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters selected for the associated facet name. The FacetList values
	   * are structured as a string that contain the values for each level
	   * separated by the configured separator.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};
	
	  /**
	   * Contains the numeric filters in the raw format of the Algolia API. Setting
	   * this parameter is not compatible with the usage of numeric filters methods.
	   * @see https://www.algolia.com/doc/javascript#numericFilters
	   * @member {string}
	   */
	  this.numericFilters = params.numericFilters;
	
	  /**
	   * Contains the tag filters in the raw format of the Algolia API. Setting this
	   * parameter is not compatible with the of the add/remove/toggle methods of the
	   * tag api.
	   * @see https://www.algolia.com/doc/rest#param-tagFilters
	   * @member {string}
	   */
	  this.tagFilters = params.tagFilters;
	
	  /**
	   * Contains the optional tag filters in the raw format of the Algolia API.
	   * @see https://www.algolia.com/doc/rest#param-tagFilters
	   * @member {string}
	   */
	  this.optionalTagFilters = params.optionalTagFilters;
	
	  /**
	   * Contains the optional facet filters in the raw format of the Algolia API.
	   * @see https://www.algolia.com/doc/rest#param-tagFilters
	   * @member {string}
	   */
	  this.optionalFacetFilters = params.optionalFacetFilters;
	
	
	  // Misc. parameters
	  /**
	   * Number of hits to be returned by the search API
	   * @member {number}
	   * @see https://www.algolia.com/doc/rest#param-hitsPerPage
	   */
	  this.hitsPerPage = params.hitsPerPage;
	  /**
	   * Number of values for each faceted attribute
	   * @member {number}
	   * @see https://www.algolia.com/doc/rest#param-maxValuesPerFacet
	   */
	  this.maxValuesPerFacet = params.maxValuesPerFacet;
	  /**
	   * The current page number
	   * @member {number}
	   * @see https://www.algolia.com/doc/rest#param-page
	   */
	  this.page = params.page || 0;
	  /**
	   * How the query should be treated by the search engine.
	   * Possible values: prefixAll, prefixLast, prefixNone
	   * @see https://www.algolia.com/doc/rest#param-queryType
	   * @member {string}
	   */
	  this.queryType = params.queryType;
	  /**
	   * How the typo tolerance behave in the search engine.
	   * Possible values: true, false, min, strict
	   * @see https://www.algolia.com/doc/rest#param-typoTolerance
	   * @member {string}
	   */
	  this.typoTolerance = params.typoTolerance;
	
	  /**
	   * Number of characters to wait before doing one character replacement.
	   * @see https://www.algolia.com/doc/rest#param-minWordSizefor1Typo
	   * @member {number}
	   */
	  this.minWordSizefor1Typo = params.minWordSizefor1Typo;
	  /**
	   * Number of characters to wait before doing a second character replacement.
	   * @see https://www.algolia.com/doc/rest#param-minWordSizefor2Typos
	   * @member {number}
	   */
	  this.minWordSizefor2Typos = params.minWordSizefor2Typos;
	  /**
	   * Configure the precision of the proximity ranking criterion
	   * @see https://www.algolia.com/doc/rest#param-minProximity
	   */
	  this.minProximity = params.minProximity;
	  /**
	   * Should the engine allow typos on numerics.
	   * @see https://www.algolia.com/doc/rest#param-allowTyposOnNumericTokens
	   * @member {boolean}
	   */
	  this.allowTyposOnNumericTokens = params.allowTyposOnNumericTokens;
	  /**
	   * Should the plurals be ignored
	   * @see https://www.algolia.com/doc/rest#param-ignorePlurals
	   * @member {boolean}
	   */
	  this.ignorePlurals = params.ignorePlurals;
	  /**
	   * Restrict which attribute is searched.
	   * @see https://www.algolia.com/doc/rest#param-restrictSearchableAttributes
	   * @member {string}
	   */
	  this.restrictSearchableAttributes = params.restrictSearchableAttributes;
	  /**
	   * Enable the advanced syntax.
	   * @see https://www.algolia.com/doc/rest#param-advancedSyntax
	   * @member {boolean}
	   */
	  this.advancedSyntax = params.advancedSyntax;
	  /**
	   * Enable the analytics
	   * @see https://www.algolia.com/doc/rest#param-analytics
	   * @member {boolean}
	   */
	  this.analytics = params.analytics;
	  /**
	   * Tag of the query in the analytics.
	   * @see https://www.algolia.com/doc/rest#param-analyticsTags
	   * @member {string}
	   */
	  this.analyticsTags = params.analyticsTags;
	  /**
	   * Enable the synonyms
	   * @see https://www.algolia.com/doc/rest#param-synonyms
	   * @member {boolean}
	   */
	  this.synonyms = params.synonyms;
	  /**
	   * Should the engine replace the synonyms in the highlighted results.
	   * @see https://www.algolia.com/doc/rest#param-replaceSynonymsInHighlight
	   * @member {boolean}
	   */
	  this.replaceSynonymsInHighlight = params.replaceSynonymsInHighlight;
	  /**
	   * Add some optional words to those defined in the dashboard
	   * @see https://www.algolia.com/doc/rest#param-optionalWords
	   * @member {string}
	   */
	  this.optionalWords = params.optionalWords;
	  /**
	   * Possible values are "lastWords" "firstWords" "allOptional" "none" (default)
	   * @see https://www.algolia.com/doc/rest#param-removeWordsIfNoResults
	   * @member {string}
	   */
	  this.removeWordsIfNoResults = params.removeWordsIfNoResults;
	  /**
	   * List of attributes to retrieve
	   * @see https://www.algolia.com/doc/rest#param-attributesToRetrieve
	   * @member {string}
	   */
	  this.attributesToRetrieve = params.attributesToRetrieve;
	  /**
	   * List of attributes to highlight
	   * @see https://www.algolia.com/doc/rest#param-attributesToHighlight
	   * @member {string}
	   */
	  this.attributesToHighlight = params.attributesToHighlight;
	  /**
	   * Code to be embedded on the left part of the highlighted results
	   * @see https://www.algolia.com/doc/rest#param-highlightPreTag
	   * @member {string}
	   */
	  this.highlightPreTag = params.highlightPreTag;
	  /**
	   * Code to be embedded on the right part of the highlighted results
	   * @see https://www.algolia.com/doc/rest#param-highlightPostTag
	   * @member {string}
	   */
	  this.highlightPostTag = params.highlightPostTag;
	  /**
	   * List of attributes to snippet
	   * @see https://www.algolia.com/doc/rest#param-attributesToSnippet
	   * @member {string}
	   */
	  this.attributesToSnippet = params.attributesToSnippet;
	  /**
	   * Enable the ranking informations in the response, set to 1 to activate
	   * @see https://www.algolia.com/doc/rest#param-getRankingInfo
	   * @member {number}
	   */
	  this.getRankingInfo = params.getRankingInfo;
	  /**
	   * Remove duplicates based on the index setting attributeForDistinct
	   * @see https://www.algolia.com/doc/rest#param-distinct
	   * @member {boolean|number}
	   */
	  this.distinct = params.distinct;
	  /**
	   * Center of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-aroundLatLng
	   * @member {string}
	   */
	  this.aroundLatLng = params.aroundLatLng;
	  /**
	   * Center of the search, retrieve from the user IP.
	   * @see https://www.algolia.com/doc/rest#param-aroundLatLngViaIP
	   * @member {boolean}
	   */
	  this.aroundLatLngViaIP = params.aroundLatLngViaIP;
	  /**
	   * Radius of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-aroundRadius
	   * @member {number}
	   */
	  this.aroundRadius = params.aroundRadius;
	  /**
	   * Precision of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-aroundPrecision
	   * @member {number}
	   */
	  this.minimumAroundRadius = params.minimumAroundRadius;
	  /**
	   * Precision of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-minimumAroundRadius
	   * @member {number}
	   */
	  this.aroundPrecision = params.aroundPrecision;
	  /**
	   * Geo search inside a box.
	   * @see https://www.algolia.com/doc/rest#param-insideBoundingBox
	   * @member {string}
	   */
	  this.insideBoundingBox = params.insideBoundingBox;
	  /**
	   * Geo search inside a polygon.
	   * @see https://www.algolia.com/doc/rest#param-insidePolygon
	   * @member {string}
	   */
	  this.insidePolygon = params.insidePolygon;
	  /**
	   * Allows to specify an ellipsis character for the snippet when we truncate the text
	   * (added before and after if truncated).
	   * The default value is an empty string and we recommend to set it to "…"
	   * @see https://www.algolia.com/doc/rest#param-insidePolygon
	   * @member {string}
	   */
	  this.snippetEllipsisText = params.snippetEllipsisText;
	  /**
	   * Allows to specify some attributes name on which exact won't be applied.
	   * Attributes are separated with a comma (for example "name,address" ), you can also use a
	   * JSON string array encoding (for example encodeURIComponent('["name","address"]') ).
	   * By default the list is empty.
	   * @see https://www.algolia.com/doc/rest#param-disableExactOnAttributes
	   * @member {string|string[]}
	   */
	  this.disableExactOnAttributes = params.disableExactOnAttributes;
	  /**
	   * Applies 'exact' on single word queries if the word contains at least 3 characters
	   * and is not a stop word.
	   * Can take two values: true or false.
	   * By default, its set to false.
	   * @see https://www.algolia.com/doc/rest#param-enableExactOnSingleWordQuery
	   * @member {boolean}
	   */
	  this.enableExactOnSingleWordQuery = params.enableExactOnSingleWordQuery;
	
	  // Undocumented parameters, still needed otherwise we fail
	  this.offset = params.offset;
	  this.length = params.length;
	
	  var self = this;
	  forOwn(params, function checkForUnknownParameter(paramValue, paramName) {
	    if (SearchParameters.PARAMETERS.indexOf(paramName) === -1) {
	      self[paramName] = paramValue;
	    }
	  });
	}
	
	/**
	 * List all the properties in SearchParameters and therefore all the known Algolia properties
	 * This doesn't contain any beta/hidden features.
	 * @private
	 */
	SearchParameters.PARAMETERS = keys(new SearchParameters());
	
	/**
	 * @private
	 * @param {object} partialState full or part of a state
	 * @return {object} a new object with the number keys as number
	 */
	SearchParameters._parseNumbers = function(partialState) {
	  // Do not reparse numbers in SearchParameters, they ought to be parsed already
	  if (partialState instanceof SearchParameters) return partialState;
	
	  var numbers = {};
	
	  var numberKeys = [
	    'aroundPrecision',
	    'aroundRadius',
	    'getRankingInfo',
	    'minWordSizefor2Typos',
	    'minWordSizefor1Typo',
	    'page',
	    'maxValuesPerFacet',
	    'distinct',
	    'minimumAroundRadius',
	    'hitsPerPage',
	    'minProximity'
	  ];
	
	  forEach(numberKeys, function(k) {
	    var value = partialState[k];
	    if (isString(value)) {
	      var parsedValue = parseFloat(value);
	      numbers[k] = isNaN(parsedValue) ? value : parsedValue;
	    }
	  });
	
	  // there's two formats of insideBoundingBox, we need to parse
	  // the one which is an array of float geo rectangles
	  if (Array.isArray(partialState.insideBoundingBox)) {
	    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function(geoRect) {
	      return geoRect.map(function(value) {
	        return parseFloat(value);
	      });
	    });
	  }
	
	  if (partialState.numericRefinements) {
	    var numericRefinements = {};
	    forEach(partialState.numericRefinements, function(operators, attribute) {
	      numericRefinements[attribute] = {};
	      forEach(operators, function(values, operator) {
	        var parsedValues = map(values, function(v) {
	          if (Array.isArray(v)) {
	            return map(v, function(vPrime) {
	              if (isString(vPrime)) {
	                return parseFloat(vPrime);
	              }
	              return vPrime;
	            });
	          } else if (isString(v)) {
	            return parseFloat(v);
	          }
	          return v;
	        });
	        numericRefinements[attribute][operator] = parsedValues;
	      });
	    });
	    numbers.numericRefinements = numericRefinements;
	  }
	
	  return merge({}, partialState, numbers);
	};
	
	/**
	 * Factory for SearchParameters
	 * @param {object|SearchParameters} newParameters existing parameters or partial
	 * object for the properties of a new SearchParameters
	 * @return {SearchParameters} frozen instance of SearchParameters
	 */
	SearchParameters.make = function makeSearchParameters(newParameters) {
	  var instance = new SearchParameters(newParameters);
	
	  forEach(newParameters.hierarchicalFacets, function(facet) {
	    if (facet.rootPath) {
	      var currentRefinement = instance.getHierarchicalRefinement(facet.name);
	
	      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {
	        instance = instance.clearRefinements(facet.name);
	      }
	
	      // get it again in case it has been cleared
	      currentRefinement = instance.getHierarchicalRefinement(facet.name);
	      if (currentRefinement.length === 0) {
	        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);
	      }
	    }
	  });
	
	  return instance;
	};
	
	/**
	 * Validates the new parameters based on the previous state
	 * @param {SearchParameters} currentState the current state
	 * @param {object|SearchParameters} parameters the new parameters to set
	 * @return {Error|null} Error if the modification is invalid, null otherwise
	 */
	SearchParameters.validate = function(currentState, parameters) {
	  var params = parameters || {};
	
	  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {
	    return new Error(
	      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +
	      'an error, if it is really what you want, you should first clear the tags with clearTags method.');
	  }
	
	  if (currentState.tagRefinements.length > 0 && params.tagFilters) {
	    return new Error(
	      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +
	      'an error, if it is not, you should first clear the tags with clearTags method.');
	  }
	
	  if (currentState.numericFilters && params.numericRefinements && !isEmpty(params.numericRefinements)) {
	    return new Error(
	      "[Numeric filters] Can't switch from the advanced to the managed API. It" +
	      ' is probably an error, if this is really what you want, you have to first' +
	      ' clear the numeric filters.');
	  }
	
	  if (!isEmpty(currentState.numericRefinements) && params.numericFilters) {
	    return new Error(
	      "[Numeric filters] Can't switch from the managed API to the advanced. It" +
	      ' is probably an error, if this is really what you want, you have to first' +
	      ' clear the numeric filters.');
	  }
	
	  return null;
	};
	
	SearchParameters.prototype = {
	  constructor: SearchParameters,
	
	  /**
	   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)
	   * @method
	   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function
	   * - If not given, means to clear all the filters.
	   * - If `string`, means to clear all refinements for the `attribute` named filter.
	   * - If `function`, means to clear all the refinements that return truthy values.
	   * @return {SearchParameters}
	   */
	  clearRefinements: function clearRefinements(attribute) {
	    var clear = RefinementList.clearRefinement;
	    var patch = {
	      numericRefinements: this._clearNumericRefinements(attribute),
	      facetsRefinements: clear(this.facetsRefinements, attribute, 'conjunctiveFacet'),
	      facetsExcludes: clear(this.facetsExcludes, attribute, 'exclude'),
	      disjunctiveFacetsRefinements: clear(this.disjunctiveFacetsRefinements, attribute, 'disjunctiveFacet'),
	      hierarchicalFacetsRefinements: clear(this.hierarchicalFacetsRefinements, attribute, 'hierarchicalFacet')
	    };
	    if (patch.numericRefinements === this.numericRefinements &&
	        patch.facetsRefinements === this.facetsRefinements &&
	        patch.facetsExcludes === this.facetsExcludes &&
	        patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements &&
	        patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements) {
	      return this;
	    }
	    return this.setQueryParameters(patch);
	  },
	  /**
	   * Remove all the refined tags from the SearchParameters
	   * @method
	   * @return {SearchParameters}
	   */
	  clearTags: function clearTags() {
	    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;
	
	    return this.setQueryParameters({
	      tagFilters: undefined,
	      tagRefinements: []
	    });
	  },
	  /**
	   * Set the index.
	   * @method
	   * @param {string} index the index name
	   * @return {SearchParameters}
	   */
	  setIndex: function setIndex(index) {
	    if (index === this.index) return this;
	
	    return this.setQueryParameters({
	      index: index
	    });
	  },
	  /**
	   * Query setter
	   * @method
	   * @param {string} newQuery value for the new query
	   * @return {SearchParameters}
	   */
	  setQuery: function setQuery(newQuery) {
	    if (newQuery === this.query) return this;
	
	    return this.setQueryParameters({
	      query: newQuery
	    });
	  },
	  /**
	   * Page setter
	   * @method
	   * @param {number} newPage new page number
	   * @return {SearchParameters}
	   */
	  setPage: function setPage(newPage) {
	    if (newPage === this.page) return this;
	
	    return this.setQueryParameters({
	      page: newPage
	    });
	  },
	  /**
	   * Facets setter
	   * The facets are the simple facets, used for conjunctive (and) faceting.
	   * @method
	   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting
	   * @return {SearchParameters}
	   */
	  setFacets: function setFacets(facets) {
	    return this.setQueryParameters({
	      facets: facets
	    });
	  },
	  /**
	   * Disjunctive facets setter
	   * Change the list of disjunctive (or) facets the helper chan handle.
	   * @method
	   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting
	   * @return {SearchParameters}
	   */
	  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {
	    return this.setQueryParameters({
	      disjunctiveFacets: facets
	    });
	  },
	  /**
	   * HitsPerPage setter
	   * Hits per page represents the number of hits retrieved for this query
	   * @method
	   * @param {number} n number of hits retrieved per page of results
	   * @return {SearchParameters}
	   */
	  setHitsPerPage: function setHitsPerPage(n) {
	    if (this.hitsPerPage === n) return this;
	
	    return this.setQueryParameters({
	      hitsPerPage: n
	    });
	  },
	  /**
	   * typoTolerance setter
	   * Set the value of typoTolerance
	   * @method
	   * @param {string} typoTolerance new value of typoTolerance ("true", "false", "min" or "strict")
	   * @return {SearchParameters}
	   */
	  setTypoTolerance: function setTypoTolerance(typoTolerance) {
	    if (this.typoTolerance === typoTolerance) return this;
	
	    return this.setQueryParameters({
	      typoTolerance: typoTolerance
	    });
	  },
	  /**
	   * Add a numeric filter for a given attribute
	   * When value is an array, they are combined with OR
	   * When value is a single value, it will combined with AND
	   * @method
	   * @param {string} attribute attribute to set the filter on
	   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)
	   * @param {number | number[]} value value of the filter
	   * @return {SearchParameters}
	   * @example
	   * // for price = 50 or 40
	   * searchparameter.addNumericRefinement('price', '=', [50, 40]);
	   * @example
	   * // for size = 38 and 40
	   * searchparameter.addNumericRefinement('size', '=', 38);
	   * searchparameter.addNumericRefinement('size', '=', 40);
	   */
	  addNumericRefinement: function(attribute, operator, v) {
	    var value = valToNumber(v);
	
	    if (this.isNumericRefined(attribute, operator, value)) return this;
	
	    var mod = merge({}, this.numericRefinements);
	
	    mod[attribute] = merge({}, mod[attribute]);
	
	    if (mod[attribute][operator]) {
	      // Array copy
	      mod[attribute][operator] = mod[attribute][operator].slice();
	      // Add the element. Concat can't be used here because value can be an array.
	      mod[attribute][operator].push(value);
	    } else {
	      mod[attribute][operator] = [value];
	    }
	
	    return this.setQueryParameters({
	      numericRefinements: mod
	    });
	  },
	  /**
	   * Get the list of conjunctive refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getConjunctiveRefinements: function(facetName) {
	    if (!this.isConjunctiveFacet(facetName)) {
	      throw new Error(facetName + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return this.facetsRefinements[facetName] || [];
	  },
	  /**
	   * Get the list of disjunctive refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getDisjunctiveRefinements: function(facetName) {
	    if (!this.isDisjunctiveFacet(facetName)) {
	      throw new Error(
	        facetName + ' is not defined in the disjunctiveFacets attribute of the helper configuration'
	      );
	    }
	    return this.disjunctiveFacetsRefinements[facetName] || [];
	  },
	  /**
	   * Get the list of hierarchical refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getHierarchicalRefinement: function(facetName) {
	    // we send an array but we currently do not support multiple
	    // hierarchicalRefinements for a hierarchicalFacet
	    return this.hierarchicalFacetsRefinements[facetName] || [];
	  },
	  /**
	   * Get the list of exclude refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getExcludeRefinements: function(facetName) {
	    if (!this.isConjunctiveFacet(facetName)) {
	      throw new Error(facetName + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return this.facetsExcludes[facetName] || [];
	  },
	
	  /**
	   * Remove all the numeric filter for a given (attribute, operator)
	   * @method
	   * @param {string} attribute attribute to set the filter on
	   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)
	   * @param {number} [number] the value to be removed
	   * @return {SearchParameters}
	   */
	  removeNumericRefinement: function(attribute, operator, paramValue) {
	    if (paramValue !== undefined) {
	      var paramValueAsNumber = valToNumber(paramValue);
	      if (!this.isNumericRefined(attribute, operator, paramValueAsNumber)) return this;
	      return this.setQueryParameters({
	        numericRefinements: this._clearNumericRefinements(function(value, key) {
	          return key === attribute && value.op === operator && isEqual(value.val, paramValueAsNumber);
	        })
	      });
	    } else if (operator !== undefined) {
	      if (!this.isNumericRefined(attribute, operator)) return this;
	      return this.setQueryParameters({
	        numericRefinements: this._clearNumericRefinements(function(value, key) {
	          return key === attribute && value.op === operator;
	        })
	      });
	    }
	
	    if (!this.isNumericRefined(attribute)) return this;
	    return this.setQueryParameters({
	      numericRefinements: this._clearNumericRefinements(function(value, key) {
	        return key === attribute;
	      })
	    });
	  },
	  /**
	   * Get the list of numeric refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {SearchParameters.OperatorList[]} list of refinements
	   */
	  getNumericRefinements: function(facetName) {
	    return this.numericRefinements[facetName] || {};
	  },
	  /**
	   * Return the current refinement for the (attribute, operator)
	   * @param {string} attribute attribute in the record
	   * @param {string} operator operator applied on the refined values
	   * @return {Array.<number|number[]>} refined values
	   */
	  getNumericRefinement: function(attribute, operator) {
	    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];
	  },
	  /**
	   * Clear numeric filters.
	   * @method
	   * @private
	   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function
	   * - If not given, means to clear all the filters.
	   * - If `string`, means to clear all refinements for the `attribute` named filter.
	   * - If `function`, means to clear all the refinements that return truthy values.
	   * @return {Object.<string, OperatorList>}
	   */
	  _clearNumericRefinements: function _clearNumericRefinements(attribute) {
	    if (isUndefined(attribute)) {
	      if (isEmpty(this.numericRefinements)) return this.numericRefinements;
	      return {};
	    } else if (isString(attribute)) {
	      if (isEmpty(this.numericRefinements[attribute])) return this.numericRefinements;
	      return omit(this.numericRefinements, attribute);
	    } else if (isFunction(attribute)) {
	      var hasChanged = false;
	      var newNumericRefinements = reduce(this.numericRefinements, function(memo, operators, key) {
	        var operatorList = {};
	
	        forEach(operators, function(values, operator) {
	          var outValues = [];
	          forEach(values, function(value) {
	            var predicateResult = attribute({val: value, op: operator}, key, 'numeric');
	            if (!predicateResult) outValues.push(value);
	          });
	          if (!isEmpty(outValues)) {
	            if (outValues.length !== values.length) hasChanged = true;
	            operatorList[operator] = outValues;
	          }
	          else hasChanged = true;
	        });
	
	        if (!isEmpty(operatorList)) memo[key] = operatorList;
	
	        return memo;
	      }, {});
	
	      if (hasChanged) return newNumericRefinements;
	      return this.numericRefinements;
	    }
	  },
	  /**
	   * Add a facet to the facets attribute of the helper configuration, if it
	   * isn't already present.
	   * @method
	   * @param {string} facet facet name to add
	   * @return {SearchParameters}
	   */
	  addFacet: function addFacet(facet) {
	    if (this.isConjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.setQueryParameters({
	      facets: this.facets.concat([facet])
	    });
	  },
	  /**
	   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper
	   * configuration, if it isn't already present.
	   * @method
	   * @param {string} facet disjunctive facet name to add
	   * @return {SearchParameters}
	   */
	  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {
	    if (this.isDisjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.setQueryParameters({
	      disjunctiveFacets: this.disjunctiveFacets.concat([facet])
	    });
	  },
	  /**
	   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper
	   * configuration.
	   * @method
	   * @param {object} hierarchicalFacet hierarchical facet to add
	   * @return {SearchParameters}
	   * @throws will throw an error if a hierarchical facet with the same name was already declared
	   */
	  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {
	    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {
	      throw new Error(
	        'Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');
	    }
	
	    return this.setQueryParameters({
	      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])
	    });
	  },
	  /**
	   * Add a refinement on a "normal" facet
	   * @method
	   * @param {string} facet attribute to apply the faceting on
	   * @param {string} value value of the attribute (will be converted to string)
	   * @return {SearchParameters}
	   */
	  addFacetRefinement: function addFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Exclude a value from a "normal" facet
	   * @method
	   * @param {string} facet attribute to apply the exclusion on
	   * @param {string} value value of the attribute (will be converted to string)
	   * @return {SearchParameters}
	   */
	  addExcludeRefinement: function addExcludeRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)
	    });
	  },
	  /**
	   * Adds a refinement on a disjunctive facet.
	   * @method
	   * @param {string} facet attribute to apply the faceting on
	   * @param {string} value value of the attribute (will be converted to string)
	   * @return {SearchParameters}
	   */
	  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	
	    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      disjunctiveFacetsRefinements: RefinementList.addRefinement(
	        this.disjunctiveFacetsRefinements, facet, value)
	    });
	  },
	  /**
	   * addTagRefinement adds a tag to the list used to filter the results
	   * @param {string} tag tag to be added
	   * @return {SearchParameters}
	   */
	  addTagRefinement: function addTagRefinement(tag) {
	    if (this.isTagRefined(tag)) return this;
	
	    var modification = {
	      tagRefinements: this.tagRefinements.concat(tag)
	    };
	
	    return this.setQueryParameters(modification);
	  },
	  /**
	   * Remove a facet from the facets attribute of the helper configuration, if it
	   * is present.
	   * @method
	   * @param {string} facet facet name to remove
	   * @return {SearchParameters}
	   */
	  removeFacet: function removeFacet(facet) {
	    if (!this.isConjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.clearRefinements(facet).setQueryParameters({
	      facets: filter(this.facets, function(f) {
	        return f !== facet;
	      })
	    });
	  },
	  /**
	   * Remove a disjunctive facet from the disjunctiveFacets attribute of the
	   * helper configuration, if it is present.
	   * @method
	   * @param {string} facet disjunctive facet name to remove
	   * @return {SearchParameters}
	   */
	  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.clearRefinements(facet).setQueryParameters({
	      disjunctiveFacets: filter(this.disjunctiveFacets, function(f) {
	        return f !== facet;
	      })
	    });
	  },
	  /**
	   * Remove a hierarchical facet from the hierarchicalFacets attribute of the
	   * helper configuration, if it is present.
	   * @method
	   * @param {string} facet hierarchical facet name to remove
	   * @return {SearchParameters}
	   */
	  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {
	    if (!this.isHierarchicalFacet(facet)) {
	      return this;
	    }
	
	    return this.clearRefinements(facet).setQueryParameters({
	      hierarchicalFacets: filter(this.hierarchicalFacets, function(f) {
	        return f.name !== facet;
	      })
	    });
	  },
	  /**
	   * Remove a refinement set on facet. If a value is provided, it will clear the
	   * refinement for the given value, otherwise it will clear all the refinement
	   * values for the faceted attribute.
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {string} [value] value used to filter
	   * @return {SearchParameters}
	   */
	  removeFacetRefinement: function removeFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Remove a negative refinement on a facet
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {string} value value used to filter
	   * @return {SearchParameters}
	   */
	  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)
	    });
	  },
	  /**
	   * Remove a refinement on a disjunctive facet
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {string} value value used to filter
	   * @return {SearchParameters}
	   */
	  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      disjunctiveFacetsRefinements: RefinementList.removeRefinement(
	        this.disjunctiveFacetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Remove a tag from the list of tag refinements
	   * @method
	   * @param {string} tag the tag to remove
	   * @return {SearchParameters}
	   */
	  removeTagRefinement: function removeTagRefinement(tag) {
	    if (!this.isTagRefined(tag)) return this;
	
	    var modification = {
	      tagRefinements: filter(this.tagRefinements, function(t) { return t !== tag; })
	    };
	
	    return this.setQueryParameters(modification);
	  },
	  /**
	   * Generic toggle refinement method to use with facet, disjunctive facets
	   * and hierarchical facets
	   * @param  {string} facet the facet to refine
	   * @param  {string} value the associated value
	   * @return {SearchParameters}
	   * @throws will throw an error if the facet is not declared in the settings of the helper
	   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}
	   */
	  toggleRefinement: function toggleRefinement(facet, value) {
	    return this.toggleFacetRefinement(facet, value);
	  },
	  /**
	   * Generic toggle refinement method to use with facet, disjunctive facets
	   * and hierarchical facets
	   * @param  {string} facet the facet to refine
	   * @param  {string} value the associated value
	   * @return {SearchParameters}
	   * @throws will throw an error if the facet is not declared in the settings of the helper
	   */
	  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {
	    if (this.isHierarchicalFacet(facet)) {
	      return this.toggleHierarchicalFacetRefinement(facet, value);
	    } else if (this.isConjunctiveFacet(facet)) {
	      return this.toggleConjunctiveFacetRefinement(facet, value);
	    } else if (this.isDisjunctiveFacet(facet)) {
	      return this.toggleDisjunctiveFacetRefinement(facet, value);
	    }
	
	    throw new Error('Cannot refine the undeclared facet ' + facet +
	      '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	
	    return this.setQueryParameters({
	      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	
	    return this.setQueryParameters({
	      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)
	    });
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	
	    return this.setQueryParameters({
	      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(
	        this.disjunctiveFacetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {
	    if (!this.isHierarchicalFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');
	    }
	
	    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));
	
	    var mod = {};
	
	    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined &&
	      this.hierarchicalFacetsRefinements[facet].length > 0 && (
	      // remove current refinement:
	      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`
	      this.hierarchicalFacetsRefinements[facet][0] === value ||
	      // remove a parent refinement of the current refinement:
	      //  - refinement was 'beer > IPA > Flying dog'
	      //  - call is toggleRefine('beer > IPA')
	      //  - refinement should be `beer`
	      this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0
	    );
	
	    if (upOneOrMultipleLevel) {
	      if (value.indexOf(separator) === -1) {
	        // go back to root level
	        mod[facet] = [];
	      } else {
	        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];
	      }
	    } else {
	      mod[facet] = [value];
	    }
	
	    return this.setQueryParameters({
	      hierarchicalFacetsRefinements: defaults({}, mod, this.hierarchicalFacetsRefinements)
	    });
	  },
	
	  /**
	   * Adds a refinement on a hierarchical facet.
	   * @param {string} facet the facet name
	   * @param {string} path the hierarchical facet path
	   * @return {SearchParameter} the new state
	   * @throws Error if the facet is not defined or if the facet is refined
	   */
	  addHierarchicalFacetRefinement: function(facet, path) {
	    if (this.isHierarchicalFacetRefined(facet)) {
	      throw new Error(facet + ' is already refined.');
	    }
	    var mod = {};
	    mod[facet] = [path];
	    return this.setQueryParameters({
	      hierarchicalFacetsRefinements: defaults({}, mod, this.hierarchicalFacetsRefinements)
	    });
	  },
	
	  /**
	   * Removes the refinement set on a hierarchical facet.
	   * @param {string} facet the facet name
	   * @return {SearchParameter} the new state
	   * @throws Error if the facet is not defined or if the facet is not refined
	   */
	  removeHierarchicalFacetRefinement: function(facet) {
	    if (!this.isHierarchicalFacetRefined(facet)) {
	      throw new Error(facet + ' is not refined.');
	    }
	    var mod = {};
	    mod[facet] = [];
	    return this.setQueryParameters({
	      hierarchicalFacetsRefinements: defaults({}, mod, this.hierarchicalFacetsRefinements)
	    });
	  },
	  /**
	   * Switch the tag refinement
	   * @method
	   * @param {string} tag the tag to remove or add
	   * @return {SearchParameters}
	   */
	  toggleTagRefinement: function toggleTagRefinement(tag) {
	    if (this.isTagRefined(tag)) {
	      return this.removeTagRefinement(tag);
	    }
	
	    return this.addTagRefinement(tag);
	  },
	  /**
	   * Test if the facet name is from one of the disjunctive facets
	   * @method
	   * @param {string} facet facet name to test
	   * @return {boolean}
	   */
	  isDisjunctiveFacet: function(facet) {
	    return indexOf(this.disjunctiveFacets, facet) > -1;
	  },
	  /**
	   * Test if the facet name is from one of the hierarchical facets
	   * @method
	   * @param {string} facetName facet name to test
	   * @return {boolean}
	   */
	  isHierarchicalFacet: function(facetName) {
	    return this.getHierarchicalFacetByName(facetName) !== undefined;
	  },
	  /**
	   * Test if the facet name is from one of the conjunctive/normal facets
	   * @method
	   * @param {string} facet facet name to test
	   * @return {boolean}
	   */
	  isConjunctiveFacet: function(facet) {
	    return indexOf(this.facets, facet) > -1;
	  },
	  /**
	   * Returns true if the facet is refined, either for a specific value or in
	   * general.
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} value, optional value. If passed will test that this value
	   * is filtering the given facet.
	   * @return {boolean} returns true if refined
	   */
	  isFacetRefined: function isFacetRefined(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return RefinementList.isRefined(this.facetsRefinements, facet, value);
	  },
	  /**
	   * Returns true if the facet contains exclusions or if a specific value is
	   * excluded.
	   *
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} [value] optional value. If passed will test that this value
	   * is filtering the given facet.
	   * @return {boolean} returns true if refined
	   */
	  isExcludeRefined: function isExcludeRefined(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return RefinementList.isRefined(this.facetsExcludes, facet, value);
	  },
	  /**
	   * Returns true if the facet contains a refinement, or if a value passed is a
	   * refinement for the facet.
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} value optional, will test if the value is used for refinement
	   * if there is one, otherwise will test if the facet contains any refinement
	   * @return {boolean}
	   */
	  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);
	  },
	  /**
	   * Returns true if the facet contains a refinement, or if a value passed is a
	   * refinement for the facet.
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} value optional, will test if the value is used for refinement
	   * if there is one, otherwise will test if the facet contains any refinement
	   * @return {boolean}
	   */
	  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {
	    if (!this.isHierarchicalFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');
	    }
	
	    var refinements = this.getHierarchicalRefinement(facet);
	
	    if (!value) {
	      return refinements.length > 0;
	    }
	
	    return indexOf(refinements, value) !== -1;
	  },
	  /**
	   * Test if the triple (attribute, operator, value) is already refined.
	   * If only the attribute and the operator are provided, it tests if the
	   * contains any refinement value.
	   * @method
	   * @param {string} attribute attribute for which the refinement is applied
	   * @param {string} [operator] operator of the refinement
	   * @param {string} [value] value of the refinement
	   * @return {boolean} true if it is refined
	   */
	  isNumericRefined: function isNumericRefined(attribute, operator, value) {
	    if (isUndefined(value) && isUndefined(operator)) {
	      return !!this.numericRefinements[attribute];
	    }
	
	    var isOperatorDefined = this.numericRefinements[attribute] &&
	      !isUndefined(this.numericRefinements[attribute][operator]);
	
	    if (isUndefined(value) || !isOperatorDefined) {
	      return isOperatorDefined;
	    }
	
	    var parsedValue = valToNumber(value);
	    var isAttributeValueDefined = !isUndefined(
	      findArray(this.numericRefinements[attribute][operator], parsedValue)
	    );
	
	    return isOperatorDefined && isAttributeValueDefined;
	  },
	  /**
	   * Returns true if the tag refined, false otherwise
	   * @method
	   * @param {string} tag the tag to check
	   * @return {boolean}
	   */
	  isTagRefined: function isTagRefined(tag) {
	    return indexOf(this.tagRefinements, tag) !== -1;
	  },
	  /**
	   * Returns the list of all disjunctive facets refined
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {string[]}
	   */
	  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {
	    // attributes used for numeric filter can also be disjunctive
	    var disjunctiveNumericRefinedFacets = intersection(
	      keys(this.numericRefinements),
	      this.disjunctiveFacets
	    );
	
	    return keys(this.disjunctiveFacetsRefinements)
	      .concat(disjunctiveNumericRefinedFacets)
	      .concat(this.getRefinedHierarchicalFacets());
	  },
	  /**
	   * Returns the list of all disjunctive facets refined
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {string[]}
	   */
	  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {
	    return intersection(
	      // enforce the order between the two arrays,
	      // so that refinement name index === hierarchical facet index
	      map(this.hierarchicalFacets, 'name'),
	      keys(this.hierarchicalFacetsRefinements)
	    );
	  },
	  /**
	   * Returned the list of all disjunctive facets not refined
	   * @method
	   * @return {string[]}
	   */
	  getUnrefinedDisjunctiveFacets: function() {
	    var refinedFacets = this.getRefinedDisjunctiveFacets();
	
	    return filter(this.disjunctiveFacets, function(f) {
	      return indexOf(refinedFacets, f) === -1;
	    });
	  },
	
	  managedParameters: [
	    'index',
	    'facets', 'disjunctiveFacets', 'facetsRefinements',
	    'facetsExcludes', 'disjunctiveFacetsRefinements',
	    'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'
	  ],
	  getQueryParams: function getQueryParams() {
	    var managedParameters = this.managedParameters;
	
	    var queryParams = {};
	
	    forOwn(this, function(paramValue, paramName) {
	      if (indexOf(managedParameters, paramName) === -1 && paramValue !== undefined) {
	        queryParams[paramName] = paramValue;
	      }
	    });
	
	    return queryParams;
	  },
	  /**
	   * Let the user retrieve any parameter value from the SearchParameters
	   * @param {string} paramName name of the parameter
	   * @return {any} the value of the parameter
	   */
	  getQueryParameter: function getQueryParameter(paramName) {
	    if (!this.hasOwnProperty(paramName)) {
	      throw new Error(
	        "Parameter '" + paramName + "' is not an attribute of SearchParameters " +
	        '(http://algolia.github.io/algoliasearch-helper-js/docs/SearchParameters.html)');
	    }
	
	    return this[paramName];
	  },
	  /**
	   * Let the user set a specific value for a given parameter. Will return the
	   * same instance if the parameter is invalid or if the value is the same as the
	   * previous one.
	   * @method
	   * @param {string} parameter the parameter name
	   * @param {any} value the value to be set, must be compliant with the definition
	   * of the attribute on the object
	   * @return {SearchParameters} the updated state
	   */
	  setQueryParameter: function setParameter(parameter, value) {
	    if (this[parameter] === value) return this;
	
	    var modification = {};
	
	    modification[parameter] = value;
	
	    return this.setQueryParameters(modification);
	  },
	  /**
	   * Let the user set any of the parameters with a plain object.
	   * @method
	   * @param {object} params all the keys and the values to be updated
	   * @return {SearchParameters} a new updated instance
	   */
	  setQueryParameters: function setQueryParameters(params) {
	    if (!params) return this;
	
	    var error = SearchParameters.validate(this, params);
	
	    if (error) {
	      throw error;
	    }
	
	    var parsedParams = SearchParameters._parseNumbers(params);
	
	    return this.mutateMe(function mergeWith(newInstance) {
	      var ks = keys(params);
	
	      forEach(ks, function(k) {
	        newInstance[k] = parsedParams[k];
	      });
	
	      return newInstance;
	    });
	  },
	
	  /**
	   * Returns an object with only the selected attributes.
	   * @param {string[]} filters filters to retrieve only a subset of the state. It
	   * accepts strings that can be either attributes of the SearchParameters (e.g. hitsPerPage)
	   * or attributes of the index with the notation 'attribute:nameOfMyAttribute'
	   * @return {object}
	   */
	  filter: function(filters) {
	    return filterState(this, filters);
	  },
	  /**
	   * Helper function to make it easier to build new instances from a mutating
	   * function
	   * @private
	   * @param {function} fn newMutableState -> previousState -> () function that will
	   * change the value of the newMutable to the desired state
	   * @return {SearchParameters} a new instance with the specified modifications applied
	   */
	  mutateMe: function mutateMe(fn) {
	    var newState = new this.constructor(this);
	
	    fn(newState, this);
	    return newState;
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet separator or the default one (`>`)
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.separator or `>` as default
	   */
	  _getHierarchicalFacetSortBy: function(hierarchicalFacet) {
	    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet separator or the default one (`>`)
	   * @private
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.separator or `>` as default
	   */
	  _getHierarchicalFacetSeparator: function(hierarchicalFacet) {
	    return hierarchicalFacet.separator || ' > ';
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet prefix path or null
	   * @private
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.rootPath or null as default
	   */
	  _getHierarchicalRootPath: function(hierarchicalFacet) {
	    return hierarchicalFacet.rootPath || null;
	  },
	
	  /**
	   * Helper function to check if we show the parent level of the hierarchicalFacet
	   * @private
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default
	   */
	  _getHierarchicalShowParentLevel: function(hierarchicalFacet) {
	    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {
	      return hierarchicalFacet.showParentLevel;
	    }
	    return true;
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet by it's name
	   * @param  {string} hierarchicalFacetName
	   * @return {object} a hierarchicalFacet
	   */
	  getHierarchicalFacetByName: function(hierarchicalFacetName) {
	    return find(
	      this.hierarchicalFacets,
	      {name: hierarchicalFacetName}
	    );
	  },
	
	  /**
	   * Get the current breadcrumb for a hierarchical facet, as an array
	   * @param  {string} facetName Hierarchical facet name
	   * @return {array.<string>} the path as an array of string
	   */
	  getHierarchicalFacetBreadcrumb: function(facetName) {
	    if (!this.isHierarchicalFacet(facetName)) {
	      throw new Error(
	        'Cannot get the breadcrumb of an unknown hierarchical facet: `' + facetName + '`');
	    }
	
	    var refinement = this.getHierarchicalRefinement(facetName)[0];
	    if (!refinement) return [];
	
	    var separator = this._getHierarchicalFacetSeparator(
	      this.getHierarchicalFacetByName(facetName)
	    );
	    var path = refinement.split(separator);
	    return map(path, trim);
	  },
	
	  toString: function() {
	    return JSON.stringify(this, null, 2);
	  }
	};
	
	/**
	 * Callback used for clearRefinement method
	 * @callback SearchParameters.clearCallback
	 * @param {OperatorList|FacetList} value the value of the filter
	 * @param {string} key the current attribute name
	 * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`
	 * depending on the type of facet
	 * @return {boolean} `true` if the element should be removed. `false` otherwise.
	 */
	module.exports = SearchParameters;


/***/ }),
/* 251 */,
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Header = __webpack_require__(861);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Header).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Seo = __webpack_require__(891);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Seo).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 254 */,
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(941), __esModule: true };

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _assign = __webpack_require__(915);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _iterator = __webpack_require__(920);
	
	var _iterator2 = _interopRequireDefault(_iterator);
	
	var _symbol = __webpack_require__(919);
	
	var _symbol2 = _interopRequireDefault(_symbol);
	
	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var bind = __webpack_require__(291);
	var GetIntrinsic = __webpack_require__(446);
	
	var $apply = GetIntrinsic('%Function.prototype.apply%');
	var $call = GetIntrinsic('%Function.prototype.call%');
	var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);
	
	var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
	var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
	var $max = GetIntrinsic('%Math.max%');
	
	if ($defineProperty) {
		try {
			$defineProperty({}, 'a', { value: 1 });
		} catch (e) {
			// IE 8 has a broken defineProperty
			$defineProperty = null;
		}
	}
	
	module.exports = function callBind(originalFunction) {
		var func = $reflectApply(bind, $call, arguments);
		if ($gOPD && $defineProperty) {
			var desc = $gOPD(func, 'length');
			if (desc.configurable) {
				// original length, plus the receiver, minus any additional arguments (after the receiver)
				$defineProperty(
					func,
					'length',
					{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
				);
			}
		}
		return func;
	};
	
	var applyBind = function applyBind() {
		return $reflectApply(bind, $apply, arguments);
	};
	
	if ($defineProperty) {
		$defineProperty(module.exports, 'apply', { value: applyBind });
	} else {
		module.exports.apply = applyBind;
	}


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.flatten = void 0;
	var tslib_1 = __webpack_require__(83);
	var defaultOpts = {
	    xml: false,
	    decodeEntities: true,
	};
	/** Cheerio default options. */
	exports.default = defaultOpts;
	var xmlModeDefault = {
	    _useHtmlParser2: true,
	    xmlMode: true,
	};
	function flatten(options) {
	    return (options === null || options === void 0 ? void 0 : options.xml)
	        ? typeof options.xml === 'boolean'
	            ? xmlModeDefault
	            : tslib_1.__assign(tslib_1.__assign({}, xmlModeDefault), options.xml)
	        : options !== null && options !== void 0 ? options : undefined;
	}
	exports.flatten = flatten;


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.update = void 0;
	var htmlparser2_1 = __webpack_require__(68);
	var htmlparser2_2 = __webpack_require__(410);
	var parse5_1 = __webpack_require__(411);
	var domhandler_1 = __webpack_require__(77);
	/*
	 * Parser
	 */
	function parse(content, options, isDocument) {
	    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {
	        content = content.toString();
	    }
	    if (typeof content === 'string') {
	        return options.xmlMode || options._useHtmlParser2
	            ? htmlparser2_2.parse(content, options)
	            : parse5_1.parse(content, options, isDocument);
	    }
	    var doc = content;
	    if (!Array.isArray(doc) && domhandler_1.isDocument(doc)) {
	        // If `doc` is already a root, just return it
	        return doc;
	    }
	    // Add conent to new root element
	    var root = new domhandler_1.Document([]);
	    // Update the DOM using the root
	    update(doc, root);
	    return root;
	}
	exports.default = parse;
	/**
	 * Update the dom structure, for one changed layer.
	 *
	 * @param newChilds - The new children.
	 * @param parent - The new parent.
	 * @returns The parent node.
	 */
	function update(newChilds, parent) {
	    // Normalize
	    var arr = Array.isArray(newChilds) ? newChilds : [newChilds];
	    // Update parent
	    if (parent) {
	        parent.children = arr;
	    }
	    else {
	        parent = null;
	    }
	    // Update neighbors
	    for (var i = 0; i < arr.length; i++) {
	        var node = arr[i];
	        // Cleanly remove existing nodes from their previous structures.
	        if (node.parent && node.parent.children !== arr) {
	            htmlparser2_1.DomUtils.removeElement(node);
	        }
	        if (parent) {
	            node.prev = arr[i - 1] || null;
	            node.next = arr[i + 1] || null;
	        }
	        else {
	            node.prev = node.next = null;
	        }
	        node.parent = parent;
	    }
	    return parent;
	}
	exports.update = update;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(186).Buffer))

/***/ }),
/* 261 */
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ }),
/* 262 */
/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

	var $          = __webpack_require__(46)
	  , createDesc = __webpack_require__(265);
	module.exports = __webpack_require__(417) ? function(object, key, value){
	  return $.setDesc(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ }),
/* 264 */
/***/ (function(module, exports) {

	module.exports = {};

/***/ }),
/* 265 */
/***/ (function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

	var def = __webpack_require__(46).setDesc
	  , has = __webpack_require__(262)
	  , TAG = __webpack_require__(141)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(261);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ }),
/* 268 */
/***/ (function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(190)
	  , TAG = __webpack_require__(41)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';
	
	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(968)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

	var def = __webpack_require__(88).setDesc
	  , has = __webpack_require__(428)
	  , TAG = __webpack_require__(41)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		pseudo selectors
	
		---
	
		they are available in two forms:
		* filters called when the selector
		  is compiled and return a function
		  that needs to return next()
		* pseudos get called on execution
		  they need to return a boolean
	*/
	
	var DomUtils    = __webpack_require__(78),
	    isTag       = DomUtils.isTag,
	    getText     = DomUtils.getText,
	    getParent   = DomUtils.getParent,
	    getChildren = DomUtils.getChildren,
	    getSiblings = DomUtils.getSiblings,
	    hasAttrib   = DomUtils.hasAttrib,
	    getName     = DomUtils.getName,
	    getAttribute= DomUtils.getAttributeValue,
	    getNCheck   = __webpack_require__(1522),
	    checkAttrib = __webpack_require__(435).rules.equals,
	    BaseFuncs   = __webpack_require__(138),
	    trueFunc    = BaseFuncs.trueFunc,
	    falseFunc   = BaseFuncs.falseFunc;
	
	//helper methods
	function getFirstElement(elems){
		for(var i = 0; elems && i < elems.length; i++){
			if(isTag(elems[i])) return elems[i];
		}
	}
	
	function getAttribFunc(name, value){
		var data = {name: name, value: value};
		return function attribFunc(next){
			return checkAttrib(next, data);
		};
	}
	
	function getChildFunc(next){
		return function(elem){
			return !!getParent(elem) && next(elem);
		};
	}
	
	var filters = {
		contains: function(next, text){
			return function contains(elem){
				return next(elem) && getText(elem).indexOf(text) >= 0;
			};
		},
		icontains: function(next, text){
			var itext = text.toLowerCase();
			return function icontains(elem){
				return next(elem) &&
					getText(elem).toLowerCase().indexOf(itext) >= 0;
			};
		},
	
		//location specific methods
		"nth-child": function(next, rule){
			var func = getNCheck(rule);
	
			if(func === falseFunc) return func;
			if(func === trueFunc)  return getChildFunc(next);
	
			return function nthChild(elem){
				var siblings = getSiblings(elem);
	
				for(var i = 0, pos = 0; i < siblings.length; i++){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						else pos++;
					}
				}
	
				return func(pos) && next(elem);
			};
		},
		"nth-last-child": function(next, rule){
			var func = getNCheck(rule);
	
			if(func === falseFunc) return func;
			if(func === trueFunc)  return getChildFunc(next);
	
			return function nthLastChild(elem){
				var siblings = getSiblings(elem);
	
				for(var pos = 0, i = siblings.length - 1; i >= 0; i--){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						else pos++;
					}
				}
	
				return func(pos) && next(elem);
			};
		},
		"nth-of-type": function(next, rule){
			var func = getNCheck(rule);
	
			if(func === falseFunc) return func;
			if(func === trueFunc)  return getChildFunc(next);
	
			return function nthOfType(elem){
				var siblings = getSiblings(elem);
	
				for(var pos = 0, i = 0; i < siblings.length; i++){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						if(getName(siblings[i]) === getName(elem)) pos++;
					}
				}
	
				return func(pos) && next(elem);
			};
		},
		"nth-last-of-type": function(next, rule){
			var func = getNCheck(rule);
	
			if(func === falseFunc) return func;
			if(func === trueFunc)  return getChildFunc(next);
	
			return function nthLastOfType(elem){
				var siblings = getSiblings(elem);
	
				for(var pos = 0, i = siblings.length - 1; i >= 0; i--){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						if(getName(siblings[i]) === getName(elem)) pos++;
					}
				}
	
				return func(pos) && next(elem);
			};
		},
	
	    //TODO determine the actual root element
	    root: function(next){
	        return function(elem){
	            return !getParent(elem) && next(elem);
	        };
	    },
	
	    scope: function(next, rule, options, context){
	        if(!context || context.length === 0){
	            //equivalent to :root
	            return filters.root(next);
	        }
	
	        if(context.length === 1){
	            //NOTE: can't be unpacked, as :has uses this for side-effects
	            return function(elem){
	                return context[0] === elem && next(elem);
	            };
	        }
	
	        return function(elem){
	            return context.indexOf(elem) >= 0 && next(elem);
	        };
	    },
	
		//jQuery extensions (others follow as pseudos)
		checkbox: getAttribFunc("type", "checkbox"),
		file: getAttribFunc("type", "file"),
		password: getAttribFunc("type", "password"),
		radio: getAttribFunc("type", "radio"),
		reset: getAttribFunc("type", "reset"),
		image: getAttribFunc("type", "image"),
		submit: getAttribFunc("type", "submit")
	};
	
	//while filters are precompiled, pseudos get called when they are needed
	var pseudos = {
		empty: function(elem){
			return !getChildren(elem).some(function(elem){
				return isTag(elem) || elem.type === "text";
			});
		},
	
		"first-child": function(elem){
			return getFirstElement(getSiblings(elem)) === elem;
		},
		"last-child": function(elem){
			var siblings = getSiblings(elem);
	
			for(var i = siblings.length - 1; i >= 0; i--){
				if(siblings[i] === elem) return true;
				if(isTag(siblings[i])) break;
			}
	
			return false;
		},
		"first-of-type": function(elem){
			var siblings = getSiblings(elem);
	
			for(var i = 0; i < siblings.length; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) return true;
					if(getName(siblings[i]) === getName(elem)) break;
				}
			}
	
			return false;
		},
		"last-of-type": function(elem){
			var siblings = getSiblings(elem);
	
			for(var i = siblings.length-1; i >= 0; i--){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) return true;
					if(getName(siblings[i]) === getName(elem)) break;
				}
			}
	
			return false;
		},
		"only-of-type": function(elem){
			var siblings = getSiblings(elem);
	
			for(var i = 0, j = siblings.length; i < j; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) continue;
					if(getName(siblings[i]) === getName(elem)) return false;
				}
			}
	
			return true;
		},
		"only-child": function(elem){
			var siblings = getSiblings(elem);
	
			for(var i = 0; i < siblings.length; i++){
				if(isTag(siblings[i]) && siblings[i] !== elem) return false;
			}
	
			return true;
		},
	
		//:matches(a, area, link)[href]
		link: function(elem){
			return hasAttrib(elem, "href");
		},
		visited: falseFunc, //seems to be a valid implementation
		//TODO: :any-link once the name is finalized (as an alias of :link)
	
		//forms
		//to consider: :target
	
		//:matches([selected], select:not([multiple]):not(> option[selected]) > option:first-of-type)
		selected: function(elem){
			if(hasAttrib(elem, "selected")) return true;
			else if(getName(elem) !== "option") return false;
	
			//the first <option> in a <select> is also selected
			var parent = getParent(elem);
	
			if(
				!parent ||
				getName(parent) !== "select" ||
				hasAttrib(parent, "multiple")
			) return false;
	
			var siblings = getChildren(parent),
				sawElem  = false;
	
			for(var i = 0; i < siblings.length; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem){
						sawElem = true;
					} else if(!sawElem){
						return false;
					} else if(hasAttrib(siblings[i], "selected")){
						return false;
					}
				}
			}
	
			return sawElem;
		},
		//https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements
		//:matches(
		//  :matches(button, input, select, textarea, menuitem, optgroup, option)[disabled],
		//  optgroup[disabled] > option),
		// fieldset[disabled] * //TODO not child of first <legend>
		//)
		disabled: function(elem){
			return hasAttrib(elem, "disabled");
		},
		enabled: function(elem){
			return !hasAttrib(elem, "disabled");
		},
		//:matches(:matches(:radio, :checkbox)[checked], :selected) (TODO menuitem)
		checked: function(elem){
			return hasAttrib(elem, "checked") || pseudos.selected(elem);
		},
		//:matches(input, select, textarea)[required]
		required: function(elem){
			return hasAttrib(elem, "required");
		},
		//:matches(input, select, textarea):not([required])
		optional: function(elem){
			return !hasAttrib(elem, "required");
		},
	
		//jQuery extensions
	
		//:not(:empty)
		parent: function(elem){
			return !pseudos.empty(elem);
		},
		//:matches(h1, h2, h3, h4, h5, h6)
		header: function(elem){
			var name = getName(elem);
			return name === "h1" ||
			       name === "h2" ||
			       name === "h3" ||
			       name === "h4" ||
			       name === "h5" ||
			       name === "h6";
		},
	
		//:matches(button, input[type=button])
		button: function(elem){
			var name = getName(elem);
			return name === "button" ||
			       name === "input" &&
			       getAttribute(elem, "type") === "button";
		},
		//:matches(input, textarea, select, button)
		input: function(elem){
			var name = getName(elem);
			return name === "input" ||
			       name === "textarea" ||
			       name === "select" ||
			       name === "button";
		},
		//input:matches(:not([type!='']), [type='text' i])
		text: function(elem){
			var attr;
			return getName(elem) === "input" && (
				!(attr = getAttribute(elem, "type")) ||
				attr.toLowerCase() === "text"
			);
		}
	};
	
	function verifyArgs(func, name, subselect){
		if(subselect === null){
			if(func.length > 1 && name !== "scope"){
				throw new SyntaxError("pseudo-selector :" + name + " requires an argument");
			}
		} else {
			if(func.length === 1){
				throw new SyntaxError("pseudo-selector :" + name + " doesn't have any arguments");
			}
		}
	}
	
	//FIXME this feels hacky
	var re_CSS3 = /^(?:(?:nth|last|first|only)-(?:child|of-type)|root|empty|(?:en|dis)abled|checked|not)$/;
	
	module.exports = {
		compile: function(next, data, options, context){
			var name = data.name,
				subselect = data.data;
	
			if(options && options.strict && !re_CSS3.test(name)){
				throw SyntaxError(":" + name + " isn't part of CSS3");
			}
	
			if(typeof filters[name] === "function"){
				verifyArgs(filters[name], name,  subselect);
				return filters[name](next, subselect, options, context);
			} else if(typeof pseudos[name] === "function"){
				var func = pseudos[name];
				verifyArgs(func, name, subselect);
	
				if(next === trueFunc) return func;
	
				return function pseudoArgs(elem){
					return func(elem, subselect) && next(elem);
				};
			} else {
				throw new SyntaxError("unmatched pseudo-class :" + name);
			}
		},
		filters: filters,
		pseudos: pseudos
	};


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isInBrowser = __webpack_require__(194);
	
	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var js = ''; /**
	              * Export javascript style and css style vendor prefixes.
	              * Based on "transform" support test.
	              */
	
	var css = '';
	
	// We should not do anything if required serverside.
	if (_isInBrowser2['default']) {
	  // Order matters. We need to check Webkit the last one because
	  // other vendors use to add Webkit prefixes to some properties
	  var jsCssMap = {
	    Moz: '-moz-',
	    // IE did it wrong again ...
	    ms: '-ms-',
	    O: '-o-',
	    Webkit: '-webkit-'
	  };
	  var style = document.createElement('p').style;
	  var testProp = 'Transform';
	
	  for (var key in jsCssMap) {
	    if (key + testProp in style) {
	      js = key;
	      css = jsCssMap[key];
	      break;
	    }
	  }
	}
	
	/**
	 * Vendor prefix string for the current browser.
	 *
	 * @type {{js: String, css: String}}
	 * @api public
	 */
	exports['default'] = { js: js, css: css };

/***/ }),
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getTimezoneOffsetInMilliseconds;
	var MILLISECONDS_IN_MINUTE = 60000;
	/**
	 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
	 * They usually appear for dates that denote time before the timezones were introduced
	 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
	 * and GMT+01:00:00 after that date)
	 *
	 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
	 * which would lead to incorrect calculations.
	 *
	 * This function returns the timezone offset in milliseconds that takes seconds in account.
	 */
	
	function getTimezoneOffsetInMilliseconds(dirtyDate) {
	  var date = new Date(dirtyDate.getTime());
	  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());
	  date.setSeconds(0, 0);
	  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;
	  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;
	}
	
	module.exports = exports.default;

/***/ }),
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = formatDistance;
	
	var _index = _interopRequireDefault(__webpack_require__(437));
	
	var _index2 = _interopRequireDefault(__webpack_require__(1007));
	
	var _index3 = _interopRequireDefault(__webpack_require__(1008));
	
	var _index4 = _interopRequireDefault(__webpack_require__(288));
	
	var _index5 = _interopRequireDefault(__webpack_require__(23));
	
	var _index6 = _interopRequireDefault(__webpack_require__(1004));
	
	var _index7 = _interopRequireDefault(__webpack_require__(277));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var MINUTES_IN_DAY = 1440;
	var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
	var MINUTES_IN_MONTH = 43200;
	var MINUTES_IN_TWO_MONTHS = 86400;
	/**
	 * @name formatDistance
	 * @category Common Helpers
	 * @summary Return the distance between the given dates in words.
	 *
	 * @description
	 * Return the distance between the given dates in words.
	 *
	 * | Distance between dates                                            | Result              |
	 * |-------------------------------------------------------------------|---------------------|
	 * | 0 ... 30 secs                                                     | less than a minute  |
	 * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
	 * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
	 * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
	 * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
	 * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
	 * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
	 * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
	 * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
	 * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
	 * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
	 * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
	 * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
	 * | N yrs ... N yrs 3 months                                          | about N years       |
	 * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
	 * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
	 *
	 * With `options.includeSeconds == true`:
	 * | Distance between dates | Result               |
	 * |------------------------|----------------------|
	 * | 0 secs ... 5 secs      | less than 5 seconds  |
	 * | 5 secs ... 10 secs     | less than 10 seconds |
	 * | 10 secs ... 20 secs    | less than 20 seconds |
	 * | 20 secs ... 40 secs    | half a minute        |
	 * | 40 secs ... 60 secs    | less than a minute   |
	 * | 60 secs ... 90 secs    | 1 minute             |
	 *
	 * ### v2.0.0 breaking changes:
	 *
	 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
	 *
	 * - The function was renamed from `distanceInWords ` to `formatDistance`
	 *   to make its name consistent with `format` and `formatRelative`.
	 *
	 * - The order of arguments is swapped to make the function
	 *   consistent with `differenceIn...` functions.
	 *
	 *   ```javascript
	 *   // Before v2.0.0
	 *
	 *   distanceInWords(
	 *     new Date(1986, 3, 4, 10, 32, 0),
	 *     new Date(1986, 3, 4, 11, 32, 0),
	 *     { addSuffix: true }
	 *   ) //=> 'in about 1 hour'
	 *
	 *   // v2.0.0 onward
	 *
	 *   formatDistance(
	 *     new Date(1986, 3, 4, 11, 32, 0),
	 *     new Date(1986, 3, 4, 10, 32, 0),
	 *     { addSuffix: true }
	 *   ) //=> 'in about 1 hour'
	 *   ```
	 *
	 * @param {Date|Number} date - the date
	 * @param {Date|Number} baseDate - the date to compare with
	 * @param {Object} [options] - an object with options.
	 * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
	 * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
	 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
	 * @returns {String} the distance in words
	 * @throws {TypeError} 2 arguments required
	 * @throws {RangeError} `date` must not be Invalid Date
	 * @throws {RangeError} `baseDate` must not be Invalid Date
	 * @throws {RangeError} `options.locale` must contain `formatDistance` property
	 *
	 * @example
	 * // What is the distance between 2 July 2014 and 1 January 2015?
	 * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))
	 * //=> '6 months'
	 *
	 * @example
	 * // What is the distance between 1 January 2015 00:00:15
	 * // and 1 January 2015 00:00:00, including seconds?
	 * var result = formatDistance(
	 *   new Date(2015, 0, 1, 0, 0, 15),
	 *   new Date(2015, 0, 1, 0, 0, 0),
	 *   { includeSeconds: true }
	 * )
	 * //=> 'less than 20 seconds'
	 *
	 * @example
	 * // What is the distance from 1 January 2016
	 * // to 1 January 2015, with a suffix?
	 * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {
	 *   addSuffix: true
	 * })
	 * //=> 'about 1 year ago'
	 *
	 * @example
	 * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
	 * import { eoLocale } from 'date-fns/locale/eo'
	 * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {
	 *   locale: eoLocale
	 * })
	 * //=> 'pli ol 1 jaro'
	 */
	
	function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {
	  if (arguments.length < 2) {
	    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
	  }
	
	  var options = dirtyOptions || {};
	  var locale = options.locale || _index4.default;
	
	  if (!locale.formatDistance) {
	    throw new RangeError('locale must contain formatDistance property');
	  }
	
	  var comparison = (0, _index.default)(dirtyDate, dirtyBaseDate);
	
	  if (isNaN(comparison)) {
	    throw new RangeError('Invalid time value');
	  }
	
	  var localizeOptions = (0, _index6.default)(options);
	  localizeOptions.addSuffix = Boolean(options.addSuffix);
	  localizeOptions.comparison = comparison;
	  var dateLeft;
	  var dateRight;
	
	  if (comparison > 0) {
	    dateLeft = (0, _index5.default)(dirtyBaseDate);
	    dateRight = (0, _index5.default)(dirtyDate);
	  } else {
	    dateLeft = (0, _index5.default)(dirtyDate);
	    dateRight = (0, _index5.default)(dirtyBaseDate);
	  }
	
	  var seconds = (0, _index3.default)(dateRight, dateLeft);
	  var offsetInSeconds = ((0, _index7.default)(dateRight) - (0, _index7.default)(dateLeft)) / 1000;
	  var minutes = Math.round((seconds - offsetInSeconds) / 60);
	  var months; // 0 up to 2 mins
	
	  if (minutes < 2) {
	    if (options.includeSeconds) {
	      if (seconds < 5) {
	        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);
	      } else if (seconds < 10) {
	        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);
	      } else if (seconds < 20) {
	        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);
	      } else if (seconds < 40) {
	        return locale.formatDistance('halfAMinute', null, localizeOptions);
	      } else if (seconds < 60) {
	        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
	      } else {
	        return locale.formatDistance('xMinutes', 1, localizeOptions);
	      }
	    } else {
	      if (minutes === 0) {
	        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
	      } else {
	        return locale.formatDistance('xMinutes', minutes, localizeOptions);
	      }
	    } // 2 mins up to 0.75 hrs
	
	  } else if (minutes < 45) {
	    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs
	  } else if (minutes < 90) {
	    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs
	  } else if (minutes < MINUTES_IN_DAY) {
	    var hours = Math.round(minutes / 60);
	    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days
	  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
	    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days
	  } else if (minutes < MINUTES_IN_MONTH) {
	    var days = Math.round(minutes / MINUTES_IN_DAY);
	    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months
	  } else if (minutes < MINUTES_IN_TWO_MONTHS) {
	    months = Math.round(minutes / MINUTES_IN_MONTH);
	    return locale.formatDistance('aboutXMonths', months, localizeOptions);
	  }
	
	  months = (0, _index2.default)(dateRight, dateLeft); // 2 months up to 12 months
	
	  if (months < 12) {
	    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
	    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date
	  } else {
	    var monthsSinceStartOfYear = months % 12;
	    var years = Math.floor(months / 12); // N years up to 1 years 3 months
	
	    if (monthsSinceStartOfYear < 3) {
	      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months
	    } else if (monthsSinceStartOfYear < 9) {
	      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months
	    } else {
	      return locale.formatDistance('almostXYears', years + 1, localizeOptions);
	    }
	  }
	}
	
	module.exports = exports.default;

/***/ }),
/* 287 */,
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _index = _interopRequireDefault(__webpack_require__(1013));
	
	var _index2 = _interopRequireDefault(__webpack_require__(1014));
	
	var _index3 = _interopRequireDefault(__webpack_require__(1015));
	
	var _index4 = _interopRequireDefault(__webpack_require__(1016));
	
	var _index5 = _interopRequireDefault(__webpack_require__(1017));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @type {Locale}
	 * @category Locales
	 * @summary English locale (United States).
	 * @language English
	 * @iso-639-2 eng
	 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
	 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
	 */
	var locale = {
	  code: 'en-US',
	  formatDistance: _index.default,
	  formatLong: _index2.default,
	  formatRelative: _index3.default,
	  localize: _index4.default,
	  match: _index5.default,
	  options: {
	    weekStartsOn: 0
	    /* Sunday */
	    ,
	    firstWeekContainsDate: 1
	  }
	};
	var _default = locale;
	exports.default = _default;
	module.exports = exports.default;

/***/ }),
/* 289 */,
/* 290 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = getWindow;
	
	function getWindow(node) {
	  return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;
	}
	
	module.exports = exports["default"];

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var implementation = __webpack_require__(1052);
	
	module.exports = Function.prototype.bind || implementation;


/***/ }),
/* 292 */,
/* 293 */
/***/ (function(module, exports) {

	module.exports = {"Aacute":"Á","aacute":"á","Abreve":"Ă","abreve":"ă","ac":"∾","acd":"∿","acE":"∾̳","Acirc":"Â","acirc":"â","acute":"´","Acy":"А","acy":"а","AElig":"Æ","aelig":"æ","af":"⁡","Afr":"𝔄","afr":"𝔞","Agrave":"À","agrave":"à","alefsym":"ℵ","aleph":"ℵ","Alpha":"Α","alpha":"α","Amacr":"Ā","amacr":"ā","amalg":"⨿","amp":"&","AMP":"&","andand":"⩕","And":"⩓","and":"∧","andd":"⩜","andslope":"⩘","andv":"⩚","ang":"∠","ange":"⦤","angle":"∠","angmsdaa":"⦨","angmsdab":"⦩","angmsdac":"⦪","angmsdad":"⦫","angmsdae":"⦬","angmsdaf":"⦭","angmsdag":"⦮","angmsdah":"⦯","angmsd":"∡","angrt":"∟","angrtvb":"⊾","angrtvbd":"⦝","angsph":"∢","angst":"Å","angzarr":"⍼","Aogon":"Ą","aogon":"ą","Aopf":"𝔸","aopf":"𝕒","apacir":"⩯","ap":"≈","apE":"⩰","ape":"≊","apid":"≋","apos":"'","ApplyFunction":"⁡","approx":"≈","approxeq":"≊","Aring":"Å","aring":"å","Ascr":"𝒜","ascr":"𝒶","Assign":"≔","ast":"*","asymp":"≈","asympeq":"≍","Atilde":"Ã","atilde":"ã","Auml":"Ä","auml":"ä","awconint":"∳","awint":"⨑","backcong":"≌","backepsilon":"϶","backprime":"‵","backsim":"∽","backsimeq":"⋍","Backslash":"∖","Barv":"⫧","barvee":"⊽","barwed":"⌅","Barwed":"⌆","barwedge":"⌅","bbrk":"⎵","bbrktbrk":"⎶","bcong":"≌","Bcy":"Б","bcy":"б","bdquo":"„","becaus":"∵","because":"∵","Because":"∵","bemptyv":"⦰","bepsi":"϶","bernou":"ℬ","Bernoullis":"ℬ","Beta":"Β","beta":"β","beth":"ℶ","between":"≬","Bfr":"𝔅","bfr":"𝔟","bigcap":"⋂","bigcirc":"◯","bigcup":"⋃","bigodot":"⨀","bigoplus":"⨁","bigotimes":"⨂","bigsqcup":"⨆","bigstar":"★","bigtriangledown":"▽","bigtriangleup":"△","biguplus":"⨄","bigvee":"⋁","bigwedge":"⋀","bkarow":"⤍","blacklozenge":"⧫","blacksquare":"▪","blacktriangle":"▴","blacktriangledown":"▾","blacktriangleleft":"◂","blacktriangleright":"▸","blank":"␣","blk12":"▒","blk14":"░","blk34":"▓","block":"█","bne":"=⃥","bnequiv":"≡⃥","bNot":"⫭","bnot":"⌐","Bopf":"𝔹","bopf":"𝕓","bot":"⊥","bottom":"⊥","bowtie":"⋈","boxbox":"⧉","boxdl":"┐","boxdL":"╕","boxDl":"╖","boxDL":"╗","boxdr":"┌","boxdR":"╒","boxDr":"╓","boxDR":"╔","boxh":"─","boxH":"═","boxhd":"┬","boxHd":"╤","boxhD":"╥","boxHD":"╦","boxhu":"┴","boxHu":"╧","boxhU":"╨","boxHU":"╩","boxminus":"⊟","boxplus":"⊞","boxtimes":"⊠","boxul":"┘","boxuL":"╛","boxUl":"╜","boxUL":"╝","boxur":"└","boxuR":"╘","boxUr":"╙","boxUR":"╚","boxv":"│","boxV":"║","boxvh":"┼","boxvH":"╪","boxVh":"╫","boxVH":"╬","boxvl":"┤","boxvL":"╡","boxVl":"╢","boxVL":"╣","boxvr":"├","boxvR":"╞","boxVr":"╟","boxVR":"╠","bprime":"‵","breve":"˘","Breve":"˘","brvbar":"¦","bscr":"𝒷","Bscr":"ℬ","bsemi":"⁏","bsim":"∽","bsime":"⋍","bsolb":"⧅","bsol":"\\","bsolhsub":"⟈","bull":"•","bullet":"•","bump":"≎","bumpE":"⪮","bumpe":"≏","Bumpeq":"≎","bumpeq":"≏","Cacute":"Ć","cacute":"ć","capand":"⩄","capbrcup":"⩉","capcap":"⩋","cap":"∩","Cap":"⋒","capcup":"⩇","capdot":"⩀","CapitalDifferentialD":"ⅅ","caps":"∩︀","caret":"⁁","caron":"ˇ","Cayleys":"ℭ","ccaps":"⩍","Ccaron":"Č","ccaron":"č","Ccedil":"Ç","ccedil":"ç","Ccirc":"Ĉ","ccirc":"ĉ","Cconint":"∰","ccups":"⩌","ccupssm":"⩐","Cdot":"Ċ","cdot":"ċ","cedil":"¸","Cedilla":"¸","cemptyv":"⦲","cent":"¢","centerdot":"·","CenterDot":"·","cfr":"𝔠","Cfr":"ℭ","CHcy":"Ч","chcy":"ч","check":"✓","checkmark":"✓","Chi":"Χ","chi":"χ","circ":"ˆ","circeq":"≗","circlearrowleft":"↺","circlearrowright":"↻","circledast":"⊛","circledcirc":"⊚","circleddash":"⊝","CircleDot":"⊙","circledR":"®","circledS":"Ⓢ","CircleMinus":"⊖","CirclePlus":"⊕","CircleTimes":"⊗","cir":"○","cirE":"⧃","cire":"≗","cirfnint":"⨐","cirmid":"⫯","cirscir":"⧂","ClockwiseContourIntegral":"∲","CloseCurlyDoubleQuote":"”","CloseCurlyQuote":"’","clubs":"♣","clubsuit":"♣","colon":":","Colon":"∷","Colone":"⩴","colone":"≔","coloneq":"≔","comma":",","commat":"@","comp":"∁","compfn":"∘","complement":"∁","complexes":"ℂ","cong":"≅","congdot":"⩭","Congruent":"≡","conint":"∮","Conint":"∯","ContourIntegral":"∮","copf":"𝕔","Copf":"ℂ","coprod":"∐","Coproduct":"∐","copy":"©","COPY":"©","copysr":"℗","CounterClockwiseContourIntegral":"∳","crarr":"↵","cross":"✗","Cross":"⨯","Cscr":"𝒞","cscr":"𝒸","csub":"⫏","csube":"⫑","csup":"⫐","csupe":"⫒","ctdot":"⋯","cudarrl":"⤸","cudarrr":"⤵","cuepr":"⋞","cuesc":"⋟","cularr":"↶","cularrp":"⤽","cupbrcap":"⩈","cupcap":"⩆","CupCap":"≍","cup":"∪","Cup":"⋓","cupcup":"⩊","cupdot":"⊍","cupor":"⩅","cups":"∪︀","curarr":"↷","curarrm":"⤼","curlyeqprec":"⋞","curlyeqsucc":"⋟","curlyvee":"⋎","curlywedge":"⋏","curren":"¤","curvearrowleft":"↶","curvearrowright":"↷","cuvee":"⋎","cuwed":"⋏","cwconint":"∲","cwint":"∱","cylcty":"⌭","dagger":"†","Dagger":"‡","daleth":"ℸ","darr":"↓","Darr":"↡","dArr":"⇓","dash":"‐","Dashv":"⫤","dashv":"⊣","dbkarow":"⤏","dblac":"˝","Dcaron":"Ď","dcaron":"ď","Dcy":"Д","dcy":"д","ddagger":"‡","ddarr":"⇊","DD":"ⅅ","dd":"ⅆ","DDotrahd":"⤑","ddotseq":"⩷","deg":"°","Del":"∇","Delta":"Δ","delta":"δ","demptyv":"⦱","dfisht":"⥿","Dfr":"𝔇","dfr":"𝔡","dHar":"⥥","dharl":"⇃","dharr":"⇂","DiacriticalAcute":"´","DiacriticalDot":"˙","DiacriticalDoubleAcute":"˝","DiacriticalGrave":"`","DiacriticalTilde":"˜","diam":"⋄","diamond":"⋄","Diamond":"⋄","diamondsuit":"♦","diams":"♦","die":"¨","DifferentialD":"ⅆ","digamma":"ϝ","disin":"⋲","div":"÷","divide":"÷","divideontimes":"⋇","divonx":"⋇","DJcy":"Ђ","djcy":"ђ","dlcorn":"⌞","dlcrop":"⌍","dollar":"$","Dopf":"𝔻","dopf":"𝕕","Dot":"¨","dot":"˙","DotDot":"⃜","doteq":"≐","doteqdot":"≑","DotEqual":"≐","dotminus":"∸","dotplus":"∔","dotsquare":"⊡","doublebarwedge":"⌆","DoubleContourIntegral":"∯","DoubleDot":"¨","DoubleDownArrow":"⇓","DoubleLeftArrow":"⇐","DoubleLeftRightArrow":"⇔","DoubleLeftTee":"⫤","DoubleLongLeftArrow":"⟸","DoubleLongLeftRightArrow":"⟺","DoubleLongRightArrow":"⟹","DoubleRightArrow":"⇒","DoubleRightTee":"⊨","DoubleUpArrow":"⇑","DoubleUpDownArrow":"⇕","DoubleVerticalBar":"∥","DownArrowBar":"⤓","downarrow":"↓","DownArrow":"↓","Downarrow":"⇓","DownArrowUpArrow":"⇵","DownBreve":"̑","downdownarrows":"⇊","downharpoonleft":"⇃","downharpoonright":"⇂","DownLeftRightVector":"⥐","DownLeftTeeVector":"⥞","DownLeftVectorBar":"⥖","DownLeftVector":"↽","DownRightTeeVector":"⥟","DownRightVectorBar":"⥗","DownRightVector":"⇁","DownTeeArrow":"↧","DownTee":"⊤","drbkarow":"⤐","drcorn":"⌟","drcrop":"⌌","Dscr":"𝒟","dscr":"𝒹","DScy":"Ѕ","dscy":"ѕ","dsol":"⧶","Dstrok":"Đ","dstrok":"đ","dtdot":"⋱","dtri":"▿","dtrif":"▾","duarr":"⇵","duhar":"⥯","dwangle":"⦦","DZcy":"Џ","dzcy":"џ","dzigrarr":"⟿","Eacute":"É","eacute":"é","easter":"⩮","Ecaron":"Ě","ecaron":"ě","Ecirc":"Ê","ecirc":"ê","ecir":"≖","ecolon":"≕","Ecy":"Э","ecy":"э","eDDot":"⩷","Edot":"Ė","edot":"ė","eDot":"≑","ee":"ⅇ","efDot":"≒","Efr":"𝔈","efr":"𝔢","eg":"⪚","Egrave":"È","egrave":"è","egs":"⪖","egsdot":"⪘","el":"⪙","Element":"∈","elinters":"⏧","ell":"ℓ","els":"⪕","elsdot":"⪗","Emacr":"Ē","emacr":"ē","empty":"∅","emptyset":"∅","EmptySmallSquare":"◻","emptyv":"∅","EmptyVerySmallSquare":"▫","emsp13":" ","emsp14":" ","emsp":" ","ENG":"Ŋ","eng":"ŋ","ensp":" ","Eogon":"Ę","eogon":"ę","Eopf":"𝔼","eopf":"𝕖","epar":"⋕","eparsl":"⧣","eplus":"⩱","epsi":"ε","Epsilon":"Ε","epsilon":"ε","epsiv":"ϵ","eqcirc":"≖","eqcolon":"≕","eqsim":"≂","eqslantgtr":"⪖","eqslantless":"⪕","Equal":"⩵","equals":"=","EqualTilde":"≂","equest":"≟","Equilibrium":"⇌","equiv":"≡","equivDD":"⩸","eqvparsl":"⧥","erarr":"⥱","erDot":"≓","escr":"ℯ","Escr":"ℰ","esdot":"≐","Esim":"⩳","esim":"≂","Eta":"Η","eta":"η","ETH":"Ð","eth":"ð","Euml":"Ë","euml":"ë","euro":"€","excl":"!","exist":"∃","Exists":"∃","expectation":"ℰ","exponentiale":"ⅇ","ExponentialE":"ⅇ","fallingdotseq":"≒","Fcy":"Ф","fcy":"ф","female":"♀","ffilig":"ﬃ","fflig":"ﬀ","ffllig":"ﬄ","Ffr":"𝔉","ffr":"𝔣","filig":"ﬁ","FilledSmallSquare":"◼","FilledVerySmallSquare":"▪","fjlig":"fj","flat":"♭","fllig":"ﬂ","fltns":"▱","fnof":"ƒ","Fopf":"𝔽","fopf":"𝕗","forall":"∀","ForAll":"∀","fork":"⋔","forkv":"⫙","Fouriertrf":"ℱ","fpartint":"⨍","frac12":"½","frac13":"⅓","frac14":"¼","frac15":"⅕","frac16":"⅙","frac18":"⅛","frac23":"⅔","frac25":"⅖","frac34":"¾","frac35":"⅗","frac38":"⅜","frac45":"⅘","frac56":"⅚","frac58":"⅝","frac78":"⅞","frasl":"⁄","frown":"⌢","fscr":"𝒻","Fscr":"ℱ","gacute":"ǵ","Gamma":"Γ","gamma":"γ","Gammad":"Ϝ","gammad":"ϝ","gap":"⪆","Gbreve":"Ğ","gbreve":"ğ","Gcedil":"Ģ","Gcirc":"Ĝ","gcirc":"ĝ","Gcy":"Г","gcy":"г","Gdot":"Ġ","gdot":"ġ","ge":"≥","gE":"≧","gEl":"⪌","gel":"⋛","geq":"≥","geqq":"≧","geqslant":"⩾","gescc":"⪩","ges":"⩾","gesdot":"⪀","gesdoto":"⪂","gesdotol":"⪄","gesl":"⋛︀","gesles":"⪔","Gfr":"𝔊","gfr":"𝔤","gg":"≫","Gg":"⋙","ggg":"⋙","gimel":"ℷ","GJcy":"Ѓ","gjcy":"ѓ","gla":"⪥","gl":"≷","glE":"⪒","glj":"⪤","gnap":"⪊","gnapprox":"⪊","gne":"⪈","gnE":"≩","gneq":"⪈","gneqq":"≩","gnsim":"⋧","Gopf":"𝔾","gopf":"𝕘","grave":"`","GreaterEqual":"≥","GreaterEqualLess":"⋛","GreaterFullEqual":"≧","GreaterGreater":"⪢","GreaterLess":"≷","GreaterSlantEqual":"⩾","GreaterTilde":"≳","Gscr":"𝒢","gscr":"ℊ","gsim":"≳","gsime":"⪎","gsiml":"⪐","gtcc":"⪧","gtcir":"⩺","gt":">","GT":">","Gt":"≫","gtdot":"⋗","gtlPar":"⦕","gtquest":"⩼","gtrapprox":"⪆","gtrarr":"⥸","gtrdot":"⋗","gtreqless":"⋛","gtreqqless":"⪌","gtrless":"≷","gtrsim":"≳","gvertneqq":"≩︀","gvnE":"≩︀","Hacek":"ˇ","hairsp":" ","half":"½","hamilt":"ℋ","HARDcy":"Ъ","hardcy":"ъ","harrcir":"⥈","harr":"↔","hArr":"⇔","harrw":"↭","Hat":"^","hbar":"ℏ","Hcirc":"Ĥ","hcirc":"ĥ","hearts":"♥","heartsuit":"♥","hellip":"…","hercon":"⊹","hfr":"𝔥","Hfr":"ℌ","HilbertSpace":"ℋ","hksearow":"⤥","hkswarow":"⤦","hoarr":"⇿","homtht":"∻","hookleftarrow":"↩","hookrightarrow":"↪","hopf":"𝕙","Hopf":"ℍ","horbar":"―","HorizontalLine":"─","hscr":"𝒽","Hscr":"ℋ","hslash":"ℏ","Hstrok":"Ħ","hstrok":"ħ","HumpDownHump":"≎","HumpEqual":"≏","hybull":"⁃","hyphen":"‐","Iacute":"Í","iacute":"í","ic":"⁣","Icirc":"Î","icirc":"î","Icy":"И","icy":"и","Idot":"İ","IEcy":"Е","iecy":"е","iexcl":"¡","iff":"⇔","ifr":"𝔦","Ifr":"ℑ","Igrave":"Ì","igrave":"ì","ii":"ⅈ","iiiint":"⨌","iiint":"∭","iinfin":"⧜","iiota":"℩","IJlig":"Ĳ","ijlig":"ĳ","Imacr":"Ī","imacr":"ī","image":"ℑ","ImaginaryI":"ⅈ","imagline":"ℐ","imagpart":"ℑ","imath":"ı","Im":"ℑ","imof":"⊷","imped":"Ƶ","Implies":"⇒","incare":"℅","in":"∈","infin":"∞","infintie":"⧝","inodot":"ı","intcal":"⊺","int":"∫","Int":"∬","integers":"ℤ","Integral":"∫","intercal":"⊺","Intersection":"⋂","intlarhk":"⨗","intprod":"⨼","InvisibleComma":"⁣","InvisibleTimes":"⁢","IOcy":"Ё","iocy":"ё","Iogon":"Į","iogon":"į","Iopf":"𝕀","iopf":"𝕚","Iota":"Ι","iota":"ι","iprod":"⨼","iquest":"¿","iscr":"𝒾","Iscr":"ℐ","isin":"∈","isindot":"⋵","isinE":"⋹","isins":"⋴","isinsv":"⋳","isinv":"∈","it":"⁢","Itilde":"Ĩ","itilde":"ĩ","Iukcy":"І","iukcy":"і","Iuml":"Ï","iuml":"ï","Jcirc":"Ĵ","jcirc":"ĵ","Jcy":"Й","jcy":"й","Jfr":"𝔍","jfr":"𝔧","jmath":"ȷ","Jopf":"𝕁","jopf":"𝕛","Jscr":"𝒥","jscr":"𝒿","Jsercy":"Ј","jsercy":"ј","Jukcy":"Є","jukcy":"є","Kappa":"Κ","kappa":"κ","kappav":"ϰ","Kcedil":"Ķ","kcedil":"ķ","Kcy":"К","kcy":"к","Kfr":"𝔎","kfr":"𝔨","kgreen":"ĸ","KHcy":"Х","khcy":"х","KJcy":"Ќ","kjcy":"ќ","Kopf":"𝕂","kopf":"𝕜","Kscr":"𝒦","kscr":"𝓀","lAarr":"⇚","Lacute":"Ĺ","lacute":"ĺ","laemptyv":"⦴","lagran":"ℒ","Lambda":"Λ","lambda":"λ","lang":"⟨","Lang":"⟪","langd":"⦑","langle":"⟨","lap":"⪅","Laplacetrf":"ℒ","laquo":"«","larrb":"⇤","larrbfs":"⤟","larr":"←","Larr":"↞","lArr":"⇐","larrfs":"⤝","larrhk":"↩","larrlp":"↫","larrpl":"⤹","larrsim":"⥳","larrtl":"↢","latail":"⤙","lAtail":"⤛","lat":"⪫","late":"⪭","lates":"⪭︀","lbarr":"⤌","lBarr":"⤎","lbbrk":"❲","lbrace":"{","lbrack":"[","lbrke":"⦋","lbrksld":"⦏","lbrkslu":"⦍","Lcaron":"Ľ","lcaron":"ľ","Lcedil":"Ļ","lcedil":"ļ","lceil":"⌈","lcub":"{","Lcy":"Л","lcy":"л","ldca":"⤶","ldquo":"“","ldquor":"„","ldrdhar":"⥧","ldrushar":"⥋","ldsh":"↲","le":"≤","lE":"≦","LeftAngleBracket":"⟨","LeftArrowBar":"⇤","leftarrow":"←","LeftArrow":"←","Leftarrow":"⇐","LeftArrowRightArrow":"⇆","leftarrowtail":"↢","LeftCeiling":"⌈","LeftDoubleBracket":"⟦","LeftDownTeeVector":"⥡","LeftDownVectorBar":"⥙","LeftDownVector":"⇃","LeftFloor":"⌊","leftharpoondown":"↽","leftharpoonup":"↼","leftleftarrows":"⇇","leftrightarrow":"↔","LeftRightArrow":"↔","Leftrightarrow":"⇔","leftrightarrows":"⇆","leftrightharpoons":"⇋","leftrightsquigarrow":"↭","LeftRightVector":"⥎","LeftTeeArrow":"↤","LeftTee":"⊣","LeftTeeVector":"⥚","leftthreetimes":"⋋","LeftTriangleBar":"⧏","LeftTriangle":"⊲","LeftTriangleEqual":"⊴","LeftUpDownVector":"⥑","LeftUpTeeVector":"⥠","LeftUpVectorBar":"⥘","LeftUpVector":"↿","LeftVectorBar":"⥒","LeftVector":"↼","lEg":"⪋","leg":"⋚","leq":"≤","leqq":"≦","leqslant":"⩽","lescc":"⪨","les":"⩽","lesdot":"⩿","lesdoto":"⪁","lesdotor":"⪃","lesg":"⋚︀","lesges":"⪓","lessapprox":"⪅","lessdot":"⋖","lesseqgtr":"⋚","lesseqqgtr":"⪋","LessEqualGreater":"⋚","LessFullEqual":"≦","LessGreater":"≶","lessgtr":"≶","LessLess":"⪡","lesssim":"≲","LessSlantEqual":"⩽","LessTilde":"≲","lfisht":"⥼","lfloor":"⌊","Lfr":"𝔏","lfr":"𝔩","lg":"≶","lgE":"⪑","lHar":"⥢","lhard":"↽","lharu":"↼","lharul":"⥪","lhblk":"▄","LJcy":"Љ","ljcy":"љ","llarr":"⇇","ll":"≪","Ll":"⋘","llcorner":"⌞","Lleftarrow":"⇚","llhard":"⥫","lltri":"◺","Lmidot":"Ŀ","lmidot":"ŀ","lmoustache":"⎰","lmoust":"⎰","lnap":"⪉","lnapprox":"⪉","lne":"⪇","lnE":"≨","lneq":"⪇","lneqq":"≨","lnsim":"⋦","loang":"⟬","loarr":"⇽","lobrk":"⟦","longleftarrow":"⟵","LongLeftArrow":"⟵","Longleftarrow":"⟸","longleftrightarrow":"⟷","LongLeftRightArrow":"⟷","Longleftrightarrow":"⟺","longmapsto":"⟼","longrightarrow":"⟶","LongRightArrow":"⟶","Longrightarrow":"⟹","looparrowleft":"↫","looparrowright":"↬","lopar":"⦅","Lopf":"𝕃","lopf":"𝕝","loplus":"⨭","lotimes":"⨴","lowast":"∗","lowbar":"_","LowerLeftArrow":"↙","LowerRightArrow":"↘","loz":"◊","lozenge":"◊","lozf":"⧫","lpar":"(","lparlt":"⦓","lrarr":"⇆","lrcorner":"⌟","lrhar":"⇋","lrhard":"⥭","lrm":"‎","lrtri":"⊿","lsaquo":"‹","lscr":"𝓁","Lscr":"ℒ","lsh":"↰","Lsh":"↰","lsim":"≲","lsime":"⪍","lsimg":"⪏","lsqb":"[","lsquo":"‘","lsquor":"‚","Lstrok":"Ł","lstrok":"ł","ltcc":"⪦","ltcir":"⩹","lt":"<","LT":"<","Lt":"≪","ltdot":"⋖","lthree":"⋋","ltimes":"⋉","ltlarr":"⥶","ltquest":"⩻","ltri":"◃","ltrie":"⊴","ltrif":"◂","ltrPar":"⦖","lurdshar":"⥊","luruhar":"⥦","lvertneqq":"≨︀","lvnE":"≨︀","macr":"¯","male":"♂","malt":"✠","maltese":"✠","Map":"⤅","map":"↦","mapsto":"↦","mapstodown":"↧","mapstoleft":"↤","mapstoup":"↥","marker":"▮","mcomma":"⨩","Mcy":"М","mcy":"м","mdash":"—","mDDot":"∺","measuredangle":"∡","MediumSpace":" ","Mellintrf":"ℳ","Mfr":"𝔐","mfr":"𝔪","mho":"℧","micro":"µ","midast":"*","midcir":"⫰","mid":"∣","middot":"·","minusb":"⊟","minus":"−","minusd":"∸","minusdu":"⨪","MinusPlus":"∓","mlcp":"⫛","mldr":"…","mnplus":"∓","models":"⊧","Mopf":"𝕄","mopf":"𝕞","mp":"∓","mscr":"𝓂","Mscr":"ℳ","mstpos":"∾","Mu":"Μ","mu":"μ","multimap":"⊸","mumap":"⊸","nabla":"∇","Nacute":"Ń","nacute":"ń","nang":"∠⃒","nap":"≉","napE":"⩰̸","napid":"≋̸","napos":"ŉ","napprox":"≉","natural":"♮","naturals":"ℕ","natur":"♮","nbsp":" ","nbump":"≎̸","nbumpe":"≏̸","ncap":"⩃","Ncaron":"Ň","ncaron":"ň","Ncedil":"Ņ","ncedil":"ņ","ncong":"≇","ncongdot":"⩭̸","ncup":"⩂","Ncy":"Н","ncy":"н","ndash":"–","nearhk":"⤤","nearr":"↗","neArr":"⇗","nearrow":"↗","ne":"≠","nedot":"≐̸","NegativeMediumSpace":"​","NegativeThickSpace":"​","NegativeThinSpace":"​","NegativeVeryThinSpace":"​","nequiv":"≢","nesear":"⤨","nesim":"≂̸","NestedGreaterGreater":"≫","NestedLessLess":"≪","NewLine":"\n","nexist":"∄","nexists":"∄","Nfr":"𝔑","nfr":"𝔫","ngE":"≧̸","nge":"≱","ngeq":"≱","ngeqq":"≧̸","ngeqslant":"⩾̸","nges":"⩾̸","nGg":"⋙̸","ngsim":"≵","nGt":"≫⃒","ngt":"≯","ngtr":"≯","nGtv":"≫̸","nharr":"↮","nhArr":"⇎","nhpar":"⫲","ni":"∋","nis":"⋼","nisd":"⋺","niv":"∋","NJcy":"Њ","njcy":"њ","nlarr":"↚","nlArr":"⇍","nldr":"‥","nlE":"≦̸","nle":"≰","nleftarrow":"↚","nLeftarrow":"⇍","nleftrightarrow":"↮","nLeftrightarrow":"⇎","nleq":"≰","nleqq":"≦̸","nleqslant":"⩽̸","nles":"⩽̸","nless":"≮","nLl":"⋘̸","nlsim":"≴","nLt":"≪⃒","nlt":"≮","nltri":"⋪","nltrie":"⋬","nLtv":"≪̸","nmid":"∤","NoBreak":"⁠","NonBreakingSpace":" ","nopf":"𝕟","Nopf":"ℕ","Not":"⫬","not":"¬","NotCongruent":"≢","NotCupCap":"≭","NotDoubleVerticalBar":"∦","NotElement":"∉","NotEqual":"≠","NotEqualTilde":"≂̸","NotExists":"∄","NotGreater":"≯","NotGreaterEqual":"≱","NotGreaterFullEqual":"≧̸","NotGreaterGreater":"≫̸","NotGreaterLess":"≹","NotGreaterSlantEqual":"⩾̸","NotGreaterTilde":"≵","NotHumpDownHump":"≎̸","NotHumpEqual":"≏̸","notin":"∉","notindot":"⋵̸","notinE":"⋹̸","notinva":"∉","notinvb":"⋷","notinvc":"⋶","NotLeftTriangleBar":"⧏̸","NotLeftTriangle":"⋪","NotLeftTriangleEqual":"⋬","NotLess":"≮","NotLessEqual":"≰","NotLessGreater":"≸","NotLessLess":"≪̸","NotLessSlantEqual":"⩽̸","NotLessTilde":"≴","NotNestedGreaterGreater":"⪢̸","NotNestedLessLess":"⪡̸","notni":"∌","notniva":"∌","notnivb":"⋾","notnivc":"⋽","NotPrecedes":"⊀","NotPrecedesEqual":"⪯̸","NotPrecedesSlantEqual":"⋠","NotReverseElement":"∌","NotRightTriangleBar":"⧐̸","NotRightTriangle":"⋫","NotRightTriangleEqual":"⋭","NotSquareSubset":"⊏̸","NotSquareSubsetEqual":"⋢","NotSquareSuperset":"⊐̸","NotSquareSupersetEqual":"⋣","NotSubset":"⊂⃒","NotSubsetEqual":"⊈","NotSucceeds":"⊁","NotSucceedsEqual":"⪰̸","NotSucceedsSlantEqual":"⋡","NotSucceedsTilde":"≿̸","NotSuperset":"⊃⃒","NotSupersetEqual":"⊉","NotTilde":"≁","NotTildeEqual":"≄","NotTildeFullEqual":"≇","NotTildeTilde":"≉","NotVerticalBar":"∤","nparallel":"∦","npar":"∦","nparsl":"⫽⃥","npart":"∂̸","npolint":"⨔","npr":"⊀","nprcue":"⋠","nprec":"⊀","npreceq":"⪯̸","npre":"⪯̸","nrarrc":"⤳̸","nrarr":"↛","nrArr":"⇏","nrarrw":"↝̸","nrightarrow":"↛","nRightarrow":"⇏","nrtri":"⋫","nrtrie":"⋭","nsc":"⊁","nsccue":"⋡","nsce":"⪰̸","Nscr":"𝒩","nscr":"𝓃","nshortmid":"∤","nshortparallel":"∦","nsim":"≁","nsime":"≄","nsimeq":"≄","nsmid":"∤","nspar":"∦","nsqsube":"⋢","nsqsupe":"⋣","nsub":"⊄","nsubE":"⫅̸","nsube":"⊈","nsubset":"⊂⃒","nsubseteq":"⊈","nsubseteqq":"⫅̸","nsucc":"⊁","nsucceq":"⪰̸","nsup":"⊅","nsupE":"⫆̸","nsupe":"⊉","nsupset":"⊃⃒","nsupseteq":"⊉","nsupseteqq":"⫆̸","ntgl":"≹","Ntilde":"Ñ","ntilde":"ñ","ntlg":"≸","ntriangleleft":"⋪","ntrianglelefteq":"⋬","ntriangleright":"⋫","ntrianglerighteq":"⋭","Nu":"Ν","nu":"ν","num":"#","numero":"№","numsp":" ","nvap":"≍⃒","nvdash":"⊬","nvDash":"⊭","nVdash":"⊮","nVDash":"⊯","nvge":"≥⃒","nvgt":">⃒","nvHarr":"⤄","nvinfin":"⧞","nvlArr":"⤂","nvle":"≤⃒","nvlt":"<⃒","nvltrie":"⊴⃒","nvrArr":"⤃","nvrtrie":"⊵⃒","nvsim":"∼⃒","nwarhk":"⤣","nwarr":"↖","nwArr":"⇖","nwarrow":"↖","nwnear":"⤧","Oacute":"Ó","oacute":"ó","oast":"⊛","Ocirc":"Ô","ocirc":"ô","ocir":"⊚","Ocy":"О","ocy":"о","odash":"⊝","Odblac":"Ő","odblac":"ő","odiv":"⨸","odot":"⊙","odsold":"⦼","OElig":"Œ","oelig":"œ","ofcir":"⦿","Ofr":"𝔒","ofr":"𝔬","ogon":"˛","Ograve":"Ò","ograve":"ò","ogt":"⧁","ohbar":"⦵","ohm":"Ω","oint":"∮","olarr":"↺","olcir":"⦾","olcross":"⦻","oline":"‾","olt":"⧀","Omacr":"Ō","omacr":"ō","Omega":"Ω","omega":"ω","Omicron":"Ο","omicron":"ο","omid":"⦶","ominus":"⊖","Oopf":"𝕆","oopf":"𝕠","opar":"⦷","OpenCurlyDoubleQuote":"“","OpenCurlyQuote":"‘","operp":"⦹","oplus":"⊕","orarr":"↻","Or":"⩔","or":"∨","ord":"⩝","order":"ℴ","orderof":"ℴ","ordf":"ª","ordm":"º","origof":"⊶","oror":"⩖","orslope":"⩗","orv":"⩛","oS":"Ⓢ","Oscr":"𝒪","oscr":"ℴ","Oslash":"Ø","oslash":"ø","osol":"⊘","Otilde":"Õ","otilde":"õ","otimesas":"⨶","Otimes":"⨷","otimes":"⊗","Ouml":"Ö","ouml":"ö","ovbar":"⌽","OverBar":"‾","OverBrace":"⏞","OverBracket":"⎴","OverParenthesis":"⏜","para":"¶","parallel":"∥","par":"∥","parsim":"⫳","parsl":"⫽","part":"∂","PartialD":"∂","Pcy":"П","pcy":"п","percnt":"%","period":".","permil":"‰","perp":"⊥","pertenk":"‱","Pfr":"𝔓","pfr":"𝔭","Phi":"Φ","phi":"φ","phiv":"ϕ","phmmat":"ℳ","phone":"☎","Pi":"Π","pi":"π","pitchfork":"⋔","piv":"ϖ","planck":"ℏ","planckh":"ℎ","plankv":"ℏ","plusacir":"⨣","plusb":"⊞","pluscir":"⨢","plus":"+","plusdo":"∔","plusdu":"⨥","pluse":"⩲","PlusMinus":"±","plusmn":"±","plussim":"⨦","plustwo":"⨧","pm":"±","Poincareplane":"ℌ","pointint":"⨕","popf":"𝕡","Popf":"ℙ","pound":"£","prap":"⪷","Pr":"⪻","pr":"≺","prcue":"≼","precapprox":"⪷","prec":"≺","preccurlyeq":"≼","Precedes":"≺","PrecedesEqual":"⪯","PrecedesSlantEqual":"≼","PrecedesTilde":"≾","preceq":"⪯","precnapprox":"⪹","precneqq":"⪵","precnsim":"⋨","pre":"⪯","prE":"⪳","precsim":"≾","prime":"′","Prime":"″","primes":"ℙ","prnap":"⪹","prnE":"⪵","prnsim":"⋨","prod":"∏","Product":"∏","profalar":"⌮","profline":"⌒","profsurf":"⌓","prop":"∝","Proportional":"∝","Proportion":"∷","propto":"∝","prsim":"≾","prurel":"⊰","Pscr":"𝒫","pscr":"𝓅","Psi":"Ψ","psi":"ψ","puncsp":" ","Qfr":"𝔔","qfr":"𝔮","qint":"⨌","qopf":"𝕢","Qopf":"ℚ","qprime":"⁗","Qscr":"𝒬","qscr":"𝓆","quaternions":"ℍ","quatint":"⨖","quest":"?","questeq":"≟","quot":"\"","QUOT":"\"","rAarr":"⇛","race":"∽̱","Racute":"Ŕ","racute":"ŕ","radic":"√","raemptyv":"⦳","rang":"⟩","Rang":"⟫","rangd":"⦒","range":"⦥","rangle":"⟩","raquo":"»","rarrap":"⥵","rarrb":"⇥","rarrbfs":"⤠","rarrc":"⤳","rarr":"→","Rarr":"↠","rArr":"⇒","rarrfs":"⤞","rarrhk":"↪","rarrlp":"↬","rarrpl":"⥅","rarrsim":"⥴","Rarrtl":"⤖","rarrtl":"↣","rarrw":"↝","ratail":"⤚","rAtail":"⤜","ratio":"∶","rationals":"ℚ","rbarr":"⤍","rBarr":"⤏","RBarr":"⤐","rbbrk":"❳","rbrace":"}","rbrack":"]","rbrke":"⦌","rbrksld":"⦎","rbrkslu":"⦐","Rcaron":"Ř","rcaron":"ř","Rcedil":"Ŗ","rcedil":"ŗ","rceil":"⌉","rcub":"}","Rcy":"Р","rcy":"р","rdca":"⤷","rdldhar":"⥩","rdquo":"”","rdquor":"”","rdsh":"↳","real":"ℜ","realine":"ℛ","realpart":"ℜ","reals":"ℝ","Re":"ℜ","rect":"▭","reg":"®","REG":"®","ReverseElement":"∋","ReverseEquilibrium":"⇋","ReverseUpEquilibrium":"⥯","rfisht":"⥽","rfloor":"⌋","rfr":"𝔯","Rfr":"ℜ","rHar":"⥤","rhard":"⇁","rharu":"⇀","rharul":"⥬","Rho":"Ρ","rho":"ρ","rhov":"ϱ","RightAngleBracket":"⟩","RightArrowBar":"⇥","rightarrow":"→","RightArrow":"→","Rightarrow":"⇒","RightArrowLeftArrow":"⇄","rightarrowtail":"↣","RightCeiling":"⌉","RightDoubleBracket":"⟧","RightDownTeeVector":"⥝","RightDownVectorBar":"⥕","RightDownVector":"⇂","RightFloor":"⌋","rightharpoondown":"⇁","rightharpoonup":"⇀","rightleftarrows":"⇄","rightleftharpoons":"⇌","rightrightarrows":"⇉","rightsquigarrow":"↝","RightTeeArrow":"↦","RightTee":"⊢","RightTeeVector":"⥛","rightthreetimes":"⋌","RightTriangleBar":"⧐","RightTriangle":"⊳","RightTriangleEqual":"⊵","RightUpDownVector":"⥏","RightUpTeeVector":"⥜","RightUpVectorBar":"⥔","RightUpVector":"↾","RightVectorBar":"⥓","RightVector":"⇀","ring":"˚","risingdotseq":"≓","rlarr":"⇄","rlhar":"⇌","rlm":"‏","rmoustache":"⎱","rmoust":"⎱","rnmid":"⫮","roang":"⟭","roarr":"⇾","robrk":"⟧","ropar":"⦆","ropf":"𝕣","Ropf":"ℝ","roplus":"⨮","rotimes":"⨵","RoundImplies":"⥰","rpar":")","rpargt":"⦔","rppolint":"⨒","rrarr":"⇉","Rrightarrow":"⇛","rsaquo":"›","rscr":"𝓇","Rscr":"ℛ","rsh":"↱","Rsh":"↱","rsqb":"]","rsquo":"’","rsquor":"’","rthree":"⋌","rtimes":"⋊","rtri":"▹","rtrie":"⊵","rtrif":"▸","rtriltri":"⧎","RuleDelayed":"⧴","ruluhar":"⥨","rx":"℞","Sacute":"Ś","sacute":"ś","sbquo":"‚","scap":"⪸","Scaron":"Š","scaron":"š","Sc":"⪼","sc":"≻","sccue":"≽","sce":"⪰","scE":"⪴","Scedil":"Ş","scedil":"ş","Scirc":"Ŝ","scirc":"ŝ","scnap":"⪺","scnE":"⪶","scnsim":"⋩","scpolint":"⨓","scsim":"≿","Scy":"С","scy":"с","sdotb":"⊡","sdot":"⋅","sdote":"⩦","searhk":"⤥","searr":"↘","seArr":"⇘","searrow":"↘","sect":"§","semi":";","seswar":"⤩","setminus":"∖","setmn":"∖","sext":"✶","Sfr":"𝔖","sfr":"𝔰","sfrown":"⌢","sharp":"♯","SHCHcy":"Щ","shchcy":"щ","SHcy":"Ш","shcy":"ш","ShortDownArrow":"↓","ShortLeftArrow":"←","shortmid":"∣","shortparallel":"∥","ShortRightArrow":"→","ShortUpArrow":"↑","shy":"­","Sigma":"Σ","sigma":"σ","sigmaf":"ς","sigmav":"ς","sim":"∼","simdot":"⩪","sime":"≃","simeq":"≃","simg":"⪞","simgE":"⪠","siml":"⪝","simlE":"⪟","simne":"≆","simplus":"⨤","simrarr":"⥲","slarr":"←","SmallCircle":"∘","smallsetminus":"∖","smashp":"⨳","smeparsl":"⧤","smid":"∣","smile":"⌣","smt":"⪪","smte":"⪬","smtes":"⪬︀","SOFTcy":"Ь","softcy":"ь","solbar":"⌿","solb":"⧄","sol":"/","Sopf":"𝕊","sopf":"𝕤","spades":"♠","spadesuit":"♠","spar":"∥","sqcap":"⊓","sqcaps":"⊓︀","sqcup":"⊔","sqcups":"⊔︀","Sqrt":"√","sqsub":"⊏","sqsube":"⊑","sqsubset":"⊏","sqsubseteq":"⊑","sqsup":"⊐","sqsupe":"⊒","sqsupset":"⊐","sqsupseteq":"⊒","square":"□","Square":"□","SquareIntersection":"⊓","SquareSubset":"⊏","SquareSubsetEqual":"⊑","SquareSuperset":"⊐","SquareSupersetEqual":"⊒","SquareUnion":"⊔","squarf":"▪","squ":"□","squf":"▪","srarr":"→","Sscr":"𝒮","sscr":"𝓈","ssetmn":"∖","ssmile":"⌣","sstarf":"⋆","Star":"⋆","star":"☆","starf":"★","straightepsilon":"ϵ","straightphi":"ϕ","strns":"¯","sub":"⊂","Sub":"⋐","subdot":"⪽","subE":"⫅","sube":"⊆","subedot":"⫃","submult":"⫁","subnE":"⫋","subne":"⊊","subplus":"⪿","subrarr":"⥹","subset":"⊂","Subset":"⋐","subseteq":"⊆","subseteqq":"⫅","SubsetEqual":"⊆","subsetneq":"⊊","subsetneqq":"⫋","subsim":"⫇","subsub":"⫕","subsup":"⫓","succapprox":"⪸","succ":"≻","succcurlyeq":"≽","Succeeds":"≻","SucceedsEqual":"⪰","SucceedsSlantEqual":"≽","SucceedsTilde":"≿","succeq":"⪰","succnapprox":"⪺","succneqq":"⪶","succnsim":"⋩","succsim":"≿","SuchThat":"∋","sum":"∑","Sum":"∑","sung":"♪","sup1":"¹","sup2":"²","sup3":"³","sup":"⊃","Sup":"⋑","supdot":"⪾","supdsub":"⫘","supE":"⫆","supe":"⊇","supedot":"⫄","Superset":"⊃","SupersetEqual":"⊇","suphsol":"⟉","suphsub":"⫗","suplarr":"⥻","supmult":"⫂","supnE":"⫌","supne":"⊋","supplus":"⫀","supset":"⊃","Supset":"⋑","supseteq":"⊇","supseteqq":"⫆","supsetneq":"⊋","supsetneqq":"⫌","supsim":"⫈","supsub":"⫔","supsup":"⫖","swarhk":"⤦","swarr":"↙","swArr":"⇙","swarrow":"↙","swnwar":"⤪","szlig":"ß","Tab":"\t","target":"⌖","Tau":"Τ","tau":"τ","tbrk":"⎴","Tcaron":"Ť","tcaron":"ť","Tcedil":"Ţ","tcedil":"ţ","Tcy":"Т","tcy":"т","tdot":"⃛","telrec":"⌕","Tfr":"𝔗","tfr":"𝔱","there4":"∴","therefore":"∴","Therefore":"∴","Theta":"Θ","theta":"θ","thetasym":"ϑ","thetav":"ϑ","thickapprox":"≈","thicksim":"∼","ThickSpace":"  ","ThinSpace":" ","thinsp":" ","thkap":"≈","thksim":"∼","THORN":"Þ","thorn":"þ","tilde":"˜","Tilde":"∼","TildeEqual":"≃","TildeFullEqual":"≅","TildeTilde":"≈","timesbar":"⨱","timesb":"⊠","times":"×","timesd":"⨰","tint":"∭","toea":"⤨","topbot":"⌶","topcir":"⫱","top":"⊤","Topf":"𝕋","topf":"𝕥","topfork":"⫚","tosa":"⤩","tprime":"‴","trade":"™","TRADE":"™","triangle":"▵","triangledown":"▿","triangleleft":"◃","trianglelefteq":"⊴","triangleq":"≜","triangleright":"▹","trianglerighteq":"⊵","tridot":"◬","trie":"≜","triminus":"⨺","TripleDot":"⃛","triplus":"⨹","trisb":"⧍","tritime":"⨻","trpezium":"⏢","Tscr":"𝒯","tscr":"𝓉","TScy":"Ц","tscy":"ц","TSHcy":"Ћ","tshcy":"ћ","Tstrok":"Ŧ","tstrok":"ŧ","twixt":"≬","twoheadleftarrow":"↞","twoheadrightarrow":"↠","Uacute":"Ú","uacute":"ú","uarr":"↑","Uarr":"↟","uArr":"⇑","Uarrocir":"⥉","Ubrcy":"Ў","ubrcy":"ў","Ubreve":"Ŭ","ubreve":"ŭ","Ucirc":"Û","ucirc":"û","Ucy":"У","ucy":"у","udarr":"⇅","Udblac":"Ű","udblac":"ű","udhar":"⥮","ufisht":"⥾","Ufr":"𝔘","ufr":"𝔲","Ugrave":"Ù","ugrave":"ù","uHar":"⥣","uharl":"↿","uharr":"↾","uhblk":"▀","ulcorn":"⌜","ulcorner":"⌜","ulcrop":"⌏","ultri":"◸","Umacr":"Ū","umacr":"ū","uml":"¨","UnderBar":"_","UnderBrace":"⏟","UnderBracket":"⎵","UnderParenthesis":"⏝","Union":"⋃","UnionPlus":"⊎","Uogon":"Ų","uogon":"ų","Uopf":"𝕌","uopf":"𝕦","UpArrowBar":"⤒","uparrow":"↑","UpArrow":"↑","Uparrow":"⇑","UpArrowDownArrow":"⇅","updownarrow":"↕","UpDownArrow":"↕","Updownarrow":"⇕","UpEquilibrium":"⥮","upharpoonleft":"↿","upharpoonright":"↾","uplus":"⊎","UpperLeftArrow":"↖","UpperRightArrow":"↗","upsi":"υ","Upsi":"ϒ","upsih":"ϒ","Upsilon":"Υ","upsilon":"υ","UpTeeArrow":"↥","UpTee":"⊥","upuparrows":"⇈","urcorn":"⌝","urcorner":"⌝","urcrop":"⌎","Uring":"Ů","uring":"ů","urtri":"◹","Uscr":"𝒰","uscr":"𝓊","utdot":"⋰","Utilde":"Ũ","utilde":"ũ","utri":"▵","utrif":"▴","uuarr":"⇈","Uuml":"Ü","uuml":"ü","uwangle":"⦧","vangrt":"⦜","varepsilon":"ϵ","varkappa":"ϰ","varnothing":"∅","varphi":"ϕ","varpi":"ϖ","varpropto":"∝","varr":"↕","vArr":"⇕","varrho":"ϱ","varsigma":"ς","varsubsetneq":"⊊︀","varsubsetneqq":"⫋︀","varsupsetneq":"⊋︀","varsupsetneqq":"⫌︀","vartheta":"ϑ","vartriangleleft":"⊲","vartriangleright":"⊳","vBar":"⫨","Vbar":"⫫","vBarv":"⫩","Vcy":"В","vcy":"в","vdash":"⊢","vDash":"⊨","Vdash":"⊩","VDash":"⊫","Vdashl":"⫦","veebar":"⊻","vee":"∨","Vee":"⋁","veeeq":"≚","vellip":"⋮","verbar":"|","Verbar":"‖","vert":"|","Vert":"‖","VerticalBar":"∣","VerticalLine":"|","VerticalSeparator":"❘","VerticalTilde":"≀","VeryThinSpace":" ","Vfr":"𝔙","vfr":"𝔳","vltri":"⊲","vnsub":"⊂⃒","vnsup":"⊃⃒","Vopf":"𝕍","vopf":"𝕧","vprop":"∝","vrtri":"⊳","Vscr":"𝒱","vscr":"𝓋","vsubnE":"⫋︀","vsubne":"⊊︀","vsupnE":"⫌︀","vsupne":"⊋︀","Vvdash":"⊪","vzigzag":"⦚","Wcirc":"Ŵ","wcirc":"ŵ","wedbar":"⩟","wedge":"∧","Wedge":"⋀","wedgeq":"≙","weierp":"℘","Wfr":"𝔚","wfr":"𝔴","Wopf":"𝕎","wopf":"𝕨","wp":"℘","wr":"≀","wreath":"≀","Wscr":"𝒲","wscr":"𝓌","xcap":"⋂","xcirc":"◯","xcup":"⋃","xdtri":"▽","Xfr":"𝔛","xfr":"𝔵","xharr":"⟷","xhArr":"⟺","Xi":"Ξ","xi":"ξ","xlarr":"⟵","xlArr":"⟸","xmap":"⟼","xnis":"⋻","xodot":"⨀","Xopf":"𝕏","xopf":"𝕩","xoplus":"⨁","xotime":"⨂","xrarr":"⟶","xrArr":"⟹","Xscr":"𝒳","xscr":"𝓍","xsqcup":"⨆","xuplus":"⨄","xutri":"△","xvee":"⋁","xwedge":"⋀","Yacute":"Ý","yacute":"ý","YAcy":"Я","yacy":"я","Ycirc":"Ŷ","ycirc":"ŷ","Ycy":"Ы","ycy":"ы","yen":"¥","Yfr":"𝔜","yfr":"𝔶","YIcy":"Ї","yicy":"ї","Yopf":"𝕐","yopf":"𝕪","Yscr":"𝒴","yscr":"𝓎","YUcy":"Ю","yucy":"ю","yuml":"ÿ","Yuml":"Ÿ","Zacute":"Ź","zacute":"ź","Zcaron":"Ž","zcaron":"ž","Zcy":"З","zcy":"з","Zdot":"Ż","zdot":"ż","zeetrf":"ℨ","ZeroWidthSpace":"​","Zeta":"Ζ","zeta":"ζ","zfr":"𝔷","Zfr":"ℨ","ZHcy":"Ж","zhcy":"ж","zigrarr":"⇝","zopf":"𝕫","Zopf":"ℤ","Zscr":"𝒵","zscr":"𝓏","zwj":"‍","zwnj":"‌"}

/***/ }),
/* 294 */
/***/ (function(module, exports) {

	module.exports = {"amp":"&","apos":"'","gt":">","lt":"<","quot":"\""}

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _SheetsRegistry = __webpack_require__(460);
	
	var _SheetsRegistry2 = _interopRequireDefault(_SheetsRegistry);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * This is a global sheets registry. Only DomRenderer will add sheets to it.
	 * On the server one should use an own SheetsRegistry instance and add the
	 * sheets to it, because you need to make sure to create a new registry for
	 * each request in order to not leak sheets across requests.
	 */
	exports['default'] = new _SheetsRegistry2['default']();

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = toCss;
	
	var _toCssValue = __webpack_require__(197);
	
	var _toCssValue2 = _interopRequireDefault(_toCssValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Indent a string.
	 * http://jsperf.com/array-join-vs-for
	 */
	function indentStr(str, indent) {
	  var result = '';
	  for (var index = 0; index < indent; index++) {
	    result += '  ';
	  }return result + str;
	}
	
	/**
	 * Converts a Rule to CSS string.
	 */
	
	function toCss(selector, style) {
	  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	  var result = '';
	
	  if (!style) return result;
	
	  var _options$indent = options.indent,
	      indent = _options$indent === undefined ? 0 : _options$indent;
	  var fallbacks = style.fallbacks;
	
	
	  indent++;
	
	  // Apply fallbacks first.
	  if (fallbacks) {
	    // Array syntax {fallbacks: [{prop: value}]}
	    if (Array.isArray(fallbacks)) {
	      for (var index = 0; index < fallbacks.length; index++) {
	        var fallback = fallbacks[index];
	        for (var prop in fallback) {
	          var value = fallback[prop];
	          if (value != null) {
	            result += '\n' + indentStr(prop + ': ' + (0, _toCssValue2['default'])(value) + ';', indent);
	          }
	        }
	      }
	    } else {
	      // Object syntax {fallbacks: {prop: value}}
	      for (var _prop in fallbacks) {
	        var _value = fallbacks[_prop];
	        if (_value != null) {
	          result += '\n' + indentStr(_prop + ': ' + (0, _toCssValue2['default'])(_value) + ';', indent);
	        }
	      }
	    }
	  }
	
	  for (var _prop2 in style) {
	    var _value2 = style[_prop2];
	    if (_value2 != null && _prop2 !== 'fallbacks') {
	      result += '\n' + indentStr(_prop2 + ': ' + (0, _toCssValue2['default'])(_value2) + ';', indent);
	    }
	  }
	
	  // Allow empty style in this case, because properties will be added dynamically.
	  if (!result && !options.allowEmpty) return result;
	
	  indent--;
	  result = indentStr(selector + ' {' + result + '\n', indent) + indentStr('}', indent);
	
	  return result;
	}

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(201),
	    baseLodash = __webpack_require__(307);
	
	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;
	
	/**
	 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	 *
	 * @private
	 * @constructor
	 * @param {*} value The value to wrap.
	 */
	function LazyWrapper(value) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__dir__ = 1;
	  this.__filtered__ = false;
	  this.__iteratees__ = [];
	  this.__takeCount__ = MAX_ARRAY_LENGTH;
	  this.__views__ = [];
	}
	
	// Ensure `LazyWrapper` is an instance of `baseLodash`.
	LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	LazyWrapper.prototype.constructor = LazyWrapper;
	
	module.exports = LazyWrapper;


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(95),
	    root = __webpack_require__(33);
	
	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');
	
	module.exports = Map;


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(1456),
	    mapCacheDelete = __webpack_require__(1457),
	    mapCacheGet = __webpack_require__(1458),
	    mapCacheHas = __webpack_require__(1459),
	    mapCacheSet = __webpack_require__(1460);
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	module.exports = MapCache;


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(299),
	    setCacheAdd = __webpack_require__(1470),
	    setCacheHas = __webpack_require__(1471);
	
	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values == null ? 0 : values.length;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}
	
	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;
	
	module.exports = SetCache;


/***/ }),
/* 301 */
/***/ (function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	module.exports = apply;


/***/ }),
/* 302 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(157);
	
	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array == null ? 0 : array.length;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}
	
	module.exports = arrayIncludes;


/***/ }),
/* 304 */
/***/ (function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	module.exports = arrayPush;


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(154),
	    eq = __webpack_require__(123);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignValue;


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(1379),
	    isObjectLike = __webpack_require__(48);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Unordered comparison
	 *  2 - Partial comparison
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, bitmask, customizer, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	}
	
	module.exports = baseIsEqual;


/***/ }),
/* 307 */
/***/ (function(module, exports) {

	/**
	 * The function whose prototype chain sequence wrappers inherit from.
	 *
	 * @private
	 */
	function baseLodash() {
	  // No operation performed.
	}
	
	module.exports = baseLodash;


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(117),
	    arrayMap = __webpack_require__(70),
	    isArray = __webpack_require__(27),
	    isSymbol = __webpack_require__(165);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isArray(value)) {
	    // Recursively convert values (susceptible to call stack limits).
	    return arrayMap(value, baseToString) + '';
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = baseToString;


/***/ }),
/* 309 */
/***/ (function(module, exports) {

	/**
	 * Checks if a `cache` value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}
	
	module.exports = cacheHas;


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(466);
	
	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}
	
	module.exports = cloneArrayBuffer;


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(481),
	    createBind = __webpack_require__(1421),
	    createCurry = __webpack_require__(1423),
	    createHybrid = __webpack_require__(489),
	    createPartial = __webpack_require__(1426),
	    getData = __webpack_require__(496),
	    mergeData = __webpack_require__(1463),
	    setData = __webpack_require__(506),
	    setWrapToString = __webpack_require__(507),
	    toInteger = __webpack_require__(98);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates a function that either curries or invokes `func` with optional
	 * `this` binding and partially applied arguments.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags.
	 *    1 - `_.bind`
	 *    2 - `_.bindKey`
	 *    4 - `_.curry` or `_.curryRight` of a bound function
	 *    8 - `_.curry`
	 *   16 - `_.curryRight`
	 *   32 - `_.partial`
	 *   64 - `_.partialRight`
	 *  128 - `_.rearg`
	 *  256 - `_.ary`
	 *  512 - `_.flip`
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to be partially applied.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	  if (!isBindKey && typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var length = partials ? partials.length : 0;
	  if (!length) {
	    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	    partials = holders = undefined;
	  }
	  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	  arity = arity === undefined ? arity : toInteger(arity);
	  length -= holders ? holders.length : 0;
	
	  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	    var partialsRight = partials,
	        holdersRight = holders;
	
	    partials = holders = undefined;
	  }
	  var data = isBindKey ? undefined : getData(func);
	
	  var newData = [
	    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	    argPos, ary, arity
	  ];
	
	  if (data) {
	    mergeData(newData, data);
	  }
	  func = newData[0];
	  bitmask = newData[1];
	  thisArg = newData[2];
	  partials = newData[3];
	  holders = newData[4];
	  arity = newData[9] = newData[9] === undefined
	    ? (isBindKey ? 0 : func.length)
	    : nativeMax(newData[9] - length, 0);
	
	  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	  }
	  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	    var result = createBind(func, bitmask, thisArg);
	  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	    result = createCurry(func, bitmask, arity);
	  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	    result = createPartial(func, bitmask, thisArg, partials);
	  } else {
	    result = createHybrid.apply(undefined, newData);
	  }
	  var setter = data ? baseSetData : setData;
	  return setWrapToString(setter(result, newData), func, bitmask);
	}
	
	module.exports = createWrap;


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(477),
	    getSymbolsIn = __webpack_require__(497),
	    keysIn = __webpack_require__(126);
	
	/**
	 * Creates an array of own and inherited enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeysIn(object) {
	  return baseGetAllKeys(object, keysIn, getSymbolsIn);
	}
	
	module.exports = getAllKeysIn;


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(503);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(468),
	    stubArray = __webpack_require__(518);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	  if (object == null) {
	    return [];
	  }
	  object = Object(object);
	  return arrayFilter(nativeGetSymbols(object), function(symbol) {
	    return propertyIsEnumerable.call(object, symbol);
	  });
	};
	
	module.exports = getSymbols;


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(27),
	    isSymbol = __webpack_require__(165);
	
	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;
	
	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}
	
	module.exports = isKey;


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(494);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;
	
	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    // Use `util.types` for Node.js 10+.
	    var types = freeModule && freeModule.require && freeModule.require('util').types;
	
	    if (types) {
	      return types;
	    }
	
	    // Legacy `process.binding('util')` for Node.js < 10.
	    return freeProcess && freeProcess.binding && freeProcess.binding('util');
	  } catch (e) {}
	}());
	
	module.exports = nodeUtil;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(223)(module)))

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetToString = __webpack_require__(1399),
	    shortOut = __webpack_require__(508);
	
	/**
	 * Sets the `toString` method of `func` to return `string`.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var setToString = shortOut(baseSetToString);
	
	module.exports = setToString;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(94),
	    eq = __webpack_require__(123),
	    isIterateeCall = __webpack_require__(206),
	    keysIn = __webpack_require__(126);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns own and inherited enumerable string keyed properties of source
	 * objects to the destination object for all destination properties that
	 * resolve to `undefined`. Source objects are applied from left to right.
	 * Once a property is set, additional values of the same property are ignored.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.defaultsDeep
	 * @example
	 *
	 * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	 * // => { 'a': 1, 'b': 2 }
	 */
	var defaults = baseRest(function(object, sources) {
	  object = Object(object);
	
	  var index = -1;
	  var length = sources.length;
	  var guard = length > 2 ? sources[2] : undefined;
	
	  if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	    length = 1;
	  }
	
	  while (++index < length) {
	    var source = sources[index];
	    var props = keysIn(source);
	    var propsIndex = -1;
	    var propsLength = props.length;
	
	    while (++propsIndex < propsLength) {
	      var key = props[propsIndex];
	      var value = object[key];
	
	      if (value === undefined ||
	          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        object[key] = source[key];
	      }
	    }
	  }
	
	  return object;
	});
	
	module.exports = defaults;


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(468),
	    baseFilter = __webpack_require__(1373),
	    baseIteratee = __webpack_require__(57),
	    isArray = __webpack_require__(27);
	
	/**
	 * Iterates over elements of `collection`, returning an array of all elements
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * **Note:** Unlike `_.remove`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 * @see _.reject
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': true },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * _.filter(users, function(o) { return !o.active; });
	 * // => objects for ['fred']
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.filter(users, { 'age': 36, 'active': true });
	 * // => objects for ['barney']
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.filter(users, ['active', false]);
	 * // => objects for ['fred']
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.filter(users, 'active');
	 * // => objects for ['barney']
	 *
	 * // Combining several predicates using `_.overEvery` or `_.overSome`.
	 * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
	 * // => objects for ['fred', 'barney']
	 */
	function filter(collection, predicate) {
	  var func = isArray(collection) ? arrayFilter : baseFilter;
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = filter;


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(156);
	
	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}
	
	module.exports = get;


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(72),
	    isObjectLike = __webpack_require__(48);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(306);
	
	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are compared by strict equality, i.e. `===`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}
	
	module.exports = isEqual;


/***/ }),
/* 323 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(1389),
	    createAssigner = __webpack_require__(1418);
	
	/**
	 * This method is like `_.assign` except that it recursively merges own and
	 * inherited enumerable string keyed properties of source objects into the
	 * destination object. Source properties that resolve to `undefined` are
	 * skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.5.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = {
	 *   'a': [{ 'b': 2 }, { 'd': 4 }]
	 * };
	 *
	 * var other = {
	 *   'a': [{ 'c': 3 }, { 'e': 5 }]
	 * };
	 *
	 * _.merge(object, other);
	 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});
	
	module.exports = merge;


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

	var baseOrderBy = __webpack_require__(1391),
	    isArray = __webpack_require__(27);
	
	/**
	 * This method is like `_.sortBy` except that it allows specifying the sort
	 * orders of the iteratees to sort by. If `orders` is unspecified, all values
	 * are sorted in ascending order. Otherwise, specify an order of "desc" for
	 * descending or "asc" for ascending sort order of corresponding values.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	 *  The iteratees to sort by.
	 * @param {string[]} [orders] The sort orders of `iteratees`.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	 * @returns {Array} Returns the new sorted array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'fred',   'age': 48 },
	 *   { 'user': 'barney', 'age': 34 },
	 *   { 'user': 'fred',   'age': 40 },
	 *   { 'user': 'barney', 'age': 36 }
	 * ];
	 *
	 * // Sort by `user` in ascending order and by `age` in descending order.
	 * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	 */
	function orderBy(collection, iteratees, orders, guard) {
	  if (collection == null) {
	    return [];
	  }
	  if (!isArray(iteratees)) {
	    iteratees = iteratees == null ? [] : [iteratees];
	  }
	  orders = guard ? undefined : orders;
	  if (!isArray(orders)) {
	    orders = orders == null ? [] : [orders];
	  }
	  return baseOrderBy(collection, iteratees, orders);
	}
	
	module.exports = orderBy;


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var slice = Array.prototype.slice;
	var isArgs = __webpack_require__(523);
	
	var origKeys = Object.keys;
	var keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(1526);
	
	var originalKeys = Object.keys;
	
	keysShim.shim = function shimObjectKeys() {
		if (Object.keys) {
			var keysWorksWithArguments = (function () {
				// Safari 5.0 bug
				var args = Object.keys(arguments);
				return args && args.length === arguments.length;
			}(1, 2));
			if (!keysWorksWithArguments) {
				Object.keys = function keys(object) { // eslint-disable-line func-name-matching
					if (isArgs(object)) {
						return originalKeys(slice.call(object));
					}
					return originalKeys(object);
				};
			}
		} else {
			Object.keys = keysShim;
		}
		return Object.keys || keysShim;
	};
	
	module.exports = keysShim;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var DOCUMENT_MODE = __webpack_require__(53).DOCUMENT_MODE;
	
	//Node construction
	exports.createDocument = function () {
	    return {
	        nodeName: '#document',
	        mode: DOCUMENT_MODE.NO_QUIRKS,
	        childNodes: []
	    };
	};
	
	exports.createDocumentFragment = function () {
	    return {
	        nodeName: '#document-fragment',
	        childNodes: []
	    };
	};
	
	exports.createElement = function (tagName, namespaceURI, attrs) {
	    return {
	        nodeName: tagName,
	        tagName: tagName,
	        attrs: attrs,
	        namespaceURI: namespaceURI,
	        childNodes: [],
	        parentNode: null
	    };
	};
	
	exports.createCommentNode = function (data) {
	    return {
	        nodeName: '#comment',
	        data: data,
	        parentNode: null
	    };
	};
	
	var createTextNode = function (value) {
	    return {
	        nodeName: '#text',
	        value: value,
	        parentNode: null
	    };
	};
	
	
	//Tree mutation
	var appendChild = exports.appendChild = function (parentNode, newNode) {
	    parentNode.childNodes.push(newNode);
	    newNode.parentNode = parentNode;
	};
	
	var insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {
	    var insertionIdx = parentNode.childNodes.indexOf(referenceNode);
	
	    parentNode.childNodes.splice(insertionIdx, 0, newNode);
	    newNode.parentNode = parentNode;
	};
	
	exports.setTemplateContent = function (templateElement, contentElement) {
	    templateElement.content = contentElement;
	};
	
	exports.getTemplateContent = function (templateElement) {
	    return templateElement.content;
	};
	
	exports.setDocumentType = function (document, name, publicId, systemId) {
	    var doctypeNode = null;
	
	    for (var i = 0; i < document.childNodes.length; i++) {
	        if (document.childNodes[i].nodeName === '#documentType') {
	            doctypeNode = document.childNodes[i];
	            break;
	        }
	    }
	
	    if (doctypeNode) {
	        doctypeNode.name = name;
	        doctypeNode.publicId = publicId;
	        doctypeNode.systemId = systemId;
	    }
	
	    else {
	        appendChild(document, {
	            nodeName: '#documentType',
	            name: name,
	            publicId: publicId,
	            systemId: systemId
	        });
	    }
	};
	
	exports.setDocumentMode = function (document, mode) {
	    document.mode = mode;
	};
	
	exports.getDocumentMode = function (document) {
	    return document.mode;
	};
	
	exports.detachNode = function (node) {
	    if (node.parentNode) {
	        var idx = node.parentNode.childNodes.indexOf(node);
	
	        node.parentNode.childNodes.splice(idx, 1);
	        node.parentNode = null;
	    }
	};
	
	exports.insertText = function (parentNode, text) {
	    if (parentNode.childNodes.length) {
	        var prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];
	
	        if (prevNode.nodeName === '#text') {
	            prevNode.value += text;
	            return;
	        }
	    }
	
	    appendChild(parentNode, createTextNode(text));
	};
	
	exports.insertTextBefore = function (parentNode, text, referenceNode) {
	    var prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
	
	    if (prevNode && prevNode.nodeName === '#text')
	        prevNode.value += text;
	    else
	        insertBefore(parentNode, createTextNode(text), referenceNode);
	};
	
	exports.adoptAttributes = function (recipient, attrs) {
	    var recipientAttrsMap = [];
	
	    for (var i = 0; i < recipient.attrs.length; i++)
	        recipientAttrsMap.push(recipient.attrs[i].name);
	
	    for (var j = 0; j < attrs.length; j++) {
	        if (recipientAttrsMap.indexOf(attrs[j].name) === -1)
	            recipient.attrs.push(attrs[j]);
	    }
	};
	
	
	//Tree traversing
	exports.getFirstChild = function (node) {
	    return node.childNodes[0];
	};
	
	exports.getChildNodes = function (node) {
	    return node.childNodes;
	};
	
	exports.getParentNode = function (node) {
	    return node.parentNode;
	};
	
	exports.getAttrList = function (element) {
	    return element.attrs;
	};
	
	//Node data
	exports.getTagName = function (element) {
	    return element.tagName;
	};
	
	exports.getNamespaceURI = function (element) {
	    return element.namespaceURI;
	};
	
	exports.getTextNodeContent = function (textNode) {
	    return textNode.value;
	};
	
	exports.getCommentNodeContent = function (commentNode) {
	    return commentNode.data;
	};
	
	exports.getDocumentTypeNodeName = function (doctypeNode) {
	    return doctypeNode.name;
	};
	
	exports.getDocumentTypeNodePublicId = function (doctypeNode) {
	    return doctypeNode.publicId;
	};
	
	exports.getDocumentTypeNodeSystemId = function (doctypeNode) {
	    return doctypeNode.systemId;
	};
	
	//Node types
	exports.isTextNode = function (node) {
	    return node.nodeName === '#text';
	};
	
	exports.isCommentNode = function (node) {
	    return node.nodeName === '#comment';
	};
	
	exports.isDocumentTypeNode = function (node) {
	    return node.nodeName === '#documentType';
	};
	
	exports.isElementNode = function (node) {
	    return !!node.tagName;
	};


/***/ }),
/* 328 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = function mergeOptions(defaults, options) {
	    options = options || Object.create(null);
	
	    return [defaults, options].reduce(function (merged, optObj) {
	        Object.keys(optObj).forEach(function (key) {
	            merged[key] = optObj[key];
	        });
	
	        return merged;
	    }, Object.create(null));
	};


/***/ }),
/* 329 */,
/* 330 */
/***/ (function(module, exports) {

	'use strict';
	
	var has = Object.prototype.hasOwnProperty;
	var isArray = Array.isArray;
	
	var hexTable = (function () {
	    var array = [];
	    for (var i = 0; i < 256; ++i) {
	        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
	    }
	
	    return array;
	}());
	
	var compactQueue = function compactQueue(queue) {
	    while (queue.length > 1) {
	        var item = queue.pop();
	        var obj = item.obj[item.prop];
	
	        if (isArray(obj)) {
	            var compacted = [];
	
	            for (var j = 0; j < obj.length; ++j) {
	                if (typeof obj[j] !== 'undefined') {
	                    compacted.push(obj[j]);
	                }
	            }
	
	            item.obj[item.prop] = compacted;
	        }
	    }
	};
	
	var arrayToObject = function arrayToObject(source, options) {
	    var obj = options && options.plainObjects ? Object.create(null) : {};
	    for (var i = 0; i < source.length; ++i) {
	        if (typeof source[i] !== 'undefined') {
	            obj[i] = source[i];
	        }
	    }
	
	    return obj;
	};
	
	var merge = function merge(target, source, options) {
	    if (!source) {
	        return target;
	    }
	
	    if (typeof source !== 'object') {
	        if (isArray(target)) {
	            target.push(source);
	        } else if (target && typeof target === 'object') {
	            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {
	                target[source] = true;
	            }
	        } else {
	            return [target, source];
	        }
	
	        return target;
	    }
	
	    if (!target || typeof target !== 'object') {
	        return [target].concat(source);
	    }
	
	    var mergeTarget = target;
	    if (isArray(target) && !isArray(source)) {
	        mergeTarget = arrayToObject(target, options);
	    }
	
	    if (isArray(target) && isArray(source)) {
	        source.forEach(function (item, i) {
	            if (has.call(target, i)) {
	                var targetItem = target[i];
	                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {
	                    target[i] = merge(targetItem, item, options);
	                } else {
	                    target.push(item);
	                }
	            } else {
	                target[i] = item;
	            }
	        });
	        return target;
	    }
	
	    return Object.keys(source).reduce(function (acc, key) {
	        var value = source[key];
	
	        if (has.call(acc, key)) {
	            acc[key] = merge(acc[key], value, options);
	        } else {
	            acc[key] = value;
	        }
	        return acc;
	    }, mergeTarget);
	};
	
	var assign = function assignSingleSource(target, source) {
	    return Object.keys(source).reduce(function (acc, key) {
	        acc[key] = source[key];
	        return acc;
	    }, target);
	};
	
	var decode = function (str, decoder, charset) {
	    var strWithoutPlus = str.replace(/\+/g, ' ');
	    if (charset === 'iso-8859-1') {
	        // unescape never throws, no try...catch needed:
	        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
	    }
	    // utf-8
	    try {
	        return decodeURIComponent(strWithoutPlus);
	    } catch (e) {
	        return strWithoutPlus;
	    }
	};
	
	var encode = function encode(str, defaultEncoder, charset) {
	    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
	    // It has been adapted here for stricter adherence to RFC 3986
	    if (str.length === 0) {
	        return str;
	    }
	
	    var string = typeof str === 'string' ? str : String(str);
	
	    if (charset === 'iso-8859-1') {
	        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
	            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
	        });
	    }
	
	    var out = '';
	    for (var i = 0; i < string.length; ++i) {
	        var c = string.charCodeAt(i);
	
	        if (
	            c === 0x2D // -
	            || c === 0x2E // .
	            || c === 0x5F // _
	            || c === 0x7E // ~
	            || (c >= 0x30 && c <= 0x39) // 0-9
	            || (c >= 0x41 && c <= 0x5A) // a-z
	            || (c >= 0x61 && c <= 0x7A) // A-Z
	        ) {
	            out += string.charAt(i);
	            continue;
	        }
	
	        if (c < 0x80) {
	            out = out + hexTable[c];
	            continue;
	        }
	
	        if (c < 0x800) {
	            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
	            continue;
	        }
	
	        if (c < 0xD800 || c >= 0xE000) {
	            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
	            continue;
	        }
	
	        i += 1;
	        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
	        out += hexTable[0xF0 | (c >> 18)]
	            + hexTable[0x80 | ((c >> 12) & 0x3F)]
	            + hexTable[0x80 | ((c >> 6) & 0x3F)]
	            + hexTable[0x80 | (c & 0x3F)];
	    }
	
	    return out;
	};
	
	var compact = function compact(value) {
	    var queue = [{ obj: { o: value }, prop: 'o' }];
	    var refs = [];
	
	    for (var i = 0; i < queue.length; ++i) {
	        var item = queue[i];
	        var obj = item.obj[item.prop];
	
	        var keys = Object.keys(obj);
	        for (var j = 0; j < keys.length; ++j) {
	            var key = keys[j];
	            var val = obj[key];
	            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
	                queue.push({ obj: obj, prop: key });
	                refs.push(val);
	            }
	        }
	    }
	
	    compactQueue(queue);
	
	    return value;
	};
	
	var isRegExp = function isRegExp(obj) {
	    return Object.prototype.toString.call(obj) === '[object RegExp]';
	};
	
	var isBuffer = function isBuffer(obj) {
	    if (!obj || typeof obj !== 'object') {
	        return false;
	    }
	
	    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
	};
	
	var combine = function combine(a, b) {
	    return [].concat(a, b);
	};
	
	module.exports = {
	    arrayToObject: arrayToObject,
	    assign: assign,
	    combine: combine,
	    compact: compact,
	    decode: decode,
	    encode: encode,
	    isBuffer: isBuffer,
	    isRegExp: isRegExp,
	    merge: merge
	};


/***/ }),
/* 331 */,
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.parseAlgoliaHit = parseAlgoliaHit;
	exports.HIGHLIGHT_TAGS = void 0;
	
	var _get2 = _interopRequireDefault(__webpack_require__(320));
	
	var HIGHLIGHT_TAGS = {
	  highlightPreTag: "<ais-highlight-0000000000>",
	  highlightPostTag: "</ais-highlight-0000000000>"
	};
	/**
	 * Parses an highlighted attribute into an array of objects with the string value, and
	 * a boolean that indicated if this part is highlighted.
	 *
	 * @param {string} preTag - string used to identify the start of an highlighted value
	 * @param {string} postTag - string used to identify the end of an highlighted value
	 * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature
	 * @return {object[]} - An array of {value: string, isHighlighted: boolean}.
	 */
	
	exports.HIGHLIGHT_TAGS = HIGHLIGHT_TAGS;
	
	function parseHighlightedAttribute(_ref) {
	  var preTag = _ref.preTag,
	      postTag = _ref.postTag,
	      _ref$highlightedValue = _ref.highlightedValue,
	      highlightedValue = _ref$highlightedValue === void 0 ? '' : _ref$highlightedValue;
	  var splitByPreTag = highlightedValue.split(preTag);
	  var firstValue = splitByPreTag.shift();
	  var elements = firstValue === '' ? [] : [{
	    value: firstValue,
	    isHighlighted: false
	  }];
	
	  if (postTag === preTag) {
	    var isHighlighted = true;
	    splitByPreTag.forEach(function (split) {
	      elements.push({
	        value: split,
	        isHighlighted: isHighlighted
	      });
	      isHighlighted = !isHighlighted;
	    });
	  } else {
	    splitByPreTag.forEach(function (split) {
	      var splitByPostTag = split.split(postTag);
	      elements.push({
	        value: splitByPostTag[0],
	        isHighlighted: true
	      });
	
	      if (splitByPostTag[1] !== '') {
	        elements.push({
	          value: splitByPostTag[1],
	          isHighlighted: false
	        });
	      }
	    });
	  }
	
	  return elements;
	}
	/**
	 * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,
	 * and provided an array of objects with the string value and a boolean if this
	 * value is highlighted.
	 *
	 * In order to use this feature, highlight must be activated in the configuration of
	 * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and
	 * highlightPostTag in Algolia configuration.
	 *
	 * @param {string} preTag - string used to identify the start of an highlighted value
	 * @param {string} postTag - string used to identify the end of an highlighted value
	 * @param {string} highlightProperty - the property that contains the highlight structure in the results
	 * @param {string} attribute - the highlighted attribute to look for
	 * @param {object} hit - the actual hit returned by Algolia.
	 * @return {object[]} - An array of {value: string, isHighlighted: boolean}.
	 */
	
	
	function parseAlgoliaHit(_ref2) {
	  var _ref2$preTag = _ref2.preTag,
	      preTag = _ref2$preTag === void 0 ? '<em>' : _ref2$preTag,
	      _ref2$postTag = _ref2.postTag,
	      postTag = _ref2$postTag === void 0 ? '</em>' : _ref2$postTag,
	      highlightProperty = _ref2.highlightProperty,
	      attribute = _ref2.attribute,
	      hit = _ref2.hit;
	  if (!hit) throw new Error('`hit`, the matching record, must be provided');
	  var highlightObject = (0, _get2.default)(hit[highlightProperty], attribute, {});
	
	  if (Array.isArray(highlightObject)) {
	    return highlightObject.map(function (item) {
	      return parseHighlightedAttribute({
	        preTag: preTag,
	        postTag: postTag,
	        highlightedValue: item.value
	      });
	    });
	  }
	
	  return parseHighlightedAttribute({
	    preTag: preTag,
	    postTag: postTag,
	    highlightedValue: highlightObject.value
	  });
	}

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _Highlight = _interopRequireDefault(__webpack_require__(1604));
	
	/**
	 * Renders any attribute from a hit into its highlighted form when relevant.
	 *
	 * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.
	 * @name Highlight
	 * @kind widget
	 * @propType {string} attribute - location of the highlighted attribute in the hit (the corresponding element can be either a string or an array of strings)
	 * @propType {object} hit - hit object containing the highlighted attribute
	 * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the hit
	 * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted
	 * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.
	 * @themeKey ais-Highlight - root of the component
	 * @themeKey ais-Highlight-highlighted - part of the text which is highlighted
	 * @themeKey ais-Highlight-nonHighlighted - part of the text that is not highlighted
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, Highlight } from 'react-instantsearch-dom';
	 *
	 * const Hit = ({ hit }) => (
	 *   <div>
	 *     <Highlight attribute="name" hit={hit} />
	 *   </div>
	 * );
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SearchBox defaultRefinement="Pho" />
	 *     <Hits hitComponent={Hit} />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectHighlight)(_Highlight.default);
	
	exports.default = _default;

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createGenerateClassNameDefault = exports.SheetsManager = exports.getDynamicStyles = exports.SheetsRegistry = undefined;
	
	var _jss = __webpack_require__(195);
	
	Object.defineProperty(exports, 'SheetsRegistry', {
	  enumerable: true,
	  get: function get() {
	    return _jss.SheetsRegistry;
	  }
	});
	Object.defineProperty(exports, 'getDynamicStyles', {
	  enumerable: true,
	  get: function get() {
	    return _jss.getDynamicStyles;
	  }
	});
	Object.defineProperty(exports, 'SheetsManager', {
	  enumerable: true,
	  get: function get() {
	    return _jss.SheetsManager;
	  }
	});
	Object.defineProperty(exports, 'createGenerateClassNameDefault', {
	  enumerable: true,
	  get: function get() {
	    return _jss.createGenerateClassName;
	  }
	});
	
	var _jssPresetDefault = __webpack_require__(1341);
	
	var _jssPresetDefault2 = _interopRequireDefault(_jssPresetDefault);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = (0, _jss.create)((0, _jssPresetDefault2['default'])());

/***/ }),
/* 335 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Namespaces to avoid conflicts on the context.
	 */
	var jss = exports.jss = '64a55d578f856d258dc345b094a2a2b3';
	var sheetsRegistry = exports.sheetsRegistry = 'd4bd0baacbc52bbd48bbb9eb24344ecd';
	var managers = exports.managers = 'b768b78919504fba9de2c03545c5cd3a';
	var sheetOptions = exports.sheetOptions = '6fc570d6bd61383819d0f9e7407c452d';

/***/ }),
/* 336 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	function componentWillMount() {
	  // Call this.constructor.gDSFP to support sub-classes.
	  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
	  if (state !== null && state !== undefined) {
	    this.setState(state);
	  }
	}
	
	function componentWillReceiveProps(nextProps) {
	  // Call this.constructor.gDSFP to support sub-classes.
	  // Use the setState() updater to ensure state isn't stale in certain edge cases.
	  function updater(prevState) {
	    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
	    return state !== null && state !== undefined ? state : null;
	  }
	  // Binding "this" is important for shallow renderer support.
	  this.setState(updater.bind(this));
	}
	
	function componentWillUpdate(nextProps, nextState) {
	  try {
	    var prevProps = this.props;
	    var prevState = this.state;
	    this.props = nextProps;
	    this.state = nextState;
	    this.__reactInternalSnapshotFlag = true;
	    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
	      prevProps,
	      prevState
	    );
	  } finally {
	    this.props = prevProps;
	    this.state = prevState;
	  }
	}
	
	// React may warn about cWM/cWRP/cWU methods being deprecated.
	// Add a flag to suppress these warnings for this special case.
	componentWillMount.__suppressDeprecationWarning = true;
	componentWillReceiveProps.__suppressDeprecationWarning = true;
	componentWillUpdate.__suppressDeprecationWarning = true;
	
	function polyfill(Component) {
	  var prototype = Component.prototype;
	
	  if (!prototype || !prototype.isReactComponent) {
	    throw new Error('Can only polyfill class components');
	  }
	
	  if (
	    typeof Component.getDerivedStateFromProps !== 'function' &&
	    typeof prototype.getSnapshotBeforeUpdate !== 'function'
	  ) {
	    return Component;
	  }
	
	  // If new component APIs are defined, "unsafe" lifecycles won't be called.
	  // Error if any of these lifecycles are present,
	  // Because they would work differently between older and newer (16.3+) versions of React.
	  var foundWillMountName = null;
	  var foundWillReceivePropsName = null;
	  var foundWillUpdateName = null;
	  if (typeof prototype.componentWillMount === 'function') {
	    foundWillMountName = 'componentWillMount';
	  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
	    foundWillMountName = 'UNSAFE_componentWillMount';
	  }
	  if (typeof prototype.componentWillReceiveProps === 'function') {
	    foundWillReceivePropsName = 'componentWillReceiveProps';
	  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
	    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
	  }
	  if (typeof prototype.componentWillUpdate === 'function') {
	    foundWillUpdateName = 'componentWillUpdate';
	  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
	    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
	  }
	  if (
	    foundWillMountName !== null ||
	    foundWillReceivePropsName !== null ||
	    foundWillUpdateName !== null
	  ) {
	    var componentName = Component.displayName || Component.name;
	    var newApiName =
	      typeof Component.getDerivedStateFromProps === 'function'
	        ? 'getDerivedStateFromProps()'
	        : 'getSnapshotBeforeUpdate()';
	
	    throw Error(
	      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
	        componentName +
	        ' uses ' +
	        newApiName +
	        ' but also contains the following legacy lifecycles:' +
	        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
	        (foundWillReceivePropsName !== null
	          ? '\n  ' + foundWillReceivePropsName
	          : '') +
	        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
	        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
	        'https://fb.me/react-async-component-lifecycle-hooks'
	    );
	  }
	
	  // React <= 16.2 does not support static getDerivedStateFromProps.
	  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
	  // Newer versions of React will ignore these lifecycles if gDSFP exists.
	  if (typeof Component.getDerivedStateFromProps === 'function') {
	    prototype.componentWillMount = componentWillMount;
	    prototype.componentWillReceiveProps = componentWillReceiveProps;
	  }
	
	  // React <= 16.2 does not support getSnapshotBeforeUpdate.
	  // As a workaround, use cWU to invoke the new lifecycle.
	  // Newer versions of React will ignore that lifecycle if gSBU exists.
	  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
	    if (typeof prototype.componentDidUpdate !== 'function') {
	      throw new Error(
	        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
	      );
	    }
	
	    prototype.componentWillUpdate = componentWillUpdate;
	
	    var componentDidUpdate = prototype.componentDidUpdate;
	
	    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
	      prevProps,
	      prevState,
	      maybeSnapshot
	    ) {
	      // 16.3+ will not execute our will-update method;
	      // It will pass a snapshot value to did-update though.
	      // Older versions will require our polyfilled will-update value.
	      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
	      // Because for <= 15.x versions this might be a "prevContext" object.
	      // We also can't just check "__reactInternalSnapshot",
	      // Because get-snapshot might return a falsy value.
	      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
	      var snapshot = this.__reactInternalSnapshotFlag
	        ? this.__reactInternalSnapshot
	        : maybeSnapshot;
	
	      componentDidUpdate.call(this, prevProps, prevState, snapshot);
	    };
	  }
	
	  return Component;
	}
	
	exports.polyfill = polyfill;


/***/ }),
/* 337 */,
/* 338 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Router = __webpack_require__(340);
	
	var _Router2 = _interopRequireDefault(_Router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Router2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(69);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for putting history on context.
	 */
	var Router = function (_React$Component) {
	  _inherits(Router, _React$Component);
	
	  function Router() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Router);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      match: _this.computeMatch(_this.props.history.location.pathname)
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Router.prototype.getChildContext = function getChildContext() {
	    return {
	      router: _extends({}, this.context.router, {
	        history: this.props.history,
	        route: {
	          location: this.props.history.location,
	          match: this.state.match
	        }
	      })
	    };
	  };
	
	  Router.prototype.computeMatch = function computeMatch(pathname) {
	    return {
	      path: "/",
	      url: "/",
	      params: {},
	      isExact: pathname === "/"
	    };
	  };
	
	  Router.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;
	
	    var _props = this.props,
	        children = _props.children,
	        history = _props.history;
	
	
	    (0, _invariant2.default)(children == null || _react2.default.Children.count(children) === 1, "A <Router> may have only one child element");
	
	    // Do this here so we can setState when a <Redirect> changes the
	    // location in componentWillMount. This happens e.g. when doing
	    // server rendering using a <StaticRouter>.
	    this.unlisten = history.listen(function () {
	      _this2.setState({
	        match: _this2.computeMatch(history.location.pathname)
	      });
	    });
	  };
	
	  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    (0, _warning2.default)(this.props.history === nextProps.history, "You cannot change <Router history>");
	  };
	
	  Router.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.unlisten();
	  };
	
	  Router.prototype.render = function render() {
	    var children = this.props.children;
	
	    return children ? _react2.default.Children.only(children) : null;
	  };
	
	  return Router;
	}(_react2.default.Component);
	
	Router.propTypes = {
	  history: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.node
	};
	Router.contextTypes = {
	  router: _propTypes2.default.object
	};
	Router.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = Router;

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _pathToRegexp = __webpack_require__(554);
	
	var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var patternCache = {};
	var cacheLimit = 10000;
	var cacheCount = 0;
	
	var compilePath = function compilePath(pattern, options) {
	  var cacheKey = "" + options.end + options.strict + options.sensitive;
	  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});
	
	  if (cache[pattern]) return cache[pattern];
	
	  var keys = [];
	  var re = (0, _pathToRegexp2.default)(pattern, keys, options);
	  var compiledPattern = { re: re, keys: keys };
	
	  if (cacheCount < cacheLimit) {
	    cache[pattern] = compiledPattern;
	    cacheCount++;
	  }
	
	  return compiledPattern;
	};
	
	/**
	 * Public API for matching a URL pathname to a path pattern.
	 */
	var matchPath = function matchPath(pathname) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var parent = arguments[2];
	
	  if (typeof options === "string") options = { path: options };
	
	  var _options = options,
	      path = _options.path,
	      _options$exact = _options.exact,
	      exact = _options$exact === undefined ? false : _options$exact,
	      _options$strict = _options.strict,
	      strict = _options$strict === undefined ? false : _options$strict,
	      _options$sensitive = _options.sensitive,
	      sensitive = _options$sensitive === undefined ? false : _options$sensitive;
	
	
	  if (path == null) return parent;
	
	  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),
	      re = _compilePath.re,
	      keys = _compilePath.keys;
	
	  var match = re.exec(pathname);
	
	  if (!match) return null;
	
	  var url = match[0],
	      values = match.slice(1);
	
	  var isExact = pathname === url;
	
	  if (exact && !isExact) return null;
	
	  return {
	    path: path, // the path pattern used to match
	    url: path === "/" && url === "" ? "/" : url, // the matched portion of the URL
	    isExact: isExact, // whether or not we matched exactly
	    params: keys.reduce(function (memo, key, index) {
	      memo[key.name] = values[index];
	      return memo;
	    }, {})
	  };
	};
	
	exports.default = matchPath;

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var $$observable = _interopDefault(__webpack_require__(565));
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = {
	  INIT: '@@redux/INIT' + Math.random().toString(36).substring(7).split('').join('.'),
	  REPLACE: '@@redux/REPLACE' + Math.random().toString(36).substring(7).split('').join('.')
	};
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	};
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};
	
	/**
	 * @param {any} obj The object to inspect.
	 * @returns {boolean} True if the argument appears to be a plain object.
	 */
	function isPlainObject(obj) {
	  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return false;
	
	  var proto = obj;
	  while (Object.getPrototypeOf(proto) !== null) {
	    proto = Object.getPrototypeOf(proto);
	  }
	
	  return Object.getPrototypeOf(obj) === proto;
	}
	
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [preloadedState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;
	
	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, preloadedState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    if (isDispatching) {
	      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
	    }
	
	    return currentState;
	  }
	
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected the listener to be a function.');
	    }
	
	    if (isDispatching) {
	      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      if (isDispatching) {
	        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!isPlainObject(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      var listener = listeners[i];
	      listener();
	    }
	
	    return action;
	  }
	
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.REPLACE });
	  }
	
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/tc39/proposal-observable
	   */
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object' || observer === null) {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[$$observable] = function () {
	      return this;
	    }, _ref;
	  }
	
	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[$$observable] = observable, _ref2;
	}
	
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	  } catch (e) {} // eslint-disable-line no-empty
	}
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionDescription = actionType && 'action "' + String(actionType) + '"' || 'an action';
	
	  return 'Given ' + actionDescription + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!isPlainObject(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });
	
	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });
	
	  if (action && action.type === ActionTypes.REPLACE) return;
	
	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}
	
	function assertReducerShape(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: ActionTypes.INIT });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
	    }
	
	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
	    }
	  });
	}
	
	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	
	    if (false) {
	      if (typeof reducers[key] === 'undefined') {
	        warning('No reducer provided for key "' + key + '"');
	      }
	    }
	
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);
	
	  var unexpectedKeyCache = void 0;
	  if (false) {
	    unexpectedKeyCache = {};
	  }
	
	  var shapeAssertionError = void 0;
	  try {
	    assertReducerShape(finalReducers);
	  } catch (e) {
	    shapeAssertionError = e;
	  }
	
	  return function combination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (shapeAssertionError) {
	      throw shapeAssertionError;
	    }
	
	    if (false) {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        warning(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
	      var _key = finalReducerKeys[_i];
	      var reducer = finalReducers[_key];
	      var previousStateForKey = state[_key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(_key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[_key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}
	
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(this, arguments));
	  };
	}
	
	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }
	
	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}
	
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */
	
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }
	
	  if (funcs.length === 1) {
	    return funcs[0];
	  }
	
	  return funcs.reduce(function (a, b) {
	    return function () {
	      return a(b.apply(undefined, arguments));
	    };
	  });
	}
	
	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function () {
	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }
	
	      var store = createStore.apply(undefined, args);
	      var _dispatch = function dispatch() {
	        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
	      };
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch() {
	          return _dispatch.apply(undefined, arguments);
	        }
	      };
	      var chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = compose.apply(undefined, chain)(store.dispatch);
	
	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}
	
	/*
	 * This is a dummy function to check if the function name has been altered by minification.
	 * If the function has been minified and NODE_ENV !== 'production', warn the user.
	 */
	function isCrushed() {}
	
	if (false) {
	  warning("You are currently using minified code outside of NODE_ENV === 'production'. " + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.createStore = createStore;
	exports.combineReducers = combineReducers;
	exports.bindActionCreators = bindActionCreators;
	exports.applyMiddleware = applyMiddleware;
	exports.compose = compose;
	exports.__DO_NOT_USE__ActionTypes = ActionTypes;


/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// A bit simpler than readable streams.
	// Implement an async ._write(chunk, encoding, cb), and it'll handle all
	// the drain event emission and buffering.
	
	'use strict';
	
	/*<replacement>*/
	
	var pna = __webpack_require__(216);
	/*</replacement>*/
	
	module.exports = Writable;
	
	/* <replacement> */
	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	  this.next = null;
	}
	
	// It seems a linked list but it is not
	// there will be only 2 of these for each stream
	function CorkedRequest(state) {
	  var _this = this;
	
	  this.next = null;
	  this.entry = null;
	  this.finish = function () {
	    onCorkedFinish(_this, state);
	  };
	}
	/* </replacement> */
	
	/*<replacement>*/
	var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
	/*</replacement>*/
	
	/*<replacement>*/
	var Duplex;
	/*</replacement>*/
	
	Writable.WritableState = WritableState;
	
	/*<replacement>*/
	var util = Object.create(__webpack_require__(146));
	util.inherits = __webpack_require__(43);
	/*</replacement>*/
	
	/*<replacement>*/
	var internalUtil = {
	  deprecate: __webpack_require__(1783)
	};
	/*</replacement>*/
	
	/*<replacement>*/
	var Stream = __webpack_require__(564);
	/*</replacement>*/
	
	/*<replacement>*/
	
	var Buffer = __webpack_require__(219).Buffer;
	var OurUint8Array = global.Uint8Array || function () {};
	function _uint8ArrayToBuffer(chunk) {
	  return Buffer.from(chunk);
	}
	function _isUint8Array(obj) {
	  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
	}
	
	/*</replacement>*/
	
	var destroyImpl = __webpack_require__(563);
	
	util.inherits(Writable, Stream);
	
	function nop() {}
	
	function WritableState(options, stream) {
	  Duplex = Duplex || __webpack_require__(99);
	
	  options = options || {};
	
	  // Duplex streams are both readable and writable, but share
	  // the same options object.
	  // However, some cases require setting options to different
	  // values for the readable and the writable sides of the duplex stream.
	  // These options can be provided separately as readableXXX and writableXXX.
	  var isDuplex = stream instanceof Duplex;
	
	  // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.
	  this.objectMode = !!options.objectMode;
	
	  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;
	
	  // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()
	  var hwm = options.highWaterMark;
	  var writableHwm = options.writableHighWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	
	  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;
	
	  // cast to ints.
	  this.highWaterMark = Math.floor(this.highWaterMark);
	
	  // if _final has been called
	  this.finalCalled = false;
	
	  // drain event flag.
	  this.needDrain = false;
	  // at the start of calling end()
	  this.ending = false;
	  // when end() has been called, and returned
	  this.ended = false;
	  // when 'finish' is emitted
	  this.finished = false;
	
	  // has it been destroyed
	  this.destroyed = false;
	
	  // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.
	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.
	  this.length = 0;
	
	  // a flag to see when we're in the middle of a write.
	  this.writing = false;
	
	  // when true all writes will be buffered until .uncork() call
	  this.corked = 0;
	
	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;
	
	  // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.
	  this.bufferProcessing = false;
	
	  // the callback that's passed to _write(chunk,cb)
	  this.onwrite = function (er) {
	    onwrite(stream, er);
	  };
	
	  // the callback that the user supplies to write(chunk,encoding,cb)
	  this.writecb = null;
	
	  // the amount that is being written when _write is called.
	  this.writelen = 0;
	
	  this.bufferedRequest = null;
	  this.lastBufferedRequest = null;
	
	  // number of pending user-supplied write callbacks
	  // this must be 0 before 'finish' can be emitted
	  this.pendingcb = 0;
	
	  // emit prefinish if the only thing we're waiting for is _write cbs
	  // This is relevant for synchronous Transform streams
	  this.prefinished = false;
	
	  // True if the error was already emitted and should not be thrown again
	  this.errorEmitted = false;
	
	  // count buffered requests
	  this.bufferedRequestCount = 0;
	
	  // allocate the first CorkedRequest, there is always
	  // one allocated and free to use, and we maintain at most two
	  this.corkedRequestsFree = new CorkedRequest(this);
	}
	
	WritableState.prototype.getBuffer = function getBuffer() {
	  var current = this.bufferedRequest;
	  var out = [];
	  while (current) {
	    out.push(current);
	    current = current.next;
	  }
	  return out;
	};
	
	(function () {
	  try {
	    Object.defineProperty(WritableState.prototype, 'buffer', {
	      get: internalUtil.deprecate(function () {
	        return this.getBuffer();
	      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
	    });
	  } catch (_) {}
	})();
	
	// Test _writableState for inheritance to account for Duplex streams,
	// whose prototype chain only points to Readable.
	var realHasInstance;
	if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
	  realHasInstance = Function.prototype[Symbol.hasInstance];
	  Object.defineProperty(Writable, Symbol.hasInstance, {
	    value: function (object) {
	      if (realHasInstance.call(this, object)) return true;
	      if (this !== Writable) return false;
	
	      return object && object._writableState instanceof WritableState;
	    }
	  });
	} else {
	  realHasInstance = function (object) {
	    return object instanceof this;
	  };
	}
	
	function Writable(options) {
	  Duplex = Duplex || __webpack_require__(99);
	
	  // Writable ctor is applied to Duplexes, too.
	  // `realHasInstance` is necessary because using plain `instanceof`
	  // would return false, as no `_writableState` property is attached.
	
	  // Trying to use the custom `instanceof` for Writable here will also break the
	  // Node.js LazyTransform implementation, which has a non-trivial getter for
	  // `_writableState` that would lead to infinite recursion.
	  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
	    return new Writable(options);
	  }
	
	  this._writableState = new WritableState(options, this);
	
	  // legacy.
	  this.writable = true;
	
	  if (options) {
	    if (typeof options.write === 'function') this._write = options.write;
	
	    if (typeof options.writev === 'function') this._writev = options.writev;
	
	    if (typeof options.destroy === 'function') this._destroy = options.destroy;
	
	    if (typeof options.final === 'function') this._final = options.final;
	  }
	
	  Stream.call(this);
	}
	
	// Otherwise people can pipe Writable streams, which is just wrong.
	Writable.prototype.pipe = function () {
	  this.emit('error', new Error('Cannot pipe, not readable'));
	};
	
	function writeAfterEnd(stream, cb) {
	  var er = new Error('write after end');
	  // TODO: defer error events consistently everywhere, not just the cb
	  stream.emit('error', er);
	  pna.nextTick(cb, er);
	}
	
	// Checks that a user-supplied chunk is valid, especially for the particular
	// mode the stream is in. Currently this means that `null` is never accepted
	// and undefined/non-string values are only allowed in object mode.
	function validChunk(stream, state, chunk, cb) {
	  var valid = true;
	  var er = false;
	
	  if (chunk === null) {
	    er = new TypeError('May not write null values to stream');
	  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  if (er) {
	    stream.emit('error', er);
	    pna.nextTick(cb, er);
	    valid = false;
	  }
	  return valid;
	}
	
	Writable.prototype.write = function (chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;
	  var isBuf = !state.objectMode && _isUint8Array(chunk);
	
	  if (isBuf && !Buffer.isBuffer(chunk)) {
	    chunk = _uint8ArrayToBuffer(chunk);
	  }
	
	  if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
	
	  if (typeof cb !== 'function') cb = nop;
	
	  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
	    state.pendingcb++;
	    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
	  }
	
	  return ret;
	};
	
	Writable.prototype.cork = function () {
	  var state = this._writableState;
	
	  state.corked++;
	};
	
	Writable.prototype.uncork = function () {
	  var state = this._writableState;
	
	  if (state.corked) {
	    state.corked--;
	
	    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
	  }
	};
	
	Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
	  // node::ParseEncoding() requires lower case.
	  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
	  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
	  this._writableState.defaultEncoding = encoding;
	  return this;
	};
	
	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
	    chunk = Buffer.from(chunk, encoding);
	  }
	  return chunk;
	}
	
	Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
	  // making it explicit this property is not enumerable
	  // because otherwise some prototype manipulation in
	  // userland will fail
	  enumerable: false,
	  get: function () {
	    return this._writableState.highWaterMark;
	  }
	});
	
	// if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.
	function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
	  if (!isBuf) {
	    var newChunk = decodeChunk(state, chunk, encoding);
	    if (chunk !== newChunk) {
	      isBuf = true;
	      encoding = 'buffer';
	      chunk = newChunk;
	    }
	  }
	  var len = state.objectMode ? 1 : chunk.length;
	
	  state.length += len;
	
	  var ret = state.length < state.highWaterMark;
	  // we must ensure that previous needDrain will not be reset to false.
	  if (!ret) state.needDrain = true;
	
	  if (state.writing || state.corked) {
	    var last = state.lastBufferedRequest;
	    state.lastBufferedRequest = {
	      chunk: chunk,
	      encoding: encoding,
	      isBuf: isBuf,
	      callback: cb,
	      next: null
	    };
	    if (last) {
	      last.next = state.lastBufferedRequest;
	    } else {
	      state.bufferedRequest = state.lastBufferedRequest;
	    }
	    state.bufferedRequestCount += 1;
	  } else {
	    doWrite(stream, state, false, len, chunk, encoding, cb);
	  }
	
	  return ret;
	}
	
	function doWrite(stream, state, writev, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}
	
	function onwriteError(stream, state, sync, er, cb) {
	  --state.pendingcb;
	
	  if (sync) {
	    // defer the callback if we are being called synchronously
	    // to avoid piling up things on the stack
	    pna.nextTick(cb, er);
	    // this can emit finish, and it will always happen
	    // after error
	    pna.nextTick(finishMaybe, stream, state);
	    stream._writableState.errorEmitted = true;
	    stream.emit('error', er);
	  } else {
	    // the caller expect this to happen before if
	    // it is async
	    cb(er);
	    stream._writableState.errorEmitted = true;
	    stream.emit('error', er);
	    // this can emit finish, but finish must
	    // always follow error
	    finishMaybe(stream, state);
	  }
	}
	
	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}
	
	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;
	
	  onwriteStateUpdate(state);
	
	  if (er) onwriteError(stream, state, sync, er, cb);else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(state);
	
	    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
	      clearBuffer(stream, state);
	    }
	
	    if (sync) {
	      /*<replacement>*/
	      asyncWrite(afterWrite, stream, state, finished, cb);
	      /*</replacement>*/
	    } else {
	      afterWrite(stream, state, finished, cb);
	    }
	  }
	}
	
	function afterWrite(stream, state, finished, cb) {
	  if (!finished) onwriteDrain(stream, state);
	  state.pendingcb--;
	  cb();
	  finishMaybe(stream, state);
	}
	
	// Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.
	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	}
	
	// if there's something in the buffer waiting, then process it
	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;
	  var entry = state.bufferedRequest;
	
	  if (stream._writev && entry && entry.next) {
	    // Fast case, write everything using _writev()
	    var l = state.bufferedRequestCount;
	    var buffer = new Array(l);
	    var holder = state.corkedRequestsFree;
	    holder.entry = entry;
	
	    var count = 0;
	    var allBuffers = true;
	    while (entry) {
	      buffer[count] = entry;
	      if (!entry.isBuf) allBuffers = false;
	      entry = entry.next;
	      count += 1;
	    }
	    buffer.allBuffers = allBuffers;
	
	    doWrite(stream, state, true, state.length, buffer, '', holder.finish);
	
	    // doWrite is almost always async, defer these to save a bit of time
	    // as the hot path ends with doWrite
	    state.pendingcb++;
	    state.lastBufferedRequest = null;
	    if (holder.next) {
	      state.corkedRequestsFree = holder.next;
	      holder.next = null;
	    } else {
	      state.corkedRequestsFree = new CorkedRequest(state);
	    }
	    state.bufferedRequestCount = 0;
	  } else {
	    // Slow case, write chunks one-by-one
	    while (entry) {
	      var chunk = entry.chunk;
	      var encoding = entry.encoding;
	      var cb = entry.callback;
	      var len = state.objectMode ? 1 : chunk.length;
	
	      doWrite(stream, state, false, len, chunk, encoding, cb);
	      entry = entry.next;
	      state.bufferedRequestCount--;
	      // if we didn't call the onwrite immediately, then
	      // it means that we need to wait until it does.
	      // also, that means that the chunk and cb are currently
	      // being processed, so move the buffer counter past them.
	      if (state.writing) {
	        break;
	      }
	    }
	
	    if (entry === null) state.lastBufferedRequest = null;
	  }
	
	  state.bufferedRequest = entry;
	  state.bufferProcessing = false;
	}
	
	Writable.prototype._write = function (chunk, encoding, cb) {
	  cb(new Error('_write() is not implemented'));
	};
	
	Writable.prototype._writev = null;
	
	Writable.prototype.end = function (chunk, encoding, cb) {
	  var state = this._writableState;
	
	  if (typeof chunk === 'function') {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);
	
	  // .end() fully uncorks
	  if (state.corked) {
	    state.corked = 1;
	    this.uncork();
	  }
	
	  // ignore unnecessary end() calls.
	  if (!state.ending && !state.finished) endWritable(this, state, cb);
	};
	
	function needFinish(state) {
	  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
	}
	function callFinal(stream, state) {
	  stream._final(function (err) {
	    state.pendingcb--;
	    if (err) {
	      stream.emit('error', err);
	    }
	    state.prefinished = true;
	    stream.emit('prefinish');
	    finishMaybe(stream, state);
	  });
	}
	function prefinish(stream, state) {
	  if (!state.prefinished && !state.finalCalled) {
	    if (typeof stream._final === 'function') {
	      state.pendingcb++;
	      state.finalCalled = true;
	      pna.nextTick(callFinal, stream, state);
	    } else {
	      state.prefinished = true;
	      stream.emit('prefinish');
	    }
	  }
	}
	
	function finishMaybe(stream, state) {
	  var need = needFinish(state);
	  if (need) {
	    prefinish(stream, state);
	    if (state.pendingcb === 0) {
	      state.finished = true;
	      stream.emit('finish');
	    }
	  }
	  return need;
	}
	
	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);
	  if (cb) {
	    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
	  }
	  state.ended = true;
	  stream.writable = false;
	}
	
	function onCorkedFinish(corkReq, state, err) {
	  var entry = corkReq.entry;
	  corkReq.entry = null;
	  while (entry) {
	    var cb = entry.callback;
	    state.pendingcb--;
	    cb(err);
	    entry = entry.next;
	  }
	  if (state.corkedRequestsFree) {
	    state.corkedRequestsFree.next = corkReq;
	  } else {
	    state.corkedRequestsFree = corkReq;
	  }
	}
	
	Object.defineProperty(Writable.prototype, 'destroyed', {
	  get: function () {
	    if (this._writableState === undefined) {
	      return false;
	    }
	    return this._writableState.destroyed;
	  },
	  set: function (value) {
	    // we ignore the value if the stream
	    // has not been initialized yet
	    if (!this._writableState) {
	      return;
	    }
	
	    // backward compatibility, the user is explicitly
	    // managing destroyed
	    this._writableState.destroyed = value;
	  }
	});
	
	Writable.prototype.destroy = destroyImpl.destroy;
	Writable.prototype._undestroy = destroyImpl.undestroy;
	Writable.prototype._destroy = function (err, cb) {
	  this.end();
	  cb(err);
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44), __webpack_require__(568).setImmediate, (function() { return this; }())))

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(561);
	exports.Stream = exports;
	exports.Readable = exports;
	exports.Writable = __webpack_require__(343);
	exports.Duplex = __webpack_require__(99);
	exports.Transform = __webpack_require__(562);
	exports.PassThrough = __webpack_require__(1766);


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	/*<replacement>*/
	
	var Buffer = __webpack_require__(219).Buffer;
	/*</replacement>*/
	
	var isEncoding = Buffer.isEncoding || function (encoding) {
	  encoding = '' + encoding;
	  switch (encoding && encoding.toLowerCase()) {
	    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
	      return true;
	    default:
	      return false;
	  }
	};
	
	function _normalizeEncoding(enc) {
	  if (!enc) return 'utf8';
	  var retried;
	  while (true) {
	    switch (enc) {
	      case 'utf8':
	      case 'utf-8':
	        return 'utf8';
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return 'utf16le';
	      case 'latin1':
	      case 'binary':
	        return 'latin1';
	      case 'base64':
	      case 'ascii':
	      case 'hex':
	        return enc;
	      default:
	        if (retried) return; // undefined
	        enc = ('' + enc).toLowerCase();
	        retried = true;
	    }
	  }
	};
	
	// Do not cache `Buffer.isEncoding` when checking encoding names as some
	// modules monkey-patch it to support additional encodings
	function normalizeEncoding(enc) {
	  var nenc = _normalizeEncoding(enc);
	  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
	  return nenc || enc;
	}
	
	// StringDecoder provides an interface for efficiently splitting a series of
	// buffers into a series of JS strings without breaking apart multi-byte
	// characters.
	exports.StringDecoder = StringDecoder;
	function StringDecoder(encoding) {
	  this.encoding = normalizeEncoding(encoding);
	  var nb;
	  switch (this.encoding) {
	    case 'utf16le':
	      this.text = utf16Text;
	      this.end = utf16End;
	      nb = 4;
	      break;
	    case 'utf8':
	      this.fillLast = utf8FillLast;
	      nb = 4;
	      break;
	    case 'base64':
	      this.text = base64Text;
	      this.end = base64End;
	      nb = 3;
	      break;
	    default:
	      this.write = simpleWrite;
	      this.end = simpleEnd;
	      return;
	  }
	  this.lastNeed = 0;
	  this.lastTotal = 0;
	  this.lastChar = Buffer.allocUnsafe(nb);
	}
	
	StringDecoder.prototype.write = function (buf) {
	  if (buf.length === 0) return '';
	  var r;
	  var i;
	  if (this.lastNeed) {
	    r = this.fillLast(buf);
	    if (r === undefined) return '';
	    i = this.lastNeed;
	    this.lastNeed = 0;
	  } else {
	    i = 0;
	  }
	  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
	  return r || '';
	};
	
	StringDecoder.prototype.end = utf8End;
	
	// Returns only complete characters in a Buffer
	StringDecoder.prototype.text = utf8Text;
	
	// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
	StringDecoder.prototype.fillLast = function (buf) {
	  if (this.lastNeed <= buf.length) {
	    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
	    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
	  }
	  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
	  this.lastNeed -= buf.length;
	};
	
	// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
	// continuation byte. If an invalid byte is detected, -2 is returned.
	function utf8CheckByte(byte) {
	  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
	  return byte >> 6 === 0x02 ? -1 : -2;
	}
	
	// Checks at most 3 bytes at the end of a Buffer in order to detect an
	// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
	// needed to complete the UTF-8 character (if applicable) are returned.
	function utf8CheckIncomplete(self, buf, i) {
	  var j = buf.length - 1;
	  if (j < i) return 0;
	  var nb = utf8CheckByte(buf[j]);
	  if (nb >= 0) {
	    if (nb > 0) self.lastNeed = nb - 1;
	    return nb;
	  }
	  if (--j < i || nb === -2) return 0;
	  nb = utf8CheckByte(buf[j]);
	  if (nb >= 0) {
	    if (nb > 0) self.lastNeed = nb - 2;
	    return nb;
	  }
	  if (--j < i || nb === -2) return 0;
	  nb = utf8CheckByte(buf[j]);
	  if (nb >= 0) {
	    if (nb > 0) {
	      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
	    }
	    return nb;
	  }
	  return 0;
	}
	
	// Validates as many continuation bytes for a multi-byte UTF-8 character as
	// needed or are available. If we see a non-continuation byte where we expect
	// one, we "replace" the validated continuation bytes we've seen so far with
	// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
	// behavior. The continuation byte check is included three times in the case
	// where all of the continuation bytes for a character exist in the same buffer.
	// It is also done this way as a slight performance increase instead of using a
	// loop.
	function utf8CheckExtraBytes(self, buf, p) {
	  if ((buf[0] & 0xC0) !== 0x80) {
	    self.lastNeed = 0;
	    return '\ufffd';
	  }
	  if (self.lastNeed > 1 && buf.length > 1) {
	    if ((buf[1] & 0xC0) !== 0x80) {
	      self.lastNeed = 1;
	      return '\ufffd';
	    }
	    if (self.lastNeed > 2 && buf.length > 2) {
	      if ((buf[2] & 0xC0) !== 0x80) {
	        self.lastNeed = 2;
	        return '\ufffd';
	      }
	    }
	  }
	}
	
	// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
	function utf8FillLast(buf) {
	  var p = this.lastTotal - this.lastNeed;
	  var r = utf8CheckExtraBytes(this, buf, p);
	  if (r !== undefined) return r;
	  if (this.lastNeed <= buf.length) {
	    buf.copy(this.lastChar, p, 0, this.lastNeed);
	    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
	  }
	  buf.copy(this.lastChar, p, 0, buf.length);
	  this.lastNeed -= buf.length;
	}
	
	// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
	// partial character, the character's bytes are buffered until the required
	// number of bytes are available.
	function utf8Text(buf, i) {
	  var total = utf8CheckIncomplete(this, buf, i);
	  if (!this.lastNeed) return buf.toString('utf8', i);
	  this.lastTotal = total;
	  var end = buf.length - (total - this.lastNeed);
	  buf.copy(this.lastChar, 0, end);
	  return buf.toString('utf8', i, end);
	}
	
	// For UTF-8, a replacement character is added when ending on a partial
	// character.
	function utf8End(buf) {
	  var r = buf && buf.length ? this.write(buf) : '';
	  if (this.lastNeed) return r + '\ufffd';
	  return r;
	}
	
	// UTF-16LE typically needs two bytes per character, but even if we have an even
	// number of bytes available, we need to check if we end on a leading/high
	// surrogate. In that case, we need to wait for the next two bytes in order to
	// decode the last character properly.
	function utf16Text(buf, i) {
	  if ((buf.length - i) % 2 === 0) {
	    var r = buf.toString('utf16le', i);
	    if (r) {
	      var c = r.charCodeAt(r.length - 1);
	      if (c >= 0xD800 && c <= 0xDBFF) {
	        this.lastNeed = 2;
	        this.lastTotal = 4;
	        this.lastChar[0] = buf[buf.length - 2];
	        this.lastChar[1] = buf[buf.length - 1];
	        return r.slice(0, -1);
	      }
	    }
	    return r;
	  }
	  this.lastNeed = 1;
	  this.lastTotal = 2;
	  this.lastChar[0] = buf[buf.length - 1];
	  return buf.toString('utf16le', i, buf.length - 1);
	}
	
	// For UTF-16LE we do not explicitly append special replacement characters if we
	// end on a partial character, we simply let v8 handle that.
	function utf16End(buf) {
	  var r = buf && buf.length ? this.write(buf) : '';
	  if (this.lastNeed) {
	    var end = this.lastTotal - this.lastNeed;
	    return r + this.lastChar.toString('utf16le', 0, end);
	  }
	  return r;
	}
	
	function base64Text(buf, i) {
	  var n = (buf.length - i) % 3;
	  if (n === 0) return buf.toString('base64', i);
	  this.lastNeed = 3 - n;
	  this.lastTotal = 3;
	  if (n === 1) {
	    this.lastChar[0] = buf[buf.length - 1];
	  } else {
	    this.lastChar[0] = buf[buf.length - 2];
	    this.lastChar[1] = buf[buf.length - 1];
	  }
	  return buf.toString('base64', i, buf.length - n);
	}
	
	function base64End(buf) {
	  var r = buf && buf.length ? this.write(buf) : '';
	  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
	  return r;
	}
	
	// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
	function simpleWrite(buf) {
	  return buf.toString(this.encoding);
	}
	
	function simpleEnd(buf) {
	  return buf && buf.length ? this.write(buf) : '';
	}

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Backdrop.default;
	  }
	});
	
	var _Backdrop = _interopRequireDefault(__webpack_require__(580));

/***/ }),
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _FilledInput.default;
	  }
	});
	
	var _FilledInput = _interopRequireDefault(__webpack_require__(630));

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _FormControl.default;
	  }
	});
	
	var _FormControl = _interopRequireDefault(__webpack_require__(631));

/***/ }),
/* 353 */,
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _FormHelperText.default;
	  }
	});
	
	var _FormHelperText = _interopRequireDefault(__webpack_require__(635));

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _FormLabel.default;
	  }
	});
	
	var _FormLabel = _interopRequireDefault(__webpack_require__(636));

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _InputLabel.default;
	  }
	});
	
	var _InputLabel = _interopRequireDefault(__webpack_require__(657));

/***/ }),
/* 357 */,
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _List.default;
	  }
	});
	
	var _List = _interopRequireDefault(__webpack_require__(659));

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(29));
	
	var _scrollbarSize = _interopRequireDefault(__webpack_require__(441));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _Popover = _interopRequireDefault(__webpack_require__(365));
	
	var _MenuList = _interopRequireDefault(__webpack_require__(134));
	
	// @inheritedComponent Popover
	var RTL_ORIGIN = {
	  vertical: 'top',
	  horizontal: 'right'
	};
	var LTR_ORIGIN = {
	  vertical: 'top',
	  horizontal: 'left'
	};
	var styles = {
	  /* Styles applied to the `Paper` component. */
	  paper: {
	    // specZ: The maximum height of a simple menu should be one or more rows less than the view
	    // height. This ensures a tapable area outside of the simple menu with which to dismiss
	    // the menu.
	    maxHeight: 'calc(100% - 96px)',
	    // Add iOS momentum scrolling.
	    WebkitOverflowScrolling: 'touch'
	  }
	};
	exports.styles = styles;
	
	var Menu =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Menu, _React$Component);
	
	  function Menu() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Menu);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));
	
	    _this.getContentAnchorEl = function () {
	      if (_this.menuListRef.selectedItemRef) {
	        return _reactDom.default.findDOMNode(_this.menuListRef.selectedItemRef);
	      }
	
	      return _reactDom.default.findDOMNode(_this.menuListRef).firstChild;
	    };
	
	    _this.focus = function () {
	      if (_this.menuListRef && _this.menuListRef.selectedItemRef) {
	        _reactDom.default.findDOMNode(_this.menuListRef.selectedItemRef).focus();
	
	        return;
	      }
	
	      var menuList = _reactDom.default.findDOMNode(_this.menuListRef);
	
	      if (menuList && menuList.firstChild) {
	        menuList.firstChild.focus();
	      }
	    };
	
	    _this.handleMenuListRef = function (ref) {
	      _this.menuListRef = ref;
	    };
	
	    _this.handleEntering = function (element) {
	      var _this$props = _this.props,
	          disableAutoFocusItem = _this$props.disableAutoFocusItem,
	          theme = _this$props.theme;
	
	      var menuList = _reactDom.default.findDOMNode(_this.menuListRef); // Focus so the scroll computation of the Popover works as expected.
	
	
	      if (disableAutoFocusItem !== true) {
	        _this.focus();
	      } // Let's ignore that piece of logic if users are already overriding the width
	      // of the menu.
	
	
	      if (menuList && element.clientHeight < menuList.clientHeight && !menuList.style.width) {
	        var size = "".concat((0, _scrollbarSize.default)(), "px");
	        menuList.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = size;
	        menuList.style.width = "calc(100% + ".concat(size, ")");
	      }
	
	      if (_this.props.onEntering) {
	        _this.props.onEntering(element);
	      }
	    };
	
	    _this.handleListKeyDown = function (event, key) {
	      if (key === 'tab') {
	        event.preventDefault();
	
	        if (_this.props.onClose) {
	          _this.props.onClose(event);
	        }
	      }
	    };
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(Menu, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (this.props.open && this.props.disableAutoFocusItem !== true) {
	        this.focus();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props2 = this.props,
	          children = _this$props2.children,
	          classes = _this$props2.classes,
	          disableAutoFocusItem = _this$props2.disableAutoFocusItem,
	          MenuListProps = _this$props2.MenuListProps,
	          onEntering = _this$props2.onEntering,
	          _this$props2$PaperPro = _this$props2.PaperProps,
	          PaperProps = _this$props2$PaperPro === void 0 ? {} : _this$props2$PaperPro,
	          PopoverClasses = _this$props2.PopoverClasses,
	          theme = _this$props2.theme,
	          other = (0, _objectWithoutProperties2.default)(_this$props2, ["children", "classes", "disableAutoFocusItem", "MenuListProps", "onEntering", "PaperProps", "PopoverClasses", "theme"]);
	      return _react.default.createElement(_Popover.default, (0, _extends2.default)({
	        getContentAnchorEl: this.getContentAnchorEl,
	        classes: PopoverClasses,
	        onEntering: this.handleEntering,
	        anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,
	        transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,
	        PaperProps: (0, _extends2.default)({}, PaperProps, {
	          classes: (0, _extends2.default)({}, PaperProps.classes, {
	            root: classes.paper
	          })
	        })
	      }, other), _react.default.createElement(_MenuList.default, (0, _extends2.default)({
	        onKeyDown: this.handleListKeyDown
	      }, MenuListProps, {
	        ref: this.handleMenuListRef
	      }), children));
	    }
	  }]);
	  return Menu;
	}(_react.default.Component);
	
	Menu.propTypes =  false ? {
	  /**
	   * The DOM element used to set the position of the menu.
	   */
	  anchorEl: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
	
	  /**
	   * Menu contents, normally `MenuItem`s.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * If `true`, the selected / first menu item will not be auto focused.
	   */
	  disableAutoFocusItem: _propTypes.default.bool,
	
	  /**
	   * Properties applied to the [`MenuList`](/api/menu-list/) element.
	   */
	  MenuListProps: _propTypes.default.object,
	
	  /**
	   * Callback fired when the component requests to be closed.
	   *
	   * @param {object} event The event source of the callback
	   */
	  onClose: _propTypes.default.func,
	
	  /**
	   * Callback fired before the Menu enters.
	   */
	  onEnter: _propTypes.default.func,
	
	  /**
	   * Callback fired when the Menu has entered.
	   */
	  onEntered: _propTypes.default.func,
	
	  /**
	   * Callback fired when the Menu is entering.
	   */
	  onEntering: _propTypes.default.func,
	
	  /**
	   * Callback fired before the Menu exits.
	   */
	  onExit: _propTypes.default.func,
	
	  /**
	   * Callback fired when the Menu has exited.
	   */
	  onExited: _propTypes.default.func,
	
	  /**
	   * Callback fired when the Menu is exiting.
	   */
	  onExiting: _propTypes.default.func,
	
	  /**
	   * If `true`, the menu is visible.
	   */
	  open: _propTypes.default.bool.isRequired,
	
	  /**
	   * @ignore
	   */
	  PaperProps: _propTypes.default.object,
	
	  /**
	   * `classes` property applied to the [`Popover`](/api/popover/) element.
	   */
	  PopoverClasses: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  theme: _propTypes.default.object.isRequired,
	
	  /**
	   * The length of the transition in `ms`, or 'auto'
	   */
	  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	    enter: _propTypes.default.number,
	    exit: _propTypes.default.number
	  }), _propTypes.default.oneOf(['auto'])])
	} : {};
	Menu.defaultProps = {
	  disableAutoFocusItem: false,
	  transitionDuration: 'auto'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiMenu',
	  withTheme: true
	})(Menu);
	
	exports.default = _default;

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _style = _interopRequireDefault(__webpack_require__(1029));
	
	var _scrollbarSize = _interopRequireDefault(__webpack_require__(441));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(56));
	
	var _isOverflowing = _interopRequireDefault(__webpack_require__(675));
	
	var _manageAriaHidden = __webpack_require__(361);
	
	function findIndexOf(data, callback) {
	  var idx = -1;
	  data.some(function (item, index) {
	    if (callback(item)) {
	      idx = index;
	      return true;
	    }
	
	    return false;
	  });
	  return idx;
	}
	
	function getPaddingRight(node) {
	  return parseInt((0, _style.default)(node, 'paddingRight') || 0, 10);
	}
	
	function setContainerStyle(data) {
	  var style = {
	    overflow: 'hidden'
	  }; // We are only interested in the actual `style` here because we will override it.
	
	  data.style = {
	    overflow: data.container.style.overflow,
	    paddingRight: data.container.style.paddingRight
	  };
	
	  if (data.overflowing) {
	    var scrollbarSize = (0, _scrollbarSize.default)(); // Use computed style, here to get the real padding to add our scrollbar width.
	
	    style.paddingRight = "".concat(getPaddingRight(data.container) + scrollbarSize, "px"); // .mui-fixed is a global helper.
	
	    var fixedNodes = (0, _ownerDocument.default)(data.container).querySelectorAll('.mui-fixed');
	
	    for (var i = 0; i < fixedNodes.length; i += 1) {
	      var paddingRight = getPaddingRight(fixedNodes[i]);
	      data.prevPaddings.push(paddingRight);
	      fixedNodes[i].style.paddingRight = "".concat(paddingRight + scrollbarSize, "px");
	    }
	  }
	
	  Object.keys(style).forEach(function (key) {
	    data.container.style[key] = style[key];
	  });
	}
	
	function removeContainerStyle(data) {
	  // The modal might be closed before it had the chance to be mounted in the DOM.
	  if (data.style) {
	    Object.keys(data.style).forEach(function (key) {
	      data.container.style[key] = data.style[key];
	    });
	  }
	
	  var fixedNodes = (0, _ownerDocument.default)(data.container).querySelectorAll('.mui-fixed');
	
	  for (var i = 0; i < fixedNodes.length; i += 1) {
	    fixedNodes[i].style.paddingRight = "".concat(data.prevPaddings[i], "px");
	  }
	}
	/**
	 * @ignore - do not document.
	 *
	 * Proper state managment for containers and the modals in those containers.
	 * Simplified, but inspired by react-overlay's ModalManager class.
	 * Used by the Modal to ensure proper styling of containers.
	 */
	
	
	var ModalManager =
	/*#__PURE__*/
	function () {
	  function ModalManager() {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    (0, _classCallCheck2.default)(this, ModalManager);
	    var _options$hideSiblingN = options.hideSiblingNodes,
	        hideSiblingNodes = _options$hideSiblingN === void 0 ? true : _options$hideSiblingN,
	        _options$handleContai = options.handleContainerOverflow,
	        handleContainerOverflow = _options$handleContai === void 0 ? true : _options$handleContai;
	    this.hideSiblingNodes = hideSiblingNodes;
	    this.handleContainerOverflow = handleContainerOverflow; // this.modals[modalIdx] = modal
	
	    this.modals = []; // this.data[containerIdx] = {
	    //   modals: [],
	    //   container,
	    //   overflowing,
	    //   prevPaddings,
	    // }
	
	    this.data = [];
	  }
	
	  (0, _createClass2.default)(ModalManager, [{
	    key: "add",
	    value: function add(modal, container) {
	      var modalIdx = this.modals.indexOf(modal);
	
	      if (modalIdx !== -1) {
	        return modalIdx;
	      }
	
	      modalIdx = this.modals.length;
	      this.modals.push(modal); // If the modal we are adding is already in the DOM.
	
	      if (modal.modalRef) {
	        (0, _manageAriaHidden.ariaHidden)(modal.modalRef, false);
	      }
	
	      if (this.hideSiblingNodes) {
	        (0, _manageAriaHidden.ariaHiddenSiblings)(container, modal.mountNode, modal.modalRef, true);
	      }
	
	      var containerIdx = findIndexOf(this.data, function (item) {
	        return item.container === container;
	      });
	
	      if (containerIdx !== -1) {
	        this.data[containerIdx].modals.push(modal);
	        return modalIdx;
	      }
	
	      var data = {
	        modals: [modal],
	        container: container,
	        overflowing: (0, _isOverflowing.default)(container),
	        prevPaddings: []
	      };
	      this.data.push(data);
	      return modalIdx;
	    }
	  }, {
	    key: "mount",
	    value: function mount(modal) {
	      var containerIdx = findIndexOf(this.data, function (item) {
	        return item.modals.indexOf(modal) !== -1;
	      });
	      var data = this.data[containerIdx];
	
	      if (!data.style && this.handleContainerOverflow) {
	        setContainerStyle(data);
	      }
	    }
	  }, {
	    key: "remove",
	    value: function remove(modal) {
	      var modalIdx = this.modals.indexOf(modal);
	
	      if (modalIdx === -1) {
	        return modalIdx;
	      }
	
	      var containerIdx = findIndexOf(this.data, function (item) {
	        return item.modals.indexOf(modal) !== -1;
	      });
	      var data = this.data[containerIdx];
	      data.modals.splice(data.modals.indexOf(modal), 1);
	      this.modals.splice(modalIdx, 1); // If that was the last modal in a container, clean up the container.
	
	      if (data.modals.length === 0) {
	        if (this.handleContainerOverflow) {
	          removeContainerStyle(data);
	        } // In case the modal wasn't in the DOM yet.
	
	
	        if (modal.modalRef) {
	          (0, _manageAriaHidden.ariaHidden)(modal.modalRef, true);
	        }
	
	        if (this.hideSiblingNodes) {
	          (0, _manageAriaHidden.ariaHiddenSiblings)(data.container, modal.mountNode, modal.modalRef, false);
	        }
	
	        this.data.splice(containerIdx, 1);
	      } else if (this.hideSiblingNodes) {
	        // Otherwise make sure the next top modal is visible to a screan reader.
	        var nextTop = data.modals[data.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set
	        // aria-hidden because the dom element doesn't exist either
	        // when modal was unmounted before modalRef gets null
	
	        if (nextTop.modalRef) {
	          (0, _manageAriaHidden.ariaHidden)(nextTop.modalRef, false);
	        }
	      }
	
	      return modalIdx;
	    }
	  }, {
	    key: "isTopModal",
	    value: function isTopModal(modal) {
	      return !!this.modals.length && this.modals[this.modals.length - 1] === modal;
	    }
	  }]);
	  return ModalManager;
	}();
	
	var _default = ModalManager;
	exports.default = _default;

/***/ }),
/* 361 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ariaHidden = ariaHidden;
	exports.ariaHiddenSiblings = ariaHiddenSiblings;
	var BLACKLIST = ['template', 'script', 'style'];
	
	function isHidable(node) {
	  return node.nodeType === 1 && BLACKLIST.indexOf(node.tagName.toLowerCase()) === -1;
	}
	
	function siblings(container, mount, currentNode, callback) {
	  var blacklist = [mount, currentNode];
	  [].forEach.call(container.children, function (node) {
	    if (blacklist.indexOf(node) === -1 && isHidable(node)) {
	      callback(node);
	    }
	  });
	}
	
	function ariaHidden(node, show) {
	  if (show) {
	    node.setAttribute('aria-hidden', 'true');
	  } else {
	    node.removeAttribute('aria-hidden');
	  }
	}
	
	function ariaHiddenSiblings(container, mountNode, currentNode, show) {
	  siblings(container, mountNode, currentNode, function (node) {
	    return ariaHidden(node, show);
	  });
	}

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _NativeSelectInput = _interopRequireDefault(__webpack_require__(363));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _formControlState = _interopRequireDefault(__webpack_require__(101));
	
	var _withFormControlContext = _interopRequireDefault(__webpack_require__(73));
	
	var _ArrowDropDown = _interopRequireDefault(__webpack_require__(379));
	
	var _Input = _interopRequireDefault(__webpack_require__(176));
	
	// @inheritedComponent Input
	var styles = function styles(theme) {
	  return {
	    /* Styles applied to the `Input` component `root` class. */
	    root: {
	      position: 'relative',
	      width: '100%'
	    },
	
	    /* Styles applied to the `Input` component `select` class. */
	    select: {
	      '-moz-appearance': 'none',
	      // Reset
	      '-webkit-appearance': 'none',
	      // Reset
	      // When interacting quickly, the text can end up selected.
	      // Native select can't be selected either.
	      userSelect: 'none',
	      paddingRight: 32,
	      borderRadius: 0,
	      // Reset
	      height: '1.1875em',
	      // Reset (19px), match the native input line-height
	      width: 'calc(100% - 32px)',
	      minWidth: 16,
	      // So it doesn't collapse.
	      cursor: 'pointer',
	      '&:focus': {
	        // Show that it's not an text input
	        background: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',
	        borderRadius: 0 // Reset Chrome style
	
	      },
	      // Remove IE 11 arrow
	      '&::-ms-expand': {
	        display: 'none'
	      },
	      '&$disabled': {
	        cursor: 'default'
	      },
	      '&[multiple]': {
	        height: 'auto'
	      }
	    },
	
	    /* Styles applied to the `Input` component if `variant="filled"`. */
	    filled: {
	      width: 'calc(100% - 44px)'
	    },
	
	    /* Styles applied to the `Input` component if `variant="outlined"`. */
	    outlined: {
	      width: 'calc(100% - 46px)',
	      borderRadius: theme.shape.borderRadius
	    },
	
	    /* Styles applied to the `Input` component `selectMenu` class. */
	    selectMenu: {
	      width: 'auto',
	      // Fix Safari textOverflow
	      height: 'auto',
	      // Reset
	      textOverflow: 'ellipsis',
	      whiteSpace: 'nowrap',
	      overflow: 'hidden',
	      minHeight: '1.1875em' // Reset (19px), match the native input line-height
	
	    },
	
	    /* Styles applied to the `Input` component `disabled` class. */
	    disabled: {},
	
	    /* Styles applied to the `Input` component `icon` class. */
	    icon: {
	      // We use a position absolute over a flexbox in order to forward the pointer events
	      // to the input.
	      position: 'absolute',
	      right: 0,
	      top: 'calc(50% - 12px)',
	      // Center vertically
	      color: theme.palette.action.active,
	      'pointer-events': 'none' // Don't block pointer events on the select under the icon.
	
	    }
	  };
	};
	/**
	 * An alternative to `<Select native />` with a much smaller bundle size footprint.
	 */
	
	
	exports.styles = styles;
	
	function NativeSelect(props) {
	  var children = props.children,
	      classes = props.classes,
	      IconComponent = props.IconComponent,
	      input = props.input,
	      inputProps = props.inputProps,
	      muiFormControl = props.muiFormControl,
	      variant = props.variant,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "IconComponent", "input", "inputProps", "muiFormControl", "variant"]);
	  var fcs = (0, _formControlState.default)({
	    props: props,
	    muiFormControl: muiFormControl,
	    states: ['variant']
	  });
	  return _react.default.cloneElement(input, (0, _extends2.default)({
	    // Most of the logic is implemented in `NativeSelectInput`.
	    // The `Select` component is a simple API wrapper to expose something better to play with.
	    inputComponent: _NativeSelectInput.default,
	    inputProps: (0, _extends2.default)({
	      children: children,
	      classes: classes,
	      IconComponent: IconComponent,
	      variant: fcs.variant,
	      type: undefined
	    }, inputProps, input ? input.props.inputProps : {})
	  }, other));
	}
	
	NativeSelect.propTypes =  false ? {
	  /**
	   * The option elements to populate the select with.
	   * Can be some `<option>` elements.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The icon that displays the arrow.
	   */
	  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * An `Input` element; does not have to be a material-ui specific `Input`.
	   */
	  input: _propTypes.default.element,
	
	  /**
	   * Attributes applied to the `select` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  muiFormControl: _propTypes.default.object,
	
	  /**
	   * Callback function fired when a menu item is selected.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * The input value.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool]))]),
	
	  /**
	   * The variant to use.
	   */
	  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])
	} : {};
	NativeSelect.defaultProps = {
	  IconComponent: _ArrowDropDown.default,
	  input: _react.default.createElement(_Input.default, null)
	};
	NativeSelect.muiName = 'Select';
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiNativeSelect'
	})((0, _withFormControlContext.default)(NativeSelect));
	
	exports.default = _default;

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	/**
	 * @ignore - internal component.
	 */
	function NativeSelectInput(props) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      disabled = props.disabled,
	      IconComponent = props.IconComponent,
	      inputRef = props.inputRef,
	      name = props.name,
	      onChange = props.onChange,
	      value = props.value,
	      variant = props.variant,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "disabled", "IconComponent", "inputRef", "name", "onChange", "value", "variant"]);
	  return _react.default.createElement("div", {
	    className: classes.root
	  }, _react.default.createElement("select", (0, _extends2.default)({
	    className: (0, _classnames.default)(classes.select, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.filled, variant === 'filled'), (0, _defineProperty2.default)(_classNames, classes.outlined, variant === 'outlined'), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), _classNames), className),
	    name: name,
	    disabled: disabled,
	    onChange: onChange,
	    value: value,
	    ref: inputRef
	  }, other), children), _react.default.createElement(IconComponent, {
	    className: classes.icon
	  }));
	}
	
	NativeSelectInput.propTypes =  false ? {
	  /**
	   * The option elements to populate the select with.
	   * Can be some `<option>` elements.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The CSS class name of the select element.
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * If `true`, the select will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * The icon that displays the arrow.
	   */
	  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Use that property to pass a ref callback to the native select element.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Name attribute of the `select` or hidden `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * Callback function fired when a menu item is selected.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * The input value.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool]))]),
	
	  /**
	   * The variant to use.
	   */
	  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])
	} : {};
	var _default = NativeSelectInput;
	exports.default = _default;

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _OutlinedInput.default;
	  }
	});
	
	var _OutlinedInput = _interopRequireDefault(__webpack_require__(679));

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Popover.default;
	  }
	});
	
	var _Popover = _interopRequireDefault(__webpack_require__(681));

/***/ }),
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var common = {
	  black: '#000',
	  white: '#fff'
	};
	var _default = common;
	exports.default = _default;

/***/ }),
/* 375 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var grey = {
	  50: '#fafafa',
	  100: '#f5f5f5',
	  200: '#eeeeee',
	  300: '#e0e0e0',
	  400: '#bdbdbd',
	  500: '#9e9e9e',
	  600: '#757575',
	  700: '#616161',
	  800: '#424242',
	  900: '#212121',
	  A100: '#d5d5d5',
	  A200: '#aaaaaa',
	  A400: '#303030',
	  A700: '#616161'
	};
	var _default = grey;
	exports.default = _default;

/***/ }),
/* 376 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var indigo = {
	  50: '#e8eaf6',
	  100: '#c5cae9',
	  200: '#9fa8da',
	  300: '#7986cb',
	  400: '#5c6bc0',
	  500: '#3f51b5',
	  600: '#3949ab',
	  700: '#303f9f',
	  800: '#283593',
	  900: '#1a237e',
	  A100: '#8c9eff',
	  A200: '#536dfe',
	  A400: '#3d5afe',
	  A700: '#304ffe'
	};
	var _default = indigo;
	exports.default = _default;

/***/ }),
/* 377 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var pink = {
	  50: '#fce4ec',
	  100: '#f8bbd0',
	  200: '#f48fb1',
	  300: '#f06292',
	  400: '#ec407a',
	  500: '#e91e63',
	  600: '#d81b60',
	  700: '#c2185b',
	  800: '#ad1457',
	  900: '#880e4f',
	  A100: '#ff80ab',
	  A200: '#ff4081',
	  A400: '#f50057',
	  A700: '#c51162'
	};
	var _default = pink;
	exports.default = _default;

/***/ }),
/* 378 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var red = {
	  50: '#ffebee',
	  100: '#ffcdd2',
	  200: '#ef9a9a',
	  300: '#e57373',
	  400: '#ef5350',
	  500: '#f44336',
	  600: '#e53935',
	  700: '#d32f2f',
	  800: '#c62828',
	  900: '#b71c1c',
	  A100: '#ff8a80',
	  A200: '#ff5252',
	  A400: '#ff1744',
	  A700: '#d50000'
	};
	var _default = red;
	exports.default = _default;

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _pure = _interopRequireDefault(__webpack_require__(38));
	
	var _SvgIcon = _interopRequireDefault(__webpack_require__(30));
	
	var _ref = _react.default.createElement("path", {
	  d: "M7 10l5 5 5-5z"
	});
	
	/**
	 * @ignore - internal component.
	 */
	var ArrowDropDown = function ArrowDropDown(props) {
	  return _react.default.createElement(_SvgIcon.default, props, _ref);
	};
	
	ArrowDropDown = (0, _pure.default)(ArrowDropDown);
	ArrowDropDown.muiName = 'SvgIcon';
	var _default = ArrowDropDown;
	exports.default = _default;

/***/ }),
/* 380 */,
/* 381 */,
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createGenerateClassName;
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g;
	
	function safePrefix(classNamePrefix) {
	  var prefix = String(classNamePrefix);
	   false ? (0, _warning.default)(prefix.length < 256, "Material-UI: the class name prefix is too long: ".concat(prefix, ".")) : void 0; // Sanitize the string as will be used to prefix the generated class name.
	
	  return prefix.replace(escapeRegex, '-');
	} // Returns a function which generates unique class names based on counters.
	// When new generator function is created, rule counter is reset.
	// We need to reset the rule counter for SSR for each request.
	//
	// It's inspired by
	// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js
	
	
	function createGenerateClassName() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,
	      dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,
	      _options$productionPr = options.productionPrefix,
	      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,
	      _options$seed = options.seed,
	      seed = _options$seed === void 0 ? '' : _options$seed;
	  var ruleCounter = 0;
	  return function (rule, styleSheet) {
	    ruleCounter += 1;
	     false ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0;
	
	    if (dangerouslyUseGlobalCSS && styleSheet && styleSheet.options.name) {
	      return "".concat(safePrefix(styleSheet.options.name), "-").concat(rule.key);
	    }
	
	    if (true) {
	      return "".concat(productionPrefix).concat(seed).concat(ruleCounter);
	    } // Help with debuggability.
	
	
	    if (styleSheet && styleSheet.options.classNamePrefix) {
	      return "".concat(safePrefix(styleSheet.options.classNamePrefix), "-").concat(rule.key, "-").concat(seed).concat(ruleCounter);
	    }
	
	    return "".concat(rule.key, "-").concat(seed).concat(ruleCounter);
	  };
	}

/***/ }),
/* 383 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	/* eslint-disable no-restricted-syntax */
	function getThemeProps(params) {
	  var theme = params.theme,
	      name = params.name,
	      props = params.props;
	
	  if (!theme.props || !name || !theme.props[name]) {
	    return props;
	  } // Resolve default props, code borrow from React source.
	  // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221
	
	
	  var defaultProps = theme.props[name];
	  var propName;
	
	  for (propName in defaultProps) {
	    if (props[propName] === undefined) {
	      props[propName] = defaultProps[propName];
	    }
	  }
	
	  return props;
	}
	
	var _default = getThemeProps;
	exports.default = _default;

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _jssGlobal = _interopRequireDefault(__webpack_require__(456));
	
	var _jssNested = _interopRequireDefault(__webpack_require__(457));
	
	var _jssCamelCase = _interopRequireDefault(__webpack_require__(454));
	
	var _jssDefaultUnit = _interopRequireDefault(__webpack_require__(455));
	
	var _jssVendorPrefixer = _interopRequireDefault(__webpack_require__(459));
	
	var _jssPropsSort = _interopRequireDefault(__webpack_require__(458));
	
	// Subset of jss-preset-default with only the plugins the Material-UI components are using.
	function jssPreset() {
	  return {
	    plugins: [(0, _jssGlobal.default)(), (0, _jssNested.default)(), (0, _jssCamelCase.default)(), (0, _jssDefaultUnit.default)(), // Disable the vendor prefixer server-side, it does nothing.
	    // This way, we can get a performance boost.
	    // In the documentation, we are using `autoprefixer` to solve this problem.
	    typeof window === 'undefined' ? null : (0, _jssVendorPrefixer.default)(), (0, _jssPropsSort.default)()]
	  };
	}
	
	var _default = jssPreset;
	exports.default = _default;

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _utils = __webpack_require__(40);
	
	function mergeClasses() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var baseClasses = options.baseClasses,
	      newClasses = options.newClasses,
	      Component = options.Component;
	
	  if (!newClasses) {
	    return baseClasses;
	  }
	
	  var nextClasses = (0, _extends2.default)({}, baseClasses);
	  Object.keys(newClasses).forEach(function (key) {
	    if (Component) {
	       false ? (0, _warning.default)(baseClasses[key] || !newClasses[key], ["Material-UI: the key `".concat(key, "` ") + "provided to the classes property is not implemented in ".concat((0, _utils.getDisplayName)(Component), "."), "You can only override one of the following: ".concat(Object.keys(baseClasses).join(','), ".")].join('\n')) : void 0;
	       false ? (0, _warning.default)(!newClasses[key] || typeof newClasses[key] === 'string', ["Material-UI: the key `".concat(key, "` ") + "provided to the classes property is not valid for ".concat((0, _utils.getDisplayName)(Component), "."), "You need to provide a non empty string instead of: ".concat(newClasses[key], ".")].join('\n')) : void 0;
	    }
	
	    if (newClasses[key]) {
	      nextClasses[key] = "".concat(baseClasses[key], " ").concat(newClasses[key]);
	    }
	  });
	  return nextClasses;
	}
	
	var _default = mergeClasses;
	exports.default = _default;

/***/ }),
/* 386 */,
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var AlgoliaSearchHelper = __webpack_require__(823);
	
	var SearchParameters = __webpack_require__(250);
	var SearchResults = __webpack_require__(388);
	
	/**
	 * The algoliasearchHelper module is the function that will let its
	 * contains everything needed to use the Algoliasearch
	 * Helper. It is a also a function that instanciate the helper.
	 * To use the helper, you also need the Algolia JS client v3.
	 * @example
	 * //using the UMD build
	 * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');
	 * var helper = algoliasearchHelper(client, 'bestbuy', {
	 *   facets: ['shipping'],
	 *   disjunctiveFacets: ['category']
	 * });
	 * helper.on('result', function(result) {
	 *   console.log(result);
	 * });
	 * helper
	 *   .toggleFacetRefinement('category', 'Movies & TV Shows')
	 *   .toggleFacetRefinement('shipping', 'Free shipping')
	 *   .search();
	 * @example
	 * // The helper is an event emitter using the node API
	 * helper.on('result', updateTheResults);
	 * helper.once('result', updateTheResults);
	 * helper.removeListener('result', updateTheResults);
	 * helper.removeAllListeners('result');
	 * @module algoliasearchHelper
	 * @param  {AlgoliaSearch} client an AlgoliaSearch client
	 * @param  {string} index the name of the index to query
	 * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.
	 * @return {AlgoliaSearchHelper}
	 */
	function algoliasearchHelper(client, index, opts) {
	  return new AlgoliaSearchHelper(client, index, opts);
	}
	
	/**
	 * The version currently used
	 * @member module:algoliasearchHelper.version
	 * @type {number}
	 */
	algoliasearchHelper.version = __webpack_require__(392);
	
	/**
	 * Constructor for the Helper.
	 * @member module:algoliasearchHelper.AlgoliaSearchHelper
	 * @type {AlgoliaSearchHelper}
	 */
	algoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;
	
	/**
	 * Constructor for the object containing all the parameters of the search.
	 * @member module:algoliasearchHelper.SearchParameters
	 * @type {SearchParameters}
	 */
	algoliasearchHelper.SearchParameters = SearchParameters;
	
	/**
	 * Constructor for the object containing the results of the search.
	 * @member module:algoliasearchHelper.SearchResults
	 * @type {SearchResults}
	 */
	algoliasearchHelper.SearchResults = SearchResults;
	
	/**
	 * URL tools to generate query string and parse them from/into
	 * SearchParameters
	 * @member module:algoliasearchHelper.url
	 * @type {object} {@link url}
	 *
	 */
	algoliasearchHelper.url = __webpack_require__(391);
	
	module.exports = algoliasearchHelper;


/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var forEach = __webpack_require__(124);
	var compact = __webpack_require__(1487);
	var indexOf = __webpack_require__(210);
	var findIndex = __webpack_require__(511);
	var get = __webpack_require__(320);
	
	var sumBy = __webpack_require__(1510);
	var find = __webpack_require__(71);
	var includes = __webpack_require__(1492);
	var map = __webpack_require__(81);
	var orderBy = __webpack_require__(325);
	
	var defaults = __webpack_require__(318);
	var merge = __webpack_require__(324);
	
	var isFunction = __webpack_require__(125);
	
	var partial = __webpack_require__(1503);
	var partialRight = __webpack_require__(1504);
	
	var formatSort = __webpack_require__(389);
	
	var generateHierarchicalTree = __webpack_require__(822);
	
	/**
	 * @typedef SearchResults.Facet
	 * @type {object}
	 * @property {string} name name of the attribute in the record
	 * @property {object} data the faceting data: value, number of entries
	 * @property {object} stats undefined unless facet_stats is retrieved from algolia
	 */
	
	/**
	 * @typedef SearchResults.HierarchicalFacet
	 * @type {object}
	 * @property {string} name name of the current value given the hierarchical level, trimmed.
	 * If root node, you get the facet name
	 * @property {number} count number of objects matching this hierarchical value
	 * @property {string} path the current hierarchical value full path
	 * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise
	 * @property {HierarchicalFacet[]} data sub values for the current level
	 */
	
	/**
	 * @typedef SearchResults.FacetValue
	 * @type {object}
	 * @property {string} name the facet value itself
	 * @property {number} count times this facet appears in the results
	 * @property {boolean} isRefined is the facet currently selected
	 * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)
	 */
	
	/**
	 * @typedef Refinement
	 * @type {object}
	 * @property {string} type the type of filter used:
	 * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`
	 * @property {string} attributeName name of the attribute used for filtering
	 * @property {string} name the value of the filter
	 * @property {number} numericValue the value as a number. Only for numeric filters.
	 * @property {string} operator the operator used. Only for numeric filters.
	 * @property {number} count the number of computed hits for this filter. Only on facets.
	 * @property {boolean} exhaustive if the count is exhaustive
	 */
	
	function getIndices(obj) {
	  var indices = {};
	
	  forEach(obj, function(val, idx) { indices[val] = idx; });
	
	  return indices;
	}
	
	function assignFacetStats(dest, facetStats, key) {
	  if (facetStats && facetStats[key]) {
	    dest.stats = facetStats[key];
	  }
	}
	
	function findMatchingHierarchicalFacetFromAttributeName(hierarchicalFacets, hierarchicalAttributeName) {
	  return find(
	    hierarchicalFacets,
	    function facetKeyMatchesAttribute(hierarchicalFacet) {
	      return includes(hierarchicalFacet.attributes, hierarchicalAttributeName);
	    }
	  );
	}
	
	/*eslint-disable */
	/**
	 * Constructor for SearchResults
	 * @class
	 * @classdesc SearchResults contains the results of a query to Algolia using the
	 * {@link AlgoliaSearchHelper}.
	 * @param {SearchParameters} state state that led to the response
	 * @param {array.<object>} results the results from algolia client
	 * @example <caption>SearchResults of the first query in
	 * <a href="http://demos.algolia.com/instant-search-demo">the instant search demo</a></caption>
	{
	   "hitsPerPage": 10,
	   "processingTimeMS": 2,
	   "facets": [
	      {
	         "name": "type",
	         "data": {
	            "HardGood": 6627,
	            "BlackTie": 550,
	            "Music": 665,
	            "Software": 131,
	            "Game": 456,
	            "Movie": 1571
	         },
	         "exhaustive": false
	      },
	      {
	         "exhaustive": false,
	         "data": {
	            "Free shipping": 5507
	         },
	         "name": "shipping"
	      }
	  ],
	   "hits": [
	      {
	         "thumbnailImage": "http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif",
	         "_highlightResult": {
	            "shortDescription": {
	               "matchLevel": "none",
	               "value": "Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection",
	               "matchedWords": []
	            },
	            "category": {
	               "matchLevel": "none",
	               "value": "Computer Security Software",
	               "matchedWords": []
	            },
	            "manufacturer": {
	               "matchedWords": [],
	               "value": "Webroot",
	               "matchLevel": "none"
	            },
	            "name": {
	               "value": "Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows",
	               "matchedWords": [],
	               "matchLevel": "none"
	            }
	         },
	         "image": "http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg",
	         "shipping": "Free shipping",
	         "bestSellingRank": 4,
	         "shortDescription": "Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection",
	         "url": "http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ",
	         "name": "Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows",
	         "category": "Computer Security Software",
	         "salePrice_range": "1 - 50",
	         "objectID": "1688832",
	         "type": "Software",
	         "customerReviewCount": 5980,
	         "salePrice": 49.99,
	         "manufacturer": "Webroot"
	      },
	      ....
	  ],
	   "nbHits": 10000,
	   "disjunctiveFacets": [
	      {
	         "exhaustive": false,
	         "data": {
	            "5": 183,
	            "12": 112,
	            "7": 149,
	            ...
	         },
	         "name": "customerReviewCount",
	         "stats": {
	            "max": 7461,
	            "avg": 157.939,
	            "min": 1
	         }
	      },
	      {
	         "data": {
	            "Printer Ink": 142,
	            "Wireless Speakers": 60,
	            "Point & Shoot Cameras": 48,
	            ...
	         },
	         "name": "category",
	         "exhaustive": false
	      },
	      {
	         "exhaustive": false,
	         "data": {
	            "> 5000": 2,
	            "1 - 50": 6524,
	            "501 - 2000": 566,
	            "201 - 500": 1501,
	            "101 - 200": 1360,
	            "2001 - 5000": 47
	         },
	         "name": "salePrice_range"
	      },
	      {
	         "data": {
	            "Dynex™": 202,
	            "Insignia™": 230,
	            "PNY": 72,
	            ...
	         },
	         "name": "manufacturer",
	         "exhaustive": false
	      }
	  ],
	   "query": "",
	   "nbPages": 100,
	   "page": 0,
	   "index": "bestbuy"
	}
	 **/
	/*eslint-enable */
	function SearchResults(state, results) {
	  var mainSubResponse = results[0];
	
	  this._rawResults = results;
	
	  /**
	   * query used to generate the results
	   * @member {string}
	   */
	  this.query = mainSubResponse.query;
	  /**
	   * The query as parsed by the engine given all the rules.
	   * @member {string}
	   */
	  this.parsedQuery = mainSubResponse.parsedQuery;
	  /**
	   * all the records that match the search parameters. Each record is
	   * augmented with a new attribute `_highlightResult`
	   * which is an object keyed by attribute and with the following properties:
	   *  - `value` : the value of the facet highlighted (html)
	   *  - `matchLevel`: full, partial or none depending on how the query terms match
	   * @member {object[]}
	   */
	  this.hits = mainSubResponse.hits;
	  /**
	   * index where the results come from
	   * @member {string}
	   */
	  this.index = mainSubResponse.index;
	  /**
	   * number of hits per page requested
	   * @member {number}
	   */
	  this.hitsPerPage = mainSubResponse.hitsPerPage;
	  /**
	   * total number of hits of this query on the index
	   * @member {number}
	   */
	  this.nbHits = mainSubResponse.nbHits;
	  /**
	   * total number of pages with respect to the number of hits per page and the total number of hits
	   * @member {number}
	   */
	  this.nbPages = mainSubResponse.nbPages;
	  /**
	   * current page
	   * @member {number}
	   */
	  this.page = mainSubResponse.page;
	  /**
	   * sum of the processing time of all the queries
	   * @member {number}
	   */
	  this.processingTimeMS = sumBy(results, 'processingTimeMS');
	  /**
	   * The position if the position was guessed by IP.
	   * @member {string}
	   * @example "48.8637,2.3615",
	   */
	  this.aroundLatLng = mainSubResponse.aroundLatLng;
	  /**
	   * The radius computed by Algolia.
	   * @member {string}
	   * @example "126792922",
	   */
	  this.automaticRadius = mainSubResponse.automaticRadius;
	  /**
	   * String identifying the server used to serve this request.
	   * @member {string}
	   * @example "c7-use-2.algolia.net",
	   */
	  this.serverUsed = mainSubResponse.serverUsed;
	  /**
	   * Boolean that indicates if the computation of the counts did time out.
	   * @deprecated
	   * @member {boolean}
	   */
	  this.timeoutCounts = mainSubResponse.timeoutCounts;
	  /**
	   * Boolean that indicates if the computation of the hits did time out.
	   * @deprecated
	   * @member {boolean}
	   */
	  this.timeoutHits = mainSubResponse.timeoutHits;
	
	  /**
	   * True if the counts of the facets is exhaustive
	   * @member {boolean}
	   */
	  this.exhaustiveFacetsCount = mainSubResponse.exhaustiveFacetsCount;
	
	  /**
	   * True if the number of hits is exhaustive
	   * @member {boolean}
	   */
	  this.exhaustiveNbHits = mainSubResponse.exhaustiveNbHits;
	
	
	  /**
	   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).
	   * @member {object[]}
	   */
	  this.userData = mainSubResponse.userData;
	
	  /**
	   * queryID is the unique identifier of the query used to generate the current search results.
	   * This value is only available if the `clickAnalytics` search parameter is set to `true`.
	   * @member {string}
	   */
	  this.queryID = mainSubResponse.queryID;
	
	  /**
	   * disjunctive facets results
	   * @member {SearchResults.Facet[]}
	   */
	  this.disjunctiveFacets = [];
	  /**
	   * disjunctive facets results
	   * @member {SearchResults.HierarchicalFacet[]}
	   */
	  this.hierarchicalFacets = map(state.hierarchicalFacets, function initFutureTree() {
	    return [];
	  });
	  /**
	   * other facets results
	   * @member {SearchResults.Facet[]}
	   */
	  this.facets = [];
	
	  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();
	
	  var facetsIndices = getIndices(state.facets);
	  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);
	  var nextDisjunctiveResult = 1;
	
	  var self = this;
	  // Since we send request only for disjunctive facets that have been refined,
	  // we get the facets informations from the first, general, response.
	  forEach(mainSubResponse.facets, function(facetValueObject, facetKey) {
	    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(
	      state.hierarchicalFacets,
	      facetKey
	    );
	
	    if (hierarchicalFacet) {
	      // Place the hierarchicalFacet data at the correct index depending on
	      // the attributes order that was defined at the helper initialization
	      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);
	      var idxAttributeName = findIndex(state.hierarchicalFacets, {name: hierarchicalFacet.name});
	      self.hierarchicalFacets[idxAttributeName][facetIndex] = {
	        attribute: facetKey,
	        data: facetValueObject,
	        exhaustive: mainSubResponse.exhaustiveFacetsCount
	      };
	    } else {
	      var isFacetDisjunctive = indexOf(state.disjunctiveFacets, facetKey) !== -1;
	      var isFacetConjunctive = indexOf(state.facets, facetKey) !== -1;
	      var position;
	
	      if (isFacetDisjunctive) {
	        position = disjunctiveFacetsIndices[facetKey];
	        self.disjunctiveFacets[position] = {
	          name: facetKey,
	          data: facetValueObject,
	          exhaustive: mainSubResponse.exhaustiveFacetsCount
	        };
	        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);
	      }
	      if (isFacetConjunctive) {
	        position = facetsIndices[facetKey];
	        self.facets[position] = {
	          name: facetKey,
	          data: facetValueObject,
	          exhaustive: mainSubResponse.exhaustiveFacetsCount
	        };
	        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);
	      }
	    }
	  });
	
	  // Make sure we do not keep holes within the hierarchical facets
	  this.hierarchicalFacets = compact(this.hierarchicalFacets);
	
	  // aggregate the refined disjunctive facets
	  forEach(disjunctiveFacets, function(disjunctiveFacet) {
	    var result = results[nextDisjunctiveResult];
	    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);
	
	    // There should be only item in facets.
	    forEach(result.facets, function(facetResults, dfacet) {
	      var position;
	
	      if (hierarchicalFacet) {
	        position = findIndex(state.hierarchicalFacets, {name: hierarchicalFacet.name});
	        var attributeIndex = findIndex(self.hierarchicalFacets[position], {attribute: dfacet});
	
	        // previous refinements and no results so not able to find it
	        if (attributeIndex === -1) {
	          return;
	        }
	
	        self.hierarchicalFacets[position][attributeIndex].data = merge(
	          {},
	          self.hierarchicalFacets[position][attributeIndex].data,
	          facetResults
	        );
	      } else {
	        position = disjunctiveFacetsIndices[dfacet];
	
	        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};
	
	        self.disjunctiveFacets[position] = {
	          name: dfacet,
	          data: defaults({}, facetResults, dataFromMainRequest),
	          exhaustive: result.exhaustiveFacetsCount
	        };
	        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);
	
	        if (state.disjunctiveFacetsRefinements[dfacet]) {
	          forEach(state.disjunctiveFacetsRefinements[dfacet], function(refinementValue) {
	            // add the disjunctive refinements if it is no more retrieved
	            if (!self.disjunctiveFacets[position].data[refinementValue] &&
	              indexOf(state.disjunctiveFacetsRefinements[dfacet], refinementValue) > -1) {
	              self.disjunctiveFacets[position].data[refinementValue] = 0;
	            }
	          });
	        }
	      }
	    });
	    nextDisjunctiveResult++;
	  });
	
	  // if we have some root level values for hierarchical facets, merge them
	  forEach(state.getRefinedHierarchicalFacets(), function(refinedFacet) {
	    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);
	    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	
	    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);
	    // if we are already at a root refinement (or no refinement at all), there is no
	    // root level values request
	    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {
	      return;
	    }
	
	    var result = results[nextDisjunctiveResult];
	
	    forEach(result.facets, function(facetResults, dfacet) {
	      var position = findIndex(state.hierarchicalFacets, {name: hierarchicalFacet.name});
	      var attributeIndex = findIndex(self.hierarchicalFacets[position], {attribute: dfacet});
	
	      // previous refinements and no results so not able to find it
	      if (attributeIndex === -1) {
	        return;
	      }
	
	      // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),
	      // then the disjunctive values will be `beers` (count: 100),
	      // but we do not want to display
	      //   | beers (100)
	      //     > IPA (5)
	      // We want
	      //   | beers (5)
	      //     > IPA (5)
	      var defaultData = {};
	
	      if (currentRefinement.length > 0) {
	        var root = currentRefinement[0].split(separator)[0];
	        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];
	      }
	
	      self.hierarchicalFacets[position][attributeIndex].data = defaults(
	        defaultData,
	        facetResults,
	        self.hierarchicalFacets[position][attributeIndex].data
	      );
	    });
	
	    nextDisjunctiveResult++;
	  });
	
	  // add the excludes
	  forEach(state.facetsExcludes, function(excludes, facetName) {
	    var position = facetsIndices[facetName];
	
	    self.facets[position] = {
	      name: facetName,
	      data: mainSubResponse.facets[facetName],
	      exhaustive: mainSubResponse.exhaustiveFacetsCount
	    };
	    forEach(excludes, function(facetValue) {
	      self.facets[position] = self.facets[position] || {name: facetName};
	      self.facets[position].data = self.facets[position].data || {};
	      self.facets[position].data[facetValue] = 0;
	    });
	  });
	
	  this.hierarchicalFacets = map(this.hierarchicalFacets, generateHierarchicalTree(state));
	
	  this.facets = compact(this.facets);
	  this.disjunctiveFacets = compact(this.disjunctiveFacets);
	
	  this._state = state;
	}
	
	/**
	 * Get a facet object with its name
	 * @deprecated
	 * @param {string} name name of the faceted attribute
	 * @return {SearchResults.Facet} the facet object
	 */
	SearchResults.prototype.getFacetByName = function(name) {
	  var predicate = {name: name};
	
	  return find(this.facets, predicate) ||
	    find(this.disjunctiveFacets, predicate) ||
	    find(this.hierarchicalFacets, predicate);
	};
	
	/**
	 * Get the facet values of a specified attribute from a SearchResults object.
	 * @private
	 * @param {SearchResults} results the search results to search in
	 * @param {string} attribute name of the faceted attribute to search for
	 * @return {array|object} facet values. For the hierarchical facets it is an object.
	 */
	function extractNormalizedFacetValues(results, attribute) {
	  var predicate = {name: attribute};
	  if (results._state.isConjunctiveFacet(attribute)) {
	    var facet = find(results.facets, predicate);
	    if (!facet) return [];
	
	    return map(facet.data, function(v, k) {
	      return {
	        name: k,
	        count: v,
	        isRefined: results._state.isFacetRefined(attribute, k),
	        isExcluded: results._state.isExcludeRefined(attribute, k)
	      };
	    });
	  } else if (results._state.isDisjunctiveFacet(attribute)) {
	    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);
	    if (!disjunctiveFacet) return [];
	
	    return map(disjunctiveFacet.data, function(v, k) {
	      return {
	        name: k,
	        count: v,
	        isRefined: results._state.isDisjunctiveFacetRefined(attribute, k)
	      };
	    });
	  } else if (results._state.isHierarchicalFacet(attribute)) {
	    return find(results.hierarchicalFacets, predicate);
	  }
	}
	
	/**
	 * Sort nodes of a hierarchical facet results
	 * @private
	 * @param {HierarchicalFacet} node node to upon which we want to apply the sort
	 */
	function recSort(sortFn, node) {
	  if (!node.data || node.data.length === 0) {
	    return node;
	  }
	  var children = map(node.data, partial(recSort, sortFn));
	  var sortedChildren = sortFn(children);
	  var newNode = merge({}, node, {data: sortedChildren});
	  return newNode;
	}
	
	SearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];
	
	function vanillaSortFn(order, data) {
	  return data.sort(order);
	}
	
	/**
	 * Get a the list of values for a given facet attribute. Those values are sorted
	 * refinement first, descending count (bigger value on top), and name ascending
	 * (alphabetical order). The sort formula can overridden using either string based
	 * predicates or a function.
	 *
	 * This method will return all the values returned by the Algolia engine plus all
	 * the values already refined. This means that it can happen that the
	 * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)
	 * might not be respected if you have facet values that are already refined.
	 * @param {string} attribute attribute name
	 * @param {object} opts configuration options.
	 * @param {Array.<string> | function} opts.sortBy
	 * When using strings, it consists of
	 * the name of the [FacetValue](#SearchResults.FacetValue) or the
	 * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the
	 * order (`asc` or `desc`). For example to order the value by count, the
	 * argument would be `['count:asc']`.
	 *
	 * If only the attribute name is specified, the ordering defaults to the one
	 * specified in the default value for this attribute.
	 *
	 * When not specified, the order is
	 * ascending.  This parameter can also be a function which takes two facet
	 * values and should return a number, 0 if equal, 1 if the first argument is
	 * bigger or -1 otherwise.
	 *
	 * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`
	 * @return {FacetValue[]|HierarchicalFacet} depending on the type of facet of
	 * the attribute requested (hierarchical, disjunctive or conjunctive)
	 * @example
	 * helper.on('results', function(content){
	 *   //get values ordered only by name ascending using the string predicate
	 *   content.getFacetValues('city', {sortBy: ['name:asc']});
	 *   //get values  ordered only by count ascending using a function
	 *   content.getFacetValues('city', {
	 *     // this is equivalent to ['count:asc']
	 *     sortBy: function(a, b) {
	 *       if (a.count === b.count) return 0;
	 *       if (a.count > b.count)   return 1;
	 *       if (b.count > a.count)   return -1;
	 *     }
	 *   });
	 * });
	 */
	SearchResults.prototype.getFacetValues = function(attribute, opts) {
	  var facetValues = extractNormalizedFacetValues(this, attribute);
	  if (!facetValues) throw new Error(attribute + ' is not a retrieved facet.');
	
	  var options = defaults({}, opts, {sortBy: SearchResults.DEFAULT_SORT});
	
	  if (Array.isArray(options.sortBy)) {
	    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);
	    if (Array.isArray(facetValues)) {
	      return orderBy(facetValues, order[0], order[1]);
	    }
	    // If facetValues is not an array, it's an object thus a hierarchical facet object
	    return recSort(partialRight(orderBy, order[0], order[1]), facetValues);
	  } else if (isFunction(options.sortBy)) {
	    if (Array.isArray(facetValues)) {
	      return facetValues.sort(options.sortBy);
	    }
	    // If facetValues is not an array, it's an object thus a hierarchical facet object
	    return recSort(partial(vanillaSortFn, options.sortBy), facetValues);
	  }
	  throw new Error(
	    'options.sortBy is optional but if defined it must be ' +
	    'either an array of string (predicates) or a sorting function'
	  );
	};
	
	/**
	 * Returns the facet stats if attribute is defined and the facet contains some.
	 * Otherwise returns undefined.
	 * @param {string} attribute name of the faceted attribute
	 * @return {object} The stats of the facet
	 */
	SearchResults.prototype.getFacetStats = function(attribute) {
	  if (this._state.isConjunctiveFacet(attribute)) {
	    return getFacetStatsIfAvailable(this.facets, attribute);
	  } else if (this._state.isDisjunctiveFacet(attribute)) {
	    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);
	  }
	
	  throw new Error(attribute + ' is not present in `facets` or `disjunctiveFacets`');
	};
	
	function getFacetStatsIfAvailable(facetList, facetName) {
	  var data = find(facetList, {name: facetName});
	  return data && data.stats;
	}
	
	/**
	 * Returns all refinements for all filters + tags. It also provides
	 * additional information: count and exhausistivity for each filter.
	 *
	 * See the [refinement type](#Refinement) for an exhaustive view of the available
	 * data.
	 *
	 * @return {Array.<Refinement>} all the refinements
	 */
	SearchResults.prototype.getRefinements = function() {
	  var state = this._state;
	  var results = this;
	  var res = [];
	
	  forEach(state.facetsRefinements, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));
	    });
	  });
	
	  forEach(state.facetsExcludes, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));
	    });
	  });
	
	  forEach(state.disjunctiveFacetsRefinements, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));
	    });
	  });
	
	  forEach(state.hierarchicalFacetsRefinements, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));
	    });
	  });
	
	  forEach(state.numericRefinements, function(operators, attributeName) {
	    forEach(operators, function(values, operator) {
	      forEach(values, function(value) {
	        res.push({
	          type: 'numeric',
	          attributeName: attributeName,
	          name: value,
	          numericValue: value,
	          operator: operator
	        });
	      });
	    });
	  });
	
	  forEach(state.tagRefinements, function(name) {
	    res.push({type: 'tag', attributeName: '_tags', name: name});
	  });
	
	  return res;
	};
	
	function getRefinement(state, type, attributeName, name, resultsFacets) {
	  var facet = find(resultsFacets, {name: attributeName});
	  var count = get(facet, 'data[' + name + ']');
	  var exhaustive = get(facet, 'exhaustive');
	  return {
	    type: type,
	    attributeName: attributeName,
	    name: name,
	    count: count || 0,
	    exhaustive: exhaustive || false
	  };
	}
	
	function getHierarchicalRefinement(state, attributeName, name, resultsFacets) {
	  var facet = find(resultsFacets, {name: attributeName});
	  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);
	  var splitted = name.split(facetDeclaration.separator);
	  var configuredName = splitted[splitted.length - 1];
	  for (var i = 0; facet !== undefined && i < splitted.length; ++i) {
	    facet = find(facet.data, {name: splitted[i]});
	  }
	  var count = get(facet, 'count');
	  var exhaustive = get(facet, 'exhaustive');
	  return {
	    type: 'hierarchical',
	    attributeName: attributeName,
	    name: configuredName,
	    count: count || 0,
	    exhaustive: exhaustive || false
	  };
	}
	
	module.exports = SearchResults;


/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var reduce = __webpack_require__(166);
	var find = __webpack_require__(71);
	var startsWith = __webpack_require__(1508);
	
	/**
	 * Transform sort format from user friendly notation to lodash format
	 * @param {string[]} sortBy array of predicate of the form "attribute:order"
	 * @return {array.<string[]>} array containing 2 elements : attributes, orders
	 */
	module.exports = function formatSort(sortBy, defaults) {
	  return reduce(sortBy, function preparePredicate(out, sortInstruction) {
	    var sortInstructions = sortInstruction.split(':');
	    if (defaults && sortInstructions.length === 1) {
	      var similarDefault = find(defaults, function(predicate) {
	        return startsWith(predicate, sortInstruction[0]);
	      });
	      if (similarDefault) {
	        sortInstructions = similarDefault.split(':');
	      }
	    }
	    out[0].push(sortInstructions[0]);
	    out[1].push(sortInstructions[1]);
	    return out;
	  }, [[], []]);
	};


/***/ }),
/* 390 */
/***/ (function(module, exports) {

	'use strict';
	
	function inherits(ctor, superCtor) {
	  ctor.prototype = Object.create(superCtor.prototype, {
	    constructor: {
	      value: ctor,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	}
	
	module.exports = inherits;


/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Module containing the functions to serialize and deserialize
	 * {SearchParameters} in the query string format
	 * @module algoliasearchHelper.url
	 */
	
	var shortener = __webpack_require__(821);
	var SearchParameters = __webpack_require__(250);
	
	var qs = __webpack_require__(1545);
	
	var bind = __webpack_require__(1486);
	var forEach = __webpack_require__(124);
	var pick = __webpack_require__(212);
	var map = __webpack_require__(81);
	var mapKeys = __webpack_require__(1499);
	var mapValues = __webpack_require__(1500);
	var isString = __webpack_require__(164);
	var isPlainObject = __webpack_require__(163);
	var isEmpty = __webpack_require__(80);
	var invert = __webpack_require__(514);
	
	var encode = __webpack_require__(330).encode;
	
	function recursiveEncode(input) {
	  if (isPlainObject(input)) {
	    return mapValues(input, recursiveEncode);
	  }
	  if (Array.isArray(input)) {
	    return map(input, recursiveEncode);
	  }
	  if (isString(input)) {
	    return encode(input);
	  }
	  return input;
	}
	
	var refinementsParameters = ['dFR', 'fR', 'nR', 'hFR', 'tR'];
	var stateKeys = shortener.ENCODED_PARAMETERS;
	function sortQueryStringValues(prefixRegexp, invertedMapping, a, b) {
	  if (prefixRegexp !== null) {
	    a = a.replace(prefixRegexp, '');
	    b = b.replace(prefixRegexp, '');
	  }
	
	  a = invertedMapping[a] || a;
	  b = invertedMapping[b] || b;
	
	  if (stateKeys.indexOf(a) !== -1 || stateKeys.indexOf(b) !== -1) {
	    if (a === 'q') return -1;
	    if (b === 'q') return 1;
	
	    var isARefinements = refinementsParameters.indexOf(a) !== -1;
	    var isBRefinements = refinementsParameters.indexOf(b) !== -1;
	    if (isARefinements && !isBRefinements) {
	      return 1;
	    } else if (isBRefinements && !isARefinements) {
	      return -1;
	    }
	  }
	
	  return a.localeCompare(b);
	}
	
	/**
	 * Read a query string and return an object containing the state
	 * @param {string} queryString the query string that will be decoded
	 * @param {object} [options] accepted options :
	 *   - prefix : the prefix used for the saved attributes, you have to provide the
	 *     same that was used for serialization
	 *   - mapping : map short attributes to another value e.g. {q: 'query'}
	 * @return {object} partial search parameters object (same properties than in the
	 * SearchParameters but not exhaustive)
	 */
	exports.getStateFromQueryString = function(queryString, options) {
	  var prefixForParameters = options && options.prefix || '';
	  var mapping = options && options.mapping || {};
	  var invertedMapping = invert(mapping);
	
	  var partialStateWithPrefix = qs.parse(queryString);
	  var prefixRegexp = new RegExp('^' + prefixForParameters);
	  var partialState = mapKeys(
	    partialStateWithPrefix,
	    function(v, k) {
	      var hasPrefix = prefixForParameters && prefixRegexp.test(k);
	      var unprefixedKey = hasPrefix ? k.replace(prefixRegexp, '') : k;
	      var decodedKey = shortener.decode(invertedMapping[unprefixedKey] || unprefixedKey);
	      return decodedKey || unprefixedKey;
	    }
	  );
	
	  var partialStateWithParsedNumbers = SearchParameters._parseNumbers(partialState);
	
	  return pick(partialStateWithParsedNumbers, SearchParameters.PARAMETERS);
	};
	
	/**
	 * Retrieve an object of all the properties that are not understandable as helper
	 * parameters.
	 * @param {string} queryString the query string to read
	 * @param {object} [options] the options
	 *   - prefixForParameters : prefix used for the helper configuration keys
	 *   - mapping : map short attributes to another value e.g. {q: 'query'}
	 * @return {object} the object containing the parsed configuration that doesn't
	 * to the helper
	 */
	exports.getUnrecognizedParametersInQueryString = function(queryString, options) {
	  var prefixForParameters = options && options.prefix;
	  var mapping = options && options.mapping || {};
	  var invertedMapping = invert(mapping);
	
	  var foreignConfig = {};
	  var config = qs.parse(queryString);
	  if (prefixForParameters) {
	    var prefixRegexp = new RegExp('^' + prefixForParameters);
	    forEach(config, function(v, key) {
	      if (!prefixRegexp.test(key)) foreignConfig[key] = v;
	    });
	  } else {
	    forEach(config, function(v, key) {
	      if (!shortener.decode(invertedMapping[key] || key)) foreignConfig[key] = v;
	    });
	  }
	
	  return foreignConfig;
	};
	
	/**
	 * Generate a query string for the state passed according to the options
	 * @param {SearchParameters} state state to serialize
	 * @param {object} [options] May contain the following parameters :
	 *  - prefix : prefix in front of the keys
	 *  - mapping : map short attributes to another value e.g. {q: 'query'}
	 *  - moreAttributes : more values to be added in the query string. Those values
	 *    won't be prefixed.
	 *  - safe : get safe urls for use in emails, chat apps or any application auto linking urls.
	 *  All parameters and values will be encoded in a way that it's safe to share them.
	 *  Default to false for legacy reasons ()
	 * @return {string} the query string
	 */
	exports.getQueryStringFromState = function(state, options) {
	  var moreAttributes = options && options.moreAttributes;
	  var prefixForParameters = options && options.prefix || '';
	  var mapping = options && options.mapping || {};
	  var safe = options && options.safe || false;
	  var invertedMapping = invert(mapping);
	
	  var stateForUrl = safe ? state : recursiveEncode(state);
	
	  var encodedState = mapKeys(
	    stateForUrl,
	    function(v, k) {
	      var shortK = shortener.encode(k);
	      return prefixForParameters + (mapping[shortK] || shortK);
	    }
	  );
	
	  var prefixRegexp = prefixForParameters === '' ? null : new RegExp('^' + prefixForParameters);
	  var sort = bind(sortQueryStringValues, null, prefixRegexp, invertedMapping);
	  if (!isEmpty(moreAttributes)) {
	    var stateQs = qs.stringify(encodedState, {encode: safe, sort: sort});
	    var moreQs = qs.stringify(moreAttributes, {encode: safe});
	    if (!stateQs) return moreQs;
	    return stateQs + '&' + moreQs;
	  }
	
	  return qs.stringify(encodedState, {encode: safe, sort: sort});
	};


/***/ }),
/* 392 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = '2.28.1';


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = buildSearchMethod;
	
	var errors = __webpack_require__(180);
	
	/**
	 * Creates a search method to be used in clients
	 * @param {string} queryParam the name of the attribute used for the query
	 * @param {string} url the url
	 * @return {function} the search method
	 */
	function buildSearchMethod(queryParam, url) {
	  /**
	   * The search method. Prepares the data and send the query to Algolia.
	   * @param {string} query the string used for query search
	   * @param {object} args additional parameters to send with the search
	   * @param {function} [callback] the callback to be called with the client gets the answer
	   * @return {undefined|Promise} If the callback is not provided then this methods returns a Promise
	   */
	  return function search(query, args, callback) {
	    // warn V2 users on how to search
	    if (typeof query === 'function' && typeof args === 'object' ||
	      typeof callback === 'object') {
	      // .search(query, params, cb)
	      // .search(cb, params)
	      throw new errors.AlgoliaSearchError('index.search usage is index.search(query, params, cb)');
	    }
	
	    // Normalizing the function signature
	    if (arguments.length === 0 || typeof query === 'function') {
	      // Usage : .search(), .search(cb)
	      callback = query;
	      query = '';
	    } else if (arguments.length === 1 || typeof args === 'function') {
	      // Usage : .search(query/args), .search(query, cb)
	      callback = args;
	      args = undefined;
	    }
	    // At this point we have 3 arguments with values
	
	    // Usage : .search(args) // careful: typeof null === 'object'
	    if (typeof query === 'object' && query !== null) {
	      args = query;
	      query = undefined;
	    } else if (query === undefined || query === null) { // .search(undefined/null)
	      query = '';
	    }
	
	    var params = '';
	
	    if (query !== undefined) {
	      params += queryParam + '=' + encodeURIComponent(query);
	    }
	
	    var additionalUA;
	    if (args !== undefined) {
	      if (args.additionalUA) {
	        additionalUA = args.additionalUA;
	        delete args.additionalUA;
	      }
	      // `_getSearchParams` will augment params, do not be fooled by the = versus += from previous if
	      params = this.as._getSearchParams(args, params);
	    }
	
	
	    return this._search(params, url, callback, additionalUA);
	  };
	}


/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = function omit(obj, test) {
	  var keys = __webpack_require__(326);
	  var foreach = __webpack_require__(113);
	
	  var filtered = {};
	
	  foreach(keys(obj), function doFilter(keyName) {
	    if (test(keyName) !== true) {
	      filtered[keyName] = obj[keyName];
	    }
	  });
	
	  return filtered;
	};


/***/ }),
/* 395 */,
/* 396 */,
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Footer = __webpack_require__(859);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Footer).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Search = __webpack_require__(890);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Search).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _SpringScrollbars = __webpack_require__(892);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SpringScrollbars).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 400 */
/***/ (function(module, exports) {

	"use strict";
	
	module.exports = {
	  background: "#ffffff",
	  white: "#ffffff",
	  accent: "#273a11", // "rgb(60, 94, 18)", // "rgba(87, 140, 24, 0.9)", //"#709425",
	  bright: "#ffffff",
	  dark: "#333333",
	  gray: "#555555",
	  lightGray: "#bbbbbb",
	  superLightGray: "#dedede"
	};

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(936), __esModule: true };

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(940), __esModule: true };

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(917);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

/***/ }),
/* 404 */
/***/ (function(module, exports) {

	function createBroadcast (initialState) {
	  var listeners = {};
	  var id = 1;
	  var _state = initialState;
	
	  function getState () {
	    return _state
	  }
	
	  function setState (state) {
	    _state = state;
	    var keys = Object.keys(listeners);
	    var i = 0;
	    var len = keys.length;
	    for (; i < len; i++) {
	      // if a listener gets unsubscribed during setState we just skip it
	      if (listeners[keys[i]]) { listeners[keys[i]](state); }
	    }
	  }
	
	  // subscribe to changes and return the subscriptionId
	  function subscribe (listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('listener must be a function.')
	    }
	    var currentId = id;
	    listeners[currentId] = listener;
	    id += 1;
	    return currentId
	  }
	
	  // remove subscription by removing the listener function
	  function unsubscribe (id) {
	    delete listeners[id];
	  }
	
	  return { getState: getState, setState: setState, subscribe: subscribe, unsubscribe: unsubscribe }
	}
	
	module.exports = createBroadcast;


/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var GetIntrinsic = __webpack_require__(446);
	
	var callBind = __webpack_require__(258);
	
	var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
	
	module.exports = function callBoundIntrinsic(name, allowMissing) {
		var intrinsic = GetIntrinsic(name, !!allowMissing);
		if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
			return callBind(intrinsic);
		}
		return intrinsic;
	};


/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
	    if (k2 === undefined) k2 = k;
	    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
	}) : (function(o, m, k, k2) {
	    if (k2 === undefined) k2 = k;
	    o[k2] = m[k];
	}));
	var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
	    Object.defineProperty(o, "default", { enumerable: true, value: v });
	}) : function(o, v) {
	    o["default"] = v;
	});
	var __importStar = (this && this.__importStar) || function (mod) {
	    if (mod && mod.__esModule) return mod;
	    var result = {};
	    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
	    __setModuleDefault(result, mod);
	    return result;
	};
	var __spreadArray = (this && this.__spreadArray) || function (to, from) {
	    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
	        to[j] = from[i];
	    return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.select = exports.filter = exports.some = exports.is = exports.aliases = exports.pseudos = exports.filters = void 0;
	var css_what_1 = __webpack_require__(436);
	var css_select_1 = __webpack_require__(434);
	var DomUtils = __importStar(__webpack_require__(78));
	var helpers_1 = __webpack_require__(923);
	var positionals_1 = __webpack_require__(407);
	// Re-export pseudo extension points
	var css_select_2 = __webpack_require__(434);
	Object.defineProperty(exports, "filters", { enumerable: true, get: function () { return css_select_2.filters; } });
	Object.defineProperty(exports, "pseudos", { enumerable: true, get: function () { return css_select_2.pseudos; } });
	Object.defineProperty(exports, "aliases", { enumerable: true, get: function () { return css_select_2.aliases; } });
	/** Used to indicate a scope should be filtered. Might be ignored when filtering. */
	var SCOPE_PSEUDO = {
	    type: "pseudo",
	    name: "scope",
	    data: null,
	};
	/** Used for actually filtering for scope. */
	var CUSTOM_SCOPE_PSEUDO = __assign({}, SCOPE_PSEUDO);
	var UNIVERSAL_SELECTOR = { type: "universal", namespace: null };
	function is(element, selector, options) {
	    if (options === void 0) { options = {}; }
	    if (typeof selector === "function")
	        return selector(element);
	    var _a = helpers_1.groupSelectors(css_what_1.parse(selector, options)), plain = _a[0], filtered = _a[1];
	    return ((plain.length > 0 && css_select_1.is(element, plain, options)) ||
	        filtered.some(function (sel) { return filterBySelector(sel, [element], options).length > 0; }));
	}
	exports.is = is;
	function some(elements, selector, options) {
	    if (options === void 0) { options = {}; }
	    if (typeof selector === "function")
	        return elements.some(selector);
	    var _a = helpers_1.groupSelectors(css_what_1.parse(selector, options)), plain = _a[0], filtered = _a[1];
	    return ((plain.length > 0 && elements.some(css_select_1._compileToken(plain, options))) ||
	        filtered.some(function (sel) { return filterBySelector(sel, elements, options).length > 0; }));
	}
	exports.some = some;
	function filterByPosition(filter, elems, data, options) {
	    var num = typeof data === "string" ? parseInt(data, 10) : NaN;
	    switch (filter) {
	        case "first":
	        case "lt":
	            // Already done in `getLimit`
	            return elems;
	        case "last":
	            return elems.length > 0 ? [elems[elems.length - 1]] : elems;
	        case "nth":
	        case "eq":
	            return isFinite(num) && Math.abs(num) < elems.length
	                ? [num < 0 ? elems[elems.length + num] : elems[num]]
	                : [];
	        case "gt":
	            return isFinite(num) ? elems.slice(num + 1) : [];
	        case "even":
	            return elems.filter(function (_, i) { return i % 2 === 0; });
	        case "odd":
	            return elems.filter(function (_, i) { return i % 2 === 1; });
	        case "not": {
	            var filtered_1 = new Set(filterParsed(data, elems, options));
	            return elems.filter(function (e) { return !filtered_1.has(e); });
	        }
	    }
	}
	function filter(selector, elements, options) {
	    if (options === void 0) { options = {}; }
	    return filterParsed(css_what_1.parse(selector, options), elements, options);
	}
	exports.filter = filter;
	/**
	 * Filter a set of elements by a selector.
	 *
	 * Will return elements in the original order.
	 *
	 * @param selector Selector to filter by.
	 * @param elements Elements to filter.
	 * @param options Options for selector.
	 */
	function filterParsed(selector, elements, options) {
	    if (elements.length === 0)
	        return [];
	    var _a = helpers_1.groupSelectors(selector), plainSelectors = _a[0], filteredSelectors = _a[1];
	    var found;
	    if (plainSelectors.length) {
	        var filtered = filterElements(elements, plainSelectors, options);
	        // If there are no filters, just return
	        if (filteredSelectors.length === 0) {
	            return filtered;
	        }
	        // Otherwise, we have to do some filtering
	        if (filtered.length) {
	            found = new Set(filtered);
	        }
	    }
	    for (var i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {
	        var filteredSelector = filteredSelectors[i];
	        var missing = found
	            ? elements.filter(function (e) { return !found.has(e); })
	            : elements;
	        if (missing.length === 0)
	            break;
	        var filtered = filterBySelector(filteredSelector, elements, options);
	        if (filtered.length) {
	            if (!found) {
	                /*
	                 * If we haven't found anything before the last selector,
	                 * just return what we found now.
	                 */
	                if (i === filteredSelectors.length - 1) {
	                    return filtered;
	                }
	                found = new Set(filtered);
	            }
	            else {
	                filtered.forEach(function (el) { return found.add(el); });
	            }
	        }
	    }
	    return typeof found !== "undefined"
	        ? found.size === elements.length
	            ? elements
	            : elements.filter(function (el) { return found.has(el); })
	        : [];
	}
	function filterBySelector(selector, elements, options) {
	    if (selector.some(css_what_1.isTraversal)) {
	        /*
	         * Get one root node, run selector with the scope
	         * set to all of our nodes.
	         */
	        var root = helpers_1.getDocumentRoot(elements[0]);
	        var sel = __spreadArray(__spreadArray([], selector), [CUSTOM_SCOPE_PSEUDO]);
	        return findFilterElements(root, sel, options, true, elements);
	    }
	    // Performance optimization: If we don't have to traverse, just filter set.
	    return findFilterElements(elements, selector, options, false);
	}
	function select(selector, root, options) {
	    if (options === void 0) { options = {}; }
	    if (typeof selector === "function") {
	        return find(root, selector);
	    }
	    var _a = helpers_1.groupSelectors(css_what_1.parse(selector, options)), plain = _a[0], filtered = _a[1];
	    var results = filtered.map(function (sel) {
	        return findFilterElements(root, sel, options, true);
	    });
	    // Plain selectors can be queried in a single go
	    if (plain.length) {
	        results.push(findElements(root, plain, options, Infinity));
	    }
	    // If there was only a single selector, just return the result
	    if (results.length === 1) {
	        return results[0];
	    }
	    // Sort results, filtering for duplicates
	    return DomUtils.uniqueSort(results.reduce(function (a, b) { return __spreadArray(__spreadArray([], a), b); }));
	}
	exports.select = select;
	// Traversals that are treated differently in css-select.
	var specialTraversal = new Set(["descendant", "adjacent"]);
	function includesScopePseudo(t) {
	    return (t !== SCOPE_PSEUDO &&
	        t.type === "pseudo" &&
	        (t.name === "scope" ||
	            (Array.isArray(t.data) &&
	                t.data.some(function (data) { return data.some(includesScopePseudo); }))));
	}
	function addContextIfScope(selector, options, scopeContext) {
	    return scopeContext && selector.some(includesScopePseudo)
	        ? __assign(__assign({}, options), { context: scopeContext }) : options;
	}
	/**
	 *
	 * @param root Element(s) to search from.
	 * @param selector Selector to look for.
	 * @param options Options for querying.
	 * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.
	 * @param scopeContext Optional context for a :scope.
	 */
	function findFilterElements(root, selector, options, queryForSelector, scopeContext) {
	    var filterIndex = selector.findIndex(positionals_1.isFilter);
	    var sub = selector.slice(0, filterIndex);
	    var filter = selector[filterIndex];
	    /*
	     * Set the number of elements to retrieve.
	     * Eg. for :first, we only have to get a single element.
	     */
	    var limit = positionals_1.getLimit(filter.name, filter.data);
	    if (limit === 0)
	        return [];
	    var subOpts = addContextIfScope(sub, options, scopeContext);
	    /*
	     * Skip `findElements` call if our selector starts with a positional
	     * pseudo.
	     */
	    var elemsNoLimit = sub.length === 0 && !Array.isArray(root)
	        ? DomUtils.getChildren(root).filter(DomUtils.isTag)
	        : sub.length === 0 || (sub.length === 1 && sub[0] === SCOPE_PSEUDO)
	            ? (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag)
	            : queryForSelector || sub.some(css_what_1.isTraversal)
	                ? findElements(root, [sub], subOpts, limit)
	                : filterElements(root, [sub], subOpts);
	    var elems = elemsNoLimit.slice(0, limit);
	    var result = filterByPosition(filter.name, elems, filter.data, options);
	    if (result.length === 0 || selector.length === filterIndex + 1) {
	        return result;
	    }
	    var remainingSelector = selector.slice(filterIndex + 1);
	    var remainingHasTraversal = remainingSelector.some(css_what_1.isTraversal);
	    var remainingOpts = addContextIfScope(remainingSelector, options, scopeContext);
	    if (remainingHasTraversal) {
	        /*
	         * Some types of traversals have special logic when they start a selector
	         * in css-select. If this is the case, add a universal selector in front of
	         * the selector to avoid this behavior.
	         */
	        if (specialTraversal.has(remainingSelector[0].type)) {
	            remainingSelector.unshift(UNIVERSAL_SELECTOR);
	        }
	        /*
	         * Add a scope token in front of the remaining selector,
	         * to make sure traversals don't match elements that aren't a
	         * part of the considered tree.
	         */
	        remainingSelector.unshift(SCOPE_PSEUDO);
	    }
	    /*
	     * If we have another filter, recursively call `findFilterElements`,
	     * with the `recursive` flag disabled. We only have to look for more
	     * elements when we see a traversal.
	     *
	     * Otherwise,
	     */
	    return remainingSelector.some(positionals_1.isFilter)
	        ? findFilterElements(result, remainingSelector, options, false, scopeContext)
	        : remainingHasTraversal
	            ? // Query existing elements to resolve traversal.
	                findElements(result, [remainingSelector], remainingOpts, Infinity)
	            : // If we don't have any more traversals, simply filter elements.
	                filterElements(result, [remainingSelector], remainingOpts);
	}
	function findElements(root, sel, options, limit) {
	    if (limit === 0)
	        return [];
	    var query = css_select_1._compileToken(sel, options, root);
	    return find(root, query, limit);
	}
	function find(root, query, limit) {
	    if (limit === void 0) { limit = Infinity; }
	    var elems = css_select_1.prepareContext(root, DomUtils, query.shouldTestNextSiblings);
	    return DomUtils.find(function (node) { return DomUtils.isTag(node) && query(node); }, elems, true, limit);
	}
	function filterElements(elements, sel, options) {
	    var els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);
	    if (els.length === 0)
	        return els;
	    var query = css_select_1._compileToken(sel, options);
	    return els.filter(query);
	}


/***/ }),
/* 407 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.getLimit = exports.isFilter = exports.filterNames = void 0;
	exports.filterNames = new Set([
	    "first",
	    "last",
	    "eq",
	    "gt",
	    "nth",
	    "lt",
	    "even",
	    "odd",
	]);
	function isFilter(s) {
	    if (s.type !== "pseudo")
	        return false;
	    if (exports.filterNames.has(s.name))
	        return true;
	    if (s.name === "not" && Array.isArray(s.data)) {
	        // Only consider `:not` with embedded filters
	        return s.data.some(function (s) { return s.some(isFilter); });
	    }
	    return false;
	}
	exports.isFilter = isFilter;
	function getLimit(filter, data) {
	    var num = data != null ? parseInt(data, 10) : NaN;
	    switch (filter) {
	        case "first":
	            return 1;
	        case "nth":
	        case "eq":
	            return isFinite(num) ? (num >= 0 ? num + 1 : Infinity) : 0;
	        case "lt":
	            return isFinite(num) ? (num >= 0 ? num : Infinity) : 0;
	        case "gt":
	            return isFinite(num) ? Infinity : 0;
	        default:
	            return Infinity;
	    }
	}
	exports.getLimit = getLimit;


/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Cheerio = void 0;
	var tslib_1 = __webpack_require__(83);
	var parse_1 = tslib_1.__importDefault(__webpack_require__(260));
	var options_1 = tslib_1.__importStar(__webpack_require__(259));
	var utils_1 = __webpack_require__(109);
	var Static = tslib_1.__importStar(__webpack_require__(139));
	var Attributes = tslib_1.__importStar(__webpack_require__(924));
	var Traversing = tslib_1.__importStar(__webpack_require__(928));
	var Manipulation = tslib_1.__importStar(__webpack_require__(927));
	var Css = tslib_1.__importStar(__webpack_require__(925));
	var Forms = tslib_1.__importStar(__webpack_require__(926));
	/*
	 * The API
	 */
	var api = [Attributes, Traversing, Manipulation, Css, Forms];
	var Cheerio = /** @class */ (function () {
	    /**
	     * Instance of cheerio. Methods are specified in the modules. Usage of this
	     * constructor is not recommended. Please use $.load instead.
	     *
	     * @private
	     * @param selector - The new selection.
	     * @param context - Context of the selection.
	     * @param root - Sets the root node.
	     * @param options - Options for the instance.
	     */
	    function Cheerio(selector, context, root, options) {
	        var _this = this;
	        if (!(this instanceof Cheerio)) {
	            return new Cheerio(selector, context, root, options);
	        }
	        this.length = 0;
	        this.options = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, options_1.default), this.options), options_1.flatten(options));
	        // $(), $(null), $(undefined), $(false)
	        if (!selector)
	            return this;
	        if (root) {
	            if (typeof root === 'string')
	                root = parse_1.default(root, this.options, false);
	            this._root = Cheerio.call(this, root);
	        }
	        // $($)
	        if (utils_1.isCheerio(selector))
	            return selector;
	        var elements = typeof selector === 'string' && utils_1.isHtml(selector)
	            ? // $(<html>)
	                parse_1.default(selector, this.options, false).children
	            : isNode(selector)
	                ? // $(dom)
	                    [selector]
	                : Array.isArray(selector)
	                    ? // $([dom])
	                        selector
	                    : null;
	        if (elements) {
	            elements.forEach(function (elem, idx) {
	                _this[idx] = elem;
	            });
	            this.length = elements.length;
	            return this;
	        }
	        // We know that our selector is a string now.
	        var search = selector;
	        var searchContext = !context
	            ? // If we don't have a context, maybe we have a root, from loading
	                this._root
	            : typeof context === 'string'
	                ? utils_1.isHtml(context)
	                    ? // $('li', '<ul>...</ul>')
	                        new Cheerio(parse_1.default(context, this.options, false))
	                    : // $('li', 'ul')
	                        ((search = context + " " + search), this._root)
	                : utils_1.isCheerio(context)
	                    ? // $('li', $)
	                        context
	                    : // $('li', node), $('li', [nodes])
	                        new Cheerio(context);
	        // If we still don't have a context, return
	        if (!searchContext)
	            return this;
	        /*
	         * #id, .class, tag
	         */
	        // @ts-expect-error No good way to type this — we will always return `Cheerio<Element>` here.
	        return searchContext.find(search);
	    }
	    /**
	     * Make a cheerio object.
	     *
	     * @private
	     * @param dom - The contents of the new object.
	     * @param context - The context of the new object.
	     * @returns The new cheerio object.
	     */
	    Cheerio.prototype._make = function (dom, context, root) {
	        if (root === void 0) { root = this._root; }
	        var cheerio = new this.constructor(dom, context, root, this.options);
	        cheerio.prevObject = this;
	        return cheerio;
	    };
	    /**
	     * Retrieve all the DOM elements contained in the jQuery set as an array.
	     *
	     * @example
	     *
	     * ```js
	     * $('li').toArray();
	     * //=> [ {...}, {...}, {...} ]
	     * ```
	     *
	     * @returns The contained items.
	     */
	    Cheerio.prototype.toArray = function () {
	        return this.get();
	    };
	    Cheerio.html = Static.html;
	    Cheerio.xml = Static.xml;
	    Cheerio.text = Static.text;
	    Cheerio.parseHTML = Static.parseHTML;
	    Cheerio.root = Static.root;
	    Cheerio.contains = Static.contains;
	    Cheerio.merge = Static.merge;
	    /** Mimic jQuery's prototype alias for plugin authors. */
	    Cheerio.fn = Cheerio.prototype;
	    return Cheerio;
	}());
	exports.Cheerio = Cheerio;
	/** Set a signature of the object. */
	Cheerio.prototype.cheerio = '[cheerio object]';
	/*
	 * Make cheerio an array-like object
	 */
	Cheerio.prototype.splice = Array.prototype.splice;
	// Support for (const element of $(...)) iteration:
	Cheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];
	// Plug in the API
	api.forEach(function (mod) { return Object.assign(Cheerio.prototype, mod); });
	function isNode(obj) {
	    return (!!obj.name ||
	        obj.type === 'root' ||
	        obj.type === 'text' ||
	        obj.type === 'comment');
	}
	// Make it possible to call Cheerio without using `new`.
	exports.default = Cheerio;


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.load = void 0;
	var tslib_1 = __webpack_require__(83);
	var options_1 = tslib_1.__importStar(__webpack_require__(259));
	var staticMethods = tslib_1.__importStar(__webpack_require__(139));
	var cheerio_1 = __webpack_require__(408);
	var parse_1 = tslib_1.__importDefault(__webpack_require__(260));
	/**
	 * Create a querying function, bound to a document created from the provided
	 * markup. Note that similar to web browser contexts, this operation may
	 * introduce `<html>`, `<head>`, and `<body>` elements; set `isDocument` to
	 * `false` to switch to fragment mode and disable this.
	 *
	 * See the README section titled "Loading" for additional usage information.
	 *
	 * @param content - Markup to be loaded.
	 * @param options - Options for the created instance.
	 * @param isDocument - Allows parser to be switched to fragment mode.
	 * @returns The loaded document.
	 */
	function load(content, options, isDocument) {
	    if (content == null) {
	        throw new Error('cheerio.load() expects a string');
	    }
	    options = tslib_1.__assign(tslib_1.__assign({}, options_1.default), options_1.flatten(options));
	    if (typeof isDocument === 'undefined')
	        isDocument = true;
	    var root = parse_1.default(content, options, isDocument);
	    var initialize = /** @class */ (function (_super) {
	        tslib_1.__extends(initialize, _super);
	        function initialize(selector, context, r, opts) {
	            if (r === void 0) { r = root; }
	            var _this = this;
	            // @ts-expect-error Using `this` before calling the constructor.
	            if (!(_this instanceof initialize)) {
	                return new initialize(selector, context, r, opts);
	            }
	            _this = _super.call(this, selector, context, r, tslib_1.__assign(tslib_1.__assign({}, options), opts)) || this;
	            return _this;
	        }
	        // Mimic jQuery's prototype alias for plugin authors.
	        initialize.fn = initialize.prototype;
	        return initialize;
	    }(cheerio_1.Cheerio));
	    /*
	     * Keep a reference to the top-level scope so we can chain methods that implicitly
	     * resolve selectors; e.g. $("<span>").(".bar"), which otherwise loses ._root
	     */
	    initialize.prototype._originalRoot = root;
	    // Add in the static methods
	    Object.assign(initialize, staticMethods, { load: load });
	    // Add in the root
	    initialize._root = root;
	    // Store options
	    initialize._options = options;
	    return initialize;
	}
	exports.load = load;


/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __importDefault = (this && this.__importDefault) || function (mod) {
	    return (mod && mod.__esModule) ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.render = exports.parse = void 0;
	var htmlparser2_1 = __webpack_require__(68);
	Object.defineProperty(exports, "parse", { enumerable: true, get: function () { return htmlparser2_1.parseDocument; } });
	var dom_serializer_1 = __webpack_require__(442);
	Object.defineProperty(exports, "render", { enumerable: true, get: function () { return __importDefault(dom_serializer_1).default; } });


/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.render = exports.parse = void 0;
	var tslib_1 = __webpack_require__(83);
	var domhandler_1 = __webpack_require__(77);
	var parse5_1 = __webpack_require__(1530);
	var parse5_htmlparser2_tree_adapter_1 = tslib_1.__importDefault(__webpack_require__(1527));
	function parse(content, options, isDocument) {
	    var opts = {
	        scriptingEnabled: typeof options.scriptingEnabled === 'boolean'
	            ? options.scriptingEnabled
	            : true,
	        treeAdapter: parse5_htmlparser2_tree_adapter_1.default,
	        sourceCodeLocationInfo: options.sourceCodeLocationInfo,
	    };
	    var context = options.context;
	    // @ts-expect-error The tree adapter unfortunately doesn't return the exact types.
	    return isDocument
	        ? parse5_1.parse(content, opts)
	        : // @ts-expect-error Same issue again.
	            parse5_1.parseFragment(context, content, opts);
	}
	exports.parse = parse;
	function render(dom) {
	    var _a;
	    /*
	     * `dom-serializer` passes over the special "root" node and renders the
	     * node's children in its place. To mimic this behavior with `parse5`, an
	     * equivalent operation must be applied to the input array.
	     */
	    var nodes = 'length' in dom ? dom : [dom];
	    for (var index = 0; index < nodes.length; index += 1) {
	        var node = nodes[index];
	        if (domhandler_1.isDocument(node)) {
	            (_a = Array.prototype.splice).call.apply(_a, tslib_1.__spreadArray([nodes, index, 1], node.children));
	        }
	    }
	    // @ts-expect-error Types don't align here either.
	    return parse5_1.serialize({ children: nodes }, { treeAdapter: parse5_htmlparser2_tree_adapter_1.default });
	}
	exports.render = render;


/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

	/* MIT license */
	var cssKeywords = __webpack_require__(413);
	
	// NOTE: conversions should only return primitive values (i.e. arrays, or
	//       values that give correct `typeof` results).
	//       do not use box values types (i.e. Number(), String(), etc.)
	
	var reverseKeywords = {};
	for (var key in cssKeywords) {
		if (cssKeywords.hasOwnProperty(key)) {
			reverseKeywords[cssKeywords[key]] = key;
		}
	}
	
	var convert = module.exports = {
		rgb: {channels: 3, labels: 'rgb'},
		hsl: {channels: 3, labels: 'hsl'},
		hsv: {channels: 3, labels: 'hsv'},
		hwb: {channels: 3, labels: 'hwb'},
		cmyk: {channels: 4, labels: 'cmyk'},
		xyz: {channels: 3, labels: 'xyz'},
		lab: {channels: 3, labels: 'lab'},
		lch: {channels: 3, labels: 'lch'},
		hex: {channels: 1, labels: ['hex']},
		keyword: {channels: 1, labels: ['keyword']},
		ansi16: {channels: 1, labels: ['ansi16']},
		ansi256: {channels: 1, labels: ['ansi256']},
		hcg: {channels: 3, labels: ['h', 'c', 'g']},
		apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
		gray: {channels: 1, labels: ['gray']}
	};
	
	// hide .channels and .labels properties
	for (var model in convert) {
		if (convert.hasOwnProperty(model)) {
			if (!('channels' in convert[model])) {
				throw new Error('missing channels property: ' + model);
			}
	
			if (!('labels' in convert[model])) {
				throw new Error('missing channel labels property: ' + model);
			}
	
			if (convert[model].labels.length !== convert[model].channels) {
				throw new Error('channel and label counts mismatch: ' + model);
			}
	
			var channels = convert[model].channels;
			var labels = convert[model].labels;
			delete convert[model].channels;
			delete convert[model].labels;
			Object.defineProperty(convert[model], 'channels', {value: channels});
			Object.defineProperty(convert[model], 'labels', {value: labels});
		}
	}
	
	convert.rgb.hsl = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
		var min = Math.min(r, g, b);
		var max = Math.max(r, g, b);
		var delta = max - min;
		var h;
		var s;
		var l;
	
		if (max === min) {
			h = 0;
		} else if (r === max) {
			h = (g - b) / delta;
		} else if (g === max) {
			h = 2 + (b - r) / delta;
		} else if (b === max) {
			h = 4 + (r - g) / delta;
		}
	
		h = Math.min(h * 60, 360);
	
		if (h < 0) {
			h += 360;
		}
	
		l = (min + max) / 2;
	
		if (max === min) {
			s = 0;
		} else if (l <= 0.5) {
			s = delta / (max + min);
		} else {
			s = delta / (2 - max - min);
		}
	
		return [h, s * 100, l * 100];
	};
	
	convert.rgb.hsv = function (rgb) {
		var rdif;
		var gdif;
		var bdif;
		var h;
		var s;
	
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
		var v = Math.max(r, g, b);
		var diff = v - Math.min(r, g, b);
		var diffc = function (c) {
			return (v - c) / 6 / diff + 1 / 2;
		};
	
		if (diff === 0) {
			h = s = 0;
		} else {
			s = diff / v;
			rdif = diffc(r);
			gdif = diffc(g);
			bdif = diffc(b);
	
			if (r === v) {
				h = bdif - gdif;
			} else if (g === v) {
				h = (1 / 3) + rdif - bdif;
			} else if (b === v) {
				h = (2 / 3) + gdif - rdif;
			}
			if (h < 0) {
				h += 1;
			} else if (h > 1) {
				h -= 1;
			}
		}
	
		return [
			h * 360,
			s * 100,
			v * 100
		];
	};
	
	convert.rgb.hwb = function (rgb) {
		var r = rgb[0];
		var g = rgb[1];
		var b = rgb[2];
		var h = convert.rgb.hsl(rgb)[0];
		var w = 1 / 255 * Math.min(r, Math.min(g, b));
	
		b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
	
		return [h, w * 100, b * 100];
	};
	
	convert.rgb.cmyk = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
		var c;
		var m;
		var y;
		var k;
	
		k = Math.min(1 - r, 1 - g, 1 - b);
		c = (1 - r - k) / (1 - k) || 0;
		m = (1 - g - k) / (1 - k) || 0;
		y = (1 - b - k) / (1 - k) || 0;
	
		return [c * 100, m * 100, y * 100, k * 100];
	};
	
	/**
	 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
	 * */
	function comparativeDistance(x, y) {
		return (
			Math.pow(x[0] - y[0], 2) +
			Math.pow(x[1] - y[1], 2) +
			Math.pow(x[2] - y[2], 2)
		);
	}
	
	convert.rgb.keyword = function (rgb) {
		var reversed = reverseKeywords[rgb];
		if (reversed) {
			return reversed;
		}
	
		var currentClosestDistance = Infinity;
		var currentClosestKeyword;
	
		for (var keyword in cssKeywords) {
			if (cssKeywords.hasOwnProperty(keyword)) {
				var value = cssKeywords[keyword];
	
				// Compute comparative distance
				var distance = comparativeDistance(rgb, value);
	
				// Check if its less, if so set as closest
				if (distance < currentClosestDistance) {
					currentClosestDistance = distance;
					currentClosestKeyword = keyword;
				}
			}
		}
	
		return currentClosestKeyword;
	};
	
	convert.keyword.rgb = function (keyword) {
		return cssKeywords[keyword];
	};
	
	convert.rgb.xyz = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
	
		// assume sRGB
		r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
		g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
		b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);
	
		var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
		var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
		var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);
	
		return [x * 100, y * 100, z * 100];
	};
	
	convert.rgb.lab = function (rgb) {
		var xyz = convert.rgb.xyz(rgb);
		var x = xyz[0];
		var y = xyz[1];
		var z = xyz[2];
		var l;
		var a;
		var b;
	
		x /= 95.047;
		y /= 100;
		z /= 108.883;
	
		x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
		y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
		z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);
	
		l = (116 * y) - 16;
		a = 500 * (x - y);
		b = 200 * (y - z);
	
		return [l, a, b];
	};
	
	convert.hsl.rgb = function (hsl) {
		var h = hsl[0] / 360;
		var s = hsl[1] / 100;
		var l = hsl[2] / 100;
		var t1;
		var t2;
		var t3;
		var rgb;
		var val;
	
		if (s === 0) {
			val = l * 255;
			return [val, val, val];
		}
	
		if (l < 0.5) {
			t2 = l * (1 + s);
		} else {
			t2 = l + s - l * s;
		}
	
		t1 = 2 * l - t2;
	
		rgb = [0, 0, 0];
		for (var i = 0; i < 3; i++) {
			t3 = h + 1 / 3 * -(i - 1);
			if (t3 < 0) {
				t3++;
			}
			if (t3 > 1) {
				t3--;
			}
	
			if (6 * t3 < 1) {
				val = t1 + (t2 - t1) * 6 * t3;
			} else if (2 * t3 < 1) {
				val = t2;
			} else if (3 * t3 < 2) {
				val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
			} else {
				val = t1;
			}
	
			rgb[i] = val * 255;
		}
	
		return rgb;
	};
	
	convert.hsl.hsv = function (hsl) {
		var h = hsl[0];
		var s = hsl[1] / 100;
		var l = hsl[2] / 100;
		var smin = s;
		var lmin = Math.max(l, 0.01);
		var sv;
		var v;
	
		l *= 2;
		s *= (l <= 1) ? l : 2 - l;
		smin *= lmin <= 1 ? lmin : 2 - lmin;
		v = (l + s) / 2;
		sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);
	
		return [h, sv * 100, v * 100];
	};
	
	convert.hsv.rgb = function (hsv) {
		var h = hsv[0] / 60;
		var s = hsv[1] / 100;
		var v = hsv[2] / 100;
		var hi = Math.floor(h) % 6;
	
		var f = h - Math.floor(h);
		var p = 255 * v * (1 - s);
		var q = 255 * v * (1 - (s * f));
		var t = 255 * v * (1 - (s * (1 - f)));
		v *= 255;
	
		switch (hi) {
			case 0:
				return [v, t, p];
			case 1:
				return [q, v, p];
			case 2:
				return [p, v, t];
			case 3:
				return [p, q, v];
			case 4:
				return [t, p, v];
			case 5:
				return [v, p, q];
		}
	};
	
	convert.hsv.hsl = function (hsv) {
		var h = hsv[0];
		var s = hsv[1] / 100;
		var v = hsv[2] / 100;
		var vmin = Math.max(v, 0.01);
		var lmin;
		var sl;
		var l;
	
		l = (2 - s) * v;
		lmin = (2 - s) * vmin;
		sl = s * vmin;
		sl /= (lmin <= 1) ? lmin : 2 - lmin;
		sl = sl || 0;
		l /= 2;
	
		return [h, sl * 100, l * 100];
	};
	
	// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
	convert.hwb.rgb = function (hwb) {
		var h = hwb[0] / 360;
		var wh = hwb[1] / 100;
		var bl = hwb[2] / 100;
		var ratio = wh + bl;
		var i;
		var v;
		var f;
		var n;
	
		// wh + bl cant be > 1
		if (ratio > 1) {
			wh /= ratio;
			bl /= ratio;
		}
	
		i = Math.floor(6 * h);
		v = 1 - bl;
		f = 6 * h - i;
	
		if ((i & 0x01) !== 0) {
			f = 1 - f;
		}
	
		n = wh + f * (v - wh); // linear interpolation
	
		var r;
		var g;
		var b;
		switch (i) {
			default:
			case 6:
			case 0: r = v; g = n; b = wh; break;
			case 1: r = n; g = v; b = wh; break;
			case 2: r = wh; g = v; b = n; break;
			case 3: r = wh; g = n; b = v; break;
			case 4: r = n; g = wh; b = v; break;
			case 5: r = v; g = wh; b = n; break;
		}
	
		return [r * 255, g * 255, b * 255];
	};
	
	convert.cmyk.rgb = function (cmyk) {
		var c = cmyk[0] / 100;
		var m = cmyk[1] / 100;
		var y = cmyk[2] / 100;
		var k = cmyk[3] / 100;
		var r;
		var g;
		var b;
	
		r = 1 - Math.min(1, c * (1 - k) + k);
		g = 1 - Math.min(1, m * (1 - k) + k);
		b = 1 - Math.min(1, y * (1 - k) + k);
	
		return [r * 255, g * 255, b * 255];
	};
	
	convert.xyz.rgb = function (xyz) {
		var x = xyz[0] / 100;
		var y = xyz[1] / 100;
		var z = xyz[2] / 100;
		var r;
		var g;
		var b;
	
		r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
		g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
		b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);
	
		// assume sRGB
		r = r > 0.0031308
			? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
			: r * 12.92;
	
		g = g > 0.0031308
			? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
			: g * 12.92;
	
		b = b > 0.0031308
			? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
			: b * 12.92;
	
		r = Math.min(Math.max(0, r), 1);
		g = Math.min(Math.max(0, g), 1);
		b = Math.min(Math.max(0, b), 1);
	
		return [r * 255, g * 255, b * 255];
	};
	
	convert.xyz.lab = function (xyz) {
		var x = xyz[0];
		var y = xyz[1];
		var z = xyz[2];
		var l;
		var a;
		var b;
	
		x /= 95.047;
		y /= 100;
		z /= 108.883;
	
		x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
		y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
		z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);
	
		l = (116 * y) - 16;
		a = 500 * (x - y);
		b = 200 * (y - z);
	
		return [l, a, b];
	};
	
	convert.lab.xyz = function (lab) {
		var l = lab[0];
		var a = lab[1];
		var b = lab[2];
		var x;
		var y;
		var z;
	
		y = (l + 16) / 116;
		x = a / 500 + y;
		z = y - b / 200;
	
		var y2 = Math.pow(y, 3);
		var x2 = Math.pow(x, 3);
		var z2 = Math.pow(z, 3);
		y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
		x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
		z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;
	
		x *= 95.047;
		y *= 100;
		z *= 108.883;
	
		return [x, y, z];
	};
	
	convert.lab.lch = function (lab) {
		var l = lab[0];
		var a = lab[1];
		var b = lab[2];
		var hr;
		var h;
		var c;
	
		hr = Math.atan2(b, a);
		h = hr * 360 / 2 / Math.PI;
	
		if (h < 0) {
			h += 360;
		}
	
		c = Math.sqrt(a * a + b * b);
	
		return [l, c, h];
	};
	
	convert.lch.lab = function (lch) {
		var l = lch[0];
		var c = lch[1];
		var h = lch[2];
		var a;
		var b;
		var hr;
	
		hr = h / 360 * 2 * Math.PI;
		a = c * Math.cos(hr);
		b = c * Math.sin(hr);
	
		return [l, a, b];
	};
	
	convert.rgb.ansi16 = function (args) {
		var r = args[0];
		var g = args[1];
		var b = args[2];
		var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization
	
		value = Math.round(value / 50);
	
		if (value === 0) {
			return 30;
		}
	
		var ansi = 30
			+ ((Math.round(b / 255) << 2)
			| (Math.round(g / 255) << 1)
			| Math.round(r / 255));
	
		if (value === 2) {
			ansi += 60;
		}
	
		return ansi;
	};
	
	convert.hsv.ansi16 = function (args) {
		// optimization here; we already know the value and don't need to get
		// it converted for us.
		return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
	};
	
	convert.rgb.ansi256 = function (args) {
		var r = args[0];
		var g = args[1];
		var b = args[2];
	
		// we use the extended greyscale palette here, with the exception of
		// black and white. normal palette only has 4 greyscale shades.
		if (r === g && g === b) {
			if (r < 8) {
				return 16;
			}
	
			if (r > 248) {
				return 231;
			}
	
			return Math.round(((r - 8) / 247) * 24) + 232;
		}
	
		var ansi = 16
			+ (36 * Math.round(r / 255 * 5))
			+ (6 * Math.round(g / 255 * 5))
			+ Math.round(b / 255 * 5);
	
		return ansi;
	};
	
	convert.ansi16.rgb = function (args) {
		var color = args % 10;
	
		// handle greyscale
		if (color === 0 || color === 7) {
			if (args > 50) {
				color += 3.5;
			}
	
			color = color / 10.5 * 255;
	
			return [color, color, color];
		}
	
		var mult = (~~(args > 50) + 1) * 0.5;
		var r = ((color & 1) * mult) * 255;
		var g = (((color >> 1) & 1) * mult) * 255;
		var b = (((color >> 2) & 1) * mult) * 255;
	
		return [r, g, b];
	};
	
	convert.ansi256.rgb = function (args) {
		// handle greyscale
		if (args >= 232) {
			var c = (args - 232) * 10 + 8;
			return [c, c, c];
		}
	
		args -= 16;
	
		var rem;
		var r = Math.floor(args / 36) / 5 * 255;
		var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
		var b = (rem % 6) / 5 * 255;
	
		return [r, g, b];
	};
	
	convert.rgb.hex = function (args) {
		var integer = ((Math.round(args[0]) & 0xFF) << 16)
			+ ((Math.round(args[1]) & 0xFF) << 8)
			+ (Math.round(args[2]) & 0xFF);
	
		var string = integer.toString(16).toUpperCase();
		return '000000'.substring(string.length) + string;
	};
	
	convert.hex.rgb = function (args) {
		var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
		if (!match) {
			return [0, 0, 0];
		}
	
		var colorString = match[0];
	
		if (match[0].length === 3) {
			colorString = colorString.split('').map(function (char) {
				return char + char;
			}).join('');
		}
	
		var integer = parseInt(colorString, 16);
		var r = (integer >> 16) & 0xFF;
		var g = (integer >> 8) & 0xFF;
		var b = integer & 0xFF;
	
		return [r, g, b];
	};
	
	convert.rgb.hcg = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
		var max = Math.max(Math.max(r, g), b);
		var min = Math.min(Math.min(r, g), b);
		var chroma = (max - min);
		var grayscale;
		var hue;
	
		if (chroma < 1) {
			grayscale = min / (1 - chroma);
		} else {
			grayscale = 0;
		}
	
		if (chroma <= 0) {
			hue = 0;
		} else
		if (max === r) {
			hue = ((g - b) / chroma) % 6;
		} else
		if (max === g) {
			hue = 2 + (b - r) / chroma;
		} else {
			hue = 4 + (r - g) / chroma + 4;
		}
	
		hue /= 6;
		hue %= 1;
	
		return [hue * 360, chroma * 100, grayscale * 100];
	};
	
	convert.hsl.hcg = function (hsl) {
		var s = hsl[1] / 100;
		var l = hsl[2] / 100;
		var c = 1;
		var f = 0;
	
		if (l < 0.5) {
			c = 2.0 * s * l;
		} else {
			c = 2.0 * s * (1.0 - l);
		}
	
		if (c < 1.0) {
			f = (l - 0.5 * c) / (1.0 - c);
		}
	
		return [hsl[0], c * 100, f * 100];
	};
	
	convert.hsv.hcg = function (hsv) {
		var s = hsv[1] / 100;
		var v = hsv[2] / 100;
	
		var c = s * v;
		var f = 0;
	
		if (c < 1.0) {
			f = (v - c) / (1 - c);
		}
	
		return [hsv[0], c * 100, f * 100];
	};
	
	convert.hcg.rgb = function (hcg) {
		var h = hcg[0] / 360;
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;
	
		if (c === 0.0) {
			return [g * 255, g * 255, g * 255];
		}
	
		var pure = [0, 0, 0];
		var hi = (h % 1) * 6;
		var v = hi % 1;
		var w = 1 - v;
		var mg = 0;
	
		switch (Math.floor(hi)) {
			case 0:
				pure[0] = 1; pure[1] = v; pure[2] = 0; break;
			case 1:
				pure[0] = w; pure[1] = 1; pure[2] = 0; break;
			case 2:
				pure[0] = 0; pure[1] = 1; pure[2] = v; break;
			case 3:
				pure[0] = 0; pure[1] = w; pure[2] = 1; break;
			case 4:
				pure[0] = v; pure[1] = 0; pure[2] = 1; break;
			default:
				pure[0] = 1; pure[1] = 0; pure[2] = w;
		}
	
		mg = (1.0 - c) * g;
	
		return [
			(c * pure[0] + mg) * 255,
			(c * pure[1] + mg) * 255,
			(c * pure[2] + mg) * 255
		];
	};
	
	convert.hcg.hsv = function (hcg) {
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;
	
		var v = c + g * (1.0 - c);
		var f = 0;
	
		if (v > 0.0) {
			f = c / v;
		}
	
		return [hcg[0], f * 100, v * 100];
	};
	
	convert.hcg.hsl = function (hcg) {
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;
	
		var l = g * (1.0 - c) + 0.5 * c;
		var s = 0;
	
		if (l > 0.0 && l < 0.5) {
			s = c / (2 * l);
		} else
		if (l >= 0.5 && l < 1.0) {
			s = c / (2 * (1 - l));
		}
	
		return [hcg[0], s * 100, l * 100];
	};
	
	convert.hcg.hwb = function (hcg) {
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;
		var v = c + g * (1.0 - c);
		return [hcg[0], (v - c) * 100, (1 - v) * 100];
	};
	
	convert.hwb.hcg = function (hwb) {
		var w = hwb[1] / 100;
		var b = hwb[2] / 100;
		var v = 1 - b;
		var c = v - w;
		var g = 0;
	
		if (c < 1) {
			g = (v - c) / (1 - c);
		}
	
		return [hwb[0], c * 100, g * 100];
	};
	
	convert.apple.rgb = function (apple) {
		return [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];
	};
	
	convert.rgb.apple = function (rgb) {
		return [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];
	};
	
	convert.gray.rgb = function (args) {
		return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
	};
	
	convert.gray.hsl = convert.gray.hsv = function (args) {
		return [0, 0, args[0]];
	};
	
	convert.gray.hwb = function (gray) {
		return [0, 100, gray[0]];
	};
	
	convert.gray.cmyk = function (gray) {
		return [0, 0, 0, gray[0]];
	};
	
	convert.gray.lab = function (gray) {
		return [gray[0], 0, 0];
	};
	
	convert.gray.hex = function (gray) {
		var val = Math.round(gray[0] / 100 * 255) & 0xFF;
		var integer = (val << 16) + (val << 8) + val;
	
		var string = integer.toString(16).toUpperCase();
		return '000000'.substring(string.length) + string;
	};
	
	convert.rgb.gray = function (rgb) {
		var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
		return [val / 255 * 100];
	};


/***/ }),
/* 413 */
/***/ (function(module, exports) {

	'use strict'
	
	module.exports = {
		"aliceblue": [240, 248, 255],
		"antiquewhite": [250, 235, 215],
		"aqua": [0, 255, 255],
		"aquamarine": [127, 255, 212],
		"azure": [240, 255, 255],
		"beige": [245, 245, 220],
		"bisque": [255, 228, 196],
		"black": [0, 0, 0],
		"blanchedalmond": [255, 235, 205],
		"blue": [0, 0, 255],
		"blueviolet": [138, 43, 226],
		"brown": [165, 42, 42],
		"burlywood": [222, 184, 135],
		"cadetblue": [95, 158, 160],
		"chartreuse": [127, 255, 0],
		"chocolate": [210, 105, 30],
		"coral": [255, 127, 80],
		"cornflowerblue": [100, 149, 237],
		"cornsilk": [255, 248, 220],
		"crimson": [220, 20, 60],
		"cyan": [0, 255, 255],
		"darkblue": [0, 0, 139],
		"darkcyan": [0, 139, 139],
		"darkgoldenrod": [184, 134, 11],
		"darkgray": [169, 169, 169],
		"darkgreen": [0, 100, 0],
		"darkgrey": [169, 169, 169],
		"darkkhaki": [189, 183, 107],
		"darkmagenta": [139, 0, 139],
		"darkolivegreen": [85, 107, 47],
		"darkorange": [255, 140, 0],
		"darkorchid": [153, 50, 204],
		"darkred": [139, 0, 0],
		"darksalmon": [233, 150, 122],
		"darkseagreen": [143, 188, 143],
		"darkslateblue": [72, 61, 139],
		"darkslategray": [47, 79, 79],
		"darkslategrey": [47, 79, 79],
		"darkturquoise": [0, 206, 209],
		"darkviolet": [148, 0, 211],
		"deeppink": [255, 20, 147],
		"deepskyblue": [0, 191, 255],
		"dimgray": [105, 105, 105],
		"dimgrey": [105, 105, 105],
		"dodgerblue": [30, 144, 255],
		"firebrick": [178, 34, 34],
		"floralwhite": [255, 250, 240],
		"forestgreen": [34, 139, 34],
		"fuchsia": [255, 0, 255],
		"gainsboro": [220, 220, 220],
		"ghostwhite": [248, 248, 255],
		"gold": [255, 215, 0],
		"goldenrod": [218, 165, 32],
		"gray": [128, 128, 128],
		"green": [0, 128, 0],
		"greenyellow": [173, 255, 47],
		"grey": [128, 128, 128],
		"honeydew": [240, 255, 240],
		"hotpink": [255, 105, 180],
		"indianred": [205, 92, 92],
		"indigo": [75, 0, 130],
		"ivory": [255, 255, 240],
		"khaki": [240, 230, 140],
		"lavender": [230, 230, 250],
		"lavenderblush": [255, 240, 245],
		"lawngreen": [124, 252, 0],
		"lemonchiffon": [255, 250, 205],
		"lightblue": [173, 216, 230],
		"lightcoral": [240, 128, 128],
		"lightcyan": [224, 255, 255],
		"lightgoldenrodyellow": [250, 250, 210],
		"lightgray": [211, 211, 211],
		"lightgreen": [144, 238, 144],
		"lightgrey": [211, 211, 211],
		"lightpink": [255, 182, 193],
		"lightsalmon": [255, 160, 122],
		"lightseagreen": [32, 178, 170],
		"lightskyblue": [135, 206, 250],
		"lightslategray": [119, 136, 153],
		"lightslategrey": [119, 136, 153],
		"lightsteelblue": [176, 196, 222],
		"lightyellow": [255, 255, 224],
		"lime": [0, 255, 0],
		"limegreen": [50, 205, 50],
		"linen": [250, 240, 230],
		"magenta": [255, 0, 255],
		"maroon": [128, 0, 0],
		"mediumaquamarine": [102, 205, 170],
		"mediumblue": [0, 0, 205],
		"mediumorchid": [186, 85, 211],
		"mediumpurple": [147, 112, 219],
		"mediumseagreen": [60, 179, 113],
		"mediumslateblue": [123, 104, 238],
		"mediumspringgreen": [0, 250, 154],
		"mediumturquoise": [72, 209, 204],
		"mediumvioletred": [199, 21, 133],
		"midnightblue": [25, 25, 112],
		"mintcream": [245, 255, 250],
		"mistyrose": [255, 228, 225],
		"moccasin": [255, 228, 181],
		"navajowhite": [255, 222, 173],
		"navy": [0, 0, 128],
		"oldlace": [253, 245, 230],
		"olive": [128, 128, 0],
		"olivedrab": [107, 142, 35],
		"orange": [255, 165, 0],
		"orangered": [255, 69, 0],
		"orchid": [218, 112, 214],
		"palegoldenrod": [238, 232, 170],
		"palegreen": [152, 251, 152],
		"paleturquoise": [175, 238, 238],
		"palevioletred": [219, 112, 147],
		"papayawhip": [255, 239, 213],
		"peachpuff": [255, 218, 185],
		"peru": [205, 133, 63],
		"pink": [255, 192, 203],
		"plum": [221, 160, 221],
		"powderblue": [176, 224, 230],
		"purple": [128, 0, 128],
		"rebeccapurple": [102, 51, 153],
		"red": [255, 0, 0],
		"rosybrown": [188, 143, 143],
		"royalblue": [65, 105, 225],
		"saddlebrown": [139, 69, 19],
		"salmon": [250, 128, 114],
		"sandybrown": [244, 164, 96],
		"seagreen": [46, 139, 87],
		"seashell": [255, 245, 238],
		"sienna": [160, 82, 45],
		"silver": [192, 192, 192],
		"skyblue": [135, 206, 235],
		"slateblue": [106, 90, 205],
		"slategray": [112, 128, 144],
		"slategrey": [112, 128, 144],
		"snow": [255, 250, 250],
		"springgreen": [0, 255, 127],
		"steelblue": [70, 130, 180],
		"tan": [210, 180, 140],
		"teal": [0, 128, 128],
		"thistle": [216, 191, 216],
		"tomato": [255, 99, 71],
		"turquoise": [64, 224, 208],
		"violet": [238, 130, 238],
		"wheat": [245, 222, 179],
		"white": [255, 255, 255],
		"whitesmoke": [245, 245, 245],
		"yellow": [255, 255, 0],
		"yellowgreen": [154, 205, 50]
	};


/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(419);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ }),
/* 415 */
/***/ (function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(945);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(187)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(415);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ }),
/* 419 */
/***/ (function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(421)
	  , $export        = __webpack_require__(140)
	  , redefine       = __webpack_require__(423)
	  , hide           = __webpack_require__(263)
	  , has            = __webpack_require__(262)
	  , Iterators      = __webpack_require__(264)
	  , $iterCreate    = __webpack_require__(950)
	  , setToStringTag = __webpack_require__(266)
	  , getProto       = __webpack_require__(46).getProto
	  , ITERATOR       = __webpack_require__(141)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , methods, key;
	  // Fix native
	  if($native){
	    var IteratorPrototype = getProto($default.call(new Base));
	    // Set @@toStringTag to native iterators
	    setToStringTag(IteratorPrototype, TAG, true);
	    // FF fix
	    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    // fix Array#{values, @@iterator}.name in V8 / FF
	    if(DEF_VALUES && $native.name !== VALUES){
	      VALUES_BUG = true;
	      $default = function values(){ return $native.call(this); };
	    }
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES  ? $default : getMethod(VALUES),
	      keys:    IS_SET      ? $default : getMethod(KEYS),
	      entries: !DEF_VALUES ? $default : getMethod('entries')
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ }),
/* 421 */
/***/ (function(module, exports) {

	module.exports = true;

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(140)
	  , core    = __webpack_require__(76)
	  , fails   = __webpack_require__(187);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(263);

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(188)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ }),
/* 425 */
/***/ (function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ }),
/* 426 */
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(52)
	  , core      = __webpack_require__(143)
	  , hide      = __webpack_require__(110)
	  , redefine  = __webpack_require__(192)
	  , ctx       = __webpack_require__(144)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && key in target;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target && !own)redefine(target, key, out);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;  // forced
	$export.G = 2;  // global
	$export.S = 4;  // static
	$export.P = 8;  // proto
	$export.B = 16; // bind
	$export.W = 32; // wrap
	module.exports = $export;

/***/ }),
/* 428 */
/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(430)
	  , $export        = __webpack_require__(427)
	  , redefine       = __webpack_require__(192)
	  , hide           = __webpack_require__(110)
	  , has            = __webpack_require__(428)
	  , Iterators      = __webpack_require__(145)
	  , $iterCreate    = __webpack_require__(975)
	  , setToStringTag = __webpack_require__(271)
	  , getProto       = __webpack_require__(88).getProto
	  , ITERATOR       = __webpack_require__(41)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , methods, key;
	  // Fix native
	  if($native){
	    var IteratorPrototype = getProto($default.call(new Base));
	    // Set @@toStringTag to native iterators
	    setToStringTag(IteratorPrototype, TAG, true);
	    // FF fix
	    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    // fix Array#{values, @@iterator}.name in V8 / FF
	    if(DEF_VALUES && $native.name !== VALUES){
	      VALUES_BUG = true;
	      $default = function values(){ return $native.call(this); };
	    }
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES  ? $default : getMethod(VALUES),
	      keys:    IS_SET      ? $default : getMethod(KEYS),
	      entries: !DEF_VALUES ? $default : getMethod('entries')
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ }),
/* 430 */
/***/ (function(module, exports) {

	module.exports = false;

/***/ }),
/* 431 */
/***/ (function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ }),
/* 432 */
/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ }),
/* 433 */
/***/ (function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	module.exports = CSSselect;
	
	var Pseudos       = __webpack_require__(272),
	    DomUtils      = __webpack_require__(78),
	    findOne       = DomUtils.findOne,
	    findAll       = DomUtils.findAll,
	    getChildren   = DomUtils.getChildren,
	    removeSubsets = DomUtils.removeSubsets,
	    falseFunc     = __webpack_require__(138).falseFunc,
	    compile       = __webpack_require__(996),
	    compileUnsafe = compile.compileUnsafe,
	    compileToken  = compile.compileToken;
	
	function getSelectorFunc(searchFunc){
		return function select(query, elems, options){
	        if(typeof query !== "function") query = compileUnsafe(query, options, elems);
	        if(!Array.isArray(elems)) elems = getChildren(elems);
			else elems = removeSubsets(elems);
			return searchFunc(query, elems);
		};
	}
	
	var selectAll = getSelectorFunc(function selectAll(query, elems){
		return (query === falseFunc || !elems || elems.length === 0) ? [] : findAll(query, elems);
	});
	
	var selectOne = getSelectorFunc(function selectOne(query, elems){
		return (query === falseFunc || !elems || elems.length === 0) ? null : findOne(query, elems);
	});
	
	function is(elem, query, options){
		return (typeof query === "function" ? query : compile(query, options))(elem);
	}
	
	/*
		the exported interface
	*/
	function CSSselect(query, elems, options){
		return selectAll(query, elems, options);
	}
	
	CSSselect.compile = compile;
	CSSselect.filters = Pseudos.filters;
	CSSselect.pseudos = Pseudos.pseudos;
	
	CSSselect.selectAll = selectAll;
	CSSselect.selectOne = selectOne;
	
	CSSselect.is = is;
	
	//legacy methods (might be removed)
	CSSselect.parse = compile;
	CSSselect.iterate = selectAll;
	
	//hooks
	CSSselect._compileUnsafe = compileUnsafe;
	CSSselect._compileToken = compileToken;


/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

	var DomUtils  = __webpack_require__(78),
	    hasAttrib = DomUtils.hasAttrib,
	    getAttributeValue = DomUtils.getAttributeValue,
	    falseFunc = __webpack_require__(138).falseFunc;
	
	//https://github.com/slevithan/XRegExp/blob/master/src/xregexp.js#L469
	var reChars = /[-[\]{}()*+?.,\\^$|#\s]/g;
	
	/*
		attribute selectors
	*/
	
	var attributeRules = {
		__proto__: null,
		equals: function(next, data){
			var name  = data.name,
			    value = data.value;
	
			if(data.ignoreCase){
				value = value.toLowerCase();
	
				return function equalsIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null && attr.toLowerCase() === value && next(elem);
				};
			}
	
			return function equals(elem){
				return getAttributeValue(elem, name) === value && next(elem);
			};
		},
		hyphen: function(next, data){
			var name  = data.name,
			    value = data.value,
			    len = value.length;
	
			if(data.ignoreCase){
				value = value.toLowerCase();
	
				return function hyphenIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null &&
							(attr.length === len || attr.charAt(len) === "-") &&
							attr.substr(0, len).toLowerCase() === value &&
							next(elem);
				};
			}
	
			return function hyphen(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null &&
						attr.substr(0, len) === value &&
						(attr.length === len || attr.charAt(len) === "-") &&
						next(elem);
			};
		},
		element: function(next, data){
			var name = data.name,
			    value = data.value;
	
			if(/\s/.test(value)){
				return falseFunc;
			}
	
			value = value.replace(reChars, "\\$&");
	
			var pattern = "(?:^|\\s)" + value + "(?:$|\\s)",
			    flags = data.ignoreCase ? "i" : "",
			    regex = new RegExp(pattern, flags);
	
			return function element(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && regex.test(attr) && next(elem);
			};
		},
		exists: function(next, data){
			var name = data.name;
			return function exists(elem){
				return hasAttrib(elem, name) && next(elem);
			};
		},
		start: function(next, data){
			var name  = data.name,
			    value = data.value,
			    len = value.length;
	
			if(len === 0){
				return falseFunc;
			}
			
			if(data.ignoreCase){
				value = value.toLowerCase();
	
				return function startIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null && attr.substr(0, len).toLowerCase() === value && next(elem);
				};
			}
	
			return function start(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && attr.substr(0, len) === value && next(elem);
			};
		},
		end: function(next, data){
			var name  = data.name,
			    value = data.value,
			    len   = -value.length;
	
			if(len === 0){
				return falseFunc;
			}
	
			if(data.ignoreCase){
				value = value.toLowerCase();
	
				return function endIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null && attr.substr(len).toLowerCase() === value && next(elem);
				};
			}
	
			return function end(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && attr.substr(len) === value && next(elem);
			};
		},
		any: function(next, data){
			var name  = data.name,
			    value = data.value;
	
			if(value === ""){
				return falseFunc;
			}
	
			if(data.ignoreCase){
				var regex = new RegExp(value.replace(reChars, "\\$&"), "i");
	
				return function anyIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null && regex.test(attr) && next(elem);
				};
			}
	
			return function any(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && attr.indexOf(value) >= 0 && next(elem);
			};
		},
		not: function(next, data){
			var name  = data.name,
			    value = data.value;
	
			if(value === ""){
				return function notEmpty(elem){
					return !!getAttributeValue(elem, name) && next(elem);
				};
			} else if(data.ignoreCase){
				value = value.toLowerCase();
	
				return function notIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null && attr.toLowerCase() !== value && next(elem);
				};
			}
	
			return function not(elem){
				return getAttributeValue(elem, name) !== value && next(elem);
			};
		}
	};
	
	module.exports = {
		compile: function(next, data, options){
			if(options && options.strict && (
				data.ignoreCase || data.action === "not"
			)) throw SyntaxError("Unsupported attribute selector");
			return attributeRules[data.action](next, data);
		},
		rules: attributeRules
	};


/***/ }),
/* 436 */
/***/ (function(module, exports) {

	"use strict";
	
	module.exports = parse;
	
	var re_name = /^(?:\\.|[\w\-\u00b0-\uFFFF])+/,
	    re_escape = /\\([\da-f]{1,6}\s?|(\s)|.)/ig,
	    //modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87
	    re_attr = /^\s*((?:\\.|[\w\u00b0-\uFFFF\-])+)\s*(?:(\S?)=\s*(?:(['"])([^]*?)\3|(#?(?:\\.|[\w\u00b0-\uFFFF\-])*)|)|)\s*(i)?\]/;
	
	var actionTypes = {
		__proto__: null,
		"undefined": "exists",
		"":  "equals",
		"~": "element",
		"^": "start",
		"$": "end",
		"*": "any",
		"!": "not",
		"|": "hyphen"
	};
	
	var simpleSelectors = {
		__proto__: null,
		">": "child",
		"<": "parent",
		"~": "sibling",
		"+": "adjacent"
	};
	
	var attribSelectors = {
		__proto__: null,
		"#": ["id", "equals"],
		".": ["class", "element"]
	};
	
	//pseudos, whose data-property is parsed as well
	var unpackPseudos = {
		__proto__: null,
		"has": true,
		"not": true,
		"matches": true
	};
	
	var stripQuotesFromPseudos = {
		__proto__: null,
		"contains": true,
		"icontains": true
	};
	
	var quotes = {
		__proto__: null,
		"\"": true,
		"'": true
	};
	
	//unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L139
	function funescape( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			// BMP codepoint
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	}
	
	function unescapeCSS(str){
		return str.replace(re_escape, funescape);
	}
	
	function isWhitespace(c){
		return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";
	}
	
	function parse(selector, options){
		var subselects = [];
	
		selector = parseSelector(subselects, selector + "", options);
	
		if(selector !== ""){
			throw new SyntaxError("Unmatched selector: " + selector);
		}
	
		return subselects;
	}
	
	function parseSelector(subselects, selector, options){
		var tokens = [],
			sawWS = false,
			data, firstChar, name, quot;
	
		function getName(){
			var sub = selector.match(re_name)[0];
			selector = selector.substr(sub.length);
			return unescapeCSS(sub);
		}
	
		function stripWhitespace(start){
			while(isWhitespace(selector.charAt(start))) start++;
			selector = selector.substr(start);
		}
	
		function isEscaped(pos) {
			var slashCount = 0;
	
			while (selector.charAt(--pos) === "\\") slashCount++;
			return (slashCount & 1) === 1;
		}
	
		stripWhitespace(0);
	
		while(selector !== ""){
			firstChar = selector.charAt(0);
	
			if(isWhitespace(firstChar)){
				sawWS = true;
				stripWhitespace(1);
			} else if(firstChar in simpleSelectors){
				tokens.push({type: simpleSelectors[firstChar]});
				sawWS = false;
	
				stripWhitespace(1);
			} else if(firstChar === ","){
				if(tokens.length === 0){
					throw new SyntaxError("empty sub-selector");
				}
				subselects.push(tokens);
				tokens = [];
				sawWS = false;
				stripWhitespace(1);
			} else {
				if(sawWS){
					if(tokens.length > 0){
						tokens.push({type: "descendant"});
					}
					sawWS = false;
				}
	
				if(firstChar === "*"){
					selector = selector.substr(1);
					tokens.push({type: "universal"});
				} else if(firstChar in attribSelectors){
					selector = selector.substr(1);
					tokens.push({
						type: "attribute",
						name: attribSelectors[firstChar][0],
						action: attribSelectors[firstChar][1],
						value: getName(),
						ignoreCase: false
					});
				} else if(firstChar === "["){
					selector = selector.substr(1);
					data = selector.match(re_attr);
					if(!data){
						throw new SyntaxError("Malformed attribute selector: " + selector);
					}
					selector = selector.substr(data[0].length);
					name = unescapeCSS(data[1]);
	
					if(
						!options || (
							"lowerCaseAttributeNames" in options ?
								options.lowerCaseAttributeNames :
								!options.xmlMode
						)
					){
						name = name.toLowerCase();
					}
	
					tokens.push({
						type: "attribute",
						name: name,
						action: actionTypes[data[2]],
						value: unescapeCSS(data[4] || data[5] || ""),
						ignoreCase: !!data[6]
					});
	
				} else if(firstChar === ":"){
					if(selector.charAt(1) === ":"){
						selector = selector.substr(2);
						tokens.push({type: "pseudo-element", name: getName().toLowerCase()});
						continue;
					}
	
					selector = selector.substr(1);
	
					name = getName().toLowerCase();
					data = null;
	
					if(selector.charAt(0) === "("){
						if(name in unpackPseudos){
							quot = selector.charAt(1);
							var quoted = quot in quotes;
	
							selector = selector.substr(quoted + 1);
	
							data = [];
							selector = parseSelector(data, selector, options);
	
							if(quoted){
								if(selector.charAt(0) !== quot){
									throw new SyntaxError("unmatched quotes in :" + name);
								} else {
									selector = selector.substr(1);
								}
							}
	
							if(selector.charAt(0) !== ")"){
								throw new SyntaxError("missing closing parenthesis in :" + name + " " + selector);
							}
	
							selector = selector.substr(1);
						} else {
							var pos = 1, counter = 1;
	
							for(; counter > 0 && pos < selector.length; pos++){
								if(selector.charAt(pos) === "(" && !isEscaped(pos)) counter++;
								else if(selector.charAt(pos) === ")" && !isEscaped(pos)) counter--;
							}
	
							if(counter){
								throw new SyntaxError("parenthesis not matched");
							}
	
							data = selector.substr(1, pos - 2);
							selector = selector.substr(pos);
	
							if(name in stripQuotesFromPseudos){
								quot = data.charAt(0);
	
								if(quot === data.slice(-1) && quot in quotes){
									data = data.slice(1, -1);
								}
	
								data = unescapeCSS(data);
							}
						}
					}
	
					tokens.push({type: "pseudo", name: name, data: data});
				} else if(re_name.test(selector)){
					name = getName();
	
					if(!options || ("lowerCaseTags" in options ? options.lowerCaseTags : !options.xmlMode)){
						name = name.toLowerCase();
					}
	
					tokens.push({type: "tag", name: name});
				} else {
					if(tokens.length && tokens[tokens.length - 1].type === "descendant"){
						tokens.pop();
					}
					addToken(subselects, tokens);
					return selector;
				}
			}
		}
	
		addToken(subselects, tokens);
	
		return selector;
	}
	
	function addToken(subselects, tokens){
		if(subselects.length > 0 && tokens.length === 0){
			throw new SyntaxError("empty sub-selector");
		}
	
		subselects.push(tokens);
	}


/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = compareAsc;
	
	var _index = _interopRequireDefault(__webpack_require__(23));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @name compareAsc
	 * @category Common Helpers
	 * @summary Compare the two dates and return -1, 0 or 1.
	 *
	 * @description
	 * Compare the two dates and return 1 if the first date is after the second,
	 * -1 if the first date is before the second or 0 if dates are equal.
	 *
	 * ### v2.0.0 breaking changes:
	 *
	 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
	 *
	 * @param {Date|Number} dateLeft - the first date to compare
	 * @param {Date|Number} dateRight - the second date to compare
	 * @returns {Number} the result of the comparison
	 * @throws {TypeError} 2 arguments required
	 *
	 * @example
	 * // Compare 11 February 1987 and 10 July 1989:
	 * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))
	 * //=> -1
	 *
	 * @example
	 * // Sort the array of dates:
	 * var result = [
	 *   new Date(1995, 6, 2),
	 *   new Date(1987, 1, 11),
	 *   new Date(1989, 6, 10)
	 * ].sort(compareAsc)
	 * //=> [
	 * //   Wed Feb 11 1987 00:00:00,
	 * //   Mon Jul 10 1989 00:00:00,
	 * //   Sun Jul 02 1995 00:00:00
	 * // ]
	 */
	function compareAsc(dirtyDateLeft, dirtyDateRight) {
	  if (arguments.length < 2) {
	    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
	  }
	
	  var dateLeft = (0, _index.default)(dirtyDateLeft);
	  var dateRight = (0, _index.default)(dirtyDateRight);
	  var diff = dateLeft.getTime() - dateRight.getTime();
	
	  if (diff < 0) {
	    return -1;
	  } else if (diff > 0) {
	    return 1; // Return 0 if diff is 0; return NaN if diff is NaN
	  } else {
	    return diff;
	  }
	}
	
	module.exports = exports.default;

/***/ }),
/* 438 */,
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

	var prefix = __webpack_require__(1542)
	var toCamelCase = __webpack_require__(1780)
	var cache = { 'float': 'cssFloat' }
	var addPxToStyle = __webpack_require__(817)
	
	function style (element, property, value) {
	  var camel = cache[property]
	  if (typeof camel === 'undefined') {
	    camel = detect(property)
	  }
	
	  // may be false if CSS prop is unsupported
	  if (camel) {
	    if (value === undefined) {
	      return element.style[camel]
	    }
	
	    element.style[camel] = addPxToStyle(camel, value)
	  }
	}
	
	function each (element, properties) {
	  for (var k in properties) {
	    if (properties.hasOwnProperty(k)) {
	      style(element, k, properties[k])
	    }
	  }
	}
	
	function detect (cssProp) {
	  var camel = toCamelCase(cssProp)
	  var result = prefix(camel)
	  cache[camel] = cache[cssProp] = cache[result] = result
	  return result
	}
	
	function set () {
	  if (arguments.length === 2) {
	    if (typeof arguments[1] === 'string') {
	      arguments[0].style.cssText = arguments[1]
	    } else {
	      each(arguments[0], arguments[1])
	    }
	  } else {
	    style(arguments[0], arguments[1], arguments[2])
	  }
	}
	
	module.exports = set
	module.exports.set = set
	
	module.exports.get = function (element, properties) {
	  if (Array.isArray(properties)) {
	    return properties.reduce(function (obj, prop) {
	      obj[prop] = style(element, prop || '')
	      return obj
	    }, {})
	  } else {
	    return style(element, properties || '')
	  }
	}


/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = camelizeStyleName;
	
	var _camelize = _interopRequireDefault(__webpack_require__(1033));
	
	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/camelizeStyleName.js
	 */
	var msPattern = /^-ms-/;
	
	function camelizeStyleName(string) {
	  return (0, _camelize.default)(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = exports["default"];

/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = scrollbarSize;
	
	var _inDOM = _interopRequireDefault(__webpack_require__(152));
	
	var size;
	
	function scrollbarSize(recalc) {
	  if (!size && size !== 0 || recalc) {
	    if (_inDOM.default) {
	      var scrollDiv = document.createElement('div');
	      scrollDiv.style.position = 'absolute';
	      scrollDiv.style.top = '-9999px';
	      scrollDiv.style.width = '50px';
	      scrollDiv.style.height = '50px';
	      scrollDiv.style.overflow = 'scroll';
	      document.body.appendChild(scrollDiv);
	      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
	      document.body.removeChild(scrollDiv);
	    }
	  }
	
	  return size;
	}
	
	module.exports = exports["default"];

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	  Module dependencies
	*/
	var ElementType = __webpack_require__(111);
	var entities = __webpack_require__(1045);
	
	var unencodedElements = {
	  __proto__: null,
	  style: true,
	  script: true,
	  xmp: true,
	  iframe: true,
	  noembed: true,
	  noframes: true,
	  plaintext: true,
	  noscript: true
	};
	
	/*
	  Format attributes
	*/
	function formatAttrs(attributes, opts) {
	  if (!attributes) return;
	
	  var output = '',
	      value;
	
	  // Loop through the attributes
	  for (var key in attributes) {
	    value = attributes[key];
	    if (output) {
	      output += ' ';
	    }
	
	    output += key;
	    if ((value !== null && value !== '') || opts.xmlMode) {
	        output += '="' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '"';
	    }
	  }
	
	  return output;
	}
	
	/*
	  Self-enclosing tags (stolen from node-htmlparser)
	*/
	var singleTag = {
	  __proto__: null,
	  area: true,
	  base: true,
	  basefont: true,
	  br: true,
	  col: true,
	  command: true,
	  embed: true,
	  frame: true,
	  hr: true,
	  img: true,
	  input: true,
	  isindex: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true,
	};
	
	
	var render = module.exports = function(dom, opts) {
	  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];
	  opts = opts || {};
	
	  var output = '';
	
	  for(var i = 0; i < dom.length; i++){
	    var elem = dom[i];
	
	    if (elem.type === 'root')
	      output += render(elem.children, opts);
	    else if (ElementType.isTag(elem))
	      output += renderTag(elem, opts);
	    else if (elem.type === ElementType.Directive)
	      output += renderDirective(elem);
	    else if (elem.type === ElementType.Comment)
	      output += renderComment(elem);
	    else if (elem.type === ElementType.CDATA)
	      output += renderCdata(elem);
	    else
	      output += renderText(elem, opts);
	  }
	
	  return output;
	};
	
	function renderTag(elem, opts) {
	  // Handle SVG
	  if (elem.name === "svg") opts = {decodeEntities: opts.decodeEntities, xmlMode: true};
	
	  var tag = '<' + elem.name,
	      attribs = formatAttrs(elem.attribs, opts);
	
	  if (attribs) {
	    tag += ' ' + attribs;
	  }
	
	  if (
	    opts.xmlMode
	    && (!elem.children || elem.children.length === 0)
	  ) {
	    tag += '/>';
	  } else {
	    tag += '>';
	    if (elem.children) {
	      tag += render(elem.children, opts);
	    }
	
	    if (!singleTag[elem.name] || opts.xmlMode) {
	      tag += '</' + elem.name + '>';
	    }
	  }
	
	  return tag;
	}
	
	function renderDirective(elem) {
	  return '<' + elem.data + '>';
	}
	
	function renderText(elem, opts) {
	  var data = elem.data || '';
	
	  // if entities weren't decoded, no need to encode them back
	  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {
	    data = entities.encodeXML(data);
	  }
	
	  return data;
	}
	
	function renderCdata(elem) {
	  return '<![CDATA[' + elem.children[0].data + ']]>';
	}
	
	function renderComment(elem) {
	  return '<!--' + elem.data + '-->';
	}


/***/ }),
/* 443 */
/***/ (function(module, exports) {

	// This object will be used as the prototype for Nodes when creating a
	// DOM-Level-1-compliant structure.
	var NodePrototype = module.exports = {
		get firstChild() {
			var children = this.children;
			return children && children[0] || null;
		},
		get lastChild() {
			var children = this.children;
			return children && children[children.length - 1] || null;
		},
		get nodeType() {
			return nodeTypes[this.type] || nodeTypes.element;
		}
	};
	
	var domLvl1 = {
		tagName: "name",
		childNodes: "children",
		parentNode: "parent",
		previousSibling: "prev",
		nextSibling: "next",
		nodeValue: "data"
	};
	
	var nodeTypes = {
		element: 1,
		text: 3,
		cdata: 4,
		comment: 8
	};
	
	Object.keys(domLvl1).forEach(function(key) {
		var shorthand = domLvl1[key];
		Object.defineProperty(NodePrototype, key, {
			get: function() {
				return this[shorthand] || null;
			},
			set: function(val) {
				this[shorthand] = val;
				return val;
			}
		});
	});


/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

	var decodeMap = __webpack_require__(1335);
	
	module.exports = decodeCodePoint;
	
	// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
	function decodeCodePoint(codePoint) {
	    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {
	        return "\uFFFD";
	    }
	
	    if (codePoint in decodeMap) {
	        codePoint = decodeMap[codePoint];
	    }
	
	    var output = "";
	
	    if (codePoint > 0xffff) {
	        codePoint -= 0x10000;
	        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);
	        codePoint = 0xdc00 | (codePoint & 0x3ff);
	    }
	
	    output += String.fromCharCode(codePoint);
	    return output;
	}


/***/ }),
/* 445 */,
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var undefined;
	
	var $SyntaxError = SyntaxError;
	var $Function = Function;
	var $TypeError = TypeError;
	
	// eslint-disable-next-line consistent-return
	var getEvalledConstructor = function (expressionSyntax) {
		try {
			return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
		} catch (e) {}
	};
	
	var $gOPD = Object.getOwnPropertyDescriptor;
	if ($gOPD) {
		try {
			$gOPD({}, '');
		} catch (e) {
			$gOPD = null; // this is IE 8, which has a broken gOPD
		}
	}
	
	var throwTypeError = function () {
		throw new $TypeError();
	};
	var ThrowTypeError = $gOPD
		? (function () {
			try {
				// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
				arguments.callee; // IE 8 does not throw here
				return throwTypeError;
			} catch (calleeThrows) {
				try {
					// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
					return $gOPD(arguments, 'callee').get;
				} catch (gOPDthrows) {
					return throwTypeError;
				}
			}
		}())
		: throwTypeError;
	
	var hasSymbols = __webpack_require__(447)();
	
	var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto
	
	var needsEval = {};
	
	var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);
	
	var INTRINSICS = {
		'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
		'%Array%': Array,
		'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
		'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
		'%AsyncFromSyncIteratorPrototype%': undefined,
		'%AsyncFunction%': needsEval,
		'%AsyncGenerator%': needsEval,
		'%AsyncGeneratorFunction%': needsEval,
		'%AsyncIteratorPrototype%': needsEval,
		'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
		'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
		'%Boolean%': Boolean,
		'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
		'%Date%': Date,
		'%decodeURI%': decodeURI,
		'%decodeURIComponent%': decodeURIComponent,
		'%encodeURI%': encodeURI,
		'%encodeURIComponent%': encodeURIComponent,
		'%Error%': Error,
		'%eval%': eval, // eslint-disable-line no-eval
		'%EvalError%': EvalError,
		'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
		'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
		'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
		'%Function%': $Function,
		'%GeneratorFunction%': needsEval,
		'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
		'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
		'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
		'%isFinite%': isFinite,
		'%isNaN%': isNaN,
		'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
		'%JSON%': typeof JSON === 'object' ? JSON : undefined,
		'%Map%': typeof Map === 'undefined' ? undefined : Map,
		'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
		'%Math%': Math,
		'%Number%': Number,
		'%Object%': Object,
		'%parseFloat%': parseFloat,
		'%parseInt%': parseInt,
		'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
		'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
		'%RangeError%': RangeError,
		'%ReferenceError%': ReferenceError,
		'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
		'%RegExp%': RegExp,
		'%Set%': typeof Set === 'undefined' ? undefined : Set,
		'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
		'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
		'%String%': String,
		'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
		'%Symbol%': hasSymbols ? Symbol : undefined,
		'%SyntaxError%': $SyntaxError,
		'%ThrowTypeError%': ThrowTypeError,
		'%TypedArray%': TypedArray,
		'%TypeError%': $TypeError,
		'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
		'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
		'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
		'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
		'%URIError%': URIError,
		'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
		'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
		'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
	};
	
	var doEval = function doEval(name) {
		var value;
		if (name === '%AsyncFunction%') {
			value = getEvalledConstructor('async function () {}');
		} else if (name === '%GeneratorFunction%') {
			value = getEvalledConstructor('function* () {}');
		} else if (name === '%AsyncGeneratorFunction%') {
			value = getEvalledConstructor('async function* () {}');
		} else if (name === '%AsyncGenerator%') {
			var fn = doEval('%AsyncGeneratorFunction%');
			if (fn) {
				value = fn.prototype;
			}
		} else if (name === '%AsyncIteratorPrototype%') {
			var gen = doEval('%AsyncGenerator%');
			if (gen) {
				value = getProto(gen.prototype);
			}
		}
	
		INTRINSICS[name] = value;
	
		return value;
	};
	
	var LEGACY_ALIASES = {
		'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
		'%ArrayPrototype%': ['Array', 'prototype'],
		'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
		'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
		'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
		'%ArrayProto_values%': ['Array', 'prototype', 'values'],
		'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
		'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
		'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
		'%BooleanPrototype%': ['Boolean', 'prototype'],
		'%DataViewPrototype%': ['DataView', 'prototype'],
		'%DatePrototype%': ['Date', 'prototype'],
		'%ErrorPrototype%': ['Error', 'prototype'],
		'%EvalErrorPrototype%': ['EvalError', 'prototype'],
		'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
		'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
		'%FunctionPrototype%': ['Function', 'prototype'],
		'%Generator%': ['GeneratorFunction', 'prototype'],
		'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
		'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
		'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
		'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
		'%JSONParse%': ['JSON', 'parse'],
		'%JSONStringify%': ['JSON', 'stringify'],
		'%MapPrototype%': ['Map', 'prototype'],
		'%NumberPrototype%': ['Number', 'prototype'],
		'%ObjectPrototype%': ['Object', 'prototype'],
		'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
		'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
		'%PromisePrototype%': ['Promise', 'prototype'],
		'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
		'%Promise_all%': ['Promise', 'all'],
		'%Promise_reject%': ['Promise', 'reject'],
		'%Promise_resolve%': ['Promise', 'resolve'],
		'%RangeErrorPrototype%': ['RangeError', 'prototype'],
		'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
		'%RegExpPrototype%': ['RegExp', 'prototype'],
		'%SetPrototype%': ['Set', 'prototype'],
		'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
		'%StringPrototype%': ['String', 'prototype'],
		'%SymbolPrototype%': ['Symbol', 'prototype'],
		'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
		'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
		'%TypeErrorPrototype%': ['TypeError', 'prototype'],
		'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
		'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
		'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
		'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
		'%URIErrorPrototype%': ['URIError', 'prototype'],
		'%WeakMapPrototype%': ['WeakMap', 'prototype'],
		'%WeakSetPrototype%': ['WeakSet', 'prototype']
	};
	
	var bind = __webpack_require__(291);
	var hasOwn = __webpack_require__(1199);
	var $concat = bind.call(Function.call, Array.prototype.concat);
	var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
	var $replace = bind.call(Function.call, String.prototype.replace);
	var $strSlice = bind.call(Function.call, String.prototype.slice);
	
	/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
	var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
	var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
	var stringToPath = function stringToPath(string) {
		var first = $strSlice(string, 0, 1);
		var last = $strSlice(string, -1);
		if (first === '%' && last !== '%') {
			throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
		} else if (last === '%' && first !== '%') {
			throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
		}
		var result = [];
		$replace(string, rePropName, function (match, number, quote, subString) {
			result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
		});
		return result;
	};
	/* end adaptation */
	
	var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
		var intrinsicName = name;
		var alias;
		if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
			alias = LEGACY_ALIASES[intrinsicName];
			intrinsicName = '%' + alias[0] + '%';
		}
	
		if (hasOwn(INTRINSICS, intrinsicName)) {
			var value = INTRINSICS[intrinsicName];
			if (value === needsEval) {
				value = doEval(intrinsicName);
			}
			if (typeof value === 'undefined' && !allowMissing) {
				throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
			}
	
			return {
				alias: alias,
				name: intrinsicName,
				value: value
			};
		}
	
		throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
	};
	
	module.exports = function GetIntrinsic(name, allowMissing) {
		if (typeof name !== 'string' || name.length === 0) {
			throw new $TypeError('intrinsic name must be a non-empty string');
		}
		if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
			throw new $TypeError('"allowMissing" argument must be a boolean');
		}
	
		var parts = stringToPath(name);
		var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
	
		var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
		var intrinsicRealName = intrinsic.name;
		var value = intrinsic.value;
		var skipFurtherCaching = false;
	
		var alias = intrinsic.alias;
		if (alias) {
			intrinsicBaseName = alias[0];
			$spliceApply(parts, $concat([0, 1], alias));
		}
	
		for (var i = 1, isOwn = true; i < parts.length; i += 1) {
			var part = parts[i];
			var first = $strSlice(part, 0, 1);
			var last = $strSlice(part, -1);
			if (
				(
					(first === '"' || first === "'" || first === '`')
					|| (last === '"' || last === "'" || last === '`')
				)
				&& first !== last
			) {
				throw new $SyntaxError('property names with quotes must have matching quotes');
			}
			if (part === 'constructor' || !isOwn) {
				skipFurtherCaching = true;
			}
	
			intrinsicBaseName += '.' + part;
			intrinsicRealName = '%' + intrinsicBaseName + '%';
	
			if (hasOwn(INTRINSICS, intrinsicRealName)) {
				value = INTRINSICS[intrinsicRealName];
			} else if (value != null) {
				if (!(part in value)) {
					if (!allowMissing) {
						throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
					}
					return void undefined;
				}
				if ($gOPD && (i + 1) >= parts.length) {
					var desc = $gOPD(value, part);
					isOwn = !!desc;
	
					// By convention, when a data property is converted to an accessor
					// property to emulate a data property that does not suffer from
					// the override mistake, that accessor's getter is marked with
					// an `originalValue` property. Here, when we detect this, we
					// uphold the illusion by pretending to see that original data
					// property, i.e., returning the value rather than the getter
					// itself.
					if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
						value = desc.get;
					} else {
						value = value[part];
					}
				} else {
					isOwn = hasOwn(value, part);
					value = value[part];
				}
	
				if (isOwn && !skipFurtherCaching) {
					INTRINSICS[intrinsicRealName] = value;
				}
			}
		}
		return value;
	};


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var origSymbol = typeof Symbol !== 'undefined' && Symbol;
	var hasSymbolSham = __webpack_require__(1198);
	
	module.exports = function hasNativeSymbols() {
		if (typeof origSymbol !== 'function') { return false; }
		if (typeof Symbol !== 'function') { return false; }
		if (typeof origSymbol('foo') !== 'symbol') { return false; }
		if (typeof Symbol('bar') !== 'symbol') { return false; }
	
		return hasSymbolSham();
	};


/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

	var Tokenizer = __webpack_require__(449);
	
	/*
		Options:
	
		xmlMode: Disables the special behavior for script/style tags (false by default)
		lowerCaseAttributeNames: call .toLowerCase for each attribute name (true if xmlMode is `false`)
		lowerCaseTags: call .toLowerCase for each tag name (true if xmlMode is `false`)
	*/
	
	/*
		Callbacks:
	
		oncdataend,
		oncdatastart,
		onclosetag,
		oncomment,
		oncommentend,
		onerror,
		onopentag,
		onprocessinginstruction,
		onreset,
		ontext
	*/
	
	var formTags = {
	    input: true,
	    option: true,
	    optgroup: true,
	    select: true,
	    button: true,
	    datalist: true,
	    textarea: true
	};
	
	var openImpliesClose = {
	    tr: { tr: true, th: true, td: true },
	    th: { th: true },
	    td: { thead: true, th: true, td: true },
	    body: { head: true, link: true, script: true },
	    li: { li: true },
	    p: { p: true },
	    h1: { p: true },
	    h2: { p: true },
	    h3: { p: true },
	    h4: { p: true },
	    h5: { p: true },
	    h6: { p: true },
	    select: formTags,
	    input: formTags,
	    output: formTags,
	    button: formTags,
	    datalist: formTags,
	    textarea: formTags,
	    option: { option: true },
	    optgroup: { optgroup: true }
	};
	
	var voidElements = {
	    __proto__: null,
	    area: true,
	    base: true,
	    basefont: true,
	    br: true,
	    col: true,
	    command: true,
	    embed: true,
	    frame: true,
	    hr: true,
	    img: true,
	    input: true,
	    isindex: true,
	    keygen: true,
	    link: true,
	    meta: true,
	    param: true,
	    source: true,
	    track: true,
	    wbr: true
	};
	
	var foreignContextElements = {
	    __proto__: null,
	    math: true,
	    svg: true
	};
	var htmlIntegrationElements = {
	    __proto__: null,
	    mi: true,
	    mo: true,
	    mn: true,
	    ms: true,
	    mtext: true,
	    "annotation-xml": true,
	    foreignObject: true,
	    desc: true,
	    title: true
	};
	
	var re_nameEnd = /\s|\//;
	
	function Parser(cbs, options) {
	    this._options = options || {};
	    this._cbs = cbs || {};
	
	    this._tagname = "";
	    this._attribname = "";
	    this._attribvalue = "";
	    this._attribs = null;
	    this._stack = [];
	    this._foreignContext = [];
	
	    this.startIndex = 0;
	    this.endIndex = null;
	
	    this._lowerCaseTagNames =
	        "lowerCaseTags" in this._options
	            ? !!this._options.lowerCaseTags
	            : !this._options.xmlMode;
	    this._lowerCaseAttributeNames =
	        "lowerCaseAttributeNames" in this._options
	            ? !!this._options.lowerCaseAttributeNames
	            : !this._options.xmlMode;
	
	    if (this._options.Tokenizer) {
	        Tokenizer = this._options.Tokenizer;
	    }
	    this._tokenizer = new Tokenizer(this._options, this);
	
	    if (this._cbs.onparserinit) this._cbs.onparserinit(this);
	}
	
	__webpack_require__(43)(Parser, __webpack_require__(112).EventEmitter);
	
	Parser.prototype._updatePosition = function(initialOffset) {
	    if (this.endIndex === null) {
	        if (this._tokenizer._sectionStart <= initialOffset) {
	            this.startIndex = 0;
	        } else {
	            this.startIndex = this._tokenizer._sectionStart - initialOffset;
	        }
	    } else this.startIndex = this.endIndex + 1;
	    this.endIndex = this._tokenizer.getAbsoluteIndex();
	};
	
	//Tokenizer event handlers
	Parser.prototype.ontext = function(data) {
	    this._updatePosition(1);
	    this.endIndex--;
	
	    if (this._cbs.ontext) this._cbs.ontext(data);
	};
	
	Parser.prototype.onopentagname = function(name) {
	    if (this._lowerCaseTagNames) {
	        name = name.toLowerCase();
	    }
	
	    this._tagname = name;
	
	    if (!this._options.xmlMode && name in openImpliesClose) {
	        for (
	            var el;
	            (el = this._stack[this._stack.length - 1]) in
	            openImpliesClose[name];
	            this.onclosetag(el)
	        );
	    }
	
	    if (this._options.xmlMode || !(name in voidElements)) {
	        this._stack.push(name);
	        if (name in foreignContextElements) this._foreignContext.push(true);
	        else if (name in htmlIntegrationElements)
	            this._foreignContext.push(false);
	    }
	
	    if (this._cbs.onopentagname) this._cbs.onopentagname(name);
	    if (this._cbs.onopentag) this._attribs = {};
	};
	
	Parser.prototype.onopentagend = function() {
	    this._updatePosition(1);
	
	    if (this._attribs) {
	        if (this._cbs.onopentag)
	            this._cbs.onopentag(this._tagname, this._attribs);
	        this._attribs = null;
	    }
	
	    if (
	        !this._options.xmlMode &&
	        this._cbs.onclosetag &&
	        this._tagname in voidElements
	    ) {
	        this._cbs.onclosetag(this._tagname);
	    }
	
	    this._tagname = "";
	};
	
	Parser.prototype.onclosetag = function(name) {
	    this._updatePosition(1);
	
	    if (this._lowerCaseTagNames) {
	        name = name.toLowerCase();
	    }
	    
	    if (name in foreignContextElements || name in htmlIntegrationElements) {
	        this._foreignContext.pop();
	    }
	
	    if (
	        this._stack.length &&
	        (!(name in voidElements) || this._options.xmlMode)
	    ) {
	        var pos = this._stack.lastIndexOf(name);
	        if (pos !== -1) {
	            if (this._cbs.onclosetag) {
	                pos = this._stack.length - pos;
	                while (pos--) this._cbs.onclosetag(this._stack.pop());
	            } else this._stack.length = pos;
	        } else if (name === "p" && !this._options.xmlMode) {
	            this.onopentagname(name);
	            this._closeCurrentTag();
	        }
	    } else if (!this._options.xmlMode && (name === "br" || name === "p")) {
	        this.onopentagname(name);
	        this._closeCurrentTag();
	    }
	};
	
	Parser.prototype.onselfclosingtag = function() {
	    if (
	        this._options.xmlMode ||
	        this._options.recognizeSelfClosing ||
	        this._foreignContext[this._foreignContext.length - 1]
	    ) {
	        this._closeCurrentTag();
	    } else {
	        this.onopentagend();
	    }
	};
	
	Parser.prototype._closeCurrentTag = function() {
	    var name = this._tagname;
	
	    this.onopentagend();
	
	    //self-closing tags will be on the top of the stack
	    //(cheaper check than in onclosetag)
	    if (this._stack[this._stack.length - 1] === name) {
	        if (this._cbs.onclosetag) {
	            this._cbs.onclosetag(name);
	        }
	        this._stack.pop();
	        
	    }
	};
	
	Parser.prototype.onattribname = function(name) {
	    if (this._lowerCaseAttributeNames) {
	        name = name.toLowerCase();
	    }
	    this._attribname = name;
	};
	
	Parser.prototype.onattribdata = function(value) {
	    this._attribvalue += value;
	};
	
	Parser.prototype.onattribend = function() {
	    if (this._cbs.onattribute)
	        this._cbs.onattribute(this._attribname, this._attribvalue);
	    if (
	        this._attribs &&
	        !Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)
	    ) {
	        this._attribs[this._attribname] = this._attribvalue;
	    }
	    this._attribname = "";
	    this._attribvalue = "";
	};
	
	Parser.prototype._getInstructionName = function(value) {
	    var idx = value.search(re_nameEnd),
	        name = idx < 0 ? value : value.substr(0, idx);
	
	    if (this._lowerCaseTagNames) {
	        name = name.toLowerCase();
	    }
	
	    return name;
	};
	
	Parser.prototype.ondeclaration = function(value) {
	    if (this._cbs.onprocessinginstruction) {
	        var name = this._getInstructionName(value);
	        this._cbs.onprocessinginstruction("!" + name, "!" + value);
	    }
	};
	
	Parser.prototype.onprocessinginstruction = function(value) {
	    if (this._cbs.onprocessinginstruction) {
	        var name = this._getInstructionName(value);
	        this._cbs.onprocessinginstruction("?" + name, "?" + value);
	    }
	};
	
	Parser.prototype.oncomment = function(value) {
	    this._updatePosition(4);
	
	    if (this._cbs.oncomment) this._cbs.oncomment(value);
	    if (this._cbs.oncommentend) this._cbs.oncommentend();
	};
	
	Parser.prototype.oncdata = function(value) {
	    this._updatePosition(1);
	
	    if (this._options.xmlMode || this._options.recognizeCDATA) {
	        if (this._cbs.oncdatastart) this._cbs.oncdatastart();
	        if (this._cbs.ontext) this._cbs.ontext(value);
	        if (this._cbs.oncdataend) this._cbs.oncdataend();
	    } else {
	        this.oncomment("[CDATA[" + value + "]]");
	    }
	};
	
	Parser.prototype.onerror = function(err) {
	    if (this._cbs.onerror) this._cbs.onerror(err);
	};
	
	Parser.prototype.onend = function() {
	    if (this._cbs.onclosetag) {
	        for (
	            var i = this._stack.length;
	            i > 0;
	            this._cbs.onclosetag(this._stack[--i])
	        );
	    }
	    if (this._cbs.onend) this._cbs.onend();
	};
	
	//Resets the parser to a blank state, ready to parse a new HTML document
	Parser.prototype.reset = function() {
	    if (this._cbs.onreset) this._cbs.onreset();
	    this._tokenizer.reset();
	
	    this._tagname = "";
	    this._attribname = "";
	    this._attribs = null;
	    this._stack = [];
	
	    if (this._cbs.onparserinit) this._cbs.onparserinit(this);
	};
	
	//Parses a complete HTML document and pushes it to the handler
	Parser.prototype.parseComplete = function(data) {
	    this.reset();
	    this.end(data);
	};
	
	Parser.prototype.write = function(chunk) {
	    this._tokenizer.write(chunk);
	};
	
	Parser.prototype.end = function(chunk) {
	    this._tokenizer.end(chunk);
	};
	
	Parser.prototype.pause = function() {
	    this._tokenizer.pause();
	};
	
	Parser.prototype.resume = function() {
	    this._tokenizer.resume();
	};
	
	//alias for backwards compat
	Parser.prototype.parseChunk = Parser.prototype.write;
	Parser.prototype.done = Parser.prototype.end;
	
	module.exports = Parser;


/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = Tokenizer;
	
	var decodeCodePoint = __webpack_require__(444);
	var entityMap = __webpack_require__(293);
	var legacyMap = __webpack_require__(453);
	var xmlMap = __webpack_require__(294);
	
	var i = 0;
	
	var TEXT = i++;
	var BEFORE_TAG_NAME = i++; //after <
	var IN_TAG_NAME = i++;
	var IN_SELF_CLOSING_TAG = i++;
	var BEFORE_CLOSING_TAG_NAME = i++;
	var IN_CLOSING_TAG_NAME = i++;
	var AFTER_CLOSING_TAG_NAME = i++;
	
	//attributes
	var BEFORE_ATTRIBUTE_NAME = i++;
	var IN_ATTRIBUTE_NAME = i++;
	var AFTER_ATTRIBUTE_NAME = i++;
	var BEFORE_ATTRIBUTE_VALUE = i++;
	var IN_ATTRIBUTE_VALUE_DQ = i++; // "
	var IN_ATTRIBUTE_VALUE_SQ = i++; // '
	var IN_ATTRIBUTE_VALUE_NQ = i++;
	
	//declarations
	var BEFORE_DECLARATION = i++; // !
	var IN_DECLARATION = i++;
	
	//processing instructions
	var IN_PROCESSING_INSTRUCTION = i++; // ?
	
	//comments
	var BEFORE_COMMENT = i++;
	var IN_COMMENT = i++;
	var AFTER_COMMENT_1 = i++;
	var AFTER_COMMENT_2 = i++;
	
	//cdata
	var BEFORE_CDATA_1 = i++; // [
	var BEFORE_CDATA_2 = i++; // C
	var BEFORE_CDATA_3 = i++; // D
	var BEFORE_CDATA_4 = i++; // A
	var BEFORE_CDATA_5 = i++; // T
	var BEFORE_CDATA_6 = i++; // A
	var IN_CDATA = i++; // [
	var AFTER_CDATA_1 = i++; // ]
	var AFTER_CDATA_2 = i++; // ]
	
	//special tags
	var BEFORE_SPECIAL = i++; //S
	var BEFORE_SPECIAL_END = i++; //S
	
	var BEFORE_SCRIPT_1 = i++; //C
	var BEFORE_SCRIPT_2 = i++; //R
	var BEFORE_SCRIPT_3 = i++; //I
	var BEFORE_SCRIPT_4 = i++; //P
	var BEFORE_SCRIPT_5 = i++; //T
	var AFTER_SCRIPT_1 = i++; //C
	var AFTER_SCRIPT_2 = i++; //R
	var AFTER_SCRIPT_3 = i++; //I
	var AFTER_SCRIPT_4 = i++; //P
	var AFTER_SCRIPT_5 = i++; //T
	
	var BEFORE_STYLE_1 = i++; //T
	var BEFORE_STYLE_2 = i++; //Y
	var BEFORE_STYLE_3 = i++; //L
	var BEFORE_STYLE_4 = i++; //E
	var AFTER_STYLE_1 = i++; //T
	var AFTER_STYLE_2 = i++; //Y
	var AFTER_STYLE_3 = i++; //L
	var AFTER_STYLE_4 = i++; //E
	
	var BEFORE_ENTITY = i++; //&
	var BEFORE_NUMERIC_ENTITY = i++; //#
	var IN_NAMED_ENTITY = i++;
	var IN_NUMERIC_ENTITY = i++;
	var IN_HEX_ENTITY = i++; //X
	
	var j = 0;
	
	var SPECIAL_NONE = j++;
	var SPECIAL_SCRIPT = j++;
	var SPECIAL_STYLE = j++;
	
	function whitespace(c) {
	    return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";
	}
	
	function ifElseState(upper, SUCCESS, FAILURE) {
	    var lower = upper.toLowerCase();
	
	    if (upper === lower) {
	        return function(c) {
	            if (c === lower) {
	                this._state = SUCCESS;
	            } else {
	                this._state = FAILURE;
	                this._index--;
	            }
	        };
	    } else {
	        return function(c) {
	            if (c === lower || c === upper) {
	                this._state = SUCCESS;
	            } else {
	                this._state = FAILURE;
	                this._index--;
	            }
	        };
	    }
	}
	
	function consumeSpecialNameChar(upper, NEXT_STATE) {
	    var lower = upper.toLowerCase();
	
	    return function(c) {
	        if (c === lower || c === upper) {
	            this._state = NEXT_STATE;
	        } else {
	            this._state = IN_TAG_NAME;
	            this._index--; //consume the token again
	        }
	    };
	}
	
	function Tokenizer(options, cbs) {
	    this._state = TEXT;
	    this._buffer = "";
	    this._sectionStart = 0;
	    this._index = 0;
	    this._bufferOffset = 0; //chars removed from _buffer
	    this._baseState = TEXT;
	    this._special = SPECIAL_NONE;
	    this._cbs = cbs;
	    this._running = true;
	    this._ended = false;
	    this._xmlMode = !!(options && options.xmlMode);
	    this._decodeEntities = !!(options && options.decodeEntities);
	}
	
	Tokenizer.prototype._stateText = function(c) {
	    if (c === "<") {
	        if (this._index > this._sectionStart) {
	            this._cbs.ontext(this._getSection());
	        }
	        this._state = BEFORE_TAG_NAME;
	        this._sectionStart = this._index;
	    } else if (
	        this._decodeEntities &&
	        this._special === SPECIAL_NONE &&
	        c === "&"
	    ) {
	        if (this._index > this._sectionStart) {
	            this._cbs.ontext(this._getSection());
	        }
	        this._baseState = TEXT;
	        this._state = BEFORE_ENTITY;
	        this._sectionStart = this._index;
	    }
	};
	
	Tokenizer.prototype._stateBeforeTagName = function(c) {
	    if (c === "/") {
	        this._state = BEFORE_CLOSING_TAG_NAME;
	    } else if (c === "<") {
	        this._cbs.ontext(this._getSection());
	        this._sectionStart = this._index;
	    } else if (c === ">" || this._special !== SPECIAL_NONE || whitespace(c)) {
	        this._state = TEXT;
	    } else if (c === "!") {
	        this._state = BEFORE_DECLARATION;
	        this._sectionStart = this._index + 1;
	    } else if (c === "?") {
	        this._state = IN_PROCESSING_INSTRUCTION;
	        this._sectionStart = this._index + 1;
	    } else {
	        this._state =
	            !this._xmlMode && (c === "s" || c === "S")
	                ? BEFORE_SPECIAL
	                : IN_TAG_NAME;
	        this._sectionStart = this._index;
	    }
	};
	
	Tokenizer.prototype._stateInTagName = function(c) {
	    if (c === "/" || c === ">" || whitespace(c)) {
	        this._emitToken("onopentagname");
	        this._state = BEFORE_ATTRIBUTE_NAME;
	        this._index--;
	    }
	};
	
	Tokenizer.prototype._stateBeforeCloseingTagName = function(c) {
	    if (whitespace(c));
	    else if (c === ">") {
	        this._state = TEXT;
	    } else if (this._special !== SPECIAL_NONE) {
	        if (c === "s" || c === "S") {
	            this._state = BEFORE_SPECIAL_END;
	        } else {
	            this._state = TEXT;
	            this._index--;
	        }
	    } else {
	        this._state = IN_CLOSING_TAG_NAME;
	        this._sectionStart = this._index;
	    }
	};
	
	Tokenizer.prototype._stateInCloseingTagName = function(c) {
	    if (c === ">" || whitespace(c)) {
	        this._emitToken("onclosetag");
	        this._state = AFTER_CLOSING_TAG_NAME;
	        this._index--;
	    }
	};
	
	Tokenizer.prototype._stateAfterCloseingTagName = function(c) {
	    //skip everything until ">"
	    if (c === ">") {
	        this._state = TEXT;
	        this._sectionStart = this._index + 1;
	    }
	};
	
	Tokenizer.prototype._stateBeforeAttributeName = function(c) {
	    if (c === ">") {
	        this._cbs.onopentagend();
	        this._state = TEXT;
	        this._sectionStart = this._index + 1;
	    } else if (c === "/") {
	        this._state = IN_SELF_CLOSING_TAG;
	    } else if (!whitespace(c)) {
	        this._state = IN_ATTRIBUTE_NAME;
	        this._sectionStart = this._index;
	    }
	};
	
	Tokenizer.prototype._stateInSelfClosingTag = function(c) {
	    if (c === ">") {
	        this._cbs.onselfclosingtag();
	        this._state = TEXT;
	        this._sectionStart = this._index + 1;
	    } else if (!whitespace(c)) {
	        this._state = BEFORE_ATTRIBUTE_NAME;
	        this._index--;
	    }
	};
	
	Tokenizer.prototype._stateInAttributeName = function(c) {
	    if (c === "=" || c === "/" || c === ">" || whitespace(c)) {
	        this._cbs.onattribname(this._getSection());
	        this._sectionStart = -1;
	        this._state = AFTER_ATTRIBUTE_NAME;
	        this._index--;
	    }
	};
	
	Tokenizer.prototype._stateAfterAttributeName = function(c) {
	    if (c === "=") {
	        this._state = BEFORE_ATTRIBUTE_VALUE;
	    } else if (c === "/" || c === ">") {
	        this._cbs.onattribend();
	        this._state = BEFORE_ATTRIBUTE_NAME;
	        this._index--;
	    } else if (!whitespace(c)) {
	        this._cbs.onattribend();
	        this._state = IN_ATTRIBUTE_NAME;
	        this._sectionStart = this._index;
	    }
	};
	
	Tokenizer.prototype._stateBeforeAttributeValue = function(c) {
	    if (c === '"') {
	        this._state = IN_ATTRIBUTE_VALUE_DQ;
	        this._sectionStart = this._index + 1;
	    } else if (c === "'") {
	        this._state = IN_ATTRIBUTE_VALUE_SQ;
	        this._sectionStart = this._index + 1;
	    } else if (!whitespace(c)) {
	        this._state = IN_ATTRIBUTE_VALUE_NQ;
	        this._sectionStart = this._index;
	        this._index--; //reconsume token
	    }
	};
	
	Tokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c) {
	    if (c === '"') {
	        this._emitToken("onattribdata");
	        this._cbs.onattribend();
	        this._state = BEFORE_ATTRIBUTE_NAME;
	    } else if (this._decodeEntities && c === "&") {
	        this._emitToken("onattribdata");
	        this._baseState = this._state;
	        this._state = BEFORE_ENTITY;
	        this._sectionStart = this._index;
	    }
	};
	
	Tokenizer.prototype._stateInAttributeValueSingleQuotes = function(c) {
	    if (c === "'") {
	        this._emitToken("onattribdata");
	        this._cbs.onattribend();
	        this._state = BEFORE_ATTRIBUTE_NAME;
	    } else if (this._decodeEntities && c === "&") {
	        this._emitToken("onattribdata");
	        this._baseState = this._state;
	        this._state = BEFORE_ENTITY;
	        this._sectionStart = this._index;
	    }
	};
	
	Tokenizer.prototype._stateInAttributeValueNoQuotes = function(c) {
	    if (whitespace(c) || c === ">") {
	        this._emitToken("onattribdata");
	        this._cbs.onattribend();
	        this._state = BEFORE_ATTRIBUTE_NAME;
	        this._index--;
	    } else if (this._decodeEntities && c === "&") {
	        this._emitToken("onattribdata");
	        this._baseState = this._state;
	        this._state = BEFORE_ENTITY;
	        this._sectionStart = this._index;
	    }
	};
	
	Tokenizer.prototype._stateBeforeDeclaration = function(c) {
	    this._state =
	        c === "["
	            ? BEFORE_CDATA_1
	            : c === "-"
	                ? BEFORE_COMMENT
	                : IN_DECLARATION;
	};
	
	Tokenizer.prototype._stateInDeclaration = function(c) {
	    if (c === ">") {
	        this._cbs.ondeclaration(this._getSection());
	        this._state = TEXT;
	        this._sectionStart = this._index + 1;
	    }
	};
	
	Tokenizer.prototype._stateInProcessingInstruction = function(c) {
	    if (c === ">") {
	        this._cbs.onprocessinginstruction(this._getSection());
	        this._state = TEXT;
	        this._sectionStart = this._index + 1;
	    }
	};
	
	Tokenizer.prototype._stateBeforeComment = function(c) {
	    if (c === "-") {
	        this._state = IN_COMMENT;
	        this._sectionStart = this._index + 1;
	    } else {
	        this._state = IN_DECLARATION;
	    }
	};
	
	Tokenizer.prototype._stateInComment = function(c) {
	    if (c === "-") this._state = AFTER_COMMENT_1;
	};
	
	Tokenizer.prototype._stateAfterComment1 = function(c) {
	    if (c === "-") {
	        this._state = AFTER_COMMENT_2;
	    } else {
	        this._state = IN_COMMENT;
	    }
	};
	
	Tokenizer.prototype._stateAfterComment2 = function(c) {
	    if (c === ">") {
	        //remove 2 trailing chars
	        this._cbs.oncomment(
	            this._buffer.substring(this._sectionStart, this._index - 2)
	        );
	        this._state = TEXT;
	        this._sectionStart = this._index + 1;
	    } else if (c !== "-") {
	        this._state = IN_COMMENT;
	    }
	    // else: stay in AFTER_COMMENT_2 (`--->`)
	};
	
	Tokenizer.prototype._stateBeforeCdata1 = ifElseState(
	    "C",
	    BEFORE_CDATA_2,
	    IN_DECLARATION
	);
	Tokenizer.prototype._stateBeforeCdata2 = ifElseState(
	    "D",
	    BEFORE_CDATA_3,
	    IN_DECLARATION
	);
	Tokenizer.prototype._stateBeforeCdata3 = ifElseState(
	    "A",
	    BEFORE_CDATA_4,
	    IN_DECLARATION
	);
	Tokenizer.prototype._stateBeforeCdata4 = ifElseState(
	    "T",
	    BEFORE_CDATA_5,
	    IN_DECLARATION
	);
	Tokenizer.prototype._stateBeforeCdata5 = ifElseState(
	    "A",
	    BEFORE_CDATA_6,
	    IN_DECLARATION
	);
	
	Tokenizer.prototype._stateBeforeCdata6 = function(c) {
	    if (c === "[") {
	        this._state = IN_CDATA;
	        this._sectionStart = this._index + 1;
	    } else {
	        this._state = IN_DECLARATION;
	        this._index--;
	    }
	};
	
	Tokenizer.prototype._stateInCdata = function(c) {
	    if (c === "]") this._state = AFTER_CDATA_1;
	};
	
	Tokenizer.prototype._stateAfterCdata1 = function(c) {
	    if (c === "]") this._state = AFTER_CDATA_2;
	    else this._state = IN_CDATA;
	};
	
	Tokenizer.prototype._stateAfterCdata2 = function(c) {
	    if (c === ">") {
	        //remove 2 trailing chars
	        this._cbs.oncdata(
	            this._buffer.substring(this._sectionStart, this._index - 2)
	        );
	        this._state = TEXT;
	        this._sectionStart = this._index + 1;
	    } else if (c !== "]") {
	        this._state = IN_CDATA;
	    }
	    //else: stay in AFTER_CDATA_2 (`]]]>`)
	};
	
	Tokenizer.prototype._stateBeforeSpecial = function(c) {
	    if (c === "c" || c === "C") {
	        this._state = BEFORE_SCRIPT_1;
	    } else if (c === "t" || c === "T") {
	        this._state = BEFORE_STYLE_1;
	    } else {
	        this._state = IN_TAG_NAME;
	        this._index--; //consume the token again
	    }
	};
	
	Tokenizer.prototype._stateBeforeSpecialEnd = function(c) {
	    if (this._special === SPECIAL_SCRIPT && (c === "c" || c === "C")) {
	        this._state = AFTER_SCRIPT_1;
	    } else if (this._special === SPECIAL_STYLE && (c === "t" || c === "T")) {
	        this._state = AFTER_STYLE_1;
	    } else this._state = TEXT;
	};
	
	Tokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar(
	    "R",
	    BEFORE_SCRIPT_2
	);
	Tokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar(
	    "I",
	    BEFORE_SCRIPT_3
	);
	Tokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar(
	    "P",
	    BEFORE_SCRIPT_4
	);
	Tokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar(
	    "T",
	    BEFORE_SCRIPT_5
	);
	
	Tokenizer.prototype._stateBeforeScript5 = function(c) {
	    if (c === "/" || c === ">" || whitespace(c)) {
	        this._special = SPECIAL_SCRIPT;
	    }
	    this._state = IN_TAG_NAME;
	    this._index--; //consume the token again
	};
	
	Tokenizer.prototype._stateAfterScript1 = ifElseState("R", AFTER_SCRIPT_2, TEXT);
	Tokenizer.prototype._stateAfterScript2 = ifElseState("I", AFTER_SCRIPT_3, TEXT);
	Tokenizer.prototype._stateAfterScript3 = ifElseState("P", AFTER_SCRIPT_4, TEXT);
	Tokenizer.prototype._stateAfterScript4 = ifElseState("T", AFTER_SCRIPT_5, TEXT);
	
	Tokenizer.prototype._stateAfterScript5 = function(c) {
	    if (c === ">" || whitespace(c)) {
	        this._special = SPECIAL_NONE;
	        this._state = IN_CLOSING_TAG_NAME;
	        this._sectionStart = this._index - 6;
	        this._index--; //reconsume the token
	    } else this._state = TEXT;
	};
	
	Tokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar(
	    "Y",
	    BEFORE_STYLE_2
	);
	Tokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar(
	    "L",
	    BEFORE_STYLE_3
	);
	Tokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar(
	    "E",
	    BEFORE_STYLE_4
	);
	
	Tokenizer.prototype._stateBeforeStyle4 = function(c) {
	    if (c === "/" || c === ">" || whitespace(c)) {
	        this._special = SPECIAL_STYLE;
	    }
	    this._state = IN_TAG_NAME;
	    this._index--; //consume the token again
	};
	
	Tokenizer.prototype._stateAfterStyle1 = ifElseState("Y", AFTER_STYLE_2, TEXT);
	Tokenizer.prototype._stateAfterStyle2 = ifElseState("L", AFTER_STYLE_3, TEXT);
	Tokenizer.prototype._stateAfterStyle3 = ifElseState("E", AFTER_STYLE_4, TEXT);
	
	Tokenizer.prototype._stateAfterStyle4 = function(c) {
	    if (c === ">" || whitespace(c)) {
	        this._special = SPECIAL_NONE;
	        this._state = IN_CLOSING_TAG_NAME;
	        this._sectionStart = this._index - 5;
	        this._index--; //reconsume the token
	    } else this._state = TEXT;
	};
	
	Tokenizer.prototype._stateBeforeEntity = ifElseState(
	    "#",
	    BEFORE_NUMERIC_ENTITY,
	    IN_NAMED_ENTITY
	);
	Tokenizer.prototype._stateBeforeNumericEntity = ifElseState(
	    "X",
	    IN_HEX_ENTITY,
	    IN_NUMERIC_ENTITY
	);
	
	//for entities terminated with a semicolon
	Tokenizer.prototype._parseNamedEntityStrict = function() {
	    //offset = 1
	    if (this._sectionStart + 1 < this._index) {
	        var entity = this._buffer.substring(
	                this._sectionStart + 1,
	                this._index
	            ),
	            map = this._xmlMode ? xmlMap : entityMap;
	
	        if (map.hasOwnProperty(entity)) {
	            this._emitPartial(map[entity]);
	            this._sectionStart = this._index + 1;
	        }
	    }
	};
	
	//parses legacy entities (without trailing semicolon)
	Tokenizer.prototype._parseLegacyEntity = function() {
	    var start = this._sectionStart + 1,
	        limit = this._index - start;
	
	    if (limit > 6) limit = 6; //the max length of legacy entities is 6
	
	    while (limit >= 2) {
	        //the min length of legacy entities is 2
	        var entity = this._buffer.substr(start, limit);
	
	        if (legacyMap.hasOwnProperty(entity)) {
	            this._emitPartial(legacyMap[entity]);
	            this._sectionStart += limit + 1;
	            return;
	        } else {
	            limit--;
	        }
	    }
	};
	
	Tokenizer.prototype._stateInNamedEntity = function(c) {
	    if (c === ";") {
	        this._parseNamedEntityStrict();
	        if (this._sectionStart + 1 < this._index && !this._xmlMode) {
	            this._parseLegacyEntity();
	        }
	        this._state = this._baseState;
	    } else if (
	        (c < "a" || c > "z") &&
	        (c < "A" || c > "Z") &&
	        (c < "0" || c > "9")
	    ) {
	        if (this._xmlMode);
	        else if (this._sectionStart + 1 === this._index);
	        else if (this._baseState !== TEXT) {
	            if (c !== "=") {
	                this._parseNamedEntityStrict();
	            }
	        } else {
	            this._parseLegacyEntity();
	        }
	
	        this._state = this._baseState;
	        this._index--;
	    }
	};
	
	Tokenizer.prototype._decodeNumericEntity = function(offset, base) {
	    var sectionStart = this._sectionStart + offset;
	
	    if (sectionStart !== this._index) {
	        //parse entity
	        var entity = this._buffer.substring(sectionStart, this._index);
	        var parsed = parseInt(entity, base);
	
	        this._emitPartial(decodeCodePoint(parsed));
	        this._sectionStart = this._index;
	    } else {
	        this._sectionStart--;
	    }
	
	    this._state = this._baseState;
	};
	
	Tokenizer.prototype._stateInNumericEntity = function(c) {
	    if (c === ";") {
	        this._decodeNumericEntity(2, 10);
	        this._sectionStart++;
	    } else if (c < "0" || c > "9") {
	        if (!this._xmlMode) {
	            this._decodeNumericEntity(2, 10);
	        } else {
	            this._state = this._baseState;
	        }
	        this._index--;
	    }
	};
	
	Tokenizer.prototype._stateInHexEntity = function(c) {
	    if (c === ";") {
	        this._decodeNumericEntity(3, 16);
	        this._sectionStart++;
	    } else if (
	        (c < "a" || c > "f") &&
	        (c < "A" || c > "F") &&
	        (c < "0" || c > "9")
	    ) {
	        if (!this._xmlMode) {
	            this._decodeNumericEntity(3, 16);
	        } else {
	            this._state = this._baseState;
	        }
	        this._index--;
	    }
	};
	
	Tokenizer.prototype._cleanup = function() {
	    if (this._sectionStart < 0) {
	        this._buffer = "";
	        this._bufferOffset += this._index;
	        this._index = 0;
	    } else if (this._running) {
	        if (this._state === TEXT) {
	            if (this._sectionStart !== this._index) {
	                this._cbs.ontext(this._buffer.substr(this._sectionStart));
	            }
	            this._buffer = "";
	            this._bufferOffset += this._index;
	            this._index = 0;
	        } else if (this._sectionStart === this._index) {
	            //the section just started
	            this._buffer = "";
	            this._bufferOffset += this._index;
	            this._index = 0;
	        } else {
	            //remove everything unnecessary
	            this._buffer = this._buffer.substr(this._sectionStart);
	            this._index -= this._sectionStart;
	            this._bufferOffset += this._sectionStart;
	        }
	
	        this._sectionStart = 0;
	    }
	};
	
	//TODO make events conditional
	Tokenizer.prototype.write = function(chunk) {
	    if (this._ended) this._cbs.onerror(Error(".write() after done!"));
	
	    this._buffer += chunk;
	    this._parse();
	};
	
	Tokenizer.prototype._parse = function() {
	    while (this._index < this._buffer.length && this._running) {
	        var c = this._buffer.charAt(this._index);
	        if (this._state === TEXT) {
	            this._stateText(c);
	        } else if (this._state === BEFORE_TAG_NAME) {
	            this._stateBeforeTagName(c);
	        } else if (this._state === IN_TAG_NAME) {
	            this._stateInTagName(c);
	        } else if (this._state === BEFORE_CLOSING_TAG_NAME) {
	            this._stateBeforeCloseingTagName(c);
	        } else if (this._state === IN_CLOSING_TAG_NAME) {
	            this._stateInCloseingTagName(c);
	        } else if (this._state === AFTER_CLOSING_TAG_NAME) {
	            this._stateAfterCloseingTagName(c);
	        } else if (this._state === IN_SELF_CLOSING_TAG) {
	            this._stateInSelfClosingTag(c);
	        } else if (this._state === BEFORE_ATTRIBUTE_NAME) {
	
	        /*
			*	attributes
			*/
	            this._stateBeforeAttributeName(c);
	        } else if (this._state === IN_ATTRIBUTE_NAME) {
	            this._stateInAttributeName(c);
	        } else if (this._state === AFTER_ATTRIBUTE_NAME) {
	            this._stateAfterAttributeName(c);
	        } else if (this._state === BEFORE_ATTRIBUTE_VALUE) {
	            this._stateBeforeAttributeValue(c);
	        } else if (this._state === IN_ATTRIBUTE_VALUE_DQ) {
	            this._stateInAttributeValueDoubleQuotes(c);
	        } else if (this._state === IN_ATTRIBUTE_VALUE_SQ) {
	            this._stateInAttributeValueSingleQuotes(c);
	        } else if (this._state === IN_ATTRIBUTE_VALUE_NQ) {
	            this._stateInAttributeValueNoQuotes(c);
	        } else if (this._state === BEFORE_DECLARATION) {
	
	        /*
			*	declarations
			*/
	            this._stateBeforeDeclaration(c);
	        } else if (this._state === IN_DECLARATION) {
	            this._stateInDeclaration(c);
	        } else if (this._state === IN_PROCESSING_INSTRUCTION) {
	
	        /*
			*	processing instructions
			*/
	            this._stateInProcessingInstruction(c);
	        } else if (this._state === BEFORE_COMMENT) {
	
	        /*
			*	comments
			*/
	            this._stateBeforeComment(c);
	        } else if (this._state === IN_COMMENT) {
	            this._stateInComment(c);
	        } else if (this._state === AFTER_COMMENT_1) {
	            this._stateAfterComment1(c);
	        } else if (this._state === AFTER_COMMENT_2) {
	            this._stateAfterComment2(c);
	        } else if (this._state === BEFORE_CDATA_1) {
	
	        /*
			*	cdata
			*/
	            this._stateBeforeCdata1(c);
	        } else if (this._state === BEFORE_CDATA_2) {
	            this._stateBeforeCdata2(c);
	        } else if (this._state === BEFORE_CDATA_3) {
	            this._stateBeforeCdata3(c);
	        } else if (this._state === BEFORE_CDATA_4) {
	            this._stateBeforeCdata4(c);
	        } else if (this._state === BEFORE_CDATA_5) {
	            this._stateBeforeCdata5(c);
	        } else if (this._state === BEFORE_CDATA_6) {
	            this._stateBeforeCdata6(c);
	        } else if (this._state === IN_CDATA) {
	            this._stateInCdata(c);
	        } else if (this._state === AFTER_CDATA_1) {
	            this._stateAfterCdata1(c);
	        } else if (this._state === AFTER_CDATA_2) {
	            this._stateAfterCdata2(c);
	        } else if (this._state === BEFORE_SPECIAL) {
	
	        /*
			* special tags
			*/
	            this._stateBeforeSpecial(c);
	        } else if (this._state === BEFORE_SPECIAL_END) {
	            this._stateBeforeSpecialEnd(c);
	        } else if (this._state === BEFORE_SCRIPT_1) {
	
	        /*
			* script
			*/
	            this._stateBeforeScript1(c);
	        } else if (this._state === BEFORE_SCRIPT_2) {
	            this._stateBeforeScript2(c);
	        } else if (this._state === BEFORE_SCRIPT_3) {
	            this._stateBeforeScript3(c);
	        } else if (this._state === BEFORE_SCRIPT_4) {
	            this._stateBeforeScript4(c);
	        } else if (this._state === BEFORE_SCRIPT_5) {
	            this._stateBeforeScript5(c);
	        } else if (this._state === AFTER_SCRIPT_1) {
	            this._stateAfterScript1(c);
	        } else if (this._state === AFTER_SCRIPT_2) {
	            this._stateAfterScript2(c);
	        } else if (this._state === AFTER_SCRIPT_3) {
	            this._stateAfterScript3(c);
	        } else if (this._state === AFTER_SCRIPT_4) {
	            this._stateAfterScript4(c);
	        } else if (this._state === AFTER_SCRIPT_5) {
	            this._stateAfterScript5(c);
	        } else if (this._state === BEFORE_STYLE_1) {
	
	        /*
			* style
			*/
	            this._stateBeforeStyle1(c);
	        } else if (this._state === BEFORE_STYLE_2) {
	            this._stateBeforeStyle2(c);
	        } else if (this._state === BEFORE_STYLE_3) {
	            this._stateBeforeStyle3(c);
	        } else if (this._state === BEFORE_STYLE_4) {
	            this._stateBeforeStyle4(c);
	        } else if (this._state === AFTER_STYLE_1) {
	            this._stateAfterStyle1(c);
	        } else if (this._state === AFTER_STYLE_2) {
	            this._stateAfterStyle2(c);
	        } else if (this._state === AFTER_STYLE_3) {
	            this._stateAfterStyle3(c);
	        } else if (this._state === AFTER_STYLE_4) {
	            this._stateAfterStyle4(c);
	        } else if (this._state === BEFORE_ENTITY) {
	
	        /*
			* entities
			*/
	            this._stateBeforeEntity(c);
	        } else if (this._state === BEFORE_NUMERIC_ENTITY) {
	            this._stateBeforeNumericEntity(c);
	        } else if (this._state === IN_NAMED_ENTITY) {
	            this._stateInNamedEntity(c);
	        } else if (this._state === IN_NUMERIC_ENTITY) {
	            this._stateInNumericEntity(c);
	        } else if (this._state === IN_HEX_ENTITY) {
	            this._stateInHexEntity(c);
	        } else {
	            this._cbs.onerror(Error("unknown _state"), this._state);
	        }
	
	        this._index++;
	    }
	
	    this._cleanup();
	};
	
	Tokenizer.prototype.pause = function() {
	    this._running = false;
	};
	Tokenizer.prototype.resume = function() {
	    this._running = true;
	
	    if (this._index < this._buffer.length) {
	        this._parse();
	    }
	    if (this._ended) {
	        this._finish();
	    }
	};
	
	Tokenizer.prototype.end = function(chunk) {
	    if (this._ended) this._cbs.onerror(Error(".end() after done!"));
	    if (chunk) this.write(chunk);
	
	    this._ended = true;
	
	    if (this._running) this._finish();
	};
	
	Tokenizer.prototype._finish = function() {
	    //if there is remaining data, emit it in a reasonable way
	    if (this._sectionStart < this._index) {
	        this._handleTrailingData();
	    }
	
	    this._cbs.onend();
	};
	
	Tokenizer.prototype._handleTrailingData = function() {
	    var data = this._buffer.substr(this._sectionStart);
	
	    if (
	        this._state === IN_CDATA ||
	        this._state === AFTER_CDATA_1 ||
	        this._state === AFTER_CDATA_2
	    ) {
	        this._cbs.oncdata(data);
	    } else if (
	        this._state === IN_COMMENT ||
	        this._state === AFTER_COMMENT_1 ||
	        this._state === AFTER_COMMENT_2
	    ) {
	        this._cbs.oncomment(data);
	    } else if (this._state === IN_NAMED_ENTITY && !this._xmlMode) {
	        this._parseLegacyEntity();
	        if (this._sectionStart < this._index) {
	            this._state = this._baseState;
	            this._handleTrailingData();
	        }
	    } else if (this._state === IN_NUMERIC_ENTITY && !this._xmlMode) {
	        this._decodeNumericEntity(2, 10);
	        if (this._sectionStart < this._index) {
	            this._state = this._baseState;
	            this._handleTrailingData();
	        }
	    } else if (this._state === IN_HEX_ENTITY && !this._xmlMode) {
	        this._decodeNumericEntity(3, 16);
	        if (this._sectionStart < this._index) {
	            this._state = this._baseState;
	            this._handleTrailingData();
	        }
	    } else if (
	        this._state !== IN_TAG_NAME &&
	        this._state !== BEFORE_ATTRIBUTE_NAME &&
	        this._state !== BEFORE_ATTRIBUTE_VALUE &&
	        this._state !== AFTER_ATTRIBUTE_NAME &&
	        this._state !== IN_ATTRIBUTE_NAME &&
	        this._state !== IN_ATTRIBUTE_VALUE_SQ &&
	        this._state !== IN_ATTRIBUTE_VALUE_DQ &&
	        this._state !== IN_ATTRIBUTE_VALUE_NQ &&
	        this._state !== IN_CLOSING_TAG_NAME
	    ) {
	        this._cbs.ontext(data);
	    }
	    //else, ignore remaining data
	    //TODO add a way to remove current tag
	};
	
	Tokenizer.prototype.reset = function() {
	    Tokenizer.call(
	        this,
	        { xmlMode: this._xmlMode, decodeEntities: this._decodeEntities },
	        this._cbs
	    );
	};
	
	Tokenizer.prototype.getAbsoluteIndex = function() {
	    return this._bufferOffset + this._index;
	};
	
	Tokenizer.prototype._getSection = function() {
	    return this._buffer.substring(this._sectionStart, this._index);
	};
	
	Tokenizer.prototype._emitToken = function(name) {
	    this._cbs[name](this._getSection());
	    this._sectionStart = -1;
	};
	
	Tokenizer.prototype._emitPartial = function(value) {
	    if (this._baseState !== TEXT) {
	        this._cbs.onattribdata(value); //TODO implement the new event
	    } else {
	        this._cbs.ontext(value);
	    }
	};


/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = Stream;
	
	var Parser = __webpack_require__(448);
	var WritableStream = __webpack_require__(1788).Writable;
	var StringDecoder = __webpack_require__(345).StringDecoder;
	var Buffer = __webpack_require__(186).Buffer;
	
	function Stream(cbs, options) {
	    var parser = (this._parser = new Parser(cbs, options));
	    var decoder = (this._decoder = new StringDecoder());
	
	    WritableStream.call(this, { decodeStrings: false });
	
	    this.once("finish", function() {
	        parser.end(decoder.end());
	    });
	}
	
	__webpack_require__(43)(Stream, WritableStream);
	
	Stream.prototype._write = function(chunk, encoding, cb) {
	    if (chunk instanceof Buffer) chunk = this._decoder.write(chunk);
	    this._parser.write(chunk);
	    cb();
	};


/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

	/*!
	 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
	 *
	 * Copyright (c) 2014-2017, Jon Schlinkert.
	 * Released under the MIT License.
	 */
	
	'use strict';
	
	var isObject = __webpack_require__(1214);
	
	function isObjectObject(o) {
	  return isObject(o) === true
	    && Object.prototype.toString.call(o) === '[object Object]';
	}
	
	module.exports = function isPlainObject(o) {
	  var ctor,prot;
	
	  if (isObjectObject(o) === false) return false;
	
	  // If has modified constructor
	  ctor = o.constructor;
	  if (typeof ctor !== 'function') return false;
	
	  // If has modified prototype
	  prot = ctor.prototype;
	  if (isObjectObject(prot) === false) return false;
	
	  // If constructor does not have an Object-specific method
	  if (prot.hasOwnProperty('isPrototypeOf') === false) {
	    return false;
	  }
	
	  // Most likely a plain Object
	  return true;
	};


/***/ }),
/* 452 */
/***/ (function(module, exports) {

	module.exports = {"universal":50,"tag":30,"attribute":1,"pseudo":0,"descendant":-1,"child":-1,"parent":-1,"sibling":-1,"adjacent":-1}

/***/ }),
/* 453 */
/***/ (function(module, exports) {

	module.exports = {"Aacute":"Á","aacute":"á","Acirc":"Â","acirc":"â","acute":"´","AElig":"Æ","aelig":"æ","Agrave":"À","agrave":"à","amp":"&","AMP":"&","Aring":"Å","aring":"å","Atilde":"Ã","atilde":"ã","Auml":"Ä","auml":"ä","brvbar":"¦","Ccedil":"Ç","ccedil":"ç","cedil":"¸","cent":"¢","copy":"©","COPY":"©","curren":"¤","deg":"°","divide":"÷","Eacute":"É","eacute":"é","Ecirc":"Ê","ecirc":"ê","Egrave":"È","egrave":"è","ETH":"Ð","eth":"ð","Euml":"Ë","euml":"ë","frac12":"½","frac14":"¼","frac34":"¾","gt":">","GT":">","Iacute":"Í","iacute":"í","Icirc":"Î","icirc":"î","iexcl":"¡","Igrave":"Ì","igrave":"ì","iquest":"¿","Iuml":"Ï","iuml":"ï","laquo":"«","lt":"<","LT":"<","macr":"¯","micro":"µ","middot":"·","nbsp":" ","not":"¬","Ntilde":"Ñ","ntilde":"ñ","Oacute":"Ó","oacute":"ó","Ocirc":"Ô","ocirc":"ô","Ograve":"Ò","ograve":"ò","ordf":"ª","ordm":"º","Oslash":"Ø","oslash":"ø","Otilde":"Õ","otilde":"õ","Ouml":"Ö","ouml":"ö","para":"¶","plusmn":"±","pound":"£","quot":"\"","QUOT":"\"","raquo":"»","reg":"®","REG":"®","sect":"§","shy":"­","sup1":"¹","sup2":"²","sup3":"³","szlig":"ß","THORN":"Þ","thorn":"þ","times":"×","Uacute":"Ú","uacute":"ú","Ucirc":"Û","ucirc":"û","Ugrave":"Ù","ugrave":"ù","uml":"¨","Uuml":"Ü","uuml":"ü","Yacute":"Ý","yacute":"ý","yen":"¥","yuml":"ÿ"}

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = camelCase;
	
	var _hyphenateStyleName = __webpack_require__(1207);
	
	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Convert camel cased property names to dash separated.
	 *
	 * @param {Object} style
	 * @return {Object}
	 */
	function convertCase(style) {
	  var converted = {};
	
	  for (var prop in style) {
	    converted[(0, _hyphenateStyleName2['default'])(prop)] = style[prop];
	  }
	
	  if (style.fallbacks) {
	    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);
	  }
	
	  return converted;
	}
	
	/**
	 * Allow camel cased property names by converting them back to dasherized.
	 *
	 * @param {Rule} rule
	 */
	function camelCase() {
	  function onProcessStyle(style) {
	    if (Array.isArray(style)) {
	      // Handle rules like @font-face, which can have multiple styles in an array
	      for (var index = 0; index < style.length; index++) {
	        style[index] = convertCase(style[index]);
	      }
	      return style;
	    }
	
	    return convertCase(style);
	  }
	
	  function onChangeValue(value, prop, rule) {
	    var hyphenatedProp = (0, _hyphenateStyleName2['default'])(prop);
	
	    // There was no camel case in place
	    if (prop === hyphenatedProp) return value;
	
	    rule.prop(hyphenatedProp, value);
	
	    // Core will ignore that property value we set the proper one above.
	    return null;
	  }
	
	  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
	}

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports['default'] = defaultUnit;
	
	var _defaultUnits = __webpack_require__(1337);
	
	var _defaultUnits2 = _interopRequireDefault(_defaultUnits);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Clones the object and adds a camel cased property version.
	 */
	function addCamelCasedVersion(obj) {
	  var regExp = /(-[a-z])/g;
	  var replace = function replace(str) {
	    return str[1].toUpperCase();
	  };
	  var newObj = {};
	  for (var key in obj) {
	    newObj[key] = obj[key];
	    newObj[key.replace(regExp, replace)] = obj[key];
	  }
	  return newObj;
	}
	
	var units = addCamelCasedVersion(_defaultUnits2['default']);
	
	/**
	 * Recursive deep style passing function
	 *
	 * @param {String} current property
	 * @param {(Object|Array|Number|String)} property value
	 * @param {Object} options
	 * @return {(Object|Array|Number|String)} resulting value
	 */
	function iterate(prop, value, options) {
	  if (!value) return value;
	
	  var convertedValue = value;
	
	  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
	  if (type === 'object' && Array.isArray(value)) type = 'array';
	
	  switch (type) {
	    case 'object':
	      if (prop === 'fallbacks') {
	        for (var innerProp in value) {
	          value[innerProp] = iterate(innerProp, value[innerProp], options);
	        }
	        break;
	      }
	      for (var _innerProp in value) {
	        value[_innerProp] = iterate(prop + '-' + _innerProp, value[_innerProp], options);
	      }
	      break;
	    case 'array':
	      for (var i = 0; i < value.length; i++) {
	        value[i] = iterate(prop, value[i], options);
	      }
	      break;
	    case 'number':
	      if (value !== 0) {
	        convertedValue = value + (options[prop] || units[prop] || '');
	      }
	      break;
	    default:
	      break;
	  }
	
	  return convertedValue;
	}
	
	/**
	 * Add unit to numeric values.
	 */
	function defaultUnit() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  var camelCasedOptions = addCamelCasedVersion(options);
	
	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;
	
	    for (var prop in style) {
	      style[prop] = iterate(prop, style[prop], camelCasedOptions);
	    }
	
	    return style;
	  }
	
	  function onChangeValue(value, prop) {
	    return iterate(prop, value, camelCasedOptions);
	  }
	
	  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
	}

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports['default'] = jssGlobal;
	
	var _jss = __webpack_require__(195);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var propKey = '@global';
	var prefixKey = '@global ';
	
	var GlobalContainerRule = function () {
	  function GlobalContainerRule(key, styles, options) {
	    _classCallCheck(this, GlobalContainerRule);
	
	    this.type = 'global';
	
	    this.key = key;
	    this.options = options;
	    this.rules = new _jss.RuleList(_extends({}, options, {
	      parent: this
	    }));
	
	    for (var selector in styles) {
	      this.rules.add(selector, styles[selector], { selector: selector });
	    }
	
	    this.rules.process();
	  }
	
	  /**
	   * Get a rule.
	   */
	
	
	  _createClass(GlobalContainerRule, [{
	    key: 'getRule',
	    value: function getRule(name) {
	      return this.rules.get(name);
	    }
	
	    /**
	     * Create and register rule, run plugins.
	     */
	
	  }, {
	    key: 'addRule',
	    value: function addRule(name, style, options) {
	      var rule = this.rules.add(name, style, options);
	      this.options.jss.plugins.onProcessRule(rule);
	      return rule;
	    }
	
	    /**
	     * Get index of a rule.
	     */
	
	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.rules.indexOf(rule);
	    }
	
	    /**
	     * Generates a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString() {
	      return this.rules.toString();
	    }
	  }]);
	
	  return GlobalContainerRule;
	}();
	
	var GlobalPrefixedRule = function () {
	  function GlobalPrefixedRule(name, style, options) {
	    _classCallCheck(this, GlobalPrefixedRule);
	
	    this.name = name;
	    this.options = options;
	    var selector = name.substr(prefixKey.length);
	    this.rule = options.jss.createRule(selector, style, _extends({}, options, {
	      parent: this,
	      selector: selector
	    }));
	  }
	
	  _createClass(GlobalPrefixedRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      return this.rule.toString(options);
	    }
	  }]);
	
	  return GlobalPrefixedRule;
	}();
	
	var separatorRegExp = /\s*,\s*/g;
	
	function addScope(selector, scope) {
	  var parts = selector.split(separatorRegExp);
	  var scoped = '';
	  for (var i = 0; i < parts.length; i++) {
	    scoped += scope + ' ' + parts[i].trim();
	    if (parts[i + 1]) scoped += ', ';
	  }
	  return scoped;
	}
	
	function handleNestedGlobalContainerRule(rule) {
	  var options = rule.options,
	      style = rule.style;
	
	  var rules = style[propKey];
	
	  if (!rules) return;
	
	  for (var name in rules) {
	    options.sheet.addRule(name, rules[name], _extends({}, options, {
	      selector: addScope(name, rule.selector)
	    }));
	  }
	
	  delete style[propKey];
	}
	
	function handlePrefixedGlobalRule(rule) {
	  var options = rule.options,
	      style = rule.style;
	
	  for (var prop in style) {
	    if (prop.substr(0, propKey.length) !== propKey) continue;
	
	    var selector = addScope(prop.substr(propKey.length), rule.selector);
	    options.sheet.addRule(selector, style[prop], _extends({}, options, {
	      selector: selector
	    }));
	    delete style[prop];
	  }
	}
	
	/**
	 * Convert nested rules to separate, remove them from original styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssGlobal() {
	  function onCreateRule(name, styles, options) {
	    if (name === propKey) {
	      return new GlobalContainerRule(name, styles, options);
	    }
	
	    if (name[0] === '@' && name.substr(0, prefixKey.length) === prefixKey) {
	      return new GlobalPrefixedRule(name, styles, options);
	    }
	
	    var parent = options.parent;
	
	
	    if (parent) {
	      if (parent.type === 'global' || parent.options.parent.type === 'global') {
	        options.global = true;
	      }
	    }
	
	    if (options.global) options.selector = name;
	
	    return null;
	  }
	
	  function onProcessRule(rule) {
	    if (rule.type !== 'style') return;
	
	    handleNestedGlobalContainerRule(rule);
	    handlePrefixedGlobalRule(rule);
	  }
	
	  return { onCreateRule: onCreateRule, onProcessRule: onProcessRule };
	}

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = jssNested;
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var separatorRegExp = /\s*,\s*/g;
	var parentRegExp = /&/g;
	var refRegExp = /\$([\w-]+)/g;
	
	/**
	 * Convert nested rules to separate, remove them from original styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssNested() {
	  // Get a function to be used for $ref replacement.
	  function getReplaceRef(container) {
	    return function (match, key) {
	      var rule = container.getRule(key);
	      if (rule) return rule.selector;
	      (0, _warning2.default)(false, '[JSS] Could not find the referenced rule %s in %s.', key, container.options.meta || container);
	      return key;
	    };
	  }
	
	  var hasAnd = function hasAnd(str) {
	    return str.indexOf('&') !== -1;
	  };
	
	  function replaceParentRefs(nestedProp, parentProp) {
	    var parentSelectors = parentProp.split(separatorRegExp);
	    var nestedSelectors = nestedProp.split(separatorRegExp);
	
	    var result = '';
	
	    for (var i = 0; i < parentSelectors.length; i++) {
	      var parent = parentSelectors[i];
	
	      for (var j = 0; j < nestedSelectors.length; j++) {
	        var nested = nestedSelectors[j];
	        if (result) result += ', ';
	        // Replace all & by the parent or prefix & with the parent.
	        result += hasAnd(nested) ? nested.replace(parentRegExp, parent) : parent + ' ' + nested;
	      }
	    }
	
	    return result;
	  }
	
	  function getOptions(rule, container, options) {
	    // Options has been already created, now we only increase index.
	    if (options) return _extends({}, options, { index: options.index + 1 });
	
	    var nestingLevel = rule.options.nestingLevel;
	
	    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;
	
	    return _extends({}, rule.options, {
	      nestingLevel: nestingLevel,
	      index: container.indexOf(rule) + 1
	    });
	  }
	
	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;
	    var container = rule.options.parent;
	    var options = void 0;
	    var replaceRef = void 0;
	    for (var prop in style) {
	      var isNested = hasAnd(prop);
	      var isNestedConditional = prop[0] === '@';
	
	      if (!isNested && !isNestedConditional) continue;
	
	      options = getOptions(rule, container, options);
	
	      if (isNested) {
	        var selector = replaceParentRefs(prop, rule.selector
	        // Lazily create the ref replacer function just once for
	        // all nested rules within the sheet.
	        );if (!replaceRef) replaceRef = getReplaceRef(container
	        // Replace all $refs.
	        );selector = selector.replace(refRegExp, replaceRef);
	
	        container.addRule(selector, style[prop], _extends({}, options, { selector: selector }));
	      } else if (isNestedConditional) {
	        container
	        // Place conditional right after the parent rule to ensure right ordering.
	        .addRule(prop, null, options).addRule(rule.key, style[prop], { selector: rule.selector });
	      }
	
	      delete style[prop];
	    }
	
	    return style;
	  }
	
	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 458 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = jssPropsSort;
	/**
	 * Sort props by length.
	 */
	function jssPropsSort() {
	  function sort(prop0, prop1) {
	    return prop0.length - prop1.length;
	  }
	
	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;
	
	    var newStyle = {};
	    var props = Object.keys(style).sort(sort);
	    for (var prop in props) {
	      newStyle[props[prop]] = style[props[prop]];
	    }
	    return newStyle;
	  }
	
	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = jssVendorPrefixer;
	
	var _cssVendor = __webpack_require__(1000);
	
	var vendor = _interopRequireWildcard(_cssVendor);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
	
	/**
	 * Add vendor prefix to a property name when needed.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssVendorPrefixer() {
	  function onProcessRule(rule) {
	    if (rule.type === 'keyframes') {
	      rule.key = '@' + vendor.prefix.css + rule.key.substr(1);
	    }
	  }
	
	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;
	
	    for (var prop in style) {
	      var value = style[prop];
	
	      var changeProp = false;
	      var supportedProp = vendor.supportedProperty(prop);
	      if (supportedProp && supportedProp !== prop) changeProp = true;
	
	      var changeValue = false;
	      var supportedValue = vendor.supportedValue(supportedProp, value);
	      if (supportedValue && supportedValue !== value) changeValue = true;
	
	      if (changeProp || changeValue) {
	        if (changeProp) delete style[prop];
	        style[supportedProp || prop] = supportedValue || value;
	      }
	    }
	
	    return style;
	  }
	
	  function onChangeValue(value, prop) {
	    return vendor.supportedValue(prop, value);
	  }
	
	  return { onProcessRule: onProcessRule, onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
	}

/***/ }),
/* 460 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Sheets registry to access them all at one place.
	 */
	var SheetsRegistry = function () {
	  function SheetsRegistry() {
	    _classCallCheck(this, SheetsRegistry);
	
	    this.registry = [];
	  }
	
	  _createClass(SheetsRegistry, [{
	    key: 'add',
	
	
	    /**
	     * Register a Style Sheet.
	     */
	    value: function add(sheet) {
	      var registry = this.registry;
	      var index = sheet.options.index;
	
	
	      if (registry.indexOf(sheet) !== -1) return;
	
	      if (registry.length === 0 || index >= this.index) {
	        registry.push(sheet);
	        return;
	      }
	
	      // Find a position.
	      for (var i = 0; i < registry.length; i++) {
	        if (registry[i].options.index > index) {
	          registry.splice(i, 0, sheet);
	          return;
	        }
	      }
	    }
	
	    /**
	     * Reset the registry.
	     */
	
	  }, {
	    key: 'reset',
	    value: function reset() {
	      this.registry = [];
	    }
	
	    /**
	     * Remove a Style Sheet.
	     */
	
	  }, {
	    key: 'remove',
	    value: function remove(sheet) {
	      var index = this.registry.indexOf(sheet);
	      this.registry.splice(index, 1);
	    }
	
	    /**
	     * Convert all attached sheets to a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      return this.registry.filter(function (sheet) {
	        return sheet.attached;
	      }).map(function (sheet) {
	        return sheet.toString(options);
	      }).join('\n');
	    }
	  }, {
	    key: 'index',
	
	
	    /**
	     * Current highest index number.
	     */
	    get: function get() {
	      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
	    }
	  }]);
	
	  return SheetsRegistry;
	}();
	
	exports['default'] = SheetsRegistry;

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _linkRule = __webpack_require__(464);
	
	var _linkRule2 = _interopRequireDefault(_linkRule);
	
	var _RuleList = __webpack_require__(153);
	
	var _RuleList2 = _interopRequireDefault(_RuleList);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/* eslint-disable-next-line no-use-before-define */
	var StyleSheet = function () {
	  function StyleSheet(styles, options) {
	    var _this = this;
	
	    _classCallCheck(this, StyleSheet);
	
	    this.update = function (name, data) {
	      if (typeof name === 'string') {
	        _this.rules.update(name, data);
	      } else {
	        _this.rules.update(name);
	      }
	      return _this;
	    };
	
	    this.attached = false;
	    this.deployed = false;
	    this.linked = false;
	    this.classes = {};
	    this.options = _extends({}, options, {
	      sheet: this,
	      parent: this,
	      classes: this.classes
	    });
	    this.renderer = new options.Renderer(this);
	    this.rules = new _RuleList2['default'](this.options);
	
	    for (var _name in styles) {
	      this.rules.add(_name, styles[_name]);
	    }
	
	    this.rules.process();
	  }
	
	  /**
	   * Attach renderable to the render tree.
	   */
	
	
	  _createClass(StyleSheet, [{
	    key: 'attach',
	    value: function attach() {
	      if (this.attached) return this;
	      if (!this.deployed) this.deploy();
	      this.renderer.attach();
	      if (!this.linked && this.options.link) this.link();
	      this.attached = true;
	      return this;
	    }
	
	    /**
	     * Remove renderable from render tree.
	     */
	
	  }, {
	    key: 'detach',
	    value: function detach() {
	      if (!this.attached) return this;
	      this.renderer.detach();
	      this.attached = false;
	      return this;
	    }
	
	    /**
	     * Add a rule to the current stylesheet.
	     * Will insert a rule also after the stylesheet has been rendered first time.
	     */
	
	  }, {
	    key: 'addRule',
	    value: function addRule(name, decl, options) {
	      var queue = this.queue;
	
	      // Plugins can create rules.
	      // In order to preserve the right order, we need to queue all `.addRule` calls,
	      // which happen after the first `rules.add()` call.
	
	      if (this.attached && !queue) this.queue = [];
	
	      var rule = this.rules.add(name, decl, options);
	      this.options.jss.plugins.onProcessRule(rule);
	
	      if (this.attached) {
	        if (!this.deployed) return rule;
	        // Don't insert rule directly if there is no stringified version yet.
	        // It will be inserted all together when .attach is called.
	        if (queue) queue.push(rule);else {
	          this.insertRule(rule);
	          if (this.queue) {
	            this.queue.forEach(this.insertRule, this);
	            this.queue = undefined;
	          }
	        }
	        return rule;
	      }
	
	      // We can't add rules to a detached style node.
	      // We will redeploy the sheet once user will attach it.
	      this.deployed = false;
	
	      return rule;
	    }
	
	    /**
	     * Insert rule into the StyleSheet
	     */
	
	  }, {
	    key: 'insertRule',
	    value: function insertRule(rule) {
	      var renderable = this.renderer.insertRule(rule);
	      if (renderable && this.options.link) (0, _linkRule2['default'])(rule, renderable);
	    }
	
	    /**
	     * Create and add rules.
	     * Will render also after Style Sheet was rendered the first time.
	     */
	
	  }, {
	    key: 'addRules',
	    value: function addRules(styles, options) {
	      var added = [];
	      for (var _name2 in styles) {
	        added.push(this.addRule(_name2, styles[_name2], options));
	      }
	      return added;
	    }
	
	    /**
	     * Get a rule by name.
	     */
	
	  }, {
	    key: 'getRule',
	    value: function getRule(name) {
	      return this.rules.get(name);
	    }
	
	    /**
	     * Delete a rule by name.
	     * Returns `true`: if rule has been deleted from the DOM.
	     */
	
	  }, {
	    key: 'deleteRule',
	    value: function deleteRule(name) {
	      var rule = this.rules.get(name);
	
	      if (!rule) return false;
	
	      this.rules.remove(rule);
	
	      if (this.attached && rule.renderable) {
	        return this.renderer.deleteRule(rule.renderable);
	      }
	
	      return true;
	    }
	
	    /**
	     * Get index of a rule.
	     */
	
	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.rules.indexOf(rule);
	    }
	
	    /**
	     * Deploy pure CSS string to a renderable.
	     */
	
	  }, {
	    key: 'deploy',
	    value: function deploy() {
	      this.renderer.deploy();
	      this.deployed = true;
	      return this;
	    }
	
	    /**
	     * Link renderable CSS rules from sheet with their corresponding models.
	     */
	
	  }, {
	    key: 'link',
	    value: function link() {
	      var cssRules = this.renderer.getRules();
	
	      // Is undefined when VirtualRenderer is used.
	      if (cssRules) this.rules.link(cssRules);
	      this.linked = true;
	      return this;
	    }
	
	    /**
	     * Update the function values with a new data.
	     */
	
	  }, {
	    key: 'toString',
	
	
	    /**
	     * Convert rules to a CSS string.
	     */
	    value: function toString(options) {
	      return this.rules.toString(options);
	    }
	  }]);
	
	  return StyleSheet;
	}();
	
	exports['default'] = StyleSheet;

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _StyleSheet = __webpack_require__(461);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	var _moduleId = __webpack_require__(1358);
	
	var _moduleId2 = _interopRequireDefault(_moduleId);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var maxRules = 1e10;
	
	
	var env = ("production");
	
	/**
	 * Returns a function which generates unique class names based on counters.
	 * When new generator function is created, rule counter is reseted.
	 * We need to reset the rule counter for SSR for each request.
	 */
	
	exports['default'] = function () {
	  var ruleCounter = 0;
	  var defaultPrefix = env === 'production' ? 'c' : '';
	
	  return function (rule, sheet) {
	    ruleCounter += 1;
	
	    if (ruleCounter > maxRules) {
	      (0, _warning2['default'])(false, '[JSS] You might have a memory leak. Rule counter is at %s.', ruleCounter);
	    }
	
	    var prefix = defaultPrefix;
	    var jssId = '';
	
	    if (sheet) {
	      prefix = sheet.options.classNamePrefix || defaultPrefix;
	      if (sheet.options.jss.id != null) jssId += sheet.options.jss.id;
	    }
	
	    if (env === 'production') {
	      return '' + prefix + _moduleId2['default'] + jssId + ruleCounter;
	    }
	
	    return prefix + rule.key + '-' + _moduleId2['default'] + (jssId && '-' + jssId) + '-' + ruleCounter;
	  };
	};

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _symbolObservable = __webpack_require__(565);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = function (value) {
	  return value && value[_symbolObservable2['default']] && value === value[_symbolObservable2['default']]();
	};

/***/ }),
/* 464 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = linkRule;
	/**
	 * Link rule with CSSStyleRule and nested rules with corresponding nested cssRules if both exists.
	 */
	function linkRule(rule, cssRule) {
	  rule.renderable = cssRule;
	  if (rule.rules && cssRule.cssRules) rule.rules.link(cssRule.cssRules);
	}

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(201),
	    baseLodash = __webpack_require__(307);
	
	/**
	 * The base constructor for creating `lodash` wrapper objects.
	 *
	 * @private
	 * @param {*} value The value to wrap.
	 * @param {boolean} [chainAll] Enable explicit method chain sequences.
	 */
	function LodashWrapper(value, chainAll) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__chain__ = !!chainAll;
	  this.__index__ = 0;
	  this.__values__ = undefined;
	}
	
	LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	LodashWrapper.prototype.constructor = LodashWrapper;
	
	module.exports = LodashWrapper;


/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(33);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(95),
	    root = __webpack_require__(33);
	
	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');
	
	module.exports = WeakMap;


/***/ }),
/* 468 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = arrayFilter;


/***/ }),
/* 469 */
/***/ (function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arrayIncludesWith;


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(1402),
	    isArguments = __webpack_require__(161),
	    isArray = __webpack_require__(27),
	    isBuffer = __webpack_require__(162),
	    isIndex = __webpack_require__(160),
	    isTypedArray = __webpack_require__(211);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  var isArr = isArray(value),
	      isArg = !isArr && isArguments(value),
	      isBuff = !isArr && !isArg && isBuffer(value),
	      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	      skipIndexes = isArr || isArg || isBuff || isType,
	      result = skipIndexes ? baseTimes(value.length, String) : [],
	      length = result.length;
	
	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (
	           // Safari 9 has enumerable `arguments.length` in strict mode.
	           key == 'length' ||
	           // Node.js 0.10 has enumerable non-index properties on buffers.
	           (isBuff && (key == 'offset' || key == 'parent')) ||
	           // PhantomJS 2 has enumerable non-index properties on typed arrays.
	           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	           // Skip index properties.
	           isIndex(key, length)
	        ))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = arrayLikeKeys;


/***/ }),
/* 471 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as
	 *  the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}
	
	module.exports = arrayReduce;


/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(154),
	    eq = __webpack_require__(123);
	
	/**
	 * This function is like `assignValue` except that it doesn't assign
	 * `undefined` values.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignMergeValue(object, key, value) {
	  if ((value !== undefined && !eq(object[key], value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignMergeValue;


/***/ }),
/* 473 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.clamp` which doesn't coerce arguments.
	 *
	 * @private
	 * @param {number} number The number to clamp.
	 * @param {number} [lower] The lower bound.
	 * @param {number} upper The upper bound.
	 * @returns {number} Returns the clamped number.
	 */
	function baseClamp(number, lower, upper) {
	  if (number === number) {
	    if (upper !== undefined) {
	      number = number <= upper ? number : upper;
	    }
	    if (lower !== undefined) {
	      number = number >= lower ? number : lower;
	    }
	  }
	  return number;
	}
	
	module.exports = baseClamp;


/***/ }),
/* 474 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 1 : -1);
	
	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = baseFindIndex;


/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(304),
	    isFlattenable = __webpack_require__(1447);
	
	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;
	
	  predicate || (predicate = isFlattenable);
	  result || (result = []);
	
	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseFlatten;


/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(1420);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(304),
	    isArray = __webpack_require__(27);
	
	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}
	
	module.exports = baseGetAllKeys;


/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(207),
	    nativeKeys = __webpack_require__(1464);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeys;


/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(202),
	    isArrayLike = __webpack_require__(72);
	
	/**
	 * The base implementation of `_.map` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function baseMap(collection, iteratee) {
	  var index = -1,
	      result = isArrayLike(collection) ? Array(collection.length) : [];
	
	  baseEach(collection, function(value, key, collection) {
	    result[++index] = iteratee(value, key, collection);
	  });
	  return result;
	}
	
	module.exports = baseMap;


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(156),
	    baseSet = __webpack_require__(1398),
	    castPath = __webpack_require__(119);
	
	/**
	 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @param {Function} predicate The function invoked per property.
	 * @returns {Object} Returns the new object.
	 */
	function basePickBy(object, paths, predicate) {
	  var index = -1,
	      length = paths.length,
	      result = {};
	
	  while (++index < length) {
	    var path = paths[index],
	        value = baseGet(object, path);
	
	    if (predicate(value, path)) {
	      baseSet(result, castPath(path, object), value);
	    }
	  }
	  return result;
	}
	
	module.exports = basePickBy;


/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(96),
	    metaMap = __webpack_require__(502);
	
	/**
	 * The base implementation of `setData` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetData = !metaMap ? identity : function(func, data) {
	  metaMap.set(func, data);
	  return func;
	};
	
	module.exports = baseSetData;


/***/ }),
/* 482 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.slice` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to slice.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the slice of `array`.
	 */
	function baseSlice(array, start, end) {
	  var index = -1,
	      length = array.length;
	
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = end > length ? length : end;
	  if (end < 0) {
	    end += length;
	  }
	  length = start > end ? 0 : ((end - start) >>> 0);
	  start >>>= 0;
	
	  var result = Array(length);
	  while (++index < length) {
	    result[index] = array[index + start];
	  }
	  return result;
	}
	
	module.exports = baseSlice;


/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

	var trimmedEndIndex = __webpack_require__(1481);
	
	/** Used to match leading whitespace. */
	var reTrimStart = /^\s+/;
	
	/**
	 * The base implementation of `_.trim`.
	 *
	 * @private
	 * @param {string} string The string to trim.
	 * @returns {string} Returns the trimmed string.
	 */
	function baseTrim(string) {
	  return string
	    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
	    : string;
	}
	
	module.exports = baseTrim;


/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(96);
	
	/**
	 * Casts `value` to `identity` if it's not a function.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Function} Returns cast function.
	 */
	function castFunction(value) {
	  return typeof value == 'function' ? value : identity;
	}
	
	module.exports = castFunction;


/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(33);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined,
	    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;
	
	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var length = buffer.length,
	      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
	
	  buffer.copy(result);
	  return result;
	}
	
	module.exports = cloneBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(223)(module)))

/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(310);
	
	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}
	
	module.exports = cloneTypedArray;


/***/ }),
/* 487 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates an array that is the composition of partially applied arguments,
	 * placeholders, and provided arguments into a single array of arguments.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to prepend to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgs(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersLength = holders.length,
	      leftIndex = -1,
	      leftLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(leftLength + rangeLength),
	      isUncurried = !isCurried;
	
	  while (++leftIndex < leftLength) {
	    result[leftIndex] = partials[leftIndex];
	  }
	  while (++argsIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[holders[argsIndex]] = args[argsIndex];
	    }
	  }
	  while (rangeLength--) {
	    result[leftIndex++] = args[argsIndex++];
	  }
	  return result;
	}
	
	module.exports = composeArgs;


/***/ }),
/* 488 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * This function is like `composeArgs` except that the arguments composition
	 * is tailored for `_.partialRight`.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to append to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgsRight(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersIndex = -1,
	      holdersLength = holders.length,
	      rightIndex = -1,
	      rightLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(rangeLength + rightLength),
	      isUncurried = !isCurried;
	
	  while (++argsIndex < rangeLength) {
	    result[argsIndex] = args[argsIndex];
	  }
	  var offset = argsIndex;
	  while (++rightIndex < rightLength) {
	    result[offset + rightIndex] = partials[rightIndex];
	  }
	  while (++holdersIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[offset + holders[holdersIndex]] = args[argsIndex++];
	    }
	  }
	  return result;
	}
	
	module.exports = composeArgsRight;


/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(487),
	    composeArgsRight = __webpack_require__(488),
	    countHolders = __webpack_require__(1417),
	    createCtor = __webpack_require__(204),
	    createRecurry = __webpack_require__(490),
	    getHolder = __webpack_require__(158),
	    reorder = __webpack_require__(1469),
	    replaceHolders = __webpack_require__(121),
	    root = __webpack_require__(33);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_ARY_FLAG = 128,
	    WRAP_FLIP_FLAG = 512;
	
	/**
	 * Creates a function that wraps `func` to invoke it with optional `this`
	 * binding of `thisArg`, partial application, and currying.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [partialsRight] The arguments to append to those provided
	 *  to the new function.
	 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	  var isAry = bitmask & WRAP_ARY_FLAG,
	      isBind = bitmask & WRAP_BIND_FLAG,
	      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	      isFlip = bitmask & WRAP_FLIP_FLAG,
	      Ctor = isBindKey ? undefined : createCtor(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length;
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    if (isCurried) {
	      var placeholder = getHolder(wrapper),
	          holdersCount = countHolders(args, placeholder);
	    }
	    if (partials) {
	      args = composeArgs(args, partials, holders, isCurried);
	    }
	    if (partialsRight) {
	      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	    }
	    length -= holdersCount;
	    if (isCurried && length < arity) {
	      var newHolders = replaceHolders(args, placeholder);
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	        args, newHolders, argPos, ary, arity - length
	      );
	    }
	    var thisBinding = isBind ? thisArg : this,
	        fn = isBindKey ? thisBinding[func] : func;
	
	    length = args.length;
	    if (argPos) {
	      args = reorder(args, argPos);
	    } else if (isFlip && length > 1) {
	      args.reverse();
	    }
	    if (isAry && ary < length) {
	      args.length = ary;
	    }
	    if (this && this !== root && this instanceof wrapper) {
	      fn = Ctor || createCtor(fn);
	    }
	    return fn.apply(thisBinding, args);
	  }
	  return wrapper;
	}
	
	module.exports = createHybrid;


/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

	var isLaziable = __webpack_require__(1449),
	    setData = __webpack_require__(506),
	    setWrapToString = __webpack_require__(507);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/**
	 * Creates a function that wraps `func` to continue currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {Function} wrapFunc The function to create the `func` wrapper.
	 * @param {*} placeholder The placeholder value.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	  var isCurry = bitmask & WRAP_CURRY_FLAG,
	      newHolders = isCurry ? holders : undefined,
	      newHoldersRight = isCurry ? undefined : holders,
	      newPartials = isCurry ? partials : undefined,
	      newPartialsRight = isCurry ? undefined : partials;
	
	  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
	
	  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	  }
	  var newData = [
	    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	    newHoldersRight, argPos, ary, arity
	  ];
	
	  var result = wrapFunc.apply(undefined, newData);
	  if (isLaziable(func)) {
	    setData(result, newData);
	  }
	  result.placeholder = placeholder;
	  return setWrapToString(result, func, bitmask);
	}
	
	module.exports = createRecurry;


/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(95);
	
	var defineProperty = (function() {
	  try {
	    var func = getNative(Object, 'defineProperty');
	    func({}, '', {});
	    return func;
	  } catch (e) {}
	}());
	
	module.exports = defineProperty;


/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(300),
	    arraySome = __webpack_require__(1365),
	    cacheHas = __webpack_require__(309);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Check that cyclic values are equal.
	  var arrStacked = stack.get(array);
	  var othStacked = stack.get(other);
	  if (arrStacked && othStacked) {
	    return arrStacked == other && othStacked == array;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	  stack.set(other, array);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!cacheHas(seen, othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	              return seen.push(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, bitmask, customizer, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

	var flatten = __webpack_require__(512),
	    overRest = __webpack_require__(504),
	    setToString = __webpack_require__(317);
	
	/**
	 * A specialized version of `baseRest` which flattens the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @returns {Function} Returns the new function.
	 */
	function flatRest(func) {
	  return setToString(overRest(func, undefined, flatten), func + '');
	}
	
	module.exports = flatRest;


/***/ }),
/* 494 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(477),
	    getSymbols = __webpack_require__(314),
	    keys = __webpack_require__(58);
	
	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}
	
	module.exports = getAllKeys;


/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

	var metaMap = __webpack_require__(502),
	    noop = __webpack_require__(1502);
	
	/**
	 * Gets metadata for `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {*} Returns the metadata for `func`.
	 */
	var getData = !metaMap ? noop : function(func) {
	  return metaMap.get(func);
	};
	
	module.exports = getData;


/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(304),
	    getPrototype = __webpack_require__(313),
	    getSymbols = __webpack_require__(314),
	    stubArray = __webpack_require__(518);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own and inherited enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	  var result = [];
	  while (object) {
	    arrayPush(result, getSymbols(object));
	    object = getPrototype(object);
	  }
	  return result;
	};
	
	module.exports = getSymbolsIn;


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(119),
	    isArguments = __webpack_require__(161),
	    isArray = __webpack_require__(27),
	    isIndex = __webpack_require__(160),
	    isLength = __webpack_require__(323),
	    toKey = __webpack_require__(122);
	
	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      result = false;
	
	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result || ++index != length) {
	    return result;
	  }
	  length = object == null ? 0 : object.length;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isArguments(object));
	}
	
	module.exports = hasPath;


/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(201),
	    getPrototype = __webpack_require__(313),
	    isPrototype = __webpack_require__(207);
	
	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}
	
	module.exports = initCloneObject;


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(47);
	
	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}
	
	module.exports = isStrictComparable;


/***/ }),
/* 501 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}
	
	module.exports = matchesStrictComparable;


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

	var WeakMap = __webpack_require__(467);
	
	/** Used to store function metadata. */
	var metaMap = WeakMap && new WeakMap;
	
	module.exports = metaMap;


/***/ }),
/* 503 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(301);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * A specialized version of `baseRest` which transforms the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @param {Function} transform The rest array transform.
	 * @returns {Function} Returns the new function.
	 */
	function overRest(func, start, transform) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = transform(array);
	    return apply(func, this, otherArgs);
	  };
	}
	
	module.exports = overRest;


/***/ }),
/* 505 */
/***/ (function(module, exports) {

	/**
	 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function safeGet(object, key) {
	  if (key === 'constructor' && typeof object[key] === 'function') {
	    return;
	  }
	
	  if (key == '__proto__') {
	    return;
	  }
	
	  return object[key];
	}
	
	module.exports = safeGet;


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(481),
	    shortOut = __webpack_require__(508);
	
	/**
	 * Sets metadata for `func`.
	 *
	 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	 * period of time, it will trip its breaker and transition to an identity
	 * function to avoid garbage collection pauses in V8. See
	 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	 * for more details.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var setData = shortOut(baseSetData);
	
	module.exports = setData;


/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

	var getWrapDetails = __webpack_require__(1436),
	    insertWrapDetails = __webpack_require__(1446),
	    setToString = __webpack_require__(317),
	    updateWrapDetails = __webpack_require__(1484);
	
	/**
	 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	 * with wrapper details in a comment at the top of the source body.
	 *
	 * @private
	 * @param {Function} wrapper The function to modify.
	 * @param {Function} reference The reference function.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @returns {Function} Returns `wrapper`.
	 */
	function setWrapToString(wrapper, reference, bitmask) {
	  var source = (reference + '');
	  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
	}
	
	module.exports = setWrapToString;


/***/ }),
/* 508 */
/***/ (function(module, exports) {

	/** Used to detect hot functions by number of calls within a span of milliseconds. */
	var HOT_COUNT = 800,
	    HOT_SPAN = 16;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeNow = Date.now;
	
	/**
	 * Creates a function that'll short out and invoke `identity` instead
	 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	 * milliseconds.
	 *
	 * @private
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new shortable function.
	 */
	function shortOut(func) {
	  var count = 0,
	      lastCalled = 0;
	
	  return function() {
	    var stamp = nativeNow(),
	        remaining = HOT_SPAN - (stamp - lastCalled);
	
	    lastCalled = stamp;
	    if (remaining > 0) {
	      if (++count >= HOT_COUNT) {
	        return arguments[0];
	      }
	    } else {
	      count = 0;
	    }
	    return func.apply(undefined, arguments);
	  };
	}
	
	module.exports = shortOut;


/***/ }),
/* 509 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to convert.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	module.exports = toSource;


/***/ }),
/* 510 */
/***/ (function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var objects = _.times(2, _.constant({ 'a': 1 }));
	 *
	 * console.log(objects);
	 * // => [{ 'a': 1 }, { 'a': 1 }]
	 *
	 * console.log(objects[0] === objects[1]);
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}
	
	module.exports = constant;


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(474),
	    baseIteratee = __webpack_require__(57),
	    toInteger = __webpack_require__(98);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * This method is like `_.find` except that it returns the index of the first
	 * element `predicate` returns truthy for instead of the element itself.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {number} Returns the index of the found element, else `-1`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'active': false },
	 *   { 'user': 'fred',    'active': false },
	 *   { 'user': 'pebbles', 'active': true }
	 * ];
	 *
	 * _.findIndex(users, function(o) { return o.user == 'barney'; });
	 * // => 0
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.findIndex(users, { 'user': 'fred', 'active': false });
	 * // => 1
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.findIndex(users, ['active', false]);
	 * // => 0
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.findIndex(users, 'active');
	 * // => 2
	 */
	function findIndex(array, predicate, fromIndex) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return -1;
	  }
	  var index = fromIndex == null ? 0 : toInteger(fromIndex);
	  if (index < 0) {
	    index = nativeMax(length + index, 0);
	  }
	  return baseFindIndex(array, baseIteratee(predicate, 3), index);
	}
	
	module.exports = findIndex;


/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(475);
	
	/**
	 * Flattens `array` a single level deep.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to flatten.
	 * @returns {Array} Returns the new flattened array.
	 * @example
	 *
	 * _.flatten([1, [2, [3, [4]], 5]]);
	 * // => [1, 2, [3, [4]], 5]
	 */
	function flatten(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? baseFlatten(array, 1) : [];
	}
	
	module.exports = flatten;


/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(1375),
	    hasPath = __webpack_require__(498);
	
	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}
	
	module.exports = hasIn;


/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(510),
	    createInverter = __webpack_require__(1425),
	    identity = __webpack_require__(96);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Creates an object composed of the inverted keys and values of `object`.
	 * If `object` contains duplicate values, subsequent values overwrite
	 * property assignments of previous values.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.7.0
	 * @category Object
	 * @param {Object} object The object to invert.
	 * @returns {Object} Returns the new inverted object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2, 'c': 1 };
	 *
	 * _.invert(object);
	 * // => { '1': 'c', '2': 'b' }
	 */
	var invert = createInverter(function(result, value, key) {
	  if (value != null &&
	      typeof value.toString != 'function') {
	    value = nativeObjectToString.call(value);
	  }
	
	  result[value] = key;
	}, constant(identity));
	
	module.exports = invert;


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(79),
	    isObjectLike = __webpack_require__(48);
	
	/** `Object#toString` result references. */
	var numberTag = '[object Number]';
	
	/**
	 * Checks if `value` is classified as a `Number` primitive or object.
	 *
	 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	 * classified as numbers, use the `_.isFinite` method.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	 * @example
	 *
	 * _.isNumber(3);
	 * // => true
	 *
	 * _.isNumber(Number.MIN_VALUE);
	 * // => true
	 *
	 * _.isNumber(Infinity);
	 * // => true
	 *
	 * _.isNumber('3');
	 * // => false
	 */
	function isNumber(value) {
	  return typeof value == 'number' ||
	    (isObjectLike(value) && baseGetTag(value) == numberTag);
	}
	
	module.exports = isNumber;


/***/ }),
/* 516 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is `undefined`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	 * @example
	 *
	 * _.isUndefined(void 0);
	 * // => true
	 *
	 * _.isUndefined(null);
	 * // => false
	 */
	function isUndefined(value) {
	  return value === undefined;
	}
	
	module.exports = isUndefined;


/***/ }),
/* 517 */
/***/ (function(module, exports) {

	/**
	 * Gets the last element of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to query.
	 * @returns {*} Returns the last element of `array`.
	 * @example
	 *
	 * _.last([1, 2, 3]);
	 * // => 3
	 */
	function last(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? array[length - 1] : undefined;
	}
	
	module.exports = last;


/***/ }),
/* 518 */
/***/ (function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}
	
	module.exports = stubArray;


/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(1512);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;
	
	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}
	
	module.exports = toFinite;


/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(308),
	    baseTrim = __webpack_require__(483),
	    castSlice = __webpack_require__(1406),
	    charsEndIndex = __webpack_require__(1407),
	    charsStartIndex = __webpack_require__(1408),
	    stringToArray = __webpack_require__(1479),
	    toString = __webpack_require__(167);
	
	/**
	 * Removes leading and trailing whitespace or specified characters from `string`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to trim.
	 * @param {string} [chars=whitespace] The characters to trim.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {string} Returns the trimmed string.
	 * @example
	 *
	 * _.trim('  abc  ');
	 * // => 'abc'
	 *
	 * _.trim('-_-abc-_-', '_-');
	 * // => 'abc'
	 *
	 * _.map(['  foo  ', '  bar  '], _.trim);
	 * // => ['foo', 'bar']
	 */
	function trim(string, chars, guard) {
	  string = toString(string);
	  if (string && (guard || chars === undefined)) {
	    return baseTrim(string);
	  }
	  if (!string || !(chars = baseToString(chars))) {
	    return string;
	  }
	  var strSymbols = stringToArray(string),
	      chrSymbols = stringToArray(chars),
	      start = charsStartIndex(strSymbols, chrSymbols),
	      end = charsEndIndex(strSymbols, chrSymbols) + 1;
	
	  return castSlice(strSymbols, start, end).join('');
	}
	
	module.exports = trim;


/***/ }),
/* 521 */
/***/ (function(module, exports) {

	'use strict';
	
	var numberIsNaN = function (value) {
		return value !== value;
	};
	
	module.exports = function is(a, b) {
		if (a === 0 && b === 0) {
			return 1 / a === 1 / b;
		}
		if (a === b) {
			return true;
		}
		if (numberIsNaN(a) && numberIsNaN(b)) {
			return true;
		}
		return false;
	};
	


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var implementation = __webpack_require__(521);
	
	module.exports = function getPolyfill() {
		return typeof Object.is === 'function' ? Object.is : implementation;
	};


/***/ }),
/* 523 */
/***/ (function(module, exports) {

	'use strict';
	
	var toStr = Object.prototype.toString;
	
	module.exports = function isArguments(value) {
		var str = toStr.call(value);
		var isArgs = str === '[object Arguments]';
		if (!isArgs) {
			isArgs = str !== '[object Array]' &&
				value !== null &&
				typeof value === 'object' &&
				typeof value.length === 'number' &&
				value.length >= 0 &&
				toStr.call(value.callee) === '[object Function]';
		}
		return isArgs;
	};


/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Tokenizer = __webpack_require__(127),
	    HTML = __webpack_require__(53);
	
	//Aliases
	var $ = HTML.TAG_NAMES,
	    NS = HTML.NAMESPACES,
	    ATTRS = HTML.ATTRS;
	
	
	//MIME types
	var MIME_TYPES = {
	    TEXT_HTML: 'text/html',
	    APPLICATION_XML: 'application/xhtml+xml'
	};
	
	//Attributes
	var DEFINITION_URL_ATTR = 'definitionurl',
	    ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL',
	    SVG_ATTRS_ADJUSTMENT_MAP = {
	        'attributename': 'attributeName',
	        'attributetype': 'attributeType',
	        'basefrequency': 'baseFrequency',
	        'baseprofile': 'baseProfile',
	        'calcmode': 'calcMode',
	        'clippathunits': 'clipPathUnits',
	        'diffuseconstant': 'diffuseConstant',
	        'edgemode': 'edgeMode',
	        'filterunits': 'filterUnits',
	        'glyphref': 'glyphRef',
	        'gradienttransform': 'gradientTransform',
	        'gradientunits': 'gradientUnits',
	        'kernelmatrix': 'kernelMatrix',
	        'kernelunitlength': 'kernelUnitLength',
	        'keypoints': 'keyPoints',
	        'keysplines': 'keySplines',
	        'keytimes': 'keyTimes',
	        'lengthadjust': 'lengthAdjust',
	        'limitingconeangle': 'limitingConeAngle',
	        'markerheight': 'markerHeight',
	        'markerunits': 'markerUnits',
	        'markerwidth': 'markerWidth',
	        'maskcontentunits': 'maskContentUnits',
	        'maskunits': 'maskUnits',
	        'numoctaves': 'numOctaves',
	        'pathlength': 'pathLength',
	        'patterncontentunits': 'patternContentUnits',
	        'patterntransform': 'patternTransform',
	        'patternunits': 'patternUnits',
	        'pointsatx': 'pointsAtX',
	        'pointsaty': 'pointsAtY',
	        'pointsatz': 'pointsAtZ',
	        'preservealpha': 'preserveAlpha',
	        'preserveaspectratio': 'preserveAspectRatio',
	        'primitiveunits': 'primitiveUnits',
	        'refx': 'refX',
	        'refy': 'refY',
	        'repeatcount': 'repeatCount',
	        'repeatdur': 'repeatDur',
	        'requiredextensions': 'requiredExtensions',
	        'requiredfeatures': 'requiredFeatures',
	        'specularconstant': 'specularConstant',
	        'specularexponent': 'specularExponent',
	        'spreadmethod': 'spreadMethod',
	        'startoffset': 'startOffset',
	        'stddeviation': 'stdDeviation',
	        'stitchtiles': 'stitchTiles',
	        'surfacescale': 'surfaceScale',
	        'systemlanguage': 'systemLanguage',
	        'tablevalues': 'tableValues',
	        'targetx': 'targetX',
	        'targety': 'targetY',
	        'textlength': 'textLength',
	        'viewbox': 'viewBox',
	        'viewtarget': 'viewTarget',
	        'xchannelselector': 'xChannelSelector',
	        'ychannelselector': 'yChannelSelector',
	        'zoomandpan': 'zoomAndPan'
	    },
	    XML_ATTRS_ADJUSTMENT_MAP = {
	        'xlink:actuate': {prefix: 'xlink', name: 'actuate', namespace: NS.XLINK},
	        'xlink:arcrole': {prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK},
	        'xlink:href': {prefix: 'xlink', name: 'href', namespace: NS.XLINK},
	        'xlink:role': {prefix: 'xlink', name: 'role', namespace: NS.XLINK},
	        'xlink:show': {prefix: 'xlink', name: 'show', namespace: NS.XLINK},
	        'xlink:title': {prefix: 'xlink', name: 'title', namespace: NS.XLINK},
	        'xlink:type': {prefix: 'xlink', name: 'type', namespace: NS.XLINK},
	        'xml:base': {prefix: 'xml', name: 'base', namespace: NS.XML},
	        'xml:lang': {prefix: 'xml', name: 'lang', namespace: NS.XML},
	        'xml:space': {prefix: 'xml', name: 'space', namespace: NS.XML},
	        'xmlns': {prefix: '', name: 'xmlns', namespace: NS.XMLNS},
	        'xmlns:xlink': {prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS}
	
	    };
	
	//SVG tag names adjustment map
	var SVG_TAG_NAMES_ADJUSTMENT_MAP = exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {
	    'altglyph': 'altGlyph',
	    'altglyphdef': 'altGlyphDef',
	    'altglyphitem': 'altGlyphItem',
	    'animatecolor': 'animateColor',
	    'animatemotion': 'animateMotion',
	    'animatetransform': 'animateTransform',
	    'clippath': 'clipPath',
	    'feblend': 'feBlend',
	    'fecolormatrix': 'feColorMatrix',
	    'fecomponenttransfer': 'feComponentTransfer',
	    'fecomposite': 'feComposite',
	    'feconvolvematrix': 'feConvolveMatrix',
	    'fediffuselighting': 'feDiffuseLighting',
	    'fedisplacementmap': 'feDisplacementMap',
	    'fedistantlight': 'feDistantLight',
	    'feflood': 'feFlood',
	    'fefunca': 'feFuncA',
	    'fefuncb': 'feFuncB',
	    'fefuncg': 'feFuncG',
	    'fefuncr': 'feFuncR',
	    'fegaussianblur': 'feGaussianBlur',
	    'feimage': 'feImage',
	    'femerge': 'feMerge',
	    'femergenode': 'feMergeNode',
	    'femorphology': 'feMorphology',
	    'feoffset': 'feOffset',
	    'fepointlight': 'fePointLight',
	    'fespecularlighting': 'feSpecularLighting',
	    'fespotlight': 'feSpotLight',
	    'fetile': 'feTile',
	    'feturbulence': 'feTurbulence',
	    'foreignobject': 'foreignObject',
	    'glyphref': 'glyphRef',
	    'lineargradient': 'linearGradient',
	    'radialgradient': 'radialGradient',
	    'textpath': 'textPath'
	};
	
	//Tags that causes exit from foreign content
	var EXITS_FOREIGN_CONTENT = Object.create(null);
	
	EXITS_FOREIGN_CONTENT[$.B] = true;
	EXITS_FOREIGN_CONTENT[$.BIG] = true;
	EXITS_FOREIGN_CONTENT[$.BLOCKQUOTE] = true;
	EXITS_FOREIGN_CONTENT[$.BODY] = true;
	EXITS_FOREIGN_CONTENT[$.BR] = true;
	EXITS_FOREIGN_CONTENT[$.CENTER] = true;
	EXITS_FOREIGN_CONTENT[$.CODE] = true;
	EXITS_FOREIGN_CONTENT[$.DD] = true;
	EXITS_FOREIGN_CONTENT[$.DIV] = true;
	EXITS_FOREIGN_CONTENT[$.DL] = true;
	EXITS_FOREIGN_CONTENT[$.DT] = true;
	EXITS_FOREIGN_CONTENT[$.EM] = true;
	EXITS_FOREIGN_CONTENT[$.EMBED] = true;
	EXITS_FOREIGN_CONTENT[$.H1] = true;
	EXITS_FOREIGN_CONTENT[$.H2] = true;
	EXITS_FOREIGN_CONTENT[$.H3] = true;
	EXITS_FOREIGN_CONTENT[$.H4] = true;
	EXITS_FOREIGN_CONTENT[$.H5] = true;
	EXITS_FOREIGN_CONTENT[$.H6] = true;
	EXITS_FOREIGN_CONTENT[$.HEAD] = true;
	EXITS_FOREIGN_CONTENT[$.HR] = true;
	EXITS_FOREIGN_CONTENT[$.I] = true;
	EXITS_FOREIGN_CONTENT[$.IMG] = true;
	EXITS_FOREIGN_CONTENT[$.LI] = true;
	EXITS_FOREIGN_CONTENT[$.LISTING] = true;
	EXITS_FOREIGN_CONTENT[$.MENU] = true;
	EXITS_FOREIGN_CONTENT[$.META] = true;
	EXITS_FOREIGN_CONTENT[$.NOBR] = true;
	EXITS_FOREIGN_CONTENT[$.OL] = true;
	EXITS_FOREIGN_CONTENT[$.P] = true;
	EXITS_FOREIGN_CONTENT[$.PRE] = true;
	EXITS_FOREIGN_CONTENT[$.RUBY] = true;
	EXITS_FOREIGN_CONTENT[$.S] = true;
	EXITS_FOREIGN_CONTENT[$.SMALL] = true;
	EXITS_FOREIGN_CONTENT[$.SPAN] = true;
	EXITS_FOREIGN_CONTENT[$.STRONG] = true;
	EXITS_FOREIGN_CONTENT[$.STRIKE] = true;
	EXITS_FOREIGN_CONTENT[$.SUB] = true;
	EXITS_FOREIGN_CONTENT[$.SUP] = true;
	EXITS_FOREIGN_CONTENT[$.TABLE] = true;
	EXITS_FOREIGN_CONTENT[$.TT] = true;
	EXITS_FOREIGN_CONTENT[$.U] = true;
	EXITS_FOREIGN_CONTENT[$.UL] = true;
	EXITS_FOREIGN_CONTENT[$.VAR] = true;
	
	//Check exit from foreign content
	exports.causesExit = function (startTagToken) {
	    var tn = startTagToken.tagName;
	    var isFontWithAttrs = tn === $.FONT && (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||
	                                            Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||
	                                            Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);
	
	    return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];
	};
	
	//Token adjustments
	exports.adjustTokenMathMLAttrs = function (token) {
	    for (var i = 0; i < token.attrs.length; i++) {
	        if (token.attrs[i].name === DEFINITION_URL_ATTR) {
	            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;
	            break;
	        }
	    }
	};
	
	exports.adjustTokenSVGAttrs = function (token) {
	    for (var i = 0; i < token.attrs.length; i++) {
	        var adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];
	
	        if (adjustedAttrName)
	            token.attrs[i].name = adjustedAttrName;
	    }
	};
	
	exports.adjustTokenXMLAttrs = function (token) {
	    for (var i = 0; i < token.attrs.length; i++) {
	        var adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];
	
	        if (adjustedAttrEntry) {
	            token.attrs[i].prefix = adjustedAttrEntry.prefix;
	            token.attrs[i].name = adjustedAttrEntry.name;
	            token.attrs[i].namespace = adjustedAttrEntry.namespace;
	        }
	    }
	};
	
	exports.adjustTokenSVGTagName = function (token) {
	    var adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];
	
	    if (adjustedTagName)
	        token.tagName = adjustedTagName;
	};
	
	//Integration points
	function isMathMLTextIntegrationPoint(tn, ns) {
	    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);
	}
	
	function isHtmlIntegrationPoint(tn, ns, attrs) {
	    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {
	        for (var i = 0; i < attrs.length; i++) {
	            if (attrs[i].name === ATTRS.ENCODING) {
	                var value = attrs[i].value.toLowerCase();
	
	                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;
	            }
	        }
	    }
	
	    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);
	}
	
	exports.isIntegrationPoint = function (tn, ns, attrs, foreignNS) {
	    if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs))
	        return true;
	
	    if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns))
	        return true;
	
	    return false;
	};


/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Mixin = __webpack_require__(215),
	    Tokenizer = __webpack_require__(127),
	    PositionTrackingPreprocessorMixin = __webpack_require__(526),
	    inherits = __webpack_require__(60).inherits;
	
	var LocationInfoTokenizerMixin = module.exports = function (tokenizer) {
	    Mixin.call(this, tokenizer);
	
	    this.tokenizer = tokenizer;
	    this.posTracker = new PositionTrackingPreprocessorMixin(tokenizer.preprocessor);
	    this.currentAttrLocation = null;
	    this.currentTokenLocation = null;
	};
	
	inherits(LocationInfoTokenizerMixin, Mixin);
	
	LocationInfoTokenizerMixin.prototype._getCurrentLocation = function () {
	    return {
	        line: this.posTracker.line,
	        col: this.posTracker.col,
	        startOffset: this.posTracker.offset,
	        endOffset: -1
	    };
	};
	
	LocationInfoTokenizerMixin.prototype._attachCurrentAttrLocationInfo = function () {
	    this.currentAttrLocation.endOffset = this.posTracker.offset;
	
	    var currentToken = this.tokenizer.currentToken,
	        currentAttr = this.tokenizer.currentAttr;
	
	    if (!currentToken.location.attrs)
	        currentToken.location.attrs = Object.create(null);
	
	    currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;
	};
	
	LocationInfoTokenizerMixin.prototype._getOverriddenMethods = function (mxn, orig) {
	    var methods = {
	        _createStartTagToken: function () {
	            orig._createStartTagToken.call(this);
	            this.currentToken.location = mxn.currentTokenLocation;
	        },
	
	        _createEndTagToken: function () {
	            orig._createEndTagToken.call(this);
	            this.currentToken.location = mxn.currentTokenLocation;
	        },
	
	        _createCommentToken: function () {
	            orig._createCommentToken.call(this);
	            this.currentToken.location = mxn.currentTokenLocation;
	        },
	
	        _createDoctypeToken: function (initialName) {
	            orig._createDoctypeToken.call(this, initialName);
	            this.currentToken.location = mxn.currentTokenLocation;
	        },
	
	        _createCharacterToken: function (type, ch) {
	            orig._createCharacterToken.call(this, type, ch);
	            this.currentCharacterToken.location = mxn.currentTokenLocation;
	        },
	
	        _createAttr: function (attrNameFirstCh) {
	            orig._createAttr.call(this, attrNameFirstCh);
	            mxn.currentAttrLocation = mxn._getCurrentLocation();
	        },
	
	        _leaveAttrName: function (toState) {
	            orig._leaveAttrName.call(this, toState);
	            mxn._attachCurrentAttrLocationInfo();
	        },
	
	        _leaveAttrValue: function (toState) {
	            orig._leaveAttrValue.call(this, toState);
	            mxn._attachCurrentAttrLocationInfo();
	        },
	
	        _emitCurrentToken: function () {
	            //NOTE: if we have pending character token make it's end location equal to the
	            //current token's start location.
	            if (this.currentCharacterToken)
	                this.currentCharacterToken.location.endOffset = this.currentToken.location.startOffset;
	
	            this.currentToken.location.endOffset = mxn.posTracker.offset + 1;
	            orig._emitCurrentToken.call(this);
	        },
	
	        _emitCurrentCharacterToken: function () {
	            //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),
	            //then set it's location at the current preprocessor position.
	            //We don't need to increment preprocessor position, since character token
	            //emission is always forced by the start of the next character token here.
	            //So, we already have advanced position.
	            if (this.currentCharacterToken && this.currentCharacterToken.location.endOffset === -1)
	                this.currentCharacterToken.location.endOffset = mxn.posTracker.offset;
	
	            orig._emitCurrentCharacterToken.call(this);
	        }
	    };
	
	    //NOTE: patch initial states for each mode to obtain token start position
	    Object.keys(Tokenizer.MODE).forEach(function (modeName) {
	        var state = Tokenizer.MODE[modeName];
	
	        methods[state] = function (cp) {
	            mxn.currentTokenLocation = mxn._getCurrentLocation();
	            orig[state].call(this, cp);
	        };
	    });
	
	    return methods;
	};
	


/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Mixin = __webpack_require__(215),
	    inherits = __webpack_require__(60).inherits,
	    UNICODE = __webpack_require__(168);
	
	//Aliases
	var $ = UNICODE.CODE_POINTS;
	
	var PositionTrackingPreprocessorMixin = module.exports = function (preprocessor) {
	    // NOTE: avoid installing tracker twice
	    if (!preprocessor.__locTracker) {
	        preprocessor.__locTracker = this;
	
	        Mixin.call(this, preprocessor);
	
	        this.preprocessor = preprocessor;
	        this.isEol = false;
	        this.lineStartPos = 0;
	        this.droppedBufferSize = 0;
	
	        this.col = -1;
	        this.line = 1;
	    }
	
	    return preprocessor.__locTracker;
	};
	
	inherits(PositionTrackingPreprocessorMixin, Mixin);
	
	Object.defineProperty(PositionTrackingPreprocessorMixin.prototype, 'offset', {
	    get: function () {
	        return this.droppedBufferSize + this.preprocessor.pos;
	    }
	});
	
	PositionTrackingPreprocessorMixin.prototype._getOverriddenMethods = function (mxn, orig) {
	    return {
	        advance: function () {
	            var cp = orig.advance.call(this);
	
	            //NOTE: LF should be in the last column of the line
	            if (mxn.isEol) {
	                mxn.isEol = false;
	                mxn.line++;
	                mxn.lineStartPos = mxn.offset;
	            }
	
	            if (cp === $.LINE_FEED)
	                mxn.isEol = true;
	
	            mxn.col = mxn.offset - mxn.lineStartPos + 1;
	
	            return cp;
	        },
	
	        retreat: function () {
	            orig.retreat.call(this);
	            mxn.isEol = false;
	
	            mxn.col = mxn.offset - mxn.lineStartPos + 1;
	        },
	
	        dropParsedChunk: function () {
	            var prevPos = this.pos;
	
	            orig.dropParsedChunk.call(this);
	
	            mxn.droppedBufferSize += prevPos - this.pos;
	        }
	    };
	};


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Tokenizer = __webpack_require__(127),
	    OpenElementStack = __webpack_require__(1532),
	    FormattingElementList = __webpack_require__(1531),
	    LocationInfoParserMixin = __webpack_require__(1529),
	    defaultTreeAdapter = __webpack_require__(327),
	    mergeOptions = __webpack_require__(328),
	    doctype = __webpack_require__(214),
	    foreignContent = __webpack_require__(524),
	    UNICODE = __webpack_require__(168),
	    HTML = __webpack_require__(53);
	
	//Aliases
	var $ = HTML.TAG_NAMES,
	    NS = HTML.NAMESPACES,
	    ATTRS = HTML.ATTRS;
	
	var DEFAULT_OPTIONS = {
	    locationInfo: false,
	    treeAdapter: defaultTreeAdapter
	};
	
	//Misc constants
	var HIDDEN_INPUT_TYPE = 'hidden';
	
	//Adoption agency loops iteration count
	var AA_OUTER_LOOP_ITER = 8,
	    AA_INNER_LOOP_ITER = 3;
	
	//Insertion modes
	var INITIAL_MODE = 'INITIAL_MODE',
	    BEFORE_HTML_MODE = 'BEFORE_HTML_MODE',
	    BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE',
	    IN_HEAD_MODE = 'IN_HEAD_MODE',
	    AFTER_HEAD_MODE = 'AFTER_HEAD_MODE',
	    IN_BODY_MODE = 'IN_BODY_MODE',
	    TEXT_MODE = 'TEXT_MODE',
	    IN_TABLE_MODE = 'IN_TABLE_MODE',
	    IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE',
	    IN_CAPTION_MODE = 'IN_CAPTION_MODE',
	    IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE',
	    IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE',
	    IN_ROW_MODE = 'IN_ROW_MODE',
	    IN_CELL_MODE = 'IN_CELL_MODE',
	    IN_SELECT_MODE = 'IN_SELECT_MODE',
	    IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE',
	    IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE',
	    AFTER_BODY_MODE = 'AFTER_BODY_MODE',
	    IN_FRAMESET_MODE = 'IN_FRAMESET_MODE',
	    AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE',
	    AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE',
	    AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';
	
	//Insertion mode reset map
	var INSERTION_MODE_RESET_MAP = Object.create(null);
	
	INSERTION_MODE_RESET_MAP[$.TR] = IN_ROW_MODE;
	INSERTION_MODE_RESET_MAP[$.TBODY] =
	INSERTION_MODE_RESET_MAP[$.THEAD] =
	INSERTION_MODE_RESET_MAP[$.TFOOT] = IN_TABLE_BODY_MODE;
	INSERTION_MODE_RESET_MAP[$.CAPTION] = IN_CAPTION_MODE;
	INSERTION_MODE_RESET_MAP[$.COLGROUP] = IN_COLUMN_GROUP_MODE;
	INSERTION_MODE_RESET_MAP[$.TABLE] = IN_TABLE_MODE;
	INSERTION_MODE_RESET_MAP[$.BODY] = IN_BODY_MODE;
	INSERTION_MODE_RESET_MAP[$.FRAMESET] = IN_FRAMESET_MODE;
	
	//Template insertion mode switch map
	var TEMPLATE_INSERTION_MODE_SWITCH_MAP = Object.create(null);
	
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.CAPTION] =
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.COLGROUP] =
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TBODY] =
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TFOOT] =
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.THEAD] = IN_TABLE_MODE;
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.COL] = IN_COLUMN_GROUP_MODE;
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TR] = IN_TABLE_BODY_MODE;
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TD] =
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TH] = IN_ROW_MODE;
	
	//Token handlers map for insertion modes
	var _ = Object.create(null);
	
	_[INITIAL_MODE] = Object.create(null);
	_[INITIAL_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[INITIAL_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenInInitialMode;
	_[INITIAL_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = ignoreToken;
	_[INITIAL_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[INITIAL_MODE][Tokenizer.DOCTYPE_TOKEN] = doctypeInInitialMode;
	_[INITIAL_MODE][Tokenizer.START_TAG_TOKEN] =
	_[INITIAL_MODE][Tokenizer.END_TAG_TOKEN] =
	_[INITIAL_MODE][Tokenizer.EOF_TOKEN] = tokenInInitialMode;
	
	_[BEFORE_HTML_MODE] = Object.create(null);
	_[BEFORE_HTML_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[BEFORE_HTML_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenBeforeHtml;
	_[BEFORE_HTML_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = ignoreToken;
	_[BEFORE_HTML_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[BEFORE_HTML_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[BEFORE_HTML_MODE][Tokenizer.START_TAG_TOKEN] = startTagBeforeHtml;
	_[BEFORE_HTML_MODE][Tokenizer.END_TAG_TOKEN] = endTagBeforeHtml;
	_[BEFORE_HTML_MODE][Tokenizer.EOF_TOKEN] = tokenBeforeHtml;
	
	_[BEFORE_HEAD_MODE] = Object.create(null);
	_[BEFORE_HEAD_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[BEFORE_HEAD_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenBeforeHead;
	_[BEFORE_HEAD_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = ignoreToken;
	_[BEFORE_HEAD_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[BEFORE_HEAD_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[BEFORE_HEAD_MODE][Tokenizer.START_TAG_TOKEN] = startTagBeforeHead;
	_[BEFORE_HEAD_MODE][Tokenizer.END_TAG_TOKEN] = endTagBeforeHead;
	_[BEFORE_HEAD_MODE][Tokenizer.EOF_TOKEN] = tokenBeforeHead;
	
	_[IN_HEAD_MODE] = Object.create(null);
	_[IN_HEAD_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_HEAD_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenInHead;
	_[IN_HEAD_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[IN_HEAD_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_HEAD_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_HEAD_MODE][Tokenizer.START_TAG_TOKEN] = startTagInHead;
	_[IN_HEAD_MODE][Tokenizer.END_TAG_TOKEN] = endTagInHead;
	_[IN_HEAD_MODE][Tokenizer.EOF_TOKEN] = tokenInHead;
	
	_[AFTER_HEAD_MODE] = Object.create(null);
	_[AFTER_HEAD_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[AFTER_HEAD_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenAfterHead;
	_[AFTER_HEAD_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[AFTER_HEAD_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[AFTER_HEAD_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[AFTER_HEAD_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterHead;
	_[AFTER_HEAD_MODE][Tokenizer.END_TAG_TOKEN] = endTagAfterHead;
	_[AFTER_HEAD_MODE][Tokenizer.EOF_TOKEN] = tokenAfterHead;
	
	_[IN_BODY_MODE] = Object.create(null);
	_[IN_BODY_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;
	_[IN_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[IN_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagInBody;
	_[IN_BODY_MODE][Tokenizer.END_TAG_TOKEN] = endTagInBody;
	_[IN_BODY_MODE][Tokenizer.EOF_TOKEN] = eofInBody;
	
	_[TEXT_MODE] = Object.create(null);
	_[TEXT_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[TEXT_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =
	_[TEXT_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[TEXT_MODE][Tokenizer.COMMENT_TOKEN] =
	_[TEXT_MODE][Tokenizer.DOCTYPE_TOKEN] =
	_[TEXT_MODE][Tokenizer.START_TAG_TOKEN] = ignoreToken;
	_[TEXT_MODE][Tokenizer.END_TAG_TOKEN] = endTagInText;
	_[TEXT_MODE][Tokenizer.EOF_TOKEN] = eofInText;
	
	_[IN_TABLE_MODE] = Object.create(null);
	_[IN_TABLE_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_TABLE_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =
	_[IN_TABLE_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = characterInTable;
	_[IN_TABLE_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_TABLE_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_TABLE_MODE][Tokenizer.START_TAG_TOKEN] = startTagInTable;
	_[IN_TABLE_MODE][Tokenizer.END_TAG_TOKEN] = endTagInTable;
	_[IN_TABLE_MODE][Tokenizer.EOF_TOKEN] = eofInBody;
	
	_[IN_TABLE_TEXT_MODE] = Object.create(null);
	_[IN_TABLE_TEXT_MODE][Tokenizer.CHARACTER_TOKEN] = characterInTableText;
	_[IN_TABLE_TEXT_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_TABLE_TEXT_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInTableText;
	_[IN_TABLE_TEXT_MODE][Tokenizer.COMMENT_TOKEN] =
	_[IN_TABLE_TEXT_MODE][Tokenizer.DOCTYPE_TOKEN] =
	_[IN_TABLE_TEXT_MODE][Tokenizer.START_TAG_TOKEN] =
	_[IN_TABLE_TEXT_MODE][Tokenizer.END_TAG_TOKEN] =
	_[IN_TABLE_TEXT_MODE][Tokenizer.EOF_TOKEN] = tokenInTableText;
	
	_[IN_CAPTION_MODE] = Object.create(null);
	_[IN_CAPTION_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;
	_[IN_CAPTION_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_CAPTION_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[IN_CAPTION_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_CAPTION_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_CAPTION_MODE][Tokenizer.START_TAG_TOKEN] = startTagInCaption;
	_[IN_CAPTION_MODE][Tokenizer.END_TAG_TOKEN] = endTagInCaption;
	_[IN_CAPTION_MODE][Tokenizer.EOF_TOKEN] = eofInBody;
	
	_[IN_COLUMN_GROUP_MODE] = Object.create(null);
	_[IN_COLUMN_GROUP_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_COLUMN_GROUP_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenInColumnGroup;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.START_TAG_TOKEN] = startTagInColumnGroup;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.END_TAG_TOKEN] = endTagInColumnGroup;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.EOF_TOKEN] = eofInBody;
	
	_[IN_TABLE_BODY_MODE] = Object.create(null);
	_[IN_TABLE_BODY_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_TABLE_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =
	_[IN_TABLE_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = characterInTable;
	_[IN_TABLE_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_TABLE_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_TABLE_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagInTableBody;
	_[IN_TABLE_BODY_MODE][Tokenizer.END_TAG_TOKEN] = endTagInTableBody;
	_[IN_TABLE_BODY_MODE][Tokenizer.EOF_TOKEN] = eofInBody;
	
	_[IN_ROW_MODE] = Object.create(null);
	_[IN_ROW_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_ROW_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =
	_[IN_ROW_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = characterInTable;
	_[IN_ROW_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_ROW_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_ROW_MODE][Tokenizer.START_TAG_TOKEN] = startTagInRow;
	_[IN_ROW_MODE][Tokenizer.END_TAG_TOKEN] = endTagInRow;
	_[IN_ROW_MODE][Tokenizer.EOF_TOKEN] = eofInBody;
	
	_[IN_CELL_MODE] = Object.create(null);
	_[IN_CELL_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;
	_[IN_CELL_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_CELL_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[IN_CELL_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_CELL_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_CELL_MODE][Tokenizer.START_TAG_TOKEN] = startTagInCell;
	_[IN_CELL_MODE][Tokenizer.END_TAG_TOKEN] = endTagInCell;
	_[IN_CELL_MODE][Tokenizer.EOF_TOKEN] = eofInBody;
	
	_[IN_SELECT_MODE] = Object.create(null);
	_[IN_SELECT_MODE][Tokenizer.CHARACTER_TOKEN] = insertCharacters;
	_[IN_SELECT_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_SELECT_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[IN_SELECT_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_SELECT_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_SELECT_MODE][Tokenizer.START_TAG_TOKEN] = startTagInSelect;
	_[IN_SELECT_MODE][Tokenizer.END_TAG_TOKEN] = endTagInSelect;
	_[IN_SELECT_MODE][Tokenizer.EOF_TOKEN] = eofInBody;
	
	_[IN_SELECT_IN_TABLE_MODE] = Object.create(null);
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.CHARACTER_TOKEN] = insertCharacters;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.START_TAG_TOKEN] = startTagInSelectInTable;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.END_TAG_TOKEN] = endTagInSelectInTable;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.EOF_TOKEN] = eofInBody;
	
	_[IN_TEMPLATE_MODE] = Object.create(null);
	_[IN_TEMPLATE_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;
	_[IN_TEMPLATE_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_TEMPLATE_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[IN_TEMPLATE_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_TEMPLATE_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_TEMPLATE_MODE][Tokenizer.START_TAG_TOKEN] = startTagInTemplate;
	_[IN_TEMPLATE_MODE][Tokenizer.END_TAG_TOKEN] = endTagInTemplate;
	_[IN_TEMPLATE_MODE][Tokenizer.EOF_TOKEN] = eofInTemplate;
	
	_[AFTER_BODY_MODE] = Object.create(null);
	_[AFTER_BODY_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[AFTER_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenAfterBody;
	_[AFTER_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[AFTER_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendCommentToRootHtmlElement;
	_[AFTER_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[AFTER_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterBody;
	_[AFTER_BODY_MODE][Tokenizer.END_TAG_TOKEN] = endTagAfterBody;
	_[AFTER_BODY_MODE][Tokenizer.EOF_TOKEN] = stopParsing;
	
	_[IN_FRAMESET_MODE] = Object.create(null);
	_[IN_FRAMESET_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_FRAMESET_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_FRAMESET_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[IN_FRAMESET_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_FRAMESET_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_FRAMESET_MODE][Tokenizer.START_TAG_TOKEN] = startTagInFrameset;
	_[IN_FRAMESET_MODE][Tokenizer.END_TAG_TOKEN] = endTagInFrameset;
	_[IN_FRAMESET_MODE][Tokenizer.EOF_TOKEN] = stopParsing;
	
	_[AFTER_FRAMESET_MODE] = Object.create(null);
	_[AFTER_FRAMESET_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[AFTER_FRAMESET_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[AFTER_FRAMESET_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[AFTER_FRAMESET_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[AFTER_FRAMESET_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[AFTER_FRAMESET_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterFrameset;
	_[AFTER_FRAMESET_MODE][Tokenizer.END_TAG_TOKEN] = endTagAfterFrameset;
	_[AFTER_FRAMESET_MODE][Tokenizer.EOF_TOKEN] = stopParsing;
	
	_[AFTER_AFTER_BODY_MODE] = Object.create(null);
	_[AFTER_AFTER_BODY_MODE][Tokenizer.CHARACTER_TOKEN] = tokenAfterAfterBody;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenAfterAfterBody;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendCommentToDocument;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterAfterBody;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.END_TAG_TOKEN] = tokenAfterAfterBody;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.EOF_TOKEN] = stopParsing;
	
	_[AFTER_AFTER_FRAMESET_MODE] = Object.create(null);
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.COMMENT_TOKEN] = appendCommentToDocument;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterAfterFrameset;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.END_TAG_TOKEN] = ignoreToken;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.EOF_TOKEN] = stopParsing;
	
	
	//Parser
	var Parser = module.exports = function (options) {
	    this.options = mergeOptions(DEFAULT_OPTIONS, options);
	
	    this.treeAdapter = this.options.treeAdapter;
	    this.pendingScript = null;
	
	    if (this.options.locationInfo)
	        new LocationInfoParserMixin(this);
	};
	
	// API
	Parser.prototype.parse = function (html) {
	    var document = this.treeAdapter.createDocument();
	
	    this._bootstrap(document, null);
	    this.tokenizer.write(html, true);
	    this._runParsingLoop(null);
	
	    return document;
	};
	
	Parser.prototype.parseFragment = function (html, fragmentContext) {
	    //NOTE: use <template> element as a fragment context if context element was not provided,
	    //so we will parse in "forgiving" manner
	    if (!fragmentContext)
	        fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);
	
	    //NOTE: create fake element which will be used as 'document' for fragment parsing.
	    //This is important for jsdom there 'document' can't be recreated, therefore
	    //fragment parsing causes messing of the main `document`.
	    var documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);
	
	    this._bootstrap(documentMock, fragmentContext);
	
	    if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE)
	        this._pushTmplInsertionMode(IN_TEMPLATE_MODE);
	
	    this._initTokenizerForFragmentParsing();
	    this._insertFakeRootElement();
	    this._resetInsertionMode();
	    this._findFormInFragmentContext();
	    this.tokenizer.write(html, true);
	    this._runParsingLoop(null);
	
	    var rootElement = this.treeAdapter.getFirstChild(documentMock),
	        fragment = this.treeAdapter.createDocumentFragment();
	
	    this._adoptNodes(rootElement, fragment);
	
	    return fragment;
	};
	
	//Bootstrap parser
	Parser.prototype._bootstrap = function (document, fragmentContext) {
	    this.tokenizer = new Tokenizer(this.options);
	
	    this.stopped = false;
	
	    this.insertionMode = INITIAL_MODE;
	    this.originalInsertionMode = '';
	
	    this.document = document;
	    this.fragmentContext = fragmentContext;
	
	    this.headElement = null;
	    this.formElement = null;
	
	    this.openElements = new OpenElementStack(this.document, this.treeAdapter);
	    this.activeFormattingElements = new FormattingElementList(this.treeAdapter);
	
	    this.tmplInsertionModeStack = [];
	    this.tmplInsertionModeStackTop = -1;
	    this.currentTmplInsertionMode = null;
	
	    this.pendingCharacterTokens = [];
	    this.hasNonWhitespacePendingCharacterToken = false;
	
	    this.framesetOk = true;
	    this.skipNextNewLine = false;
	    this.fosterParentingEnabled = false;
	};
	
	//Parsing loop
	Parser.prototype._runParsingLoop  = function (scriptHandler) {
	    while (!this.stopped) {
	        this._setupTokenizerCDATAMode();
	
	        var token = this.tokenizer.getNextToken();
	
	        if (token.type === Tokenizer.HIBERNATION_TOKEN)
	            break;
	
	        if (this.skipNextNewLine) {
	            this.skipNextNewLine = false;
	
	            if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\n') {
	                if (token.chars.length === 1)
	                    continue;
	
	                token.chars = token.chars.substr(1);
	            }
	        }
	
	        this._processInputToken(token);
	
	        if (scriptHandler && this.pendingScript)
	            break;
	    }
	};
	
	Parser.prototype.runParsingLoopForCurrentChunk = function (writeCallback, scriptHandler) {
	    this._runParsingLoop(scriptHandler);
	
	    if (scriptHandler && this.pendingScript) {
	        var script = this.pendingScript;
	
	        this.pendingScript = null;
	
	        scriptHandler(script);
	
	        return;
	    }
	
	    if (writeCallback)
	        writeCallback();
	};
	
	//Text parsing
	Parser.prototype._setupTokenizerCDATAMode = function () {
	    var current = this._getAdjustedCurrentElement();
	
	    this.tokenizer.allowCDATA = current && current !== this.document &&
	                                this.treeAdapter.getNamespaceURI(current) !== NS.HTML && !this._isIntegrationPoint(current);
	};
	
	Parser.prototype._switchToTextParsing = function (currentToken, nextTokenizerState) {
	    this._insertElement(currentToken, NS.HTML);
	    this.tokenizer.state = nextTokenizerState;
	    this.originalInsertionMode = this.insertionMode;
	    this.insertionMode = TEXT_MODE;
	};
	
	Parser.prototype.switchToPlaintextParsing = function () {
	    this.insertionMode = TEXT_MODE;
	    this.originalInsertionMode = IN_BODY_MODE;
	    this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
	};
	
	//Fragment parsing
	Parser.prototype._getAdjustedCurrentElement = function () {
	    return this.openElements.stackTop === 0 && this.fragmentContext ?
	        this.fragmentContext :
	        this.openElements.current;
	};
	
	Parser.prototype._findFormInFragmentContext = function () {
	    var node = this.fragmentContext;
	
	    do {
	        if (this.treeAdapter.getTagName(node) === $.FORM) {
	            this.formElement = node;
	            break;
	        }
	
	        node = this.treeAdapter.getParentNode(node);
	    } while (node);
	};
	
	Parser.prototype._initTokenizerForFragmentParsing = function () {
	    if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {
	        var tn = this.treeAdapter.getTagName(this.fragmentContext);
	
	        if (tn === $.TITLE || tn === $.TEXTAREA)
	            this.tokenizer.state = Tokenizer.MODE.RCDATA;
	
	        else if (tn === $.STYLE || tn === $.XMP || tn === $.IFRAME ||
	                 tn === $.NOEMBED || tn === $.NOFRAMES || tn === $.NOSCRIPT)
	            this.tokenizer.state = Tokenizer.MODE.RAWTEXT;
	
	        else if (tn === $.SCRIPT)
	            this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;
	
	        else if (tn === $.PLAINTEXT)
	            this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
	    }
	};
	
	//Tree mutation
	Parser.prototype._setDocumentType = function (token) {
	    this.treeAdapter.setDocumentType(this.document, token.name, token.publicId, token.systemId);
	};
	
	Parser.prototype._attachElementToTree = function (element) {
	    if (this._shouldFosterParentOnInsertion())
	        this._fosterParentElement(element);
	
	    else {
	        var parent = this.openElements.currentTmplContent || this.openElements.current;
	
	        this.treeAdapter.appendChild(parent, element);
	    }
	};
	
	Parser.prototype._appendElement = function (token, namespaceURI) {
	    var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
	
	    this._attachElementToTree(element);
	};
	
	Parser.prototype._insertElement = function (token, namespaceURI) {
	    var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
	
	    this._attachElementToTree(element);
	    this.openElements.push(element);
	};
	
	Parser.prototype._insertFakeElement = function (tagName) {
	    var element = this.treeAdapter.createElement(tagName, NS.HTML, []);
	
	    this._attachElementToTree(element);
	    this.openElements.push(element);
	};
	
	Parser.prototype._insertTemplate = function (token) {
	    var tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs),
	        content = this.treeAdapter.createDocumentFragment();
	
	    this.treeAdapter.setTemplateContent(tmpl, content);
	    this._attachElementToTree(tmpl);
	    this.openElements.push(tmpl);
	};
	
	Parser.prototype._insertFakeRootElement = function () {
	    var element = this.treeAdapter.createElement($.HTML, NS.HTML, []);
	
	    this.treeAdapter.appendChild(this.openElements.current, element);
	    this.openElements.push(element);
	};
	
	Parser.prototype._appendCommentNode = function (token, parent) {
	    var commentNode = this.treeAdapter.createCommentNode(token.data);
	
	    this.treeAdapter.appendChild(parent, commentNode);
	};
	
	Parser.prototype._insertCharacters = function (token) {
	    if (this._shouldFosterParentOnInsertion())
	        this._fosterParentText(token.chars);
	
	    else {
	        var parent = this.openElements.currentTmplContent || this.openElements.current;
	
	        this.treeAdapter.insertText(parent, token.chars);
	    }
	};
	
	Parser.prototype._adoptNodes = function (donor, recipient) {
	    while (true) {
	        var child = this.treeAdapter.getFirstChild(donor);
	
	        if (!child)
	            break;
	
	        this.treeAdapter.detachNode(child);
	        this.treeAdapter.appendChild(recipient, child);
	    }
	};
	
	//Token processing
	Parser.prototype._shouldProcessTokenInForeignContent = function (token) {
	    var current = this._getAdjustedCurrentElement();
	
	    if (!current || current === this.document)
	        return false;
	
	    var ns = this.treeAdapter.getNamespaceURI(current);
	
	    if (ns === NS.HTML)
	        return false;
	
	    if (this.treeAdapter.getTagName(current) === $.ANNOTATION_XML && ns === NS.MATHML &&
	        token.type === Tokenizer.START_TAG_TOKEN && token.tagName === $.SVG)
	        return false;
	
	    var isCharacterToken = token.type === Tokenizer.CHARACTER_TOKEN ||
	                           token.type === Tokenizer.NULL_CHARACTER_TOKEN ||
	                           token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN,
	        isMathMLTextStartTag = token.type === Tokenizer.START_TAG_TOKEN &&
	                               token.tagName !== $.MGLYPH &&
	                               token.tagName !== $.MALIGNMARK;
	
	    if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML))
	        return false;
	
	    if ((token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) && this._isIntegrationPoint(current, NS.HTML))
	        return false;
	
	    return token.type !== Tokenizer.EOF_TOKEN;
	};
	
	Parser.prototype._processToken = function (token) {
	    _[this.insertionMode][token.type](this, token);
	};
	
	Parser.prototype._processTokenInBodyMode = function (token) {
	    _[IN_BODY_MODE][token.type](this, token);
	};
	
	Parser.prototype._processTokenInForeignContent = function (token) {
	    if (token.type === Tokenizer.CHARACTER_TOKEN)
	        characterInForeignContent(this, token);
	
	    else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN)
	        nullCharacterInForeignContent(this, token);
	
	    else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN)
	        insertCharacters(this, token);
	
	    else if (token.type === Tokenizer.COMMENT_TOKEN)
	        appendComment(this, token);
	
	    else if (token.type === Tokenizer.START_TAG_TOKEN)
	        startTagInForeignContent(this, token);
	
	    else if (token.type === Tokenizer.END_TAG_TOKEN)
	        endTagInForeignContent(this, token);
	};
	
	Parser.prototype._processInputToken = function (token) {
	    if (this._shouldProcessTokenInForeignContent(token))
	        this._processTokenInForeignContent(token);
	
	    else
	        this._processToken(token);
	};
	
	//Integration points
	Parser.prototype._isIntegrationPoint = function (element, foreignNS) {
	    var tn = this.treeAdapter.getTagName(element),
	        ns = this.treeAdapter.getNamespaceURI(element),
	        attrs = this.treeAdapter.getAttrList(element);
	
	    return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);
	};
	
	//Active formatting elements reconstruction
	Parser.prototype._reconstructActiveFormattingElements = function () {
	    var listLength = this.activeFormattingElements.length;
	
	    if (listLength) {
	        var unopenIdx = listLength,
	            entry = null;
	
	        do {
	            unopenIdx--;
	            entry = this.activeFormattingElements.entries[unopenIdx];
	
	            if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {
	                unopenIdx++;
	                break;
	            }
	        } while (unopenIdx > 0);
	
	        for (var i = unopenIdx; i < listLength; i++) {
	            entry = this.activeFormattingElements.entries[i];
	            this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));
	            entry.element = this.openElements.current;
	        }
	    }
	};
	
	//Close elements
	Parser.prototype._closeTableCell = function () {
	    this.openElements.generateImpliedEndTags();
	    this.openElements.popUntilTableCellPopped();
	    this.activeFormattingElements.clearToLastMarker();
	    this.insertionMode = IN_ROW_MODE;
	};
	
	Parser.prototype._closePElement = function () {
	    this.openElements.generateImpliedEndTagsWithExclusion($.P);
	    this.openElements.popUntilTagNamePopped($.P);
	};
	
	//Insertion modes
	Parser.prototype._resetInsertionMode = function () {
	    for (var i = this.openElements.stackTop, last = false; i >= 0; i--) {
	        var element = this.openElements.items[i];
	
	        if (i === 0) {
	            last = true;
	
	            if (this.fragmentContext)
	                element = this.fragmentContext;
	        }
	
	        var tn = this.treeAdapter.getTagName(element),
	            newInsertionMode = INSERTION_MODE_RESET_MAP[tn];
	
	        if (newInsertionMode) {
	            this.insertionMode = newInsertionMode;
	            break;
	        }
	
	        else if (!last && (tn === $.TD || tn === $.TH)) {
	            this.insertionMode = IN_CELL_MODE;
	            break;
	        }
	
	        else if (!last && tn === $.HEAD) {
	            this.insertionMode = IN_HEAD_MODE;
	            break;
	        }
	
	        else if (tn === $.SELECT) {
	            this._resetInsertionModeForSelect(i);
	            break;
	        }
	
	        else if (tn === $.TEMPLATE) {
	            this.insertionMode = this.currentTmplInsertionMode;
	            break;
	        }
	
	        else if (tn === $.HTML) {
	            this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;
	            break;
	        }
	
	        else if (last) {
	            this.insertionMode = IN_BODY_MODE;
	            break;
	        }
	    }
	};
	
	Parser.prototype._resetInsertionModeForSelect = function (selectIdx) {
	    if (selectIdx > 0) {
	        for (var i = selectIdx - 1; i > 0; i--) {
	            var ancestor = this.openElements.items[i],
	                tn = this.treeAdapter.getTagName(ancestor);
	
	            if (tn === $.TEMPLATE)
	                break;
	
	            else if (tn === $.TABLE) {
	                this.insertionMode = IN_SELECT_IN_TABLE_MODE;
	                return;
	            }
	        }
	    }
	
	    this.insertionMode = IN_SELECT_MODE;
	};
	
	Parser.prototype._pushTmplInsertionMode = function (mode) {
	    this.tmplInsertionModeStack.push(mode);
	    this.tmplInsertionModeStackTop++;
	    this.currentTmplInsertionMode = mode;
	};
	
	Parser.prototype._popTmplInsertionMode = function () {
	    this.tmplInsertionModeStack.pop();
	    this.tmplInsertionModeStackTop--;
	    this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];
	};
	
	//Foster parenting
	Parser.prototype._isElementCausesFosterParenting = function (element) {
	    var tn = this.treeAdapter.getTagName(element);
	
	    return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;
	};
	
	Parser.prototype._shouldFosterParentOnInsertion = function () {
	    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);
	};
	
	Parser.prototype._findFosterParentingLocation = function () {
	    var location = {
	        parent: null,
	        beforeElement: null
	    };
	
	    for (var i = this.openElements.stackTop; i >= 0; i--) {
	        var openElement = this.openElements.items[i],
	            tn = this.treeAdapter.getTagName(openElement),
	            ns = this.treeAdapter.getNamespaceURI(openElement);
	
	        if (tn === $.TEMPLATE && ns === NS.HTML) {
	            location.parent = this.treeAdapter.getTemplateContent(openElement);
	            break;
	        }
	
	        else if (tn === $.TABLE) {
	            location.parent = this.treeAdapter.getParentNode(openElement);
	
	            if (location.parent)
	                location.beforeElement = openElement;
	            else
	                location.parent = this.openElements.items[i - 1];
	
	            break;
	        }
	    }
	
	    if (!location.parent)
	        location.parent = this.openElements.items[0];
	
	    return location;
	};
	
	Parser.prototype._fosterParentElement = function (element) {
	    var location = this._findFosterParentingLocation();
	
	    if (location.beforeElement)
	        this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);
	    else
	        this.treeAdapter.appendChild(location.parent, element);
	};
	
	Parser.prototype._fosterParentText = function (chars) {
	    var location = this._findFosterParentingLocation();
	
	    if (location.beforeElement)
	        this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);
	    else
	        this.treeAdapter.insertText(location.parent, chars);
	};
	
	//Special elements
	Parser.prototype._isSpecialElement = function (element) {
	    var tn = this.treeAdapter.getTagName(element),
	        ns = this.treeAdapter.getNamespaceURI(element);
	
	    return HTML.SPECIAL_ELEMENTS[ns][tn];
	};
	
	//Adoption agency algorithm
	//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)
	//------------------------------------------------------------------
	
	//Steps 5-8 of the algorithm
	function aaObtainFormattingElementEntry(p, token) {
	    var formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);
	
	    if (formattingElementEntry) {
	        if (!p.openElements.contains(formattingElementEntry.element)) {
	            p.activeFormattingElements.removeEntry(formattingElementEntry);
	            formattingElementEntry = null;
	        }
	
	        else if (!p.openElements.hasInScope(token.tagName))
	            formattingElementEntry = null;
	    }
	
	    else
	        genericEndTagInBody(p, token);
	
	    return formattingElementEntry;
	}
	
	//Steps 9 and 10 of the algorithm
	function aaObtainFurthestBlock(p, formattingElementEntry) {
	    var furthestBlock = null;
	
	    for (var i = p.openElements.stackTop; i >= 0; i--) {
	        var element = p.openElements.items[i];
	
	        if (element === formattingElementEntry.element)
	            break;
	
	        if (p._isSpecialElement(element))
	            furthestBlock = element;
	    }
	
	    if (!furthestBlock) {
	        p.openElements.popUntilElementPopped(formattingElementEntry.element);
	        p.activeFormattingElements.removeEntry(formattingElementEntry);
	    }
	
	    return furthestBlock;
	}
	
	//Step 13 of the algorithm
	function aaInnerLoop(p, furthestBlock, formattingElement) {
	    var lastElement = furthestBlock,
	        nextElement = p.openElements.getCommonAncestor(furthestBlock);
	
	    for (var i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {
	        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)
	        nextElement = p.openElements.getCommonAncestor(element);
	
	        var elementEntry = p.activeFormattingElements.getElementEntry(element),
	            counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER,
	            shouldRemoveFromOpenElements = !elementEntry || counterOverflow;
	
	        if (shouldRemoveFromOpenElements) {
	            if (counterOverflow)
	                p.activeFormattingElements.removeEntry(elementEntry);
	
	            p.openElements.remove(element);
	        }
	
	        else {
	            element = aaRecreateElementFromEntry(p, elementEntry);
	
	            if (lastElement === furthestBlock)
	                p.activeFormattingElements.bookmark = elementEntry;
	
	            p.treeAdapter.detachNode(lastElement);
	            p.treeAdapter.appendChild(element, lastElement);
	            lastElement = element;
	        }
	    }
	
	    return lastElement;
	}
	
	//Step 13.7 of the algorithm
	function aaRecreateElementFromEntry(p, elementEntry) {
	    var ns = p.treeAdapter.getNamespaceURI(elementEntry.element),
	        newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);
	
	    p.openElements.replace(elementEntry.element, newElement);
	    elementEntry.element = newElement;
	
	    return newElement;
	}
	
	//Step 14 of the algorithm
	function aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {
	    if (p._isElementCausesFosterParenting(commonAncestor))
	        p._fosterParentElement(lastElement);
	
	    else {
	        var tn = p.treeAdapter.getTagName(commonAncestor),
	            ns = p.treeAdapter.getNamespaceURI(commonAncestor);
	
	        if (tn === $.TEMPLATE && ns === NS.HTML)
	            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);
	
	        p.treeAdapter.appendChild(commonAncestor, lastElement);
	    }
	}
	
	//Steps 15-19 of the algorithm
	function aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {
	    var ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element),
	        token = formattingElementEntry.token,
	        newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);
	
	    p._adoptNodes(furthestBlock, newElement);
	    p.treeAdapter.appendChild(furthestBlock, newElement);
	
	    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);
	    p.activeFormattingElements.removeEntry(formattingElementEntry);
	
	    p.openElements.remove(formattingElementEntry.element);
	    p.openElements.insertAfter(furthestBlock, newElement);
	}
	
	//Algorithm entry point
	function callAdoptionAgency(p, token) {
	    var formattingElementEntry;
	
	    for (var i = 0; i < AA_OUTER_LOOP_ITER; i++) {
	        formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);
	
	        if (!formattingElementEntry)
	            break;
	
	        var furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);
	
	        if (!furthestBlock)
	            break;
	
	        p.activeFormattingElements.bookmark = formattingElementEntry;
	
	        var lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element),
	            commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);
	
	        p.treeAdapter.detachNode(lastElement);
	        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);
	        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);
	    }
	}
	
	
	//Generic token handlers
	//------------------------------------------------------------------
	function ignoreToken() {
	    //NOTE: do nothing =)
	}
	
	function appendComment(p, token) {
	    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);
	}
	
	function appendCommentToRootHtmlElement(p, token) {
	    p._appendCommentNode(token, p.openElements.items[0]);
	}
	
	function appendCommentToDocument(p, token) {
	    p._appendCommentNode(token, p.document);
	}
	
	function insertCharacters(p, token) {
	    p._insertCharacters(token);
	}
	
	function stopParsing(p) {
	    p.stopped = true;
	}
	
	//12.2.5.4.1 The "initial" insertion mode
	//------------------------------------------------------------------
	function doctypeInInitialMode(p, token) {
	    p._setDocumentType(token);
	
	    var mode = token.forceQuirks ?
	        HTML.DOCUMENT_MODE.QUIRKS :
	        doctype.getDocumentMode(token.name, token.publicId, token.systemId);
	
	    p.treeAdapter.setDocumentMode(p.document, mode);
	
	    p.insertionMode = BEFORE_HTML_MODE;
	}
	
	function tokenInInitialMode(p, token) {
	    p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);
	    p.insertionMode = BEFORE_HTML_MODE;
	    p._processToken(token);
	}
	
	
	//12.2.5.4.2 The "before html" insertion mode
	//------------------------------------------------------------------
	function startTagBeforeHtml(p, token) {
	    if (token.tagName === $.HTML) {
	        p._insertElement(token, NS.HTML);
	        p.insertionMode = BEFORE_HEAD_MODE;
	    }
	
	    else
	        tokenBeforeHtml(p, token);
	}
	
	function endTagBeforeHtml(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR)
	        tokenBeforeHtml(p, token);
	}
	
	function tokenBeforeHtml(p, token) {
	    p._insertFakeRootElement();
	    p.insertionMode = BEFORE_HEAD_MODE;
	    p._processToken(token);
	}
	
	
	//12.2.5.4.3 The "before head" insertion mode
	//------------------------------------------------------------------
	function startTagBeforeHead(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HTML)
	        startTagInBody(p, token);
	
	    else if (tn === $.HEAD) {
	        p._insertElement(token, NS.HTML);
	        p.headElement = p.openElements.current;
	        p.insertionMode = IN_HEAD_MODE;
	    }
	
	    else
	        tokenBeforeHead(p, token);
	}
	
	function endTagBeforeHead(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR)
	        tokenBeforeHead(p, token);
	}
	
	function tokenBeforeHead(p, token) {
	    p._insertFakeElement($.HEAD);
	    p.headElement = p.openElements.current;
	    p.insertionMode = IN_HEAD_MODE;
	    p._processToken(token);
	}
	
	
	//12.2.5.4.4 The "in head" insertion mode
	//------------------------------------------------------------------
	function startTagInHead(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HTML)
	        startTagInBody(p, token);
	
	    else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META)
	        p._appendElement(token, NS.HTML);
	
	    else if (tn === $.TITLE)
	        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);
	
	    //NOTE: here we assume that we always act as an interactive user agent with enabled scripting, so we parse
	    //<noscript> as a rawtext.
	    else if (tn === $.NOSCRIPT || tn === $.NOFRAMES || tn === $.STYLE)
	        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
	
	    else if (tn === $.SCRIPT)
	        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);
	
	    else if (tn === $.TEMPLATE) {
	        p._insertTemplate(token, NS.HTML);
	        p.activeFormattingElements.insertMarker();
	        p.framesetOk = false;
	        p.insertionMode = IN_TEMPLATE_MODE;
	        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);
	    }
	
	    else if (tn !== $.HEAD)
	        tokenInHead(p, token);
	}
	
	function endTagInHead(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HEAD) {
	        p.openElements.pop();
	        p.insertionMode = AFTER_HEAD_MODE;
	    }
	
	    else if (tn === $.BODY || tn === $.BR || tn === $.HTML)
	        tokenInHead(p, token);
	
	    else if (tn === $.TEMPLATE && p.openElements.tmplCount > 0) {
	        p.openElements.generateImpliedEndTags();
	        p.openElements.popUntilTagNamePopped($.TEMPLATE);
	        p.activeFormattingElements.clearToLastMarker();
	        p._popTmplInsertionMode();
	        p._resetInsertionMode();
	    }
	}
	
	function tokenInHead(p, token) {
	    p.openElements.pop();
	    p.insertionMode = AFTER_HEAD_MODE;
	    p._processToken(token);
	}
	
	
	//12.2.5.4.6 The "after head" insertion mode
	//------------------------------------------------------------------
	function startTagAfterHead(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HTML)
	        startTagInBody(p, token);
	
	    else if (tn === $.BODY) {
	        p._insertElement(token, NS.HTML);
	        p.framesetOk = false;
	        p.insertionMode = IN_BODY_MODE;
	    }
	
	    else if (tn === $.FRAMESET) {
	        p._insertElement(token, NS.HTML);
	        p.insertionMode = IN_FRAMESET_MODE;
	    }
	
	    else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META ||
	             tn === $.NOFRAMES || tn === $.SCRIPT || tn === $.STYLE || tn === $.TEMPLATE || tn === $.TITLE) {
	        p.openElements.push(p.headElement);
	        startTagInHead(p, token);
	        p.openElements.remove(p.headElement);
	    }
	
	    else if (tn !== $.HEAD)
	        tokenAfterHead(p, token);
	}
	
	function endTagAfterHead(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.BODY || tn === $.HTML || tn === $.BR)
	        tokenAfterHead(p, token);
	
	    else if (tn === $.TEMPLATE)
	        endTagInHead(p, token);
	}
	
	function tokenAfterHead(p, token) {
	    p._insertFakeElement($.BODY);
	    p.insertionMode = IN_BODY_MODE;
	    p._processToken(token);
	}
	
	
	//12.2.5.4.7 The "in body" insertion mode
	//------------------------------------------------------------------
	function whitespaceCharacterInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertCharacters(token);
	}
	
	function characterInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertCharacters(token);
	    p.framesetOk = false;
	}
	
	function htmlStartTagInBody(p, token) {
	    if (p.openElements.tmplCount === 0)
	        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);
	}
	
	function bodyStartTagInBody(p, token) {
	    var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();
	
	    if (bodyElement && p.openElements.tmplCount === 0) {
	        p.framesetOk = false;
	        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);
	    }
	}
	
	function framesetStartTagInBody(p, token) {
	    var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();
	
	    if (p.framesetOk && bodyElement) {
	        p.treeAdapter.detachNode(bodyElement);
	        p.openElements.popAllUpToHtmlElement();
	        p._insertElement(token, NS.HTML);
	        p.insertionMode = IN_FRAMESET_MODE;
	    }
	}
	
	function addressStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();
	
	    p._insertElement(token, NS.HTML);
	}
	
	function numberedHeaderStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();
	
	    var tn = p.openElements.currentTagName;
	
	    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)
	        p.openElements.pop();
	
	    p._insertElement(token, NS.HTML);
	}
	
	function preStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();
	
	    p._insertElement(token, NS.HTML);
	    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
	    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)
	    p.skipNextNewLine = true;
	    p.framesetOk = false;
	}
	
	function formStartTagInBody(p, token) {
	    var inTemplate = p.openElements.tmplCount > 0;
	
	    if (!p.formElement || inTemplate) {
	        if (p.openElements.hasInButtonScope($.P))
	            p._closePElement();
	
	        p._insertElement(token, NS.HTML);
	
	        if (!inTemplate)
	            p.formElement = p.openElements.current;
	    }
	}
	
	function listItemStartTagInBody(p, token) {
	    p.framesetOk = false;
	
	    var tn = token.tagName;
	
	    for (var i = p.openElements.stackTop; i >= 0; i--) {
	        var element = p.openElements.items[i],
	            elementTn = p.treeAdapter.getTagName(element),
	            closeTn = null;
	
	        if (tn === $.LI && elementTn === $.LI)
	            closeTn = $.LI;
	
	        else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT))
	            closeTn = elementTn;
	
	        if (closeTn) {
	            p.openElements.generateImpliedEndTagsWithExclusion(closeTn);
	            p.openElements.popUntilTagNamePopped(closeTn);
	            break;
	        }
	
	        if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element))
	            break;
	    }
	
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();
	
	    p._insertElement(token, NS.HTML);
	}
	
	function plaintextStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();
	
	    p._insertElement(token, NS.HTML);
	    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
	}
	
	function buttonStartTagInBody(p, token) {
	    if (p.openElements.hasInScope($.BUTTON)) {
	        p.openElements.generateImpliedEndTags();
	        p.openElements.popUntilTagNamePopped($.BUTTON);
	    }
	
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	    p.framesetOk = false;
	}
	
	function aStartTagInBody(p, token) {
	    var activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);
	
	    if (activeElementEntry) {
	        callAdoptionAgency(p, token);
	        p.openElements.remove(activeElementEntry.element);
	        p.activeFormattingElements.removeEntry(activeElementEntry);
	    }
	
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	    p.activeFormattingElements.pushElement(p.openElements.current, token);
	}
	
	function bStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	    p.activeFormattingElements.pushElement(p.openElements.current, token);
	}
	
	function nobrStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	
	    if (p.openElements.hasInScope($.NOBR)) {
	        callAdoptionAgency(p, token);
	        p._reconstructActiveFormattingElements();
	    }
	
	    p._insertElement(token, NS.HTML);
	    p.activeFormattingElements.pushElement(p.openElements.current, token);
	}
	
	function appletStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	    p.activeFormattingElements.insertMarker();
	    p.framesetOk = false;
	}
	
	function tableStartTagInBody(p, token) {
	    if (p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P))
	        p._closePElement();
	
	    p._insertElement(token, NS.HTML);
	    p.framesetOk = false;
	    p.insertionMode = IN_TABLE_MODE;
	}
	
	function areaStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._appendElement(token, NS.HTML);
	    p.framesetOk = false;
	}
	
	function inputStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._appendElement(token, NS.HTML);
	
	    var inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);
	
	    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE)
	        p.framesetOk = false;
	
	}
	
	function paramStartTagInBody(p, token) {
	    p._appendElement(token, NS.HTML);
	}
	
	function hrStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();
	
	    if (p.openElements.currentTagName === $.MENUITEM)
	        p.openElements.pop();
	
	    p._appendElement(token, NS.HTML);
	    p.framesetOk = false;
	}
	
	function imageStartTagInBody(p, token) {
	    token.tagName = $.IMG;
	    areaStartTagInBody(p, token);
	}
	
	function textareaStartTagInBody(p, token) {
	    p._insertElement(token, NS.HTML);
	    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
	    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)
	    p.skipNextNewLine = true;
	    p.tokenizer.state = Tokenizer.MODE.RCDATA;
	    p.originalInsertionMode = p.insertionMode;
	    p.framesetOk = false;
	    p.insertionMode = TEXT_MODE;
	}
	
	function xmpStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();
	
	    p._reconstructActiveFormattingElements();
	    p.framesetOk = false;
	    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
	}
	
	function iframeStartTagInBody(p, token) {
	    p.framesetOk = false;
	    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
	}
	
	//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse
	//<noembed> as a rawtext.
	function noembedStartTagInBody(p, token) {
	    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
	}
	
	function selectStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	    p.framesetOk = false;
	
	    if (p.insertionMode === IN_TABLE_MODE ||
	        p.insertionMode === IN_CAPTION_MODE ||
	        p.insertionMode === IN_TABLE_BODY_MODE ||
	        p.insertionMode === IN_ROW_MODE ||
	        p.insertionMode === IN_CELL_MODE)
	
	        p.insertionMode = IN_SELECT_IN_TABLE_MODE;
	
	    else
	        p.insertionMode = IN_SELECT_MODE;
	}
	
	function optgroupStartTagInBody(p, token) {
	    if (p.openElements.currentTagName === $.OPTION)
	        p.openElements.pop();
	
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	}
	
	function rbStartTagInBody(p, token) {
	    if (p.openElements.hasInScope($.RUBY))
	        p.openElements.generateImpliedEndTags();
	
	    p._insertElement(token, NS.HTML);
	}
	
	function rtStartTagInBody(p, token) {
	    if (p.openElements.hasInScope($.RUBY))
	        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);
	
	    p._insertElement(token, NS.HTML);
	}
	
	function menuitemStartTagInBody(p, token) {
	    if (p.openElements.currentTagName === $.MENUITEM)
	        p.openElements.pop();
	
	    // TODO needs clarification, see https://github.com/whatwg/html/pull/907/files#r73505877
	    p._reconstructActiveFormattingElements();
	
	    p._insertElement(token, NS.HTML);
	}
	
	function menuStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();
	
	    if (p.openElements.currentTagName === $.MENUITEM)
	        p.openElements.pop();
	
	    p._insertElement(token, NS.HTML);
	}
	
	function mathStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	
	    foreignContent.adjustTokenMathMLAttrs(token);
	    foreignContent.adjustTokenXMLAttrs(token);
	
	    if (token.selfClosing)
	        p._appendElement(token, NS.MATHML);
	    else
	        p._insertElement(token, NS.MATHML);
	}
	
	function svgStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	
	    foreignContent.adjustTokenSVGAttrs(token);
	    foreignContent.adjustTokenXMLAttrs(token);
	
	    if (token.selfClosing)
	        p._appendElement(token, NS.SVG);
	    else
	        p._insertElement(token, NS.SVG);
	}
	
	function genericStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	}
	
	//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
	//It's faster than using dictionary.
	function startTagInBody(p, token) {
	    var tn = token.tagName;
	
	    switch (tn.length) {
	        case 1:
	            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U)
	                bStartTagInBody(p, token);
	
	            else if (tn === $.P)
	                addressStartTagInBody(p, token);
	
	            else if (tn === $.A)
	                aStartTagInBody(p, token);
	
	            else
	                genericStartTagInBody(p, token);
	
	            break;
	
	        case 2:
	            if (tn === $.DL || tn === $.OL || tn === $.UL)
	                addressStartTagInBody(p, token);
	
	            else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)
	                numberedHeaderStartTagInBody(p, token);
	
	            else if (tn === $.LI || tn === $.DD || tn === $.DT)
	                listItemStartTagInBody(p, token);
	
	            else if (tn === $.EM || tn === $.TT)
	                bStartTagInBody(p, token);
	
	            else if (tn === $.BR)
	                areaStartTagInBody(p, token);
	
	            else if (tn === $.HR)
	                hrStartTagInBody(p, token);
	
	            else if (tn === $.RB)
	                rbStartTagInBody(p, token);
	
	            else if (tn === $.RT || tn === $.RP)
	                rtStartTagInBody(p, token);
	
	            else if (tn !== $.TH && tn !== $.TD && tn !== $.TR)
	                genericStartTagInBody(p, token);
	
	            break;
	
	        case 3:
	            if (tn === $.DIV || tn === $.DIR || tn === $.NAV)
	                addressStartTagInBody(p, token);
	
	            else if (tn === $.PRE)
	                preStartTagInBody(p, token);
	
	            else if (tn === $.BIG)
	                bStartTagInBody(p, token);
	
	            else if (tn === $.IMG || tn === $.WBR)
	                areaStartTagInBody(p, token);
	
	            else if (tn === $.XMP)
	                xmpStartTagInBody(p, token);
	
	            else if (tn === $.SVG)
	                svgStartTagInBody(p, token);
	
	            else if (tn === $.RTC)
	                rbStartTagInBody(p, token);
	
	            else if (tn !== $.COL)
	                genericStartTagInBody(p, token);
	
	            break;
	
	        case 4:
	            if (tn === $.HTML)
	                htmlStartTagInBody(p, token);
	
	            else if (tn === $.BASE || tn === $.LINK || tn === $.META)
	                startTagInHead(p, token);
	
	            else if (tn === $.BODY)
	                bodyStartTagInBody(p, token);
	
	            else if (tn === $.MAIN)
	                addressStartTagInBody(p, token);
	
	            else if (tn === $.FORM)
	                formStartTagInBody(p, token);
	
	            else if (tn === $.CODE || tn === $.FONT)
	                bStartTagInBody(p, token);
	
	            else if (tn === $.NOBR)
	                nobrStartTagInBody(p, token);
	
	            else if (tn === $.AREA)
	                areaStartTagInBody(p, token);
	
	            else if (tn === $.MATH)
	                mathStartTagInBody(p, token);
	
	            else if (tn === $.MENU)
	                menuStartTagInBody(p, token);
	
	            else if (tn !== $.HEAD)
	                genericStartTagInBody(p, token);
	
	            break;
	
	        case 5:
	            if (tn === $.STYLE || tn === $.TITLE)
	                startTagInHead(p, token);
	
	            else if (tn === $.ASIDE)
	                addressStartTagInBody(p, token);
	
	            else if (tn === $.SMALL)
	                bStartTagInBody(p, token);
	
	            else if (tn === $.TABLE)
	                tableStartTagInBody(p, token);
	
	            else if (tn === $.EMBED)
	                areaStartTagInBody(p, token);
	
	            else if (tn === $.INPUT)
	                inputStartTagInBody(p, token);
	
	            else if (tn === $.PARAM || tn === $.TRACK)
	                paramStartTagInBody(p, token);
	
	            else if (tn === $.IMAGE)
	                imageStartTagInBody(p, token);
	
	            else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD)
	                genericStartTagInBody(p, token);
	
	            break;
	
	        case 6:
	            if (tn === $.SCRIPT)
	                startTagInHead(p, token);
	
	            else if (tn === $.CENTER || tn === $.FIGURE || tn === $.FOOTER || tn === $.HEADER || tn === $.HGROUP)
	                addressStartTagInBody(p, token);
	
	            else if (tn === $.BUTTON)
	                buttonStartTagInBody(p, token);
	
	            else if (tn === $.STRIKE || tn === $.STRONG)
	                bStartTagInBody(p, token);
	
	            else if (tn === $.APPLET || tn === $.OBJECT)
	                appletStartTagInBody(p, token);
	
	            else if (tn === $.KEYGEN)
	                areaStartTagInBody(p, token);
	
	            else if (tn === $.SOURCE)
	                paramStartTagInBody(p, token);
	
	            else if (tn === $.IFRAME)
	                iframeStartTagInBody(p, token);
	
	            else if (tn === $.SELECT)
	                selectStartTagInBody(p, token);
	
	            else if (tn === $.OPTION)
	                optgroupStartTagInBody(p, token);
	
	            else
	                genericStartTagInBody(p, token);
	
	            break;
	
	        case 7:
	            if (tn === $.BGSOUND)
	                startTagInHead(p, token);
	
	            else if (tn === $.DETAILS || tn === $.ADDRESS || tn === $.ARTICLE || tn === $.SECTION || tn === $.SUMMARY)
	                addressStartTagInBody(p, token);
	
	            else if (tn === $.LISTING)
	                preStartTagInBody(p, token);
	
	            else if (tn === $.MARQUEE)
	                appletStartTagInBody(p, token);
	
	            else if (tn === $.NOEMBED)
	                noembedStartTagInBody(p, token);
	
	            else if (tn !== $.CAPTION)
	                genericStartTagInBody(p, token);
	
	            break;
	
	        case 8:
	            if (tn === $.BASEFONT)
	                startTagInHead(p, token);
	
	            else if (tn === $.MENUITEM)
	                menuitemStartTagInBody(p, token);
	
	            else if (tn === $.FRAMESET)
	                framesetStartTagInBody(p, token);
	
	            else if (tn === $.FIELDSET)
	                addressStartTagInBody(p, token);
	
	            else if (tn === $.TEXTAREA)
	                textareaStartTagInBody(p, token);
	
	            else if (tn === $.TEMPLATE)
	                startTagInHead(p, token);
	
	            else if (tn === $.NOSCRIPT)
	                noembedStartTagInBody(p, token);
	
	            else if (tn === $.OPTGROUP)
	                optgroupStartTagInBody(p, token);
	
	            else if (tn !== $.COLGROUP)
	                genericStartTagInBody(p, token);
	
	            break;
	
	        case 9:
	            if (tn === $.PLAINTEXT)
	                plaintextStartTagInBody(p, token);
	
	            else
	                genericStartTagInBody(p, token);
	
	            break;
	
	        case 10:
	            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION)
	                addressStartTagInBody(p, token);
	
	            else
	                genericStartTagInBody(p, token);
	
	            break;
	
	        default:
	            genericStartTagInBody(p, token);
	    }
	}
	
	function bodyEndTagInBody(p) {
	    if (p.openElements.hasInScope($.BODY))
	        p.insertionMode = AFTER_BODY_MODE;
	}
	
	function htmlEndTagInBody(p, token) {
	    if (p.openElements.hasInScope($.BODY)) {
	        p.insertionMode = AFTER_BODY_MODE;
	        p._processToken(token);
	    }
	}
	
	function addressEndTagInBody(p, token) {
	    var tn = token.tagName;
	
	    if (p.openElements.hasInScope(tn)) {
	        p.openElements.generateImpliedEndTags();
	        p.openElements.popUntilTagNamePopped(tn);
	    }
	}
	
	function formEndTagInBody(p) {
	    var inTemplate = p.openElements.tmplCount > 0,
	        formElement = p.formElement;
	
	    if (!inTemplate)
	        p.formElement = null;
	
	    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {
	        p.openElements.generateImpliedEndTags();
	
	        if (inTemplate)
	            p.openElements.popUntilTagNamePopped($.FORM);
	
	        else
	            p.openElements.remove(formElement);
	    }
	}
	
	function pEndTagInBody(p) {
	    if (!p.openElements.hasInButtonScope($.P))
	        p._insertFakeElement($.P);
	
	    p._closePElement();
	}
	
	function liEndTagInBody(p) {
	    if (p.openElements.hasInListItemScope($.LI)) {
	        p.openElements.generateImpliedEndTagsWithExclusion($.LI);
	        p.openElements.popUntilTagNamePopped($.LI);
	    }
	}
	
	function ddEndTagInBody(p, token) {
	    var tn = token.tagName;
	
	    if (p.openElements.hasInScope(tn)) {
	        p.openElements.generateImpliedEndTagsWithExclusion(tn);
	        p.openElements.popUntilTagNamePopped(tn);
	    }
	}
	
	function numberedHeaderEndTagInBody(p) {
	    if (p.openElements.hasNumberedHeaderInScope()) {
	        p.openElements.generateImpliedEndTags();
	        p.openElements.popUntilNumberedHeaderPopped();
	    }
	}
	
	function appletEndTagInBody(p, token) {
	    var tn = token.tagName;
	
	    if (p.openElements.hasInScope(tn)) {
	        p.openElements.generateImpliedEndTags();
	        p.openElements.popUntilTagNamePopped(tn);
	        p.activeFormattingElements.clearToLastMarker();
	    }
	}
	
	function brEndTagInBody(p) {
	    p._reconstructActiveFormattingElements();
	    p._insertFakeElement($.BR);
	    p.openElements.pop();
	    p.framesetOk = false;
	}
	
	function genericEndTagInBody(p, token) {
	    var tn = token.tagName;
	
	    for (var i = p.openElements.stackTop; i > 0; i--) {
	        var element = p.openElements.items[i];
	
	        if (p.treeAdapter.getTagName(element) === tn) {
	            p.openElements.generateImpliedEndTagsWithExclusion(tn);
	            p.openElements.popUntilElementPopped(element);
	            break;
	        }
	
	        if (p._isSpecialElement(element))
	            break;
	    }
	}
	
	//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
	//It's faster than using dictionary.
	function endTagInBody(p, token) {
	    var tn = token.tagName;
	
	    switch (tn.length) {
	        case 1:
	            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U)
	                callAdoptionAgency(p, token);
	
	            else if (tn === $.P)
	                pEndTagInBody(p, token);
	
	            else
	                genericEndTagInBody(p, token);
	
	            break;
	
	        case 2:
	            if (tn === $.DL || tn === $.UL || tn === $.OL)
	                addressEndTagInBody(p, token);
	
	            else if (tn === $.LI)
	                liEndTagInBody(p, token);
	
	            else if (tn === $.DD || tn === $.DT)
	                ddEndTagInBody(p, token);
	
	            else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)
	                numberedHeaderEndTagInBody(p, token);
	
	            else if (tn === $.BR)
	                brEndTagInBody(p, token);
	
	            else if (tn === $.EM || tn === $.TT)
	                callAdoptionAgency(p, token);
	
	            else
	                genericEndTagInBody(p, token);
	
	            break;
	
	        case 3:
	            if (tn === $.BIG)
	                callAdoptionAgency(p, token);
	
	            else if (tn === $.DIR || tn === $.DIV || tn === $.NAV)
	                addressEndTagInBody(p, token);
	
	            else
	                genericEndTagInBody(p, token);
	
	            break;
	
	        case 4:
	            if (tn === $.BODY)
	                bodyEndTagInBody(p, token);
	
	            else if (tn === $.HTML)
	                htmlEndTagInBody(p, token);
	
	            else if (tn === $.FORM)
	                formEndTagInBody(p, token);
	
	            else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR)
	                callAdoptionAgency(p, token);
	
	            else if (tn === $.MAIN || tn === $.MENU)
	                addressEndTagInBody(p, token);
	
	            else
	                genericEndTagInBody(p, token);
	
	            break;
	
	        case 5:
	            if (tn === $.ASIDE)
	                addressEndTagInBody(p, token);
	
	            else if (tn === $.SMALL)
	                callAdoptionAgency(p, token);
	
	            else
	                genericEndTagInBody(p, token);
	
	            break;
	
	        case 6:
	            if (tn === $.CENTER || tn === $.FIGURE || tn === $.FOOTER || tn === $.HEADER || tn === $.HGROUP)
	                addressEndTagInBody(p, token);
	
	            else if (tn === $.APPLET || tn === $.OBJECT)
	                appletEndTagInBody(p, token);
	
	            else if (tn === $.STRIKE || tn === $.STRONG)
	                callAdoptionAgency(p, token);
	
	            else
	                genericEndTagInBody(p, token);
	
	            break;
	
	        case 7:
	            if (tn === $.ADDRESS || tn === $.ARTICLE || tn === $.DETAILS || tn === $.SECTION || tn === $.SUMMARY)
	                addressEndTagInBody(p, token);
	
	            else if (tn === $.MARQUEE)
	                appletEndTagInBody(p, token);
	
	            else
	                genericEndTagInBody(p, token);
	
	            break;
	
	        case 8:
	            if (tn === $.FIELDSET)
	                addressEndTagInBody(p, token);
	
	            else if (tn === $.TEMPLATE)
	                endTagInHead(p, token);
	
	            else
	                genericEndTagInBody(p, token);
	
	            break;
	
	        case 10:
	            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION)
	                addressEndTagInBody(p, token);
	
	            else
	                genericEndTagInBody(p, token);
	
	            break;
	
	        default :
	            genericEndTagInBody(p, token);
	    }
	}
	
	function eofInBody(p, token) {
	    if (p.tmplInsertionModeStackTop > -1)
	        eofInTemplate(p, token);
	
	    else
	        p.stopped = true;
	}
	
	//12.2.5.4.8 The "text" insertion mode
	//------------------------------------------------------------------
	function endTagInText(p, token) {
	    if (token.tagName === $.SCRIPT)
	        p.pendingScript = p.openElements.current;
	
	    p.openElements.pop();
	    p.insertionMode = p.originalInsertionMode;
	}
	
	
	function eofInText(p, token) {
	    p.openElements.pop();
	    p.insertionMode = p.originalInsertionMode;
	    p._processToken(token);
	}
	
	
	//12.2.5.4.9 The "in table" insertion mode
	//------------------------------------------------------------------
	function characterInTable(p, token) {
	    var curTn = p.openElements.currentTagName;
	
	    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {
	        p.pendingCharacterTokens = [];
	        p.hasNonWhitespacePendingCharacterToken = false;
	        p.originalInsertionMode = p.insertionMode;
	        p.insertionMode = IN_TABLE_TEXT_MODE;
	        p._processToken(token);
	    }
	
	    else
	        tokenInTable(p, token);
	}
	
	function captionStartTagInTable(p, token) {
	    p.openElements.clearBackToTableContext();
	    p.activeFormattingElements.insertMarker();
	    p._insertElement(token, NS.HTML);
	    p.insertionMode = IN_CAPTION_MODE;
	}
	
	function colgroupStartTagInTable(p, token) {
	    p.openElements.clearBackToTableContext();
	    p._insertElement(token, NS.HTML);
	    p.insertionMode = IN_COLUMN_GROUP_MODE;
	}
	
	function colStartTagInTable(p, token) {
	    p.openElements.clearBackToTableContext();
	    p._insertFakeElement($.COLGROUP);
	    p.insertionMode = IN_COLUMN_GROUP_MODE;
	    p._processToken(token);
	}
	
	function tbodyStartTagInTable(p, token) {
	    p.openElements.clearBackToTableContext();
	    p._insertElement(token, NS.HTML);
	    p.insertionMode = IN_TABLE_BODY_MODE;
	}
	
	function tdStartTagInTable(p, token) {
	    p.openElements.clearBackToTableContext();
	    p._insertFakeElement($.TBODY);
	    p.insertionMode = IN_TABLE_BODY_MODE;
	    p._processToken(token);
	}
	
	function tableStartTagInTable(p, token) {
	    if (p.openElements.hasInTableScope($.TABLE)) {
	        p.openElements.popUntilTagNamePopped($.TABLE);
	        p._resetInsertionMode();
	        p._processToken(token);
	    }
	}
	
	function inputStartTagInTable(p, token) {
	    var inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);
	
	    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE)
	        p._appendElement(token, NS.HTML);
	
	    else
	        tokenInTable(p, token);
	}
	
	function formStartTagInTable(p, token) {
	    if (!p.formElement && p.openElements.tmplCount === 0) {
	        p._insertElement(token, NS.HTML);
	        p.formElement = p.openElements.current;
	        p.openElements.pop();
	    }
	}
	
	function startTagInTable(p, token) {
	    var tn = token.tagName;
	
	    switch (tn.length) {
	        case 2:
	            if (tn === $.TD || tn === $.TH || tn === $.TR)
	                tdStartTagInTable(p, token);
	
	            else
	                tokenInTable(p, token);
	
	            break;
	
	        case 3:
	            if (tn === $.COL)
	                colStartTagInTable(p, token);
	
	            else
	                tokenInTable(p, token);
	
	            break;
	
	        case 4:
	            if (tn === $.FORM)
	                formStartTagInTable(p, token);
	
	            else
	                tokenInTable(p, token);
	
	            break;
	
	        case 5:
	            if (tn === $.TABLE)
	                tableStartTagInTable(p, token);
	
	            else if (tn === $.STYLE)
	                startTagInHead(p, token);
	
	            else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD)
	                tbodyStartTagInTable(p, token);
	
	            else if (tn === $.INPUT)
	                inputStartTagInTable(p, token);
	
	            else
	                tokenInTable(p, token);
	
	            break;
	
	        case 6:
	            if (tn === $.SCRIPT)
	                startTagInHead(p, token);
	
	            else
	                tokenInTable(p, token);
	
	            break;
	
	        case 7:
	            if (tn === $.CAPTION)
	                captionStartTagInTable(p, token);
	
	            else
	                tokenInTable(p, token);
	
	            break;
	
	        case 8:
	            if (tn === $.COLGROUP)
	                colgroupStartTagInTable(p, token);
	
	            else if (tn === $.TEMPLATE)
	                startTagInHead(p, token);
	
	            else
	                tokenInTable(p, token);
	
	            break;
	
	        default:
	            tokenInTable(p, token);
	    }
	
	}
	
	function endTagInTable(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.TABLE) {
	        if (p.openElements.hasInTableScope($.TABLE)) {
	            p.openElements.popUntilTagNamePopped($.TABLE);
	            p._resetInsertionMode();
	        }
	    }
	
	    else if (tn === $.TEMPLATE)
	        endTagInHead(p, token);
	
	    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML &&
	             tn !== $.TBODY && tn !== $.TD && tn !== $.TFOOT && tn !== $.TH && tn !== $.THEAD && tn !== $.TR)
	        tokenInTable(p, token);
	}
	
	function tokenInTable(p, token) {
	    var savedFosterParentingState = p.fosterParentingEnabled;
	
	    p.fosterParentingEnabled = true;
	    p._processTokenInBodyMode(token);
	    p.fosterParentingEnabled = savedFosterParentingState;
	}
	
	
	//12.2.5.4.10 The "in table text" insertion mode
	//------------------------------------------------------------------
	function whitespaceCharacterInTableText(p, token) {
	    p.pendingCharacterTokens.push(token);
	}
	
	function characterInTableText(p, token) {
	    p.pendingCharacterTokens.push(token);
	    p.hasNonWhitespacePendingCharacterToken = true;
	}
	
	function tokenInTableText(p, token) {
	    var i = 0;
	
	    if (p.hasNonWhitespacePendingCharacterToken) {
	        for (; i < p.pendingCharacterTokens.length; i++)
	            tokenInTable(p, p.pendingCharacterTokens[i]);
	    }
	
	    else {
	        for (; i < p.pendingCharacterTokens.length; i++)
	            p._insertCharacters(p.pendingCharacterTokens[i]);
	    }
	
	    p.insertionMode = p.originalInsertionMode;
	    p._processToken(token);
	}
	
	
	//12.2.5.4.11 The "in caption" insertion mode
	//------------------------------------------------------------------
	function startTagInCaption(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY ||
	        tn === $.TD || tn === $.TFOOT || tn === $.TH || tn === $.THEAD || tn === $.TR) {
	        if (p.openElements.hasInTableScope($.CAPTION)) {
	            p.openElements.generateImpliedEndTags();
	            p.openElements.popUntilTagNamePopped($.CAPTION);
	            p.activeFormattingElements.clearToLastMarker();
	            p.insertionMode = IN_TABLE_MODE;
	            p._processToken(token);
	        }
	    }
	
	    else
	        startTagInBody(p, token);
	}
	
	function endTagInCaption(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.CAPTION || tn === $.TABLE) {
	        if (p.openElements.hasInTableScope($.CAPTION)) {
	            p.openElements.generateImpliedEndTags();
	            p.openElements.popUntilTagNamePopped($.CAPTION);
	            p.activeFormattingElements.clearToLastMarker();
	            p.insertionMode = IN_TABLE_MODE;
	
	            if (tn === $.TABLE)
	                p._processToken(token);
	        }
	    }
	
	    else if (tn !== $.BODY && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML && tn !== $.TBODY &&
	             tn !== $.TD && tn !== $.TFOOT && tn !== $.TH && tn !== $.THEAD && tn !== $.TR)
	        endTagInBody(p, token);
	}
	
	
	//12.2.5.4.12 The "in column group" insertion mode
	//------------------------------------------------------------------
	function startTagInColumnGroup(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HTML)
	        startTagInBody(p, token);
	
	    else if (tn === $.COL)
	        p._appendElement(token, NS.HTML);
	
	    else if (tn === $.TEMPLATE)
	        startTagInHead(p, token);
	
	    else
	        tokenInColumnGroup(p, token);
	}
	
	function endTagInColumnGroup(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.COLGROUP) {
	        if (p.openElements.currentTagName === $.COLGROUP) {
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_MODE;
	        }
	    }
	
	    else if (tn === $.TEMPLATE)
	        endTagInHead(p, token);
	
	    else if (tn !== $.COL)
	        tokenInColumnGroup(p, token);
	}
	
	function tokenInColumnGroup(p, token) {
	    if (p.openElements.currentTagName === $.COLGROUP) {
	        p.openElements.pop();
	        p.insertionMode = IN_TABLE_MODE;
	        p._processToken(token);
	    }
	}
	
	//12.2.5.4.13 The "in table body" insertion mode
	//------------------------------------------------------------------
	function startTagInTableBody(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.TR) {
	        p.openElements.clearBackToTableBodyContext();
	        p._insertElement(token, NS.HTML);
	        p.insertionMode = IN_ROW_MODE;
	    }
	
	    else if (tn === $.TH || tn === $.TD) {
	        p.openElements.clearBackToTableBodyContext();
	        p._insertFakeElement($.TR);
	        p.insertionMode = IN_ROW_MODE;
	        p._processToken(token);
	    }
	
	    else if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP ||
	             tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
	
	        if (p.openElements.hasTableBodyContextInTableScope()) {
	            p.openElements.clearBackToTableBodyContext();
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_MODE;
	            p._processToken(token);
	        }
	    }
	
	    else
	        startTagInTable(p, token);
	}
	
	function endTagInTableBody(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
	        if (p.openElements.hasInTableScope(tn)) {
	            p.openElements.clearBackToTableBodyContext();
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_MODE;
	        }
	    }
	
	    else if (tn === $.TABLE) {
	        if (p.openElements.hasTableBodyContextInTableScope()) {
	            p.openElements.clearBackToTableBodyContext();
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_MODE;
	            p._processToken(token);
	        }
	    }
	
	    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP ||
	             tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR)
	        endTagInTable(p, token);
	}
	
	//12.2.5.4.14 The "in row" insertion mode
	//------------------------------------------------------------------
	function startTagInRow(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.TH || tn === $.TD) {
	        p.openElements.clearBackToTableRowContext();
	        p._insertElement(token, NS.HTML);
	        p.insertionMode = IN_CELL_MODE;
	        p.activeFormattingElements.insertMarker();
	    }
	
	    else if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY ||
	             tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {
	        if (p.openElements.hasInTableScope($.TR)) {
	            p.openElements.clearBackToTableRowContext();
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_BODY_MODE;
	            p._processToken(token);
	        }
	    }
	
	    else
	        startTagInTable(p, token);
	}
	
	function endTagInRow(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.TR) {
	        if (p.openElements.hasInTableScope($.TR)) {
	            p.openElements.clearBackToTableRowContext();
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_BODY_MODE;
	        }
	    }
	
	    else if (tn === $.TABLE) {
	        if (p.openElements.hasInTableScope($.TR)) {
	            p.openElements.clearBackToTableRowContext();
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_BODY_MODE;
	            p._processToken(token);
	        }
	    }
	
	    else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
	        if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {
	            p.openElements.clearBackToTableRowContext();
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_BODY_MODE;
	            p._processToken(token);
	        }
	    }
	
	    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP ||
	             tn !== $.HTML && tn !== $.TD && tn !== $.TH)
	        endTagInTable(p, token);
	}
	
	
	//12.2.5.4.15 The "in cell" insertion mode
	//------------------------------------------------------------------
	function startTagInCell(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY ||
	        tn === $.TD || tn === $.TFOOT || tn === $.TH || tn === $.THEAD || tn === $.TR) {
	
	        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {
	            p._closeTableCell();
	            p._processToken(token);
	        }
	    }
	
	    else
	        startTagInBody(p, token);
	}
	
	function endTagInCell(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.TD || tn === $.TH) {
	        if (p.openElements.hasInTableScope(tn)) {
	            p.openElements.generateImpliedEndTags();
	            p.openElements.popUntilTagNamePopped(tn);
	            p.activeFormattingElements.clearToLastMarker();
	            p.insertionMode = IN_ROW_MODE;
	        }
	    }
	
	    else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {
	        if (p.openElements.hasInTableScope(tn)) {
	            p._closeTableCell();
	            p._processToken(token);
	        }
	    }
	
	    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML)
	        endTagInBody(p, token);
	}
	
	//12.2.5.4.16 The "in select" insertion mode
	//------------------------------------------------------------------
	function startTagInSelect(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HTML)
	        startTagInBody(p, token);
	
	    else if (tn === $.OPTION) {
	        if (p.openElements.currentTagName === $.OPTION)
	            p.openElements.pop();
	
	        p._insertElement(token, NS.HTML);
	    }
	
	    else if (tn === $.OPTGROUP) {
	        if (p.openElements.currentTagName === $.OPTION)
	            p.openElements.pop();
	
	        if (p.openElements.currentTagName === $.OPTGROUP)
	            p.openElements.pop();
	
	        p._insertElement(token, NS.HTML);
	    }
	
	    else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {
	        if (p.openElements.hasInSelectScope($.SELECT)) {
	            p.openElements.popUntilTagNamePopped($.SELECT);
	            p._resetInsertionMode();
	
	            if (tn !== $.SELECT)
	                p._processToken(token);
	        }
	    }
	
	    else if (tn === $.SCRIPT || tn === $.TEMPLATE)
	        startTagInHead(p, token);
	}
	
	function endTagInSelect(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.OPTGROUP) {
	        var prevOpenElement = p.openElements.items[p.openElements.stackTop - 1],
	            prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);
	
	        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP)
	            p.openElements.pop();
	
	        if (p.openElements.currentTagName === $.OPTGROUP)
	            p.openElements.pop();
	    }
	
	    else if (tn === $.OPTION) {
	        if (p.openElements.currentTagName === $.OPTION)
	            p.openElements.pop();
	    }
	
	    else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {
	        p.openElements.popUntilTagNamePopped($.SELECT);
	        p._resetInsertionMode();
	    }
	
	    else if (tn === $.TEMPLATE)
	        endTagInHead(p, token);
	}
	
	//12.2.5.4.17 The "in select in table" insertion mode
	//------------------------------------------------------------------
	function startTagInSelectInTable(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT ||
	        tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {
	        p.openElements.popUntilTagNamePopped($.SELECT);
	        p._resetInsertionMode();
	        p._processToken(token);
	    }
	
	    else
	        startTagInSelect(p, token);
	}
	
	function endTagInSelectInTable(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT ||
	        tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {
	        if (p.openElements.hasInTableScope(tn)) {
	            p.openElements.popUntilTagNamePopped($.SELECT);
	            p._resetInsertionMode();
	            p._processToken(token);
	        }
	    }
	
	    else
	        endTagInSelect(p, token);
	}
	
	//12.2.5.4.18 The "in template" insertion mode
	//------------------------------------------------------------------
	function startTagInTemplate(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META ||
	        tn === $.NOFRAMES || tn === $.SCRIPT || tn === $.STYLE || tn === $.TEMPLATE || tn === $.TITLE)
	        startTagInHead(p, token);
	
	    else {
	        var newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;
	
	        p._popTmplInsertionMode();
	        p._pushTmplInsertionMode(newInsertionMode);
	        p.insertionMode = newInsertionMode;
	        p._processToken(token);
	    }
	}
	
	function endTagInTemplate(p, token) {
	    if (token.tagName === $.TEMPLATE)
	        endTagInHead(p, token);
	}
	
	function eofInTemplate(p, token) {
	    if (p.openElements.tmplCount > 0) {
	        p.openElements.popUntilTagNamePopped($.TEMPLATE);
	        p.activeFormattingElements.clearToLastMarker();
	        p._popTmplInsertionMode();
	        p._resetInsertionMode();
	        p._processToken(token);
	    }
	
	    else
	        p.stopped = true;
	}
	
	
	//12.2.5.4.19 The "after body" insertion mode
	//------------------------------------------------------------------
	function startTagAfterBody(p, token) {
	    if (token.tagName === $.HTML)
	        startTagInBody(p, token);
	
	    else
	        tokenAfterBody(p, token);
	}
	
	function endTagAfterBody(p, token) {
	    if (token.tagName === $.HTML) {
	        if (!p.fragmentContext)
	            p.insertionMode = AFTER_AFTER_BODY_MODE;
	    }
	
	    else
	        tokenAfterBody(p, token);
	}
	
	function tokenAfterBody(p, token) {
	    p.insertionMode = IN_BODY_MODE;
	    p._processToken(token);
	}
	
	//12.2.5.4.20 The "in frameset" insertion mode
	//------------------------------------------------------------------
	function startTagInFrameset(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HTML)
	        startTagInBody(p, token);
	
	    else if (tn === $.FRAMESET)
	        p._insertElement(token, NS.HTML);
	
	    else if (tn === $.FRAME)
	        p._appendElement(token, NS.HTML);
	
	    else if (tn === $.NOFRAMES)
	        startTagInHead(p, token);
	}
	
	function endTagInFrameset(p, token) {
	    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {
	        p.openElements.pop();
	
	        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET)
	            p.insertionMode = AFTER_FRAMESET_MODE;
	    }
	}
	
	//12.2.5.4.21 The "after frameset" insertion mode
	//------------------------------------------------------------------
	function startTagAfterFrameset(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HTML)
	        startTagInBody(p, token);
	
	    else if (tn === $.NOFRAMES)
	        startTagInHead(p, token);
	}
	
	function endTagAfterFrameset(p, token) {
	    if (token.tagName === $.HTML)
	        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;
	}
	
	//12.2.5.4.22 The "after after body" insertion mode
	//------------------------------------------------------------------
	function startTagAfterAfterBody(p, token) {
	    if (token.tagName === $.HTML)
	        startTagInBody(p, token);
	
	    else
	        tokenAfterAfterBody(p, token);
	}
	
	function tokenAfterAfterBody(p, token) {
	    p.insertionMode = IN_BODY_MODE;
	    p._processToken(token);
	}
	
	//12.2.5.4.23 The "after after frameset" insertion mode
	//------------------------------------------------------------------
	function startTagAfterAfterFrameset(p, token) {
	    var tn = token.tagName;
	
	    if (tn === $.HTML)
	        startTagInBody(p, token);
	
	    else if (tn === $.NOFRAMES)
	        startTagInHead(p, token);
	}
	
	
	//12.2.5.5 The rules for parsing tokens in foreign content
	//------------------------------------------------------------------
	function nullCharacterInForeignContent(p, token) {
	    token.chars = UNICODE.REPLACEMENT_CHARACTER;
	    p._insertCharacters(token);
	}
	
	function characterInForeignContent(p, token) {
	    p._insertCharacters(token);
	    p.framesetOk = false;
	}
	
	function startTagInForeignContent(p, token) {
	    if (foreignContent.causesExit(token) && !p.fragmentContext) {
	        while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML && !p._isIntegrationPoint(p.openElements.current))
	            p.openElements.pop();
	
	        p._processToken(token);
	    }
	
	    else {
	        var current = p._getAdjustedCurrentElement(),
	            currentNs = p.treeAdapter.getNamespaceURI(current);
	
	        if (currentNs === NS.MATHML)
	            foreignContent.adjustTokenMathMLAttrs(token);
	
	        else if (currentNs === NS.SVG) {
	            foreignContent.adjustTokenSVGTagName(token);
	            foreignContent.adjustTokenSVGAttrs(token);
	        }
	
	        foreignContent.adjustTokenXMLAttrs(token);
	
	        if (token.selfClosing)
	            p._appendElement(token, currentNs);
	        else
	            p._insertElement(token, currentNs);
	    }
	}
	
	function endTagInForeignContent(p, token) {
	    for (var i = p.openElements.stackTop; i > 0; i--) {
	        var element = p.openElements.items[i];
	
	        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {
	            p._processToken(token);
	            break;
	        }
	
	        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {
	            p.openElements.popUntilElementPopped(element);
	            break;
	        }
	    }
	}


/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var WritableStream = __webpack_require__(220).Writable,
	    inherits = __webpack_require__(60).inherits,
	    Parser = __webpack_require__(527);
	
	var ParserStream = module.exports = function (options) {
	    WritableStream.call(this);
	
	    this.parser = new Parser(options);
	
	    this.lastChunkWritten = false;
	    this.writeCallback = null;
	    this.pausedByScript = false;
	
	    this.document = this.parser.treeAdapter.createDocument();
	
	    this.pendingHtmlInsertions = [];
	
	    this._resume = this._resume.bind(this);
	    this._documentWrite = this._documentWrite.bind(this);
	    this._scriptHandler = this._scriptHandler.bind(this);
	
	    this.parser._bootstrap(this.document, null);
	};
	
	inherits(ParserStream, WritableStream);
	
	//WritableStream implementation
	ParserStream.prototype._write = function (chunk, encoding, callback) {
	    this.writeCallback = callback;
	    this.parser.tokenizer.write(chunk.toString('utf8'), this.lastChunkWritten);
	    this._runParsingLoop();
	};
	
	ParserStream.prototype.end = function (chunk, encoding, callback) {
	    this.lastChunkWritten = true;
	    WritableStream.prototype.end.call(this, chunk || '', encoding, callback);
	};
	
	//Scriptable parser implementation
	ParserStream.prototype._runParsingLoop = function () {
	    this.parser.runParsingLoopForCurrentChunk(this.writeCallback, this._scriptHandler);
	};
	
	ParserStream.prototype._resume = function () {
	    if (!this.pausedByScript)
	        throw new Error('Parser was already resumed');
	
	    while (this.pendingHtmlInsertions.length) {
	        var html = this.pendingHtmlInsertions.pop();
	
	        this.parser.tokenizer.insertHtmlAtCurrentPos(html);
	    }
	
	    this.pausedByScript = false;
	
	    //NOTE: keep parsing if we don't wait for the next input chunk
	    if (this.parser.tokenizer.active)
	        this._runParsingLoop();
	};
	
	ParserStream.prototype._documentWrite = function (html) {
	    if (!this.parser.stopped)
	        this.pendingHtmlInsertions.push(html);
	};
	
	ParserStream.prototype._scriptHandler = function (scriptElement) {
	    if (this.listeners('script').length) {
	        this.pausedByScript = true;
	        this.emit('script', scriptElement, this._documentWrite, this._resume);
	    }
	    else
	        this._runParsingLoop();
	};
	


/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var defaultTreeAdapter = __webpack_require__(327),
	    mergeOptions = __webpack_require__(328),
	    doctype = __webpack_require__(214),
	    HTML = __webpack_require__(53);
	
	//Aliases
	var $ = HTML.TAG_NAMES,
	    NS = HTML.NAMESPACES;
	
	//Default serializer options
	var DEFAULT_OPTIONS = {
	    treeAdapter: defaultTreeAdapter
	};
	
	//Escaping regexes
	var AMP_REGEX = /&/g,
	    NBSP_REGEX = /\u00a0/g,
	    DOUBLE_QUOTE_REGEX = /"/g,
	    LT_REGEX = /</g,
	    GT_REGEX = />/g;
	
	//Serializer
	var Serializer = module.exports = function (node, options) {
	    this.options = mergeOptions(DEFAULT_OPTIONS, options);
	    this.treeAdapter = this.options.treeAdapter;
	
	    this.html = '';
	    this.startNode = node;
	};
	
	// NOTE: exported as static method for the testing purposes
	Serializer.escapeString = function (str, attrMode) {
	    str = str
	        .replace(AMP_REGEX, '&amp;')
	        .replace(NBSP_REGEX, '&nbsp;');
	
	    if (attrMode)
	        str = str.replace(DOUBLE_QUOTE_REGEX, '&quot;');
	
	    else {
	        str = str
	            .replace(LT_REGEX, '&lt;')
	            .replace(GT_REGEX, '&gt;');
	    }
	
	    return str;
	};
	
	
	//API
	Serializer.prototype.serialize = function () {
	    this._serializeChildNodes(this.startNode);
	
	    return this.html;
	};
	
	
	//Internals
	Serializer.prototype._serializeChildNodes = function (parentNode) {
	    var childNodes = this.treeAdapter.getChildNodes(parentNode);
	
	    if (childNodes) {
	        for (var i = 0, cnLength = childNodes.length; i < cnLength; i++) {
	            var currentNode = childNodes[i];
	
	            if (this.treeAdapter.isElementNode(currentNode))
	                this._serializeElement(currentNode);
	
	            else if (this.treeAdapter.isTextNode(currentNode))
	                this._serializeTextNode(currentNode);
	
	            else if (this.treeAdapter.isCommentNode(currentNode))
	                this._serializeCommentNode(currentNode);
	
	            else if (this.treeAdapter.isDocumentTypeNode(currentNode))
	                this._serializeDocumentTypeNode(currentNode);
	        }
	    }
	};
	
	Serializer.prototype._serializeElement = function (node) {
	    var tn = this.treeAdapter.getTagName(node),
	        ns = this.treeAdapter.getNamespaceURI(node);
	
	    this.html += '<' + tn;
	    this._serializeAttributes(node);
	    this.html += '>';
	
	    if (tn !== $.AREA && tn !== $.BASE && tn !== $.BASEFONT && tn !== $.BGSOUND && tn !== $.BR && tn !== $.BR &&
	        tn !== $.COL && tn !== $.EMBED && tn !== $.FRAME && tn !== $.HR && tn !== $.IMG && tn !== $.INPUT &&
	        tn !== $.KEYGEN && tn !== $.LINK && tn !== $.MENUITEM && tn !== $.META && tn !== $.PARAM && tn !== $.SOURCE &&
	        tn !== $.TRACK && tn !== $.WBR) {
	
	        var childNodesHolder = tn === $.TEMPLATE && ns === NS.HTML ?
	            this.treeAdapter.getTemplateContent(node) :
	            node;
	
	        this._serializeChildNodes(childNodesHolder);
	        this.html += '</' + tn + '>';
	    }
	};
	
	Serializer.prototype._serializeAttributes = function (node) {
	    var attrs = this.treeAdapter.getAttrList(node);
	
	    for (var i = 0, attrsLength = attrs.length; i < attrsLength; i++) {
	        var attr = attrs[i],
	            value = Serializer.escapeString(attr.value, true);
	
	        this.html += ' ';
	
	        if (!attr.namespace)
	            this.html += attr.name;
	
	        else if (attr.namespace === NS.XML)
	            this.html += 'xml:' + attr.name;
	
	        else if (attr.namespace === NS.XMLNS) {
	            if (attr.name !== 'xmlns')
	                this.html += 'xmlns:';
	
	            this.html += attr.name;
	        }
	
	        else if (attr.namespace === NS.XLINK)
	            this.html += 'xlink:' + attr.name;
	
	        else
	            this.html += attr.namespace + ':' + attr.name;
	
	        this.html += '="' + value + '"';
	    }
	};
	
	Serializer.prototype._serializeTextNode = function (node) {
	    var content = this.treeAdapter.getTextNodeContent(node),
	        parent = this.treeAdapter.getParentNode(node),
	        parentTn = void 0;
	
	    if (parent && this.treeAdapter.isElementNode(parent))
	        parentTn = this.treeAdapter.getTagName(parent);
	
	    if (parentTn === $.STYLE || parentTn === $.SCRIPT || parentTn === $.XMP || parentTn === $.IFRAME ||
	        parentTn === $.NOEMBED || parentTn === $.NOFRAMES || parentTn === $.PLAINTEXT || parentTn === $.NOSCRIPT)
	
	        this.html += content;
	
	    else
	        this.html += Serializer.escapeString(content, false);
	};
	
	Serializer.prototype._serializeCommentNode = function (node) {
	    this.html += '<!--' + this.treeAdapter.getCommentNodeContent(node) + '-->';
	};
	
	Serializer.prototype._serializeDocumentTypeNode = function (node) {
	    var name = this.treeAdapter.getDocumentTypeNodeName(node);
	
	    this.html += '<' + doctype.serializeContent(name, null, null) + '>';
	};


/***/ }),
/* 530 */
/***/ (function(module, exports) {

	'use strict';
	
	var replace = String.prototype.replace;
	var percentTwenties = /%20/g;
	
	module.exports = {
	    'default': 'RFC3986',
	    formatters: {
	        RFC1738: function (value) {
	            return replace.call(value, percentTwenties, '+');
	        },
	        RFC3986: function (value) {
	            return value;
	        }
	    },
	    RFC1738: 'RFC1738',
	    RFC3986: 'RFC3986'
	};


/***/ }),
/* 531 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	var stringifyPrimitive = function(v) {
	  switch (typeof v) {
	    case 'string':
	      return v;
	
	    case 'boolean':
	      return v ? 'true' : 'false';
	
	    case 'number':
	      return isFinite(v) ? v : '';
	
	    default:
	      return '';
	  }
	};
	
	module.exports = function(obj, sep, eq, name) {
	  sep = sep || '&';
	  eq = eq || '=';
	  if (obj === null) {
	    obj = undefined;
	  }
	
	  if (typeof obj === 'object') {
	    return map(objectKeys(obj), function(k) {
	      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
	      if (isArray(obj[k])) {
	        return map(obj[k], function(v) {
	          return ks + encodeURIComponent(stringifyPrimitive(v));
	        }).join(sep);
	      } else {
	        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
	      }
	    }).join(sep);
	
	  }
	
	  if (!name) return '';
	  return encodeURIComponent(stringifyPrimitive(name)) + eq +
	         encodeURIComponent(stringifyPrimitive(obj));
	};
	
	var isArray = Array.isArray || function (xs) {
	  return Object.prototype.toString.call(xs) === '[object Array]';
	};
	
	function map (xs, f) {
	  if (xs.map) return xs.map(f);
	  var res = [];
	  for (var i = 0; i < xs.length; i++) {
	    res.push(f(xs[i], i));
	  }
	  return res;
	}
	
	var objectKeys = Object.keys || function (obj) {
	  var res = [];
	  for (var key in obj) {
	    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
	  }
	  return res;
	};


/***/ }),
/* 532 */,
/* 533 */,
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

	exports.__esModule = true;
	exports.Helmet = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactSideEffect = __webpack_require__(1740);
	
	var _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);
	
	var _deepEqual = __webpack_require__(1019);
	
	var _deepEqual2 = _interopRequireDefault(_deepEqual);
	
	var _HelmetUtils = __webpack_require__(1562);
	
	var _HelmetConstants = __webpack_require__(535);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Helmet = function Helmet(Component) {
	    var _class, _temp;
	
	    return _temp = _class = function (_React$Component) {
	        _inherits(HelmetWrapper, _React$Component);
	
	        function HelmetWrapper() {
	            _classCallCheck(this, HelmetWrapper);
	
	            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	        }
	
	        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	            return !(0, _deepEqual2.default)(this.props, nextProps);
	        };
	
	        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {
	            if (!nestedChildren) {
	                return null;
	            }
	
	            switch (child.type) {
	                case _HelmetConstants.TAG_NAMES.SCRIPT:
	                case _HelmetConstants.TAG_NAMES.NOSCRIPT:
	                    return {
	                        innerHTML: nestedChildren
	                    };
	
	                case _HelmetConstants.TAG_NAMES.STYLE:
	                    return {
	                        cssText: nestedChildren
	                    };
	            }
	
	            throw new Error("<" + child.type + " /> elements are self-closing and can not contain children. Refer to our API for more information.");
	        };
	
	        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {
	            var _extends2;
	
	            var child = _ref.child,
	                arrayTypeChildren = _ref.arrayTypeChildren,
	                newChildProps = _ref.newChildProps,
	                nestedChildren = _ref.nestedChildren;
	
	            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));
	        };
	
	        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {
	            var _extends3, _extends4;
	
	            var child = _ref2.child,
	                newProps = _ref2.newProps,
	                newChildProps = _ref2.newChildProps,
	                nestedChildren = _ref2.nestedChildren;
	
	            switch (child.type) {
	                case _HelmetConstants.TAG_NAMES.TITLE:
	                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));
	
	                case _HelmetConstants.TAG_NAMES.BODY:
	                    return _extends({}, newProps, {
	                        bodyAttributes: _extends({}, newChildProps)
	                    });
	
	                case _HelmetConstants.TAG_NAMES.HTML:
	                    return _extends({}, newProps, {
	                        htmlAttributes: _extends({}, newChildProps)
	                    });
	            }
	
	            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));
	        };
	
	        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {
	            var newFlattenedProps = _extends({}, newProps);
	
	            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {
	                var _extends5;
	
	                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));
	            });
	
	            return newFlattenedProps;
	        };
	
	        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {
	            if (false) {
	                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {
	                    return child.type === name;
	                })) {
	                    if (typeof child.type === "function") {
	                        return (0, _HelmetUtils.warn)("You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.");
	                    }
	
	                    return (0, _HelmetUtils.warn)("Only elements types " + _HelmetConstants.VALID_TAG_NAMES.join(", ") + " are allowed. Helmet does not support rendering <" + child.type + "> elements. Refer to our API for more information.");
	                }
	
	                if (nestedChildren && typeof nestedChildren !== "string" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {
	                    return typeof nestedChild !== "string";
	                }))) {
	                    throw new Error("Helmet expects a string as a child of <" + child.type + ">. Did you forget to wrap your children in braces? ( <" + child.type + ">{``}</" + child.type + "> ) Refer to our API for more information.");
	                }
	            }
	
	            return true;
	        };
	
	        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {
	            var _this2 = this;
	
	            var arrayTypeChildren = {};
	
	            _react2.default.Children.forEach(children, function (child) {
	                if (!child || !child.props) {
	                    return;
	                }
	
	                var _child$props = child.props,
	                    nestedChildren = _child$props.children,
	                    childProps = _objectWithoutProperties(_child$props, ["children"]);
	
	                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);
	
	                _this2.warnOnInvalidChildren(child, nestedChildren);
	
	                switch (child.type) {
	                    case _HelmetConstants.TAG_NAMES.LINK:
	                    case _HelmetConstants.TAG_NAMES.META:
	                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:
	                    case _HelmetConstants.TAG_NAMES.SCRIPT:
	                    case _HelmetConstants.TAG_NAMES.STYLE:
	                        arrayTypeChildren = _this2.flattenArrayTypeChildren({
	                            child: child,
	                            arrayTypeChildren: arrayTypeChildren,
	                            newChildProps: newChildProps,
	                            nestedChildren: nestedChildren
	                        });
	                        break;
	
	                    default:
	                        newProps = _this2.mapObjectTypeChildren({
	                            child: child,
	                            newProps: newProps,
	                            newChildProps: newChildProps,
	                            nestedChildren: nestedChildren
	                        });
	                        break;
	                }
	            });
	
	            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);
	            return newProps;
	        };
	
	        HelmetWrapper.prototype.render = function render() {
	            var _props = this.props,
	                children = _props.children,
	                props = _objectWithoutProperties(_props, ["children"]);
	
	            var newProps = _extends({}, props);
	
	            if (children) {
	                newProps = this.mapChildrenToProps(children, newProps);
	            }
	
	            return _react2.default.createElement(Component, newProps);
	        };
	
	        _createClass(HelmetWrapper, null, [{
	            key: "canUseDOM",
	
	
	            // Component.peek comes from react-side-effect:
	            // For testing, you may use a static peek() method available on the returned component.
	            // It lets you get the current state without resetting the mounted instance stack.
	            // Don’t use it for anything other than testing.
	
	            /**
	             * @param {Object} base: {"target": "_blank", "href": "http://mysite.com/"}
	             * @param {Object} bodyAttributes: {"className": "root"}
	             * @param {String} defaultTitle: "Default Title"
	             * @param {Boolean} encodeSpecialCharacters: true
	             * @param {Object} htmlAttributes: {"lang": "en", "amp": undefined}
	             * @param {Array} link: [{"rel": "canonical", "href": "http://mysite.com/example"}]
	             * @param {Array} meta: [{"name": "description", "content": "Test description"}]
	             * @param {Array} noscript: [{"innerHTML": "<img src='http://mysite.com/js/test.js'"}]
	             * @param {Function} onChangeClientState: "(newState) => console.log(newState)"
	             * @param {Array} script: [{"type": "text/javascript", "src": "http://mysite.com/js/test.js"}]
	             * @param {Array} style: [{"type": "text/css", "cssText": "div { display: block; color: blue; }"}]
	             * @param {String} title: "Title"
	             * @param {Object} titleAttributes: {"itemprop": "name"}
	             * @param {String} titleTemplate: "MySite.com - %s"
	             */
	            set: function set(canUseDOM) {
	                Component.canUseDOM = canUseDOM;
	            }
	        }]);
	
	        return HelmetWrapper;
	    }(_react2.default.Component), _class.propTypes = {
	        base: _propTypes2.default.object,
	        bodyAttributes: _propTypes2.default.object,
	        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
	        defaultTitle: _propTypes2.default.string,
	        encodeSpecialCharacters: _propTypes2.default.bool,
	        htmlAttributes: _propTypes2.default.object,
	        link: _propTypes2.default.arrayOf(_propTypes2.default.object),
	        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),
	        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),
	        onChangeClientState: _propTypes2.default.func,
	        script: _propTypes2.default.arrayOf(_propTypes2.default.object),
	        style: _propTypes2.default.arrayOf(_propTypes2.default.object),
	        title: _propTypes2.default.string,
	        titleAttributes: _propTypes2.default.object,
	        titleTemplate: _propTypes2.default.string
	    }, _class.defaultProps = {
	        encodeSpecialCharacters: true
	    }, _class.peek = Component.peek, _class.rewind = function () {
	        var mappedState = Component.rewind();
	        if (!mappedState) {
	            // provide fallback if mappedState is undefined
	            mappedState = (0, _HelmetUtils.mapStateOnServer)({
	                baseTag: [],
	                bodyAttributes: {},
	                encodeSpecialCharacters: true,
	                htmlAttributes: {},
	                linkTags: [],
	                metaTags: [],
	                noscriptTags: [],
	                scriptTags: [],
	                styleTags: [],
	                title: "",
	                titleAttributes: {}
	            });
	        }
	
	        return mappedState;
	    }, _temp;
	};
	
	var NullComponent = function NullComponent() {
	    return null;
	};
	
	var HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);
	
	var HelmetExport = Helmet(HelmetSideEffects);
	HelmetExport.renderStatic = HelmetExport.rewind;
	
	exports.Helmet = HelmetExport;
	exports.default = HelmetExport;

/***/ }),
/* 535 */
/***/ (function(module, exports) {

	exports.__esModule = true;
	var ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {
	    BODY: "bodyAttributes",
	    HTML: "htmlAttributes",
	    TITLE: "titleAttributes"
	};
	
	var TAG_NAMES = exports.TAG_NAMES = {
	    BASE: "base",
	    BODY: "body",
	    HEAD: "head",
	    HTML: "html",
	    LINK: "link",
	    META: "meta",
	    NOSCRIPT: "noscript",
	    SCRIPT: "script",
	    STYLE: "style",
	    TITLE: "title"
	};
	
	var VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {
	    return TAG_NAMES[name];
	});
	
	var TAG_PROPERTIES = exports.TAG_PROPERTIES = {
	    CHARSET: "charset",
	    CSS_TEXT: "cssText",
	    HREF: "href",
	    HTTPEQUIV: "http-equiv",
	    INNER_HTML: "innerHTML",
	    ITEM_PROP: "itemprop",
	    NAME: "name",
	    PROPERTY: "property",
	    REL: "rel",
	    SRC: "src"
	};
	
	var REACT_TAG_MAP = exports.REACT_TAG_MAP = {
	    "accesskey": "accessKey",
	    "charset": "charSet",
	    "class": "className",
	    "contenteditable": "contentEditable",
	    "contextmenu": "contextMenu",
	    "http-equiv": "httpEquiv",
	    "itemprop": "itemProp",
	    "tabindex": "tabIndex"
	};
	
	var HELMET_PROPS = exports.HELMET_PROPS = {
	    DEFAULT_TITLE: "defaultTitle",
	    ENCODE_SPECIAL_CHARACTERS: "encodeSpecialCharacters",
	    ON_CHANGE_CLIENT_STATE: "onChangeClientState",
	    TITLE_TEMPLATE: "titleTemplate"
	};
	
	var HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {
	    obj[REACT_TAG_MAP[key]] = key;
	    return obj;
	}, {});
	
	var SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];
	
	var HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = "data-react-helmet";

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _keys2 = _interopRequireDefault(__webpack_require__(58));
	
	var _difference2 = _interopRequireDefault(__webpack_require__(1489));
	
	var _omit2 = _interopRequireDefault(__webpack_require__(97));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	function getId() {
	  return 'configure';
	}
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaConfigure',
	  getProvidedProps: function getProvidedProps() {
	    return {};
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props) {
	    var items = (0, _omit2.default)(props, 'children');
	    return searchParameters.setQueryParameters(items);
	  },
	  transitionState: function transitionState(props, prevSearchState, nextSearchState) {
	    var id = getId();
	    var items = (0, _omit2.default)(props, 'children');
	    var nonPresentKeys = this._props ? (0, _difference2.default)((0, _keys2.default)(this._props), (0, _keys2.default)(props)) : [];
	    this._props = props;
	    var nextValue = (0, _defineProperty2.default)({}, id, (0, _objectSpread2.default)({}, (0, _omit2.default)(nextSearchState[id], nonPresentKeys), items));
	    return (0, _indexUtils.refineValue)(nextSearchState, nextValue, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    var id = getId();
	    var indexId = (0, _indexUtils.getIndexId)(this.context);
	    var subState = (0, _indexUtils.hasMultipleIndices)(this.context) && searchState.indices ? searchState.indices[indexId] : searchState;
	    var configureKeys = subState && subState[id] ? Object.keys(subState[id]) : [];
	    var configureState = configureKeys.reduce(function (acc, item) {
	      if (!props[item]) {
	        acc[item] = subState[id][item];
	      }
	
	      return acc;
	    }, {});
	    var nextValue = (0, _defineProperty2.default)({}, id, configureState);
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context);
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(84));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	// A context rule must consist only of alphanumeric characters, hyphens, and underscores.
	// See https://www.algolia.com/doc/guides/managing-results/refine-results/merchandising-and-promoting/in-depth/implementing-query-rules/#context
	function escapeRuleContext(ruleName) {
	  return ruleName.replace(/[^a-z0-9-_]+/gi, '_');
	}
	
	function getWidgetRefinements(attribute, widgetKey, searchState) {
	  var widgetState = searchState[widgetKey];
	
	  switch (widgetKey) {
	    case 'range':
	      return Object.keys(widgetState[attribute]).map(function (rangeKey) {
	        return widgetState[attribute][rangeKey];
	      });
	
	    case 'refinementList':
	      return widgetState[attribute];
	
	    case 'hierarchicalMenu':
	      return [widgetState[attribute]];
	
	    case 'menu':
	      return [widgetState[attribute]];
	
	    case 'multiRange':
	      return widgetState[attribute].split(':');
	
	    case 'toggle':
	      return [widgetState[attribute]];
	
	    default:
	      return [];
	  }
	}
	
	function getRefinements(attribute) {
	  var searchState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var refinements = Object.keys(searchState).filter(function (widgetKey) {
	    return searchState[widgetKey] !== undefined && searchState[widgetKey][attribute] !== undefined;
	  }).map(function (widgetKey) {
	    return getWidgetRefinements(attribute, widgetKey, searchState);
	  }).reduce(function (acc, current) {
	    return acc.concat(current);
	  }, []); // flatten the refinements
	
	  return refinements;
	}
	
	function getRuleContextsFromTrackedFilters(_ref) {
	  var searchState = _ref.searchState,
	      trackedFilters = _ref.trackedFilters;
	  var ruleContexts = Object.keys(trackedFilters).reduce(function (facets, facetName) {
	    var facetRefinements = getRefinements(facetName, searchState);
	    var getTrackedFacetValues = trackedFilters[facetName];
	    var trackedFacetValues = getTrackedFacetValues(facetRefinements);
	    return [].concat((0, _toConsumableArray2.default)(facets), (0, _toConsumableArray2.default)(facetRefinements.filter(function (facetRefinement) {
	      return trackedFacetValues.includes(facetRefinement);
	    }).map(function (facetValue) {
	      return escapeRuleContext("ais-".concat(facetName, "-").concat(facetValue));
	    })));
	  }, []);
	  return ruleContexts;
	}
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaQueryRules',
	  defaultProps: {
	    transformItems: function transformItems(items) {
	      return items;
	    },
	    transformRuleContexts: function transformRuleContexts(ruleContexts) {
	      return ruleContexts;
	    },
	    trackedFilters: {}
	  },
	  getProvidedProps: function getProvidedProps(props, _1, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    if (results === null) {
	      return {
	        items: [],
	        canRefine: false
	      };
	    }
	
	    var _results$userData = results.userData,
	        userData = _results$userData === void 0 ? [] : _results$userData;
	    var transformItems = props.transformItems;
	    var transformedItems = transformItems(userData);
	    return {
	      items: transformedItems,
	      canRefine: transformedItems.length > 0
	    };
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    if (Object.keys(props.trackedFilters).length === 0) {
	      return searchParameters;
	    }
	
	    var indexSearchState = (0, _indexUtils.hasMultipleIndices)(this.context) ? searchState.indices[(0, _indexUtils.getIndexId)(this.context)] : searchState;
	    var newRuleContexts = getRuleContextsFromTrackedFilters({
	      searchState: indexSearchState,
	      trackedFilters: props.trackedFilters
	    });
	    var initialRuleContexts = searchParameters.ruleContexts || [];
	    var nextRuleContexts = [].concat((0, _toConsumableArray2.default)(initialRuleContexts), (0, _toConsumableArray2.default)(newRuleContexts));
	
	    if (false) {
	      if (nextRuleContexts.length > 10) {
	        // tslint:disable-next-line:no-console
	        console.warn("The maximum number of `ruleContexts` is 10. They have been sliced to that limit.\nConsider using `transformRuleContexts` to minimize the number of rules sent to Algolia.");
	      }
	    }
	
	    var ruleContexts = props.transformRuleContexts(nextRuleContexts).slice(0, 10);
	    return searchParameters.setQueryParameter('ruleContexts', ruleContexts);
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 538 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var _default = '5.7.0';
	exports.default = _default;

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Highlight = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	function generateKey(i, value) {
	  return "split-".concat(i, "-").concat(value);
	}
	
	var Highlight = function Highlight(_ref) {
	  var cx = _ref.cx,
	      value = _ref.value,
	      highlightedTagName = _ref.highlightedTagName,
	      isHighlighted = _ref.isHighlighted,
	      nonHighlightedTagName = _ref.nonHighlightedTagName;
	  var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;
	  var className = isHighlighted ? 'highlighted' : 'nonHighlighted';
	  return _react.default.createElement(TagName, {
	    className: cx(className)
	  }, value);
	};
	
	exports.Highlight = Highlight;
	Highlight.propTypes = {
	  cx: _propTypes.default.func.isRequired,
	  value: _propTypes.default.string.isRequired,
	  isHighlighted: _propTypes.default.bool.isRequired,
	  highlightedTagName: _propTypes.default.string.isRequired,
	  nonHighlightedTagName: _propTypes.default.string.isRequired
	};
	
	var Highlighter = function Highlighter(_ref2) {
	  var cx = _ref2.cx,
	      hit = _ref2.hit,
	      attribute = _ref2.attribute,
	      highlight = _ref2.highlight,
	      highlightProperty = _ref2.highlightProperty,
	      tagName = _ref2.tagName,
	      nonHighlightedTagName = _ref2.nonHighlightedTagName,
	      separator = _ref2.separator,
	      className = _ref2.className;
	  var parsedHighlightedValue = highlight({
	    hit: hit,
	    attribute: attribute,
	    highlightProperty: highlightProperty
	  });
	  return _react.default.createElement("span", {
	    className: (0, _classnames.default)(cx(''), className)
	  }, parsedHighlightedValue.map(function (item, i) {
	    if (Array.isArray(item)) {
	      var isLast = i === parsedHighlightedValue.length - 1;
	      return _react.default.createElement("span", {
	        key: generateKey(i, hit[attribute][i])
	      }, item.map(function (element, index) {
	        return _react.default.createElement(Highlight, {
	          cx: cx,
	          key: generateKey(index, element.value),
	          value: element.value,
	          highlightedTagName: tagName,
	          nonHighlightedTagName: nonHighlightedTagName,
	          isHighlighted: element.isHighlighted
	        });
	      }), !isLast && _react.default.createElement("span", {
	        className: cx('separator')
	      }, separator));
	    }
	
	    return _react.default.createElement(Highlight, {
	      cx: cx,
	      key: generateKey(i, item.value),
	      value: item.value,
	      highlightedTagName: tagName,
	      nonHighlightedTagName: nonHighlightedTagName,
	      isHighlighted: item.isHighlighted
	    });
	  }));
	};
	
	Highlighter.propTypes = {
	  cx: _propTypes.default.func.isRequired,
	  hit: _propTypes.default.object.isRequired,
	  attribute: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.string]).isRequired,
	  highlight: _propTypes.default.func.isRequired,
	  highlightProperty: _propTypes.default.string.isRequired,
	  tagName: _propTypes.default.string,
	  nonHighlightedTagName: _propTypes.default.string,
	  className: _propTypes.default.string,
	  separator: _propTypes.default.node
	};
	Highlighter.defaultProps = {
	  tagName: 'em',
	  nonHighlightedTagName: 'span',
	  className: '',
	  separator: ', '
	};
	var _default = Highlighter;
	exports.default = _default;

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectSpread3 = _interopRequireDefault(__webpack_require__(31));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('SearchBox');
	
	var defaultLoadingIndicator = _react.default.createElement("svg", {
	  width: "18",
	  height: "18",
	  viewBox: "0 0 38 38",
	  xmlns: "http://www.w3.org/2000/svg",
	  stroke: "#444",
	  className: cx('loadingIcon')
	}, _react.default.createElement("g", {
	  fill: "none",
	  fillRule: "evenodd"
	}, _react.default.createElement("g", {
	  transform: "translate(1 1)",
	  strokeWidth: "2"
	}, _react.default.createElement("circle", {
	  strokeOpacity: ".5",
	  cx: "18",
	  cy: "18",
	  r: "18"
	}), _react.default.createElement("path", {
	  d: "M36 18c0-9.94-8.06-18-18-18"
	}, _react.default.createElement("animateTransform", {
	  attributeName: "transform",
	  type: "rotate",
	  from: "0 18 18",
	  to: "360 18 18",
	  dur: "1s",
	  repeatCount: "indefinite"
	})))));
	
	var defaultReset = _react.default.createElement("svg", {
	  className: cx('resetIcon'),
	  xmlns: "http://www.w3.org/2000/svg",
	  viewBox: "0 0 20 20",
	  width: "10",
	  height: "10"
	}, _react.default.createElement("path", {
	  d: "M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z"
	}));
	
	var defaultSubmit = _react.default.createElement("svg", {
	  className: cx('submitIcon'),
	  xmlns: "http://www.w3.org/2000/svg",
	  width: "10",
	  height: "10",
	  viewBox: "0 0 40 40"
	}, _react.default.createElement("path", {
	  d: "M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"
	}));
	
	var SearchBox =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(SearchBox, _Component);
	
	  function SearchBox(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, SearchBox);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SearchBox).call(this));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getQuery", function () {
	      return _this.props.searchAsYouType ? _this.props.currentRefinement : _this.state.query;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onInputMount", function (input) {
	      _this.input = input;
	
	      if (_this.props.__inputRef) {
	        _this.props.__inputRef(input);
	      }
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onKeyDown", function (e) {
	      if (!_this.props.focusShortcuts) {
	        return;
	      }
	
	      var shortcuts = _this.props.focusShortcuts.map(function (key) {
	        return typeof key === 'string' ? key.toUpperCase().charCodeAt(0) : key;
	      });
	
	      var elt = e.target || e.srcElement;
	      var tagName = elt.tagName;
	
	      if (elt.isContentEditable || tagName === 'INPUT' || tagName === 'SELECT' || tagName === 'TEXTAREA') {
	        // already in an input
	        return;
	      }
	
	      var which = e.which || e.keyCode;
	
	      if (shortcuts.indexOf(which) === -1) {
	        // not the right shortcut
	        return;
	      }
	
	      _this.input.focus();
	
	      e.stopPropagation();
	      e.preventDefault();
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onSubmit", function (e) {
	      e.preventDefault();
	      e.stopPropagation();
	
	      _this.input.blur();
	
	      var _this$props = _this.props,
	          refine = _this$props.refine,
	          searchAsYouType = _this$props.searchAsYouType;
	
	      if (!searchAsYouType) {
	        refine(_this.getQuery());
	      }
	
	      return false;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChange", function (event) {
	      var _this$props2 = _this.props,
	          searchAsYouType = _this$props2.searchAsYouType,
	          refine = _this$props2.refine,
	          onChange = _this$props2.onChange;
	      var value = event.target.value;
	
	      if (searchAsYouType) {
	        refine(value);
	      } else {
	        _this.setState({
	          query: value
	        });
	      }
	
	      if (onChange) {
	        onChange(event);
	      }
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onReset", function (event) {
	      var _this$props3 = _this.props,
	          searchAsYouType = _this$props3.searchAsYouType,
	          refine = _this$props3.refine,
	          onReset = _this$props3.onReset;
	      refine('');
	
	      _this.input.focus();
	
	      if (!searchAsYouType) {
	        _this.setState({
	          query: ''
	        });
	      }
	
	      if (onReset) {
	        onReset(event);
	      }
	    });
	    _this.state = {
	      query: props.searchAsYouType ? null : props.currentRefinement
	    };
	    return _this;
	  }
	
	  (0, _createClass2.default)(SearchBox, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      document.addEventListener('keydown', this.onKeyDown);
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      document.removeEventListener('keydown', this.onKeyDown);
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      // Reset query when the searchParameters query has changed.
	      // This is kind of an anti-pattern (props in state), but it works here
	      // since we know for sure that searchParameters having changed means a
	      // new search has been triggered.
	      if (!nextProps.searchAsYouType && nextProps.currentRefinement !== this.props.currentRefinement) {
	        this.setState({
	          query: nextProps.currentRefinement
	        });
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _this$props4 = this.props,
	          className = _this$props4.className,
	          translate = _this$props4.translate,
	          autoFocus = _this$props4.autoFocus,
	          loadingIndicator = _this$props4.loadingIndicator,
	          submit = _this$props4.submit,
	          reset = _this$props4.reset;
	      var query = this.getQuery();
	      var searchInputEvents = Object.keys(this.props).reduce(function (props, prop) {
	        if (['onsubmit', 'onreset', 'onchange'].indexOf(prop.toLowerCase()) === -1 && prop.indexOf('on') === 0) {
	          return (0, _objectSpread3.default)({}, props, (0, _defineProperty2.default)({}, prop, _this2.props[prop]));
	        }
	
	        return props;
	      }, {});
	      var isSearchStalled = this.props.showLoadingIndicator && this.props.isSearchStalled;
	      /* eslint-disable max-len */
	
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement("form", {
	        noValidate: true,
	        onSubmit: this.props.onSubmit ? this.props.onSubmit : this.onSubmit,
	        onReset: this.onReset,
	        className: cx('form', isSearchStalled && 'form--stalledSearch'),
	        action: "",
	        role: "search"
	      }, _react.default.createElement("input", (0, _extends2.default)({
	        ref: this.onInputMount,
	        type: "search",
	        placeholder: translate('placeholder'),
	        autoFocus: autoFocus,
	        autoComplete: "off",
	        autoCorrect: "off",
	        autoCapitalize: "off",
	        spellCheck: "false",
	        required: true,
	        maxLength: "512",
	        value: query,
	        onChange: this.onChange
	      }, searchInputEvents, {
	        className: cx('input')
	      })), _react.default.createElement("button", {
	        type: "submit",
	        title: translate('submitTitle'),
	        className: cx('submit')
	      }, submit), _react.default.createElement("button", {
	        type: "reset",
	        title: translate('resetTitle'),
	        className: cx('reset'),
	        hidden: !query || isSearchStalled
	      }, reset), this.props.showLoadingIndicator && _react.default.createElement("span", {
	        hidden: !isSearchStalled,
	        className: cx('loadingIndicator')
	      }, loadingIndicator)));
	      /* eslint-enable */
	    }
	  }]);
	  return SearchBox;
	}(_react.Component);
	
	(0, _defineProperty2.default)(SearchBox, "propTypes", {
	  currentRefinement: _propTypes.default.string,
	  className: _propTypes.default.string,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  loadingIndicator: _propTypes.default.node,
	  reset: _propTypes.default.node,
	  submit: _propTypes.default.node,
	  focusShortcuts: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])),
	  autoFocus: _propTypes.default.bool,
	  searchAsYouType: _propTypes.default.bool,
	  onSubmit: _propTypes.default.func,
	  onReset: _propTypes.default.func,
	  onChange: _propTypes.default.func,
	  isSearchStalled: _propTypes.default.bool,
	  showLoadingIndicator: _propTypes.default.bool,
	  // For testing purposes
	  __inputRef: _propTypes.default.func
	});
	(0, _defineProperty2.default)(SearchBox, "defaultProps", {
	  currentRefinement: '',
	  className: '',
	  focusShortcuts: ['s', '/'],
	  autoFocus: false,
	  searchAsYouType: true,
	  showLoadingIndicator: false,
	  isSearchStalled: false,
	  loadingIndicator: defaultLoadingIndicator,
	  reset: defaultReset,
	  submit: defaultSubmit
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  resetTitle: 'Clear the search query.',
	  submitTitle: 'Submit your search query.',
	  placeholder: 'Search here…'
	})(SearchBox);
	
	exports.default = _default;

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _has2 = _interopRequireDefault(__webpack_require__(209));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var Select =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Select, _Component);
	
	  function Select() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Select);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Select)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChange", function (e) {
	      _this.props.onSelect(e.target.value);
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(Select, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          cx = _this$props.cx,
	          items = _this$props.items,
	          selectedItem = _this$props.selectedItem;
	      return _react.default.createElement("select", {
	        className: cx('select'),
	        value: selectedItem,
	        onChange: this.onChange
	      }, items.map(function (item) {
	        return _react.default.createElement("option", {
	          className: cx('option'),
	          key: (0, _has2.default)(item, 'key') ? item.key : item.value,
	          disabled: item.disabled,
	          value: item.value
	        }, (0, _has2.default)(item, 'label') ? item.label : item.value);
	      }));
	    }
	  }]);
	  return Select;
	}(_react.Component);
	
	exports.default = Select;
	(0, _defineProperty2.default)(Select, "propTypes", {
	  cx: _propTypes.default.func.isRequired,
	  onSelect: _propTypes.default.func.isRequired,
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
	    key: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	    label: _propTypes.default.string,
	    disabled: _propTypes.default.bool
	  })).isRequired,
	  selectedItem: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired
	});

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createVoiceSearchHelper;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	// copied from https://github.com/algolia/instantsearch.js/blob/0e988cc85487f61aa3b61131c22bed135ddfd76d/src/lib/voiceSearchHelper/index.ts
	function createVoiceSearchHelper(_ref) {
	  var searchAsYouSpeak = _ref.searchAsYouSpeak,
	      onQueryChange = _ref.onQueryChange,
	      onStateChange = _ref.onStateChange;
	  var SpeechRecognitionAPI = window.webkitSpeechRecognition || window.SpeechRecognition;
	
	  var getDefaultState = function getDefaultState(status) {
	    return {
	      status: status,
	      transcript: '',
	      isSpeechFinal: false,
	      errorCode: undefined
	    };
	  };
	
	  var state = getDefaultState('initial');
	  var recognition;
	
	  var isBrowserSupported = function isBrowserSupported() {
	    return Boolean(SpeechRecognitionAPI);
	  };
	
	  var isListening = function isListening() {
	    return state.status === 'askingPermission' || state.status === 'waiting' || state.status === 'recognizing';
	  };
	
	  var setState = function setState() {
	    var newState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    state = (0, _objectSpread2.default)({}, state, newState);
	    onStateChange();
	  };
	
	  var getState = function getState() {
	    return state;
	  };
	
	  var resetState = function resetState() {
	    var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'initial';
	    setState(getDefaultState(status));
	  };
	
	  var onStart = function onStart() {
	    setState({
	      status: 'waiting'
	    });
	  };
	
	  var onError = function onError(event) {
	    setState({
	      status: 'error',
	      errorCode: event.error
	    });
	  };
	
	  var onResult = function onResult(event) {
	    setState({
	      status: 'recognizing',
	      transcript: event.results[0] && event.results[0][0] && event.results[0][0].transcript || '',
	      isSpeechFinal: event.results[0] && event.results[0].isFinal
	    });
	
	    if (searchAsYouSpeak && state.transcript) {
	      onQueryChange(state.transcript);
	    }
	  };
	
	  var onEnd = function onEnd() {
	    if (!state.errorCode && state.transcript && !searchAsYouSpeak) {
	      onQueryChange(state.transcript);
	    }
	
	    if (state.status !== 'error') {
	      setState({
	        status: 'finished'
	      });
	    }
	  };
	
	  var stop = function stop() {
	    dispose();
	    resetState();
	  };
	
	  var start = function start() {
	    recognition = new SpeechRecognitionAPI();
	
	    if (!recognition) {
	      return;
	    }
	
	    resetState('askingPermission');
	    recognition.interimResults = true;
	    recognition.addEventListener('start', onStart);
	    recognition.addEventListener('error', onError);
	    recognition.addEventListener('result', onResult);
	    recognition.addEventListener('end', onEnd);
	    recognition.start();
	  };
	
	  var dispose = function dispose() {
	    if (!recognition) {
	      return;
	    }
	
	    recognition.stop();
	    recognition.removeEventListener('start', onStart);
	    recognition.removeEventListener('error', onError);
	    recognition.removeEventListener('result', onResult);
	    recognition.removeEventListener('end', onEnd);
	    recognition = undefined;
	  };
	
	  var toggleListening = function toggleListening() {
	    if (!isBrowserSupported()) {
	      return;
	    }
	
	    if (isListening()) {
	      stop();
	    } else {
	      start();
	    }
	  };
	
	  return {
	    getState: getState,
	    isBrowserSupported: isBrowserSupported,
	    isListening: isListening,
	    toggleListening: toggleListening,
	    dispose: dispose
	  };
	}

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(1654);
	} else {
	  module.exports = require('./cjs/react-is.development.js');
	}


/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ns$jss$ns$sheetOptio;
	
	var _propTypes = __webpack_require__(3);
	
	var _ns = __webpack_require__(335);
	
	var ns = _interopRequireWildcard(_ns);
	
	var _propTypes2 = __webpack_require__(545);
	
	var _propTypes3 = _interopRequireDefault(_propTypes2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	exports['default'] = (_ns$jss$ns$sheetOptio = {}, _defineProperty(_ns$jss$ns$sheetOptio, ns.jss, _propTypes3['default'].jss), _defineProperty(_ns$jss$ns$sheetOptio, ns.sheetOptions, _propTypes.object), _defineProperty(_ns$jss$ns$sheetOptio, ns.sheetsRegistry, _propTypes3['default'].registry), _defineProperty(_ns$jss$ns$sheetOptio, ns.managers, _propTypes.object), _ns$jss$ns$sheetOptio);

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	exports['default'] = {
	  jss: (0, _propTypes.shape)({
	    options: (0, _propTypes.shape)({
	      createGenerateClassName: _propTypes.func.isRequired
	    }).isRequired,
	    createStyleSheet: _propTypes.func.isRequired,
	    removeStyleSheet: _propTypes.func.isRequired
	  }),
	  registry: (0, _propTypes.shape)({
	    add: _propTypes.func.isRequired,
	    toString: _propTypes.func.isRequired
	  })
	};

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = connectAdvanced;
	
	var _hoistNonReactStatics = __webpack_require__(114);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _invariant = __webpack_require__(69);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _Subscription = __webpack_require__(1676);
	
	var _Subscription2 = _interopRequireDefault(_Subscription);
	
	var _PropTypes = __webpack_require__(548);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var hotReloadingVersion = 0;
	var dummyState = {};
	function noop() {}
	function makeSelectorStateful(sourceSelector, store) {
	  // wrap the selector in an object that tracks its results between runs.
	  var selector = {
	    run: function runComponentSelector(props) {
	      try {
	        var nextProps = sourceSelector(store.getState(), props);
	        if (nextProps !== selector.props || selector.error) {
	          selector.shouldComponentUpdate = true;
	          selector.props = nextProps;
	          selector.error = null;
	        }
	      } catch (error) {
	        selector.shouldComponentUpdate = true;
	        selector.error = error;
	      }
	    }
	  };
	
	  return selector;
	}
	
	function connectAdvanced(
	/*
	  selectorFactory is a func that is responsible for returning the selector function used to
	  compute new props from state, props, and dispatch. For example:
	     export default connectAdvanced((dispatch, options) => (state, props) => ({
	      thing: state.things[props.thingId],
	      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
	    }))(YourComponent)
	   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
	  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
	  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
	   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
	  props. Do not use connectAdvanced directly without memoizing results between calls to your
	  selector, otherwise the Connect component will re-render on every state or props change.
	*/
	selectorFactory) {
	  var _contextTypes, _childContextTypes;
	
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$getDisplayName = _ref.getDisplayName,
	      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
	    return 'ConnectAdvanced(' + name + ')';
	  } : _ref$getDisplayName,
	      _ref$methodName = _ref.methodName,
	      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
	      _ref$renderCountProp = _ref.renderCountProp,
	      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
	      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
	      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
	      _ref$storeKey = _ref.storeKey,
	      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
	      _ref$withRef = _ref.withRef,
	      withRef = _ref$withRef === undefined ? false : _ref$withRef,
	      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);
	
	  var subscriptionKey = storeKey + 'Subscription';
	  var version = hotReloadingVersion++;
	
	  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
	  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);
	
	  return function wrapWithConnect(WrappedComponent) {
	    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + ('connect. Instead received ' + JSON.stringify(WrappedComponent)));
	
	    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
	
	    var displayName = getDisplayName(wrappedComponentName);
	
	    var selectorFactoryOptions = _extends({}, connectOptions, {
	      getDisplayName: getDisplayName,
	      methodName: methodName,
	      renderCountProp: renderCountProp,
	      shouldHandleStateChanges: shouldHandleStateChanges,
	      storeKey: storeKey,
	      withRef: withRef,
	      displayName: displayName,
	      wrappedComponentName: wrappedComponentName,
	      WrappedComponent: WrappedComponent
	    });
	
	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);
	
	      function Connect(props, context) {
	        _classCallCheck(this, Connect);
	
	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	        _this.version = version;
	        _this.state = {};
	        _this.renderCount = 0;
	        _this.store = props[storeKey] || context[storeKey];
	        _this.propsMode = Boolean(props[storeKey]);
	        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);
	
	        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));
	
	        _this.initSelector();
	        _this.initSubscription();
	        return _this;
	      }
	
	      Connect.prototype.getChildContext = function getChildContext() {
	        var _ref2;
	
	        // If this component received store from props, its subscription should be transparent
	        // to any descendants receiving store+subscription from context; it passes along
	        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
	        // Connect to control ordering of notifications to flow top-down.
	        var subscription = this.propsMode ? null : this.subscription;
	        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
	      };
	
	      Connect.prototype.componentDidMount = function componentDidMount() {
	        if (!shouldHandleStateChanges) return;
	
	        // componentWillMount fires during server side rendering, but componentDidMount and
	        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
	        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
	        // To handle the case where a child component may have triggered a state change by
	        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
	        // re-render.
	        this.subscription.trySubscribe();
	        this.selector.run(this.props);
	        if (this.selector.shouldComponentUpdate) this.forceUpdate();
	      };
	
	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        this.selector.run(nextProps);
	      };
	
	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return this.selector.shouldComponentUpdate;
	      };
	
	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        if (this.subscription) this.subscription.tryUnsubscribe();
	        this.subscription = null;
	        this.notifyNestedSubs = noop;
	        this.store = null;
	        this.selector.run = noop;
	        this.selector.shouldComponentUpdate = false;
	      };
	
	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
	        return this.wrappedInstance;
	      };
	
	      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
	        this.wrappedInstance = ref;
	      };
	
	      Connect.prototype.initSelector = function initSelector() {
	        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
	        this.selector = makeSelectorStateful(sourceSelector, this.store);
	        this.selector.run(this.props);
	      };
	
	      Connect.prototype.initSubscription = function initSubscription() {
	        if (!shouldHandleStateChanges) return;
	
	        // parentSub's source should match where store came from: props vs. context. A component
	        // connected to the store via props shouldn't use subscription from context, or vice versa.
	        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
	        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));
	
	        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
	        // the middle of the notification loop, where `this.subscription` will then be null. An
	        // extra null check every change can be avoided by copying the method onto `this` and then
	        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
	        // listeners logic is changed to not call listeners that have been unsubscribed in the
	        // middle of the notification loop.
	        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
	      };
	
	      Connect.prototype.onStateChange = function onStateChange() {
	        this.selector.run(this.props);
	
	        if (!this.selector.shouldComponentUpdate) {
	          this.notifyNestedSubs();
	        } else {
	          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
	          this.setState(dummyState);
	        }
	      };
	
	      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
	        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
	        // needs to notify nested subs. Once called, it unimplements itself until further state
	        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
	        // a boolean check every time avoids an extra method call most of the time, resulting
	        // in some perf boost.
	        this.componentDidUpdate = undefined;
	        this.notifyNestedSubs();
	      };
	
	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return Boolean(this.subscription) && this.subscription.isSubscribed();
	      };
	
	      Connect.prototype.addExtraProps = function addExtraProps(props) {
	        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;
	        // make a shallow copy so that fields added don't leak to the original selector.
	        // this is especially important for 'ref' since that's a reference back to the component
	        // instance. a singleton memoized selector would then be holding a reference to the
	        // instance, preventing the instance from being garbage collected, and that would be bad
	        var withExtras = _extends({}, props);
	        if (withRef) withExtras.ref = this.setWrappedInstance;
	        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
	        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
	        return withExtras;
	      };
	
	      Connect.prototype.render = function render() {
	        var selector = this.selector;
	        selector.shouldComponentUpdate = false;
	
	        if (selector.error) {
	          throw selector.error;
	        } else {
	          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
	        }
	      };
	
	      return Connect;
	    }(_react.Component);
	
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.displayName = displayName;
	    Connect.childContextTypes = childContextTypes;
	    Connect.contextTypes = contextTypes;
	    Connect.propTypes = contextTypes;
	
	    if (false) {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        var _this2 = this;
	
	        // We are hot reloading!
	        if (this.version !== version) {
	          this.version = version;
	          this.initSelector();
	
	          // If any connected descendants don't hot reload (and resubscribe in the process), their
	          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
	          // listeners, this does mean that the old versions of connected descendants will still be
	          // notified of state changes; however, their onStateChange function is a no-op so this
	          // isn't a huge deal.
	          var oldListeners = [];
	
	          if (this.subscription) {
	            oldListeners = this.subscription.listeners.get();
	            this.subscription.tryUnsubscribe();
	          }
	          this.initSubscription();
	          if (shouldHandleStateChanges) {
	            this.subscription.trySubscribe();
	            oldListeners.forEach(function (listener) {
	              return _this2.subscription.listeners.subscribe(listener);
	            });
	          }
	        }
	      };
	    }
	
	    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
	  };
	}

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
	exports.getDependsOnOwnProps = getDependsOnOwnProps;
	exports.wrapMapToPropsFunc = wrapMapToPropsFunc;
	
	var _verifyPlainObject = __webpack_require__(549);
	
	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function wrapMapToPropsConstant(getConstant) {
	  return function initConstantSelector(dispatch, options) {
	    var constant = getConstant(dispatch, options);
	
	    function constantSelector() {
	      return constant;
	    }
	    constantSelector.dependsOnOwnProps = false;
	    return constantSelector;
	  };
	}
	
	// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
	// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
	// whether mapToProps needs to be invoked when props have changed.
	// 
	// A length of one signals that mapToProps does not depend on props from the parent component.
	// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
	// therefore not reporting its length accurately..
	function getDependsOnOwnProps(mapToProps) {
	  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
	}
	
	// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
	// this function wraps mapToProps in a proxy function which does several things:
	// 
	//  * Detects whether the mapToProps function being called depends on props, which
	//    is used by selectorFactory to decide if it should reinvoke on props changes.
	//    
	//  * On first call, handles mapToProps if returns another function, and treats that
	//    new function as the true mapToProps for subsequent calls.
	//    
	//  * On first call, verifies the first result is a plain object, in order to warn
	//    the developer that their mapToProps function is not returning a valid result.
	//    
	function wrapMapToPropsFunc(mapToProps, methodName) {
	  return function initProxySelector(dispatch, _ref) {
	    var displayName = _ref.displayName;
	
	    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
	      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
	    };
	
	    // allow detectFactoryAndVerify to get ownProps
	    proxy.dependsOnOwnProps = true;
	
	    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
	      proxy.mapToProps = mapToProps;
	      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
	      var props = proxy(stateOrDispatch, ownProps);
	
	      if (typeof props === 'function') {
	        proxy.mapToProps = props;
	        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
	        props = proxy(stateOrDispatch, ownProps);
	      }
	
	      if (false) (0, _verifyPlainObject2.default)(props, displayName, methodName);
	
	      return props;
	    };
	
	    return proxy;
	  };
	}

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.storeShape = exports.subscriptionShape = undefined;
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({
	  trySubscribe: _propTypes2.default.func.isRequired,
	  tryUnsubscribe: _propTypes2.default.func.isRequired,
	  notifyNestedSubs: _propTypes2.default.func.isRequired,
	  isSubscribed: _propTypes2.default.func.isRequired
	});
	
	var storeShape = exports.storeShape = _propTypes2.default.shape({
	  subscribe: _propTypes2.default.func.isRequired,
	  dispatch: _propTypes2.default.func.isRequired,
	  getState: _propTypes2.default.func.isRequired
	});

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = verifyPlainObject;
	
	var _isPlainObject = __webpack_require__(163);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(338);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function verifyPlainObject(value, displayName, methodName) {
	  if (!(0, _isPlainObject2.default)(value)) {
	    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
	  }
	}

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _invariant = __webpack_require__(69);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _history = __webpack_require__(67);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var isModifiedEvent = function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	};
	
	/**
	 * The public API for rendering a history-aware <a>.
	 */
	
	var Link = function (_React$Component) {
	  _inherits(Link, _React$Component);
	
	  function Link() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Link);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {
	      if (_this.props.onClick) _this.props.onClick(event);
	
	      if (!event.defaultPrevented && // onClick prevented default
	      event.button === 0 && // ignore everything but left clicks
	      !_this.props.target && // let browser handle "target=_blank" etc.
	      !isModifiedEvent(event) // ignore clicks with modifier keys
	      ) {
	          event.preventDefault();
	
	          var history = _this.context.router.history;
	          var _this$props = _this.props,
	              replace = _this$props.replace,
	              to = _this$props.to;
	
	
	          if (replace) {
	            history.replace(to);
	          } else {
	            history.push(to);
	          }
	        }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Link.prototype.render = function render() {
	    var _props = this.props,
	        replace = _props.replace,
	        to = _props.to,
	        innerRef = _props.innerRef,
	        props = _objectWithoutProperties(_props, ["replace", "to", "innerRef"]); // eslint-disable-line no-unused-vars
	
	    (0, _invariant2.default)(this.context.router, "You should not use <Link> outside a <Router>");
	
	    (0, _invariant2.default)(to !== undefined, 'You must specify the "to" property');
	
	    var history = this.context.router.history;
	
	    var location = typeof to === "string" ? (0, _history.createLocation)(to, null, null, history.location) : to;
	
	    var href = history.createHref(location);
	    return _react2.default.createElement("a", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));
	  };
	
	  return Link;
	}(_react2.default.Component);
	
	Link.propTypes = {
	  onClick: _propTypes2.default.func,
	  target: _propTypes2.default.string,
	  replace: _propTypes2.default.bool,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired,
	  innerRef: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
	};
	Link.defaultProps = {
	  replace: false
	};
	Link.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      push: _propTypes2.default.func.isRequired,
	      replace: _propTypes2.default.func.isRequired,
	      createHref: _propTypes2.default.func.isRequired
	    }).isRequired
	  }).isRequired
	};
	exports.default = Link;

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Route = __webpack_require__(552);
	
	var _Route2 = _interopRequireDefault(_Route);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Route2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(69);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _matchPath = __webpack_require__(341);
	
	var _matchPath2 = _interopRequireDefault(_matchPath);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var isEmptyChildren = function isEmptyChildren(children) {
	  return _react2.default.Children.count(children) === 0;
	};
	
	/**
	 * The public API for matching a single path and rendering.
	 */
	
	var Route = function (_React$Component) {
	  _inherits(Route, _React$Component);
	
	  function Route() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Route);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      match: _this.computeMatch(_this.props, _this.context.router)
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Route.prototype.getChildContext = function getChildContext() {
	    return {
	      router: _extends({}, this.context.router, {
	        route: {
	          location: this.props.location || this.context.router.route.location,
	          match: this.state.match
	        }
	      })
	    };
	  };
	
	  Route.prototype.computeMatch = function computeMatch(_ref, router) {
	    var computedMatch = _ref.computedMatch,
	        location = _ref.location,
	        path = _ref.path,
	        strict = _ref.strict,
	        exact = _ref.exact,
	        sensitive = _ref.sensitive;
	
	    if (computedMatch) return computedMatch; // <Switch> already computed the match for us
	
	    (0, _invariant2.default)(router, "You should not use <Route> or withRouter() outside a <Router>");
	
	    var route = router.route;
	
	    var pathname = (location || route.location).pathname;
	
	    return (0, _matchPath2.default)(pathname, { path: path, strict: strict, exact: exact, sensitive: sensitive }, route.match);
	  };
	
	  Route.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored");
	
	    (0, _warning2.default)(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), "You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored");
	
	    (0, _warning2.default)(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), "You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored");
	  };
	
	  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
	    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');
	
	    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
	
	    this.setState({
	      match: this.computeMatch(nextProps, nextContext.router)
	    });
	  };
	
	  Route.prototype.render = function render() {
	    var match = this.state.match;
	    var _props = this.props,
	        children = _props.children,
	        component = _props.component,
	        render = _props.render;
	    var _context$router = this.context.router,
	        history = _context$router.history,
	        route = _context$router.route,
	        staticContext = _context$router.staticContext;
	
	    var location = this.props.location || route.location;
	    var props = { match: match, location: location, history: history, staticContext: staticContext };
	
	    if (component) return match ? _react2.default.createElement(component, props) : null;
	
	    if (render) return match ? render(props) : null;
	
	    if (typeof children === "function") return children(props);
	
	    if (children && !isEmptyChildren(children)) return _react2.default.Children.only(children);
	
	    return null;
	  };
	
	  return Route;
	}(_react2.default.Component);
	
	Route.propTypes = {
	  computedMatch: _propTypes2.default.object, // private, from <Switch>
	  path: _propTypes2.default.string,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  sensitive: _propTypes2.default.bool,
	  component: _propTypes2.default.func,
	  render: _propTypes2.default.func,
	  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]),
	  location: _propTypes2.default.object
	};
	Route.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.object.isRequired,
	    route: _propTypes2.default.object.isRequired,
	    staticContext: _propTypes2.default.object
	  })
	};
	Route.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = Route;

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _pathToRegexp = __webpack_require__(554);
	
	var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var patternCache = {};
	var cacheLimit = 10000;
	var cacheCount = 0;
	
	var compileGenerator = function compileGenerator(pattern) {
	  var cacheKey = pattern;
	  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});
	
	  if (cache[pattern]) return cache[pattern];
	
	  var compiledGenerator = _pathToRegexp2.default.compile(pattern);
	
	  if (cacheCount < cacheLimit) {
	    cache[pattern] = compiledGenerator;
	    cacheCount++;
	  }
	
	  return compiledGenerator;
	};
	
	/**
	 * Public API for generating a URL pathname from a pattern and parameters.
	 */
	var generatePath = function generatePath() {
	  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "/";
	  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  if (pattern === "/") {
	    return pattern;
	  }
	  var generator = compileGenerator(pattern);
	  return generator(params, { pretty: true });
	};
	
	exports.default = generatePath;

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

	var isarray = __webpack_require__(92)
	
	/**
	 * Expose `pathToRegexp`.
	 */
	module.exports = pathToRegexp
	module.exports.parse = parse
	module.exports.compile = compile
	module.exports.tokensToFunction = tokensToFunction
	module.exports.tokensToRegExp = tokensToRegExp
	
	/**
	 * The main path matching regexp utility.
	 *
	 * @type {RegExp}
	 */
	var PATH_REGEXP = new RegExp([
	  // Match escaped characters that would otherwise appear in future matches.
	  // This allows the user to escape special characters that won't transform.
	  '(\\\\.)',
	  // Match Express-style parameters and un-named parameters with a prefix
	  // and optional suffixes. Matches appear as:
	  //
	  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
	  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
	  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
	  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
	].join('|'), 'g')
	
	/**
	 * Parse a string for the raw tokens.
	 *
	 * @param  {string}  str
	 * @param  {Object=} options
	 * @return {!Array}
	 */
	function parse (str, options) {
	  var tokens = []
	  var key = 0
	  var index = 0
	  var path = ''
	  var defaultDelimiter = options && options.delimiter || '/'
	  var res
	
	  while ((res = PATH_REGEXP.exec(str)) != null) {
	    var m = res[0]
	    var escaped = res[1]
	    var offset = res.index
	    path += str.slice(index, offset)
	    index = offset + m.length
	
	    // Ignore already escaped sequences.
	    if (escaped) {
	      path += escaped[1]
	      continue
	    }
	
	    var next = str[index]
	    var prefix = res[2]
	    var name = res[3]
	    var capture = res[4]
	    var group = res[5]
	    var modifier = res[6]
	    var asterisk = res[7]
	
	    // Push the current path onto the tokens.
	    if (path) {
	      tokens.push(path)
	      path = ''
	    }
	
	    var partial = prefix != null && next != null && next !== prefix
	    var repeat = modifier === '+' || modifier === '*'
	    var optional = modifier === '?' || modifier === '*'
	    var delimiter = res[2] || defaultDelimiter
	    var pattern = capture || group
	
	    tokens.push({
	      name: name || key++,
	      prefix: prefix || '',
	      delimiter: delimiter,
	      optional: optional,
	      repeat: repeat,
	      partial: partial,
	      asterisk: !!asterisk,
	      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
	    })
	  }
	
	  // Match any characters still remaining.
	  if (index < str.length) {
	    path += str.substr(index)
	  }
	
	  // If the path exists, push it onto the end.
	  if (path) {
	    tokens.push(path)
	  }
	
	  return tokens
	}
	
	/**
	 * Compile a string to a template function for the path.
	 *
	 * @param  {string}             str
	 * @param  {Object=}            options
	 * @return {!function(Object=, Object=)}
	 */
	function compile (str, options) {
	  return tokensToFunction(parse(str, options), options)
	}
	
	/**
	 * Prettier encoding of URI path segments.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeURIComponentPretty (str) {
	  return encodeURI(str).replace(/[\/?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}
	
	/**
	 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeAsterisk (str) {
	  return encodeURI(str).replace(/[?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}
	
	/**
	 * Expose a method for transforming tokens into the path function.
	 */
	function tokensToFunction (tokens, options) {
	  // Compile all the tokens into regexps.
	  var matches = new Array(tokens.length)
	
	  // Compile all the patterns before compilation.
	  for (var i = 0; i < tokens.length; i++) {
	    if (typeof tokens[i] === 'object') {
	      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))
	    }
	  }
	
	  return function (obj, opts) {
	    var path = ''
	    var data = obj || {}
	    var options = opts || {}
	    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent
	
	    for (var i = 0; i < tokens.length; i++) {
	      var token = tokens[i]
	
	      if (typeof token === 'string') {
	        path += token
	
	        continue
	      }
	
	      var value = data[token.name]
	      var segment
	
	      if (value == null) {
	        if (token.optional) {
	          // Prepend partial segment prefixes.
	          if (token.partial) {
	            path += token.prefix
	          }
	
	          continue
	        } else {
	          throw new TypeError('Expected "' + token.name + '" to be defined')
	        }
	      }
	
	      if (isarray(value)) {
	        if (!token.repeat) {
	          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
	        }
	
	        if (value.length === 0) {
	          if (token.optional) {
	            continue
	          } else {
	            throw new TypeError('Expected "' + token.name + '" to not be empty')
	          }
	        }
	
	        for (var j = 0; j < value.length; j++) {
	          segment = encode(value[j])
	
	          if (!matches[i].test(segment)) {
	            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
	          }
	
	          path += (j === 0 ? token.prefix : token.delimiter) + segment
	        }
	
	        continue
	      }
	
	      segment = token.asterisk ? encodeAsterisk(value) : encode(value)
	
	      if (!matches[i].test(segment)) {
	        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
	      }
	
	      path += token.prefix + segment
	    }
	
	    return path
	  }
	}
	
	/**
	 * Escape a regular expression string.
	 *
	 * @param  {string} str
	 * @return {string}
	 */
	function escapeString (str) {
	  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
	}
	
	/**
	 * Escape the capturing group by escaping special characters and meaning.
	 *
	 * @param  {string} group
	 * @return {string}
	 */
	function escapeGroup (group) {
	  return group.replace(/([=!:$\/()])/g, '\\$1')
	}
	
	/**
	 * Attach the keys as a property of the regexp.
	 *
	 * @param  {!RegExp} re
	 * @param  {Array}   keys
	 * @return {!RegExp}
	 */
	function attachKeys (re, keys) {
	  re.keys = keys
	  return re
	}
	
	/**
	 * Get the flags for a regexp from the options.
	 *
	 * @param  {Object} options
	 * @return {string}
	 */
	function flags (options) {
	  return options && options.sensitive ? '' : 'i'
	}
	
	/**
	 * Pull out keys from a regexp.
	 *
	 * @param  {!RegExp} path
	 * @param  {!Array}  keys
	 * @return {!RegExp}
	 */
	function regexpToRegexp (path, keys) {
	  // Use a negative lookahead to match only capturing groups.
	  var groups = path.source.match(/\((?!\?)/g)
	
	  if (groups) {
	    for (var i = 0; i < groups.length; i++) {
	      keys.push({
	        name: i,
	        prefix: null,
	        delimiter: null,
	        optional: false,
	        repeat: false,
	        partial: false,
	        asterisk: false,
	        pattern: null
	      })
	    }
	  }
	
	  return attachKeys(path, keys)
	}
	
	/**
	 * Transform an array into a regexp.
	 *
	 * @param  {!Array}  path
	 * @param  {Array}   keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function arrayToRegexp (path, keys, options) {
	  var parts = []
	
	  for (var i = 0; i < path.length; i++) {
	    parts.push(pathToRegexp(path[i], keys, options).source)
	  }
	
	  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))
	
	  return attachKeys(regexp, keys)
	}
	
	/**
	 * Create a path regexp from string input.
	 *
	 * @param  {string}  path
	 * @param  {!Array}  keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function stringToRegexp (path, keys, options) {
	  return tokensToRegExp(parse(path, options), keys, options)
	}
	
	/**
	 * Expose a function for taking tokens and returning a RegExp.
	 *
	 * @param  {!Array}          tokens
	 * @param  {(Array|Object)=} keys
	 * @param  {Object=}         options
	 * @return {!RegExp}
	 */
	function tokensToRegExp (tokens, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }
	
	  options = options || {}
	
	  var strict = options.strict
	  var end = options.end !== false
	  var route = ''
	
	  // Iterate over the tokens and create our regexp string.
	  for (var i = 0; i < tokens.length; i++) {
	    var token = tokens[i]
	
	    if (typeof token === 'string') {
	      route += escapeString(token)
	    } else {
	      var prefix = escapeString(token.prefix)
	      var capture = '(?:' + token.pattern + ')'
	
	      keys.push(token)
	
	      if (token.repeat) {
	        capture += '(?:' + prefix + capture + ')*'
	      }
	
	      if (token.optional) {
	        if (!token.partial) {
	          capture = '(?:' + prefix + '(' + capture + '))?'
	        } else {
	          capture = prefix + '(' + capture + ')?'
	        }
	      } else {
	        capture = prefix + '(' + capture + ')'
	      }
	
	      route += capture
	    }
	  }
	
	  var delimiter = escapeString(options.delimiter || '/')
	  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter
	
	  // In non-strict mode we allow a slash at the end of match. If the path to
	  // match already ends with a slash, we remove it for consistency. The slash
	  // is valid at the end of a path match, not in the middle. This is important
	  // in non-ending mode, where "/test/" shouldn't match "/test//route".
	  if (!strict) {
	    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
	  }
	
	  if (end) {
	    route += '$'
	  } else {
	    // In non-ending mode, we need the capturing groups to match as much as
	    // possible by using a positive lookahead to the end or next path segment.
	    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
	  }
	
	  return attachKeys(new RegExp('^' + route, flags(options)), keys)
	}
	
	/**
	 * Normalize the given path string, returning a regular expression.
	 *
	 * An empty array can be passed in for the keys, which will hold the
	 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
	 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
	 *
	 * @param  {(string|RegExp|Array)} path
	 * @param  {(Array|Object)=}       keys
	 * @param  {Object=}               options
	 * @return {!RegExp}
	 */
	function pathToRegexp (path, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }
	
	  options = options || {}
	
	  if (path instanceof RegExp) {
	    return regexpToRegexp(path, /** @type {!Array} */ (keys))
	  }
	
	  if (isarray(path)) {
	    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
	  }
	
	  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
	}


/***/ }),
/* 555 */,
/* 556 */,
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(172);
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var _setStatic = _interopRequireDefault(__webpack_require__(1748));
	
	var setDisplayName = function setDisplayName(displayName) {
	  return (0, _setStatic.default)('displayName', displayName);
	};
	
	var _default = setDisplayName;
	exports.default = _default;

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(172);
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var _getDisplayName = _interopRequireDefault(__webpack_require__(1745));
	
	var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
	  return hocName + "(" + (0, _getDisplayName.default)(BaseComponent) + ")";
	};
	
	var _default = wrapDisplayName;
	exports.default = _default;

/***/ }),
/* 559 */
/***/ (function(module, exports) {

	'use strict';
	
	var $Object = Object;
	var $TypeError = TypeError;
	
	module.exports = function flags() {
		if (this != null && this !== $Object(this)) {
			throw new $TypeError('RegExp.prototype.flags getter called on non-object');
		}
		var result = '';
		if (this.global) {
			result += 'g';
		}
		if (this.ignoreCase) {
			result += 'i';
		}
		if (this.multiline) {
			result += 'm';
		}
		if (this.dotAll) {
			result += 's';
		}
		if (this.unicode) {
			result += 'u';
		}
		if (this.sticky) {
			result += 'y';
		}
		return result;
	};


/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var implementation = __webpack_require__(559);
	
	var supportsDescriptors = __webpack_require__(151).supportsDescriptors;
	var $gOPD = Object.getOwnPropertyDescriptor;
	var $TypeError = TypeError;
	
	module.exports = function getPolyfill() {
		if (!supportsDescriptors) {
			throw new $TypeError('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
		}
		if ((/a/mig).flags === 'gim') {
			var descriptor = $gOPD(RegExp.prototype, 'flags');
			if (descriptor && typeof descriptor.get === 'function' && typeof (/a/).dotAll === 'boolean') {
				return descriptor.get;
			}
		}
		return implementation;
	};


/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	/*<replacement>*/
	
	var pna = __webpack_require__(216);
	/*</replacement>*/
	
	module.exports = Readable;
	
	/*<replacement>*/
	var isArray = __webpack_require__(92);
	/*</replacement>*/
	
	/*<replacement>*/
	var Duplex;
	/*</replacement>*/
	
	Readable.ReadableState = ReadableState;
	
	/*<replacement>*/
	var EE = __webpack_require__(112).EventEmitter;
	
	var EElistenerCount = function (emitter, type) {
	  return emitter.listeners(type).length;
	};
	/*</replacement>*/
	
	/*<replacement>*/
	var Stream = __webpack_require__(564);
	/*</replacement>*/
	
	/*<replacement>*/
	
	var Buffer = __webpack_require__(219).Buffer;
	var OurUint8Array = global.Uint8Array || function () {};
	function _uint8ArrayToBuffer(chunk) {
	  return Buffer.from(chunk);
	}
	function _isUint8Array(obj) {
	  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
	}
	
	/*</replacement>*/
	
	/*<replacement>*/
	var util = Object.create(__webpack_require__(146));
	util.inherits = __webpack_require__(43);
	/*</replacement>*/
	
	/*<replacement>*/
	var debugUtil = __webpack_require__(1789);
	var debug = void 0;
	if (debugUtil && debugUtil.debuglog) {
	  debug = debugUtil.debuglog('stream');
	} else {
	  debug = function () {};
	}
	/*</replacement>*/
	
	var BufferList = __webpack_require__(1767);
	var destroyImpl = __webpack_require__(563);
	var StringDecoder;
	
	util.inherits(Readable, Stream);
	
	var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];
	
	function prependListener(emitter, event, fn) {
	  // Sadly this is not cacheable as some libraries bundle their own
	  // event emitter implementation with them.
	  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);
	
	  // This is a hack to make sure that our error handler is attached before any
	  // userland ones.  NEVER DO THIS. This is here only because this code needs
	  // to continue to work with older versions of Node.js that do not include
	  // the prependListener() method. The goal is to eventually remove this hack.
	  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
	}
	
	function ReadableState(options, stream) {
	  Duplex = Duplex || __webpack_require__(99);
	
	  options = options || {};
	
	  // Duplex streams are both readable and writable, but share
	  // the same options object.
	  // However, some cases require setting options to different
	  // values for the readable and the writable sides of the duplex stream.
	  // These options can be provided separately as readableXXX and writableXXX.
	  var isDuplex = stream instanceof Duplex;
	
	  // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away
	  this.objectMode = !!options.objectMode;
	
	  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;
	
	  // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"
	  var hwm = options.highWaterMark;
	  var readableHwm = options.readableHighWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	
	  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;
	
	  // cast to ints.
	  this.highWaterMark = Math.floor(this.highWaterMark);
	
	  // A linked list is used to store data chunks instead of an array because the
	  // linked list can remove elements from the beginning faster than
	  // array.shift()
	  this.buffer = new BufferList();
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = null;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false;
	
	  // a flag to be able to tell if the event 'readable'/'data' is emitted
	  // immediately, or on a later tick.  We set this to true at first, because
	  // any actions that shouldn't happen until "later" should generally also
	  // not happen before the first read call.
	  this.sync = true;
	
	  // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.
	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;
	  this.resumeScheduled = false;
	
	  // has it been destroyed
	  this.destroyed = false;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // the number of writers that are awaiting a drain event in .pipe()s
	  this.awaitDrain = 0;
	
	  // if true, a maybeReadMore has been scheduled
	  this.readingMore = false;
	
	  this.decoder = null;
	  this.encoding = null;
	  if (options.encoding) {
	    if (!StringDecoder) StringDecoder = __webpack_require__(345).StringDecoder;
	    this.decoder = new StringDecoder(options.encoding);
	    this.encoding = options.encoding;
	  }
	}
	
	function Readable(options) {
	  Duplex = Duplex || __webpack_require__(99);
	
	  if (!(this instanceof Readable)) return new Readable(options);
	
	  this._readableState = new ReadableState(options, this);
	
	  // legacy
	  this.readable = true;
	
	  if (options) {
	    if (typeof options.read === 'function') this._read = options.read;
	
	    if (typeof options.destroy === 'function') this._destroy = options.destroy;
	  }
	
	  Stream.call(this);
	}
	
	Object.defineProperty(Readable.prototype, 'destroyed', {
	  get: function () {
	    if (this._readableState === undefined) {
	      return false;
	    }
	    return this._readableState.destroyed;
	  },
	  set: function (value) {
	    // we ignore the value if the stream
	    // has not been initialized yet
	    if (!this._readableState) {
	      return;
	    }
	
	    // backward compatibility, the user is explicitly
	    // managing destroyed
	    this._readableState.destroyed = value;
	  }
	});
	
	Readable.prototype.destroy = destroyImpl.destroy;
	Readable.prototype._undestroy = destroyImpl.undestroy;
	Readable.prototype._destroy = function (err, cb) {
	  this.push(null);
	  cb(err);
	};
	
	// Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.
	Readable.prototype.push = function (chunk, encoding) {
	  var state = this._readableState;
	  var skipChunkCheck;
	
	  if (!state.objectMode) {
	    if (typeof chunk === 'string') {
	      encoding = encoding || state.defaultEncoding;
	      if (encoding !== state.encoding) {
	        chunk = Buffer.from(chunk, encoding);
	        encoding = '';
	      }
	      skipChunkCheck = true;
	    }
	  } else {
	    skipChunkCheck = true;
	  }
	
	  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
	};
	
	// Unshift should *always* be something directly out of read()
	Readable.prototype.unshift = function (chunk) {
	  return readableAddChunk(this, chunk, null, true, false);
	};
	
	function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
	  var state = stream._readableState;
	  if (chunk === null) {
	    state.reading = false;
	    onEofChunk(stream, state);
	  } else {
	    var er;
	    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
	    if (er) {
	      stream.emit('error', er);
	    } else if (state.objectMode || chunk && chunk.length > 0) {
	      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
	        chunk = _uint8ArrayToBuffer(chunk);
	      }
	
	      if (addToFront) {
	        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
	      } else if (state.ended) {
	        stream.emit('error', new Error('stream.push() after EOF'));
	      } else {
	        state.reading = false;
	        if (state.decoder && !encoding) {
	          chunk = state.decoder.write(chunk);
	          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
	        } else {
	          addChunk(stream, state, chunk, false);
	        }
	      }
	    } else if (!addToFront) {
	      state.reading = false;
	    }
	  }
	
	  return needMoreData(state);
	}
	
	function addChunk(stream, state, chunk, addToFront) {
	  if (state.flowing && state.length === 0 && !state.sync) {
	    stream.emit('data', chunk);
	    stream.read(0);
	  } else {
	    // update the buffer info.
	    state.length += state.objectMode ? 1 : chunk.length;
	    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
	
	    if (state.needReadable) emitReadable(stream);
	  }
	  maybeReadMore(stream, state);
	}
	
	function chunkInvalid(state, chunk) {
	  var er;
	  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  return er;
	}
	
	// if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.
	function needMoreData(state) {
	  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
	}
	
	Readable.prototype.isPaused = function () {
	  return this._readableState.flowing === false;
	};
	
	// backwards compatibility.
	Readable.prototype.setEncoding = function (enc) {
	  if (!StringDecoder) StringDecoder = __webpack_require__(345).StringDecoder;
	  this._readableState.decoder = new StringDecoder(enc);
	  this._readableState.encoding = enc;
	  return this;
	};
	
	// Don't raise the hwm > 8MB
	var MAX_HWM = 0x800000;
	function computeNewHighWaterMark(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2 to prevent increasing hwm excessively in
	    // tiny amounts
	    n--;
	    n |= n >>> 1;
	    n |= n >>> 2;
	    n |= n >>> 4;
	    n |= n >>> 8;
	    n |= n >>> 16;
	    n++;
	  }
	  return n;
	}
	
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function howMuchToRead(n, state) {
	  if (n <= 0 || state.length === 0 && state.ended) return 0;
	  if (state.objectMode) return 1;
	  if (n !== n) {
	    // Only flow one buffer at a time
	    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
	  }
	  // If we're asking for more than the current hwm, then raise the hwm.
	  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
	  if (n <= state.length) return n;
	  // Don't have enough
	  if (!state.ended) {
	    state.needReadable = true;
	    return 0;
	  }
	  return state.length;
	}
	
	// you can override either this method, or the async _read(n) below.
	Readable.prototype.read = function (n) {
	  debug('read', n);
	  n = parseInt(n, 10);
	  var state = this._readableState;
	  var nOrig = n;
	
	  if (n !== 0) state.emittedReadable = false;
	
	  // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.
	  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
	    debug('read: emitReadable', state.length, state.ended);
	    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
	    return null;
	  }
	
	  n = howMuchToRead(n, state);
	
	  // if we've ended, and we're now clear, then finish it up.
	  if (n === 0 && state.ended) {
	    if (state.length === 0) endReadable(this);
	    return null;
	  }
	
	  // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.
	
	  // if we need a readable event, then we need to do some reading.
	  var doRead = state.needReadable;
	  debug('need readable', doRead);
	
	  // if we currently have less than the highWaterMark, then also read some
	  if (state.length === 0 || state.length - n < state.highWaterMark) {
	    doRead = true;
	    debug('length less than watermark', doRead);
	  }
	
	  // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.
	  if (state.ended || state.reading) {
	    doRead = false;
	    debug('reading or ended', doRead);
	  } else if (doRead) {
	    debug('do read');
	    state.reading = true;
	    state.sync = true;
	    // if the length is currently zero, then we *need* a readable event.
	    if (state.length === 0) state.needReadable = true;
	    // call internal read method
	    this._read(state.highWaterMark);
	    state.sync = false;
	    // If _read pushed data synchronously, then `reading` will be false,
	    // and we need to re-evaluate how much data we can return to the user.
	    if (!state.reading) n = howMuchToRead(nOrig, state);
	  }
	
	  var ret;
	  if (n > 0) ret = fromList(n, state);else ret = null;
	
	  if (ret === null) {
	    state.needReadable = true;
	    n = 0;
	  } else {
	    state.length -= n;
	  }
	
	  if (state.length === 0) {
	    // If we have nothing in the buffer, then we want to know
	    // as soon as we *do* get something into the buffer.
	    if (!state.ended) state.needReadable = true;
	
	    // If we tried to read() past the EOF, then emit end on the next tick.
	    if (nOrig !== n && state.ended) endReadable(this);
	  }
	
	  if (ret !== null) this.emit('data', ret);
	
	  return ret;
	};
	
	function onEofChunk(stream, state) {
	  if (state.ended) return;
	  if (state.decoder) {
	    var chunk = state.decoder.end();
	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }
	  state.ended = true;
	
	  // emit 'readable' now to make sure it gets picked up.
	  emitReadable(stream);
	}
	
	// Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.
	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;
	  if (!state.emittedReadable) {
	    debug('emitReadable', state.flowing);
	    state.emittedReadable = true;
	    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
	  }
	}
	
	function emitReadable_(stream) {
	  debug('emit readable');
	  stream.emit('readable');
	  flow(stream);
	}
	
	// at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.
	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    pna.nextTick(maybeReadMore_, stream, state);
	  }
	}
	
	function maybeReadMore_(stream, state) {
	  var len = state.length;
	  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
	    debug('maybeReadMore read 0');
	    stream.read(0);
	    if (len === state.length)
	      // didn't get any data, stop spinning.
	      break;else len = state.length;
	  }
	  state.readingMore = false;
	}
	
	// abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.
	Readable.prototype._read = function (n) {
	  this.emit('error', new Error('_read() is not implemented'));
	};
	
	Readable.prototype.pipe = function (dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;
	
	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;
	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;
	    default:
	      state.pipes.push(dest);
	      break;
	  }
	  state.pipesCount += 1;
	  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
	
	  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
	
	  var endFn = doEnd ? onend : unpipe;
	  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);
	
	  dest.on('unpipe', onunpipe);
	  function onunpipe(readable, unpipeInfo) {
	    debug('onunpipe');
	    if (readable === src) {
	      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
	        unpipeInfo.hasUnpiped = true;
	        cleanup();
	      }
	    }
	  }
	
	  function onend() {
	    debug('onend');
	    dest.end();
	  }
	
	  // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.
	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);
	
	  var cleanedUp = false;
	  function cleanup() {
	    debug('cleanup');
	    // cleanup event handlers once the pipe is broken
	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', unpipe);
	    src.removeListener('data', ondata);
	
	    cleanedUp = true;
	
	    // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.
	    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
	  }
	
	  // If the user pushes more data while we're writing to dest then we'll end up
	  // in ondata again. However, we only want to increase awaitDrain once because
	  // dest will only emit one 'drain' event for the multiple writes.
	  // => Introduce a guard on increasing awaitDrain.
	  var increasedAwaitDrain = false;
	  src.on('data', ondata);
	  function ondata(chunk) {
	    debug('ondata');
	    increasedAwaitDrain = false;
	    var ret = dest.write(chunk);
	    if (false === ret && !increasedAwaitDrain) {
	      // If the user unpiped during `dest.write()`, it is possible
	      // to get stuck in a permanently paused state if that write
	      // also returned false.
	      // => Check whether `dest` is still a piping destination.
	      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
	        debug('false write response, pause', src._readableState.awaitDrain);
	        src._readableState.awaitDrain++;
	        increasedAwaitDrain = true;
	      }
	      src.pause();
	    }
	  }
	
	  // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.
	  function onerror(er) {
	    debug('onerror', er);
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
	  }
	
	  // Make sure our error handler is attached before userland ones.
	  prependListener(dest, 'error', onerror);
	
	  // Both close and finish should trigger unpipe, but only once.
	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }
	  dest.once('close', onclose);
	  function onfinish() {
	    debug('onfinish');
	    dest.removeListener('close', onclose);
	    unpipe();
	  }
	  dest.once('finish', onfinish);
	
	  function unpipe() {
	    debug('unpipe');
	    src.unpipe(dest);
	  }
	
	  // tell the dest that it's being piped to
	  dest.emit('pipe', src);
	
	  // start the flow if it hasn't been started already.
	  if (!state.flowing) {
	    debug('pipe resume');
	    src.resume();
	  }
	
	  return dest;
	};
	
	function pipeOnDrain(src) {
	  return function () {
	    var state = src._readableState;
	    debug('pipeOnDrain', state.awaitDrain);
	    if (state.awaitDrain) state.awaitDrain--;
	    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
	      state.flowing = true;
	      flow(src);
	    }
	  };
	}
	
	Readable.prototype.unpipe = function (dest) {
	  var state = this._readableState;
	  var unpipeInfo = { hasUnpiped: false };
	
	  // if we're not piping anywhere, then do nothing.
	  if (state.pipesCount === 0) return this;
	
	  // just one destination.  most common case.
	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes) return this;
	
	    if (!dest) dest = state.pipes;
	
	    // got a match.
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	    if (dest) dest.emit('unpipe', this, unpipeInfo);
	    return this;
	  }
	
	  // slow case. multiple pipe destinations.
	
	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	
	    for (var i = 0; i < len; i++) {
	      dests[i].emit('unpipe', this, unpipeInfo);
	    }return this;
	  }
	
	  // try to find the right one.
	  var index = indexOf(state.pipes, dest);
	  if (index === -1) return this;
	
	  state.pipes.splice(index, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1) state.pipes = state.pipes[0];
	
	  dest.emit('unpipe', this, unpipeInfo);
	
	  return this;
	};
	
	// set up data events if they are asked for
	// Ensure readable listeners eventually get something
	Readable.prototype.on = function (ev, fn) {
	  var res = Stream.prototype.on.call(this, ev, fn);
	
	  if (ev === 'data') {
	    // Start flowing on next tick if stream isn't explicitly paused
	    if (this._readableState.flowing !== false) this.resume();
	  } else if (ev === 'readable') {
	    var state = this._readableState;
	    if (!state.endEmitted && !state.readableListening) {
	      state.readableListening = state.needReadable = true;
	      state.emittedReadable = false;
	      if (!state.reading) {
	        pna.nextTick(nReadingNextTick, this);
	      } else if (state.length) {
	        emitReadable(this);
	      }
	    }
	  }
	
	  return res;
	};
	Readable.prototype.addListener = Readable.prototype.on;
	
	function nReadingNextTick(self) {
	  debug('readable nexttick read 0');
	  self.read(0);
	}
	
	// pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.
	Readable.prototype.resume = function () {
	  var state = this._readableState;
	  if (!state.flowing) {
	    debug('resume');
	    state.flowing = true;
	    resume(this, state);
	  }
	  return this;
	};
	
	function resume(stream, state) {
	  if (!state.resumeScheduled) {
	    state.resumeScheduled = true;
	    pna.nextTick(resume_, stream, state);
	  }
	}
	
	function resume_(stream, state) {
	  if (!state.reading) {
	    debug('resume read 0');
	    stream.read(0);
	  }
	
	  state.resumeScheduled = false;
	  state.awaitDrain = 0;
	  stream.emit('resume');
	  flow(stream);
	  if (state.flowing && !state.reading) stream.read(0);
	}
	
	Readable.prototype.pause = function () {
	  debug('call pause flowing=%j', this._readableState.flowing);
	  if (false !== this._readableState.flowing) {
	    debug('pause');
	    this._readableState.flowing = false;
	    this.emit('pause');
	  }
	  return this;
	};
	
	function flow(stream) {
	  var state = stream._readableState;
	  debug('flow', state.flowing);
	  while (state.flowing && stream.read() !== null) {}
	}
	
	// wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.
	Readable.prototype.wrap = function (stream) {
	  var _this = this;
	
	  var state = this._readableState;
	  var paused = false;
	
	  stream.on('end', function () {
	    debug('wrapped end');
	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length) _this.push(chunk);
	    }
	
	    _this.push(null);
	  });
	
	  stream.on('data', function (chunk) {
	    debug('wrapped data');
	    if (state.decoder) chunk = state.decoder.write(chunk);
	
	    // don't skip over falsy values in objectMode
	    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;
	
	    var ret = _this.push(chunk);
	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  });
	
	  // proxy all the other methods.
	  // important when wrapping filters and duplexes.
	  for (var i in stream) {
	    if (this[i] === undefined && typeof stream[i] === 'function') {
	      this[i] = function (method) {
	        return function () {
	          return stream[method].apply(stream, arguments);
	        };
	      }(i);
	    }
	  }
	
	  // proxy certain important events.
	  for (var n = 0; n < kProxyEvents.length; n++) {
	    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
	  }
	
	  // when we try to consume some more bytes, simply unpause the
	  // underlying stream.
	  this._read = function (n) {
	    debug('wrapped _read', n);
	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };
	
	  return this;
	};
	
	Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
	  // making it explicit this property is not enumerable
	  // because otherwise some prototype manipulation in
	  // userland will fail
	  enumerable: false,
	  get: function () {
	    return this._readableState.highWaterMark;
	  }
	});
	
	// exposed for testing purposes only.
	Readable._fromList = fromList;
	
	// Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function fromList(n, state) {
	  // nothing buffered
	  if (state.length === 0) return null;
	
	  var ret;
	  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
	    // read it all, truncate the list
	    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
	    state.buffer.clear();
	  } else {
	    // read part of list
	    ret = fromListPartial(n, state.buffer, state.decoder);
	  }
	
	  return ret;
	}
	
	// Extracts only enough buffered data to satisfy the amount requested.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function fromListPartial(n, list, hasStrings) {
	  var ret;
	  if (n < list.head.data.length) {
	    // slice is the same for buffers and strings
	    ret = list.head.data.slice(0, n);
	    list.head.data = list.head.data.slice(n);
	  } else if (n === list.head.data.length) {
	    // first chunk is a perfect match
	    ret = list.shift();
	  } else {
	    // result spans more than one buffer
	    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
	  }
	  return ret;
	}
	
	// Copies a specified amount of characters from the list of buffered data
	// chunks.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function copyFromBufferString(n, list) {
	  var p = list.head;
	  var c = 1;
	  var ret = p.data;
	  n -= ret.length;
	  while (p = p.next) {
	    var str = p.data;
	    var nb = n > str.length ? str.length : n;
	    if (nb === str.length) ret += str;else ret += str.slice(0, n);
	    n -= nb;
	    if (n === 0) {
	      if (nb === str.length) {
	        ++c;
	        if (p.next) list.head = p.next;else list.head = list.tail = null;
	      } else {
	        list.head = p;
	        p.data = str.slice(nb);
	      }
	      break;
	    }
	    ++c;
	  }
	  list.length -= c;
	  return ret;
	}
	
	// Copies a specified amount of bytes from the list of buffered data chunks.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function copyFromBuffer(n, list) {
	  var ret = Buffer.allocUnsafe(n);
	  var p = list.head;
	  var c = 1;
	  p.data.copy(ret);
	  n -= p.data.length;
	  while (p = p.next) {
	    var buf = p.data;
	    var nb = n > buf.length ? buf.length : n;
	    buf.copy(ret, ret.length - n, 0, nb);
	    n -= nb;
	    if (n === 0) {
	      if (nb === buf.length) {
	        ++c;
	        if (p.next) list.head = p.next;else list.head = list.tail = null;
	      } else {
	        list.head = p;
	        p.data = buf.slice(nb);
	      }
	      break;
	    }
	    ++c;
	  }
	  list.length -= c;
	  return ret;
	}
	
	function endReadable(stream) {
	  var state = stream._readableState;
	
	  // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.
	  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');
	
	  if (!state.endEmitted) {
	    state.ended = true;
	    pna.nextTick(endReadableNT, state, stream);
	  }
	}
	
	function endReadableNT(state, stream) {
	  // Check that we didn't get one last unshift.
	  if (!state.endEmitted && state.length === 0) {
	    state.endEmitted = true;
	    stream.readable = false;
	    stream.emit('end');
	  }
	}
	
	function indexOf(xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }
	  return -1;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(44)))

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// a transform stream is a readable/writable stream where you do
	// something with the data.  Sometimes it's called a "filter",
	// but that's not a great name for it, since that implies a thing where
	// some bits pass through, and others are simply ignored.  (That would
	// be a valid example of a transform, of course.)
	//
	// While the output is causally related to the input, it's not a
	// necessarily symmetric or synchronous transformation.  For example,
	// a zlib stream might take multiple plain-text writes(), and then
	// emit a single compressed chunk some time in the future.
	//
	// Here's how this works:
	//
	// The Transform stream has all the aspects of the readable and writable
	// stream classes.  When you write(chunk), that calls _write(chunk,cb)
	// internally, and returns false if there's a lot of pending writes
	// buffered up.  When you call read(), that calls _read(n) until
	// there's enough pending readable data buffered up.
	//
	// In a transform stream, the written data is placed in a buffer.  When
	// _read(n) is called, it transforms the queued up data, calling the
	// buffered _write cb's as it consumes chunks.  If consuming a single
	// written chunk would result in multiple output chunks, then the first
	// outputted bit calls the readcb, and subsequent chunks just go into
	// the read buffer, and will cause it to emit 'readable' if necessary.
	//
	// This way, back-pressure is actually determined by the reading side,
	// since _read has to be called to start processing a new chunk.  However,
	// a pathological inflate type of transform can cause excessive buffering
	// here.  For example, imagine a stream where every byte of input is
	// interpreted as an integer from 0-255, and then results in that many
	// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
	// 1kb of data being output.  In this case, you could write a very small
	// amount of input, and end up with a very large amount of output.  In
	// such a pathological inflating mechanism, there'd be no way to tell
	// the system to stop doing the transform.  A single 4MB write could
	// cause the system to run out of memory.
	//
	// However, even in such a pathological case, only a single written chunk
	// would be consumed, and then the rest would wait (un-transformed) until
	// the results of the previous transformed chunk were consumed.
	
	'use strict';
	
	module.exports = Transform;
	
	var Duplex = __webpack_require__(99);
	
	/*<replacement>*/
	var util = Object.create(__webpack_require__(146));
	util.inherits = __webpack_require__(43);
	/*</replacement>*/
	
	util.inherits(Transform, Duplex);
	
	function afterTransform(er, data) {
	  var ts = this._transformState;
	  ts.transforming = false;
	
	  var cb = ts.writecb;
	
	  if (!cb) {
	    return this.emit('error', new Error('write callback called multiple times'));
	  }
	
	  ts.writechunk = null;
	  ts.writecb = null;
	
	  if (data != null) // single equals check for both `null` and `undefined`
	    this.push(data);
	
	  cb(er);
	
	  var rs = this._readableState;
	  rs.reading = false;
	  if (rs.needReadable || rs.length < rs.highWaterMark) {
	    this._read(rs.highWaterMark);
	  }
	}
	
	function Transform(options) {
	  if (!(this instanceof Transform)) return new Transform(options);
	
	  Duplex.call(this, options);
	
	  this._transformState = {
	    afterTransform: afterTransform.bind(this),
	    needTransform: false,
	    transforming: false,
	    writecb: null,
	    writechunk: null,
	    writeencoding: null
	  };
	
	  // start out asking for a readable event once data is transformed.
	  this._readableState.needReadable = true;
	
	  // we have implemented the _read method, and done the other things
	  // that Readable wants before the first _read call, so unset the
	  // sync guard flag.
	  this._readableState.sync = false;
	
	  if (options) {
	    if (typeof options.transform === 'function') this._transform = options.transform;
	
	    if (typeof options.flush === 'function') this._flush = options.flush;
	  }
	
	  // When the writable side finishes, then flush out anything remaining.
	  this.on('prefinish', prefinish);
	}
	
	function prefinish() {
	  var _this = this;
	
	  if (typeof this._flush === 'function') {
	    this._flush(function (er, data) {
	      done(_this, er, data);
	    });
	  } else {
	    done(this, null, null);
	  }
	}
	
	Transform.prototype.push = function (chunk, encoding) {
	  this._transformState.needTransform = false;
	  return Duplex.prototype.push.call(this, chunk, encoding);
	};
	
	// This is the part where you do stuff!
	// override this function in implementation classes.
	// 'chunk' is an input chunk.
	//
	// Call `push(newChunk)` to pass along transformed output
	// to the readable side.  You may call 'push' zero or more times.
	//
	// Call `cb(err)` when you are done with this chunk.  If you pass
	// an error, then that'll put the hurt on the whole operation.  If you
	// never call cb(), then you'll never get another chunk.
	Transform.prototype._transform = function (chunk, encoding, cb) {
	  throw new Error('_transform() is not implemented');
	};
	
	Transform.prototype._write = function (chunk, encoding, cb) {
	  var ts = this._transformState;
	  ts.writecb = cb;
	  ts.writechunk = chunk;
	  ts.writeencoding = encoding;
	  if (!ts.transforming) {
	    var rs = this._readableState;
	    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
	  }
	};
	
	// Doesn't matter what the args are here.
	// _transform does all the work.
	// That we got here means that the readable side wants more data.
	Transform.prototype._read = function (n) {
	  var ts = this._transformState;
	
	  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
	    ts.transforming = true;
	    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
	  } else {
	    // mark that we need a transform, so that any data that comes in
	    // will get processed, now that we've asked for it.
	    ts.needTransform = true;
	  }
	};
	
	Transform.prototype._destroy = function (err, cb) {
	  var _this2 = this;
	
	  Duplex.prototype._destroy.call(this, err, function (err2) {
	    cb(err2);
	    _this2.emit('close');
	  });
	};
	
	function done(stream, er, data) {
	  if (er) return stream.emit('error', er);
	
	  if (data != null) // single equals check for both `null` and `undefined`
	    stream.push(data);
	
	  // if there's nothing in the write buffer, then that means
	  // that nothing more will ever be provided
	  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');
	
	  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');
	
	  return stream.push(null);
	}

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/*<replacement>*/
	
	var pna = __webpack_require__(216);
	/*</replacement>*/
	
	// undocumented cb() API, needed for core, not for public API
	function destroy(err, cb) {
	  var _this = this;
	
	  var readableDestroyed = this._readableState && this._readableState.destroyed;
	  var writableDestroyed = this._writableState && this._writableState.destroyed;
	
	  if (readableDestroyed || writableDestroyed) {
	    if (cb) {
	      cb(err);
	    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
	      pna.nextTick(emitErrorNT, this, err);
	    }
	    return this;
	  }
	
	  // we set destroyed to true before firing error callbacks in order
	  // to make it re-entrance safe in case destroy() is called within callbacks
	
	  if (this._readableState) {
	    this._readableState.destroyed = true;
	  }
	
	  // if this is a duplex stream mark the writable part as destroyed as well
	  if (this._writableState) {
	    this._writableState.destroyed = true;
	  }
	
	  this._destroy(err || null, function (err) {
	    if (!cb && err) {
	      pna.nextTick(emitErrorNT, _this, err);
	      if (_this._writableState) {
	        _this._writableState.errorEmitted = true;
	      }
	    } else if (cb) {
	      cb(err);
	    }
	  });
	
	  return this;
	}
	
	function undestroy() {
	  if (this._readableState) {
	    this._readableState.destroyed = false;
	    this._readableState.reading = false;
	    this._readableState.ended = false;
	    this._readableState.endEmitted = false;
	  }
	
	  if (this._writableState) {
	    this._writableState.destroyed = false;
	    this._writableState.ended = false;
	    this._writableState.ending = false;
	    this._writableState.finished = false;
	    this._writableState.errorEmitted = false;
	  }
	}
	
	function emitErrorNT(self, err) {
	  self.emit('error', err);
	}
	
	module.exports = {
	  destroy: destroy,
	  undestroy: undestroy
	};

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(112).EventEmitter;


/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ponyfill = __webpack_require__(1775);
	
	var _ponyfill2 = _interopRequireDefault(_ponyfill);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var root; /* global window */
	
	
	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}
	
	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(223)(module)))

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createThemeListener;
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _channel = __webpack_require__(221);
	
	var _channel2 = _interopRequireDefault(_channel);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function createThemeListener() {
	  var CHANNEL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _channel2.default;
	
	  var contextTypes = _defineProperty({}, CHANNEL, _propTypes2.default.object.isRequired);
	
	  function initial(context) {
	    if (!context[CHANNEL]) {
	      throw new Error('[' + this.displayName + '] Please use ThemeProvider to be able to use WithTheme');
	    }
	
	    return context[CHANNEL].getState();
	  }
	
	  function subscribe(context, cb) {
	    if (context[CHANNEL]) {
	      return context[CHANNEL].subscribe(cb);
	    }
	  }
	
	  function unsubscribe(context, subscriptionId) {
	    if (context[CHANNEL]) {
	      context[CHANNEL].unsubscribe(subscriptionId);
	    }
	  }
	
	  return {
	    contextTypes: contextTypes,
	    initial: initial,
	    subscribe: subscribe,
	    unsubscribe: unsubscribe
	  };
	}

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.themeListener = exports.ThemeProvider = exports.withTheme = exports.channel = undefined;
	exports.createTheming = createTheming;
	
	var _createThemeProvider = __webpack_require__(1776);
	
	var _createThemeProvider2 = _interopRequireDefault(_createThemeProvider);
	
	var _createWithTheme = __webpack_require__(1777);
	
	var _createWithTheme2 = _interopRequireDefault(_createWithTheme);
	
	var _createThemeListener = __webpack_require__(566);
	
	var _createThemeListener2 = _interopRequireDefault(_createThemeListener);
	
	var _channel = __webpack_require__(221);
	
	var _channel2 = _interopRequireDefault(_channel);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var channel = exports.channel = _channel2.default;
	var withTheme = exports.withTheme = (0, _createWithTheme2.default)();
	var ThemeProvider = exports.ThemeProvider = (0, _createThemeProvider2.default)();
	var themeListener = exports.themeListener = (0, _createThemeListener2.default)();
	function createTheming() {
	  var customChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _channel2.default;
	
	  return {
	    channel: customChannel,
	    withTheme: (0, _createWithTheme2.default)(customChannel),
	    ThemeProvider: (0, _createThemeProvider2.default)(customChannel),
	    themeListener: (0, _createThemeListener2.default)(customChannel)
	  };
	}
	
	exports.default = {
	  channel: _channel2.default,
	  withTheme: withTheme,
	  ThemeProvider: ThemeProvider,
	  themeListener: themeListener,
	  createTheming: createTheming
	};

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
	            (typeof self !== "undefined" && self) ||
	            window;
	var apply = Function.prototype.apply;
	
	// DOM APIs, for completeness
	
	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) {
	  if (timeout) {
	    timeout.close();
	  }
	};
	
	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(scope, this._id);
	};
	
	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};
	
	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};
	
	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);
	
	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};
	
	// setimmediate attaches itself to the global object
	__webpack_require__(1761);
	// On some exotic environments, it's not clear which object `setimmediate` was
	// able to install onto.  Search each possibility in the same order as the
	// `setimmediate` library.
	exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
	                       (typeof global !== "undefined" && global.setImmediate) ||
	                       (this && this.setImmediate);
	exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
	                         (typeof global !== "undefined" && global.clearImmediate) ||
	                         (this && this.clearImmediate);
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 569 */
/***/ (function(module, exports) {

	function _arrayWithHoles(arr) {
	  if (Array.isArray(arr)) return arr;
	}
	
	module.exports = _arrayWithHoles;

/***/ }),
/* 570 */
/***/ (function(module, exports) {

	function _arrayWithoutHoles(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }
	
	    return arr2;
	  }
	}
	
	module.exports = _arrayWithoutHoles;

/***/ }),
/* 571 */
/***/ (function(module, exports) {

	function _iterableToArray(iter) {
	  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
	}
	
	module.exports = _iterableToArray;

/***/ }),
/* 572 */
/***/ (function(module, exports) {

	function _iterableToArrayLimit(arr, i) {
	  var _arr = [];
	  var _n = true;
	  var _d = false;
	  var _e = undefined;
	
	  try {
	    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
	      _arr.push(_s.value);
	
	      if (i && _arr.length === i) break;
	    }
	  } catch (err) {
	    _d = true;
	    _e = err;
	  } finally {
	    try {
	      if (!_n && _i["return"] != null) _i["return"]();
	    } finally {
	      if (_d) throw _e;
	    }
	  }
	
	  return _arr;
	}
	
	module.exports = _iterableToArrayLimit;

/***/ }),
/* 573 */
/***/ (function(module, exports) {

	function _nonIterableRest() {
	  throw new TypeError("Invalid attempt to destructure non-iterable instance");
	}
	
	module.exports = _nonIterableRest;

/***/ }),
/* 574 */
/***/ (function(module, exports) {

	function _nonIterableSpread() {
	  throw new TypeError("Invalid attempt to spread non-iterable instance");
	}
	
	module.exports = _nonIterableSpread;

/***/ }),
/* 575 */
/***/ (function(module, exports) {

	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	
	  return target;
	}
	
	module.exports = _objectWithoutPropertiesLoose;

/***/ }),
/* 576 */
/***/ (function(module, exports) {

	function _setPrototypeOf(o, p) {
	  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };
	
	  return _setPrototypeOf(o, p);
	}
	
	module.exports = _setPrototypeOf;

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayWithHoles = __webpack_require__(569);
	
	var iterableToArrayLimit = __webpack_require__(572);
	
	var nonIterableRest = __webpack_require__(573);
	
	function _slicedToArray(arr, i) {
	  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
	}
	
	module.exports = _slicedToArray;

/***/ }),
/* 578 */,
/* 579 */,
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _Fade = _interopRequireDefault(__webpack_require__(230));
	
	var styles = {
	  /* Styles applied to the root element. */
	  root: {
	    zIndex: -1,
	    position: 'fixed',
	    right: 0,
	    bottom: 0,
	    top: 0,
	    left: 0,
	    backgroundColor: 'rgba(0, 0, 0, 0.5)',
	    // Remove grey highlight
	    WebkitTapHighlightColor: 'transparent',
	    // Disable scroll capabilities.
	    touchAction: 'none'
	  },
	
	  /* Styles applied to the root element if `invisible={true}`. */
	  invisible: {
	    backgroundColor: 'transparent'
	  }
	};
	exports.styles = styles;
	
	function Backdrop(props) {
	  var classes = props.classes,
	      className = props.className,
	      invisible = props.invisible,
	      open = props.open,
	      transitionDuration = props.transitionDuration,
	      other = (0, _objectWithoutProperties2.default)(props, ["classes", "className", "invisible", "open", "transitionDuration"]);
	  return _react.default.createElement(_Fade.default, (0, _extends2.default)({
	    in: open,
	    timeout: transitionDuration
	  }, other), _react.default.createElement("div", {
	    className: (0, _classnames.default)(classes.root, (0, _defineProperty2.default)({}, classes.invisible, invisible), className),
	    "aria-hidden": "true"
	  }));
	}
	
	Backdrop.propTypes =  false ? {
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * If `true`, the backdrop is invisible.
	   * It can be used when rendering a popover or a custom select component.
	   */
	  invisible: _propTypes.default.bool,
	
	  /**
	   * If `true`, the backdrop is open.
	   */
	  open: _propTypes.default.bool.isRequired,
	
	  /**
	   * The duration for the transition, in milliseconds.
	   * You may specify a single timeout for all transitions, or individually with an object.
	   */
	  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	    enter: _propTypes.default.number,
	    exit: _propTypes.default.number
	  })])
	} : {};
	Backdrop.defaultProps = {
	  invisible: false
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiBackdrop'
	})(Backdrop);
	
	exports.default = _default;

/***/ }),
/* 581 */,
/* 582 */,
/* 583 */,
/* 584 */,
/* 585 */,
/* 586 */,
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _colorManipulator = __webpack_require__(61);
	
	var _ButtonBase = _interopRequireDefault(__webpack_require__(36));
	
	var _chainPropTypes = _interopRequireDefault(__webpack_require__(105));
	
	var _helpers = __webpack_require__(19);
	
	// @inheritedComponent ButtonBase
	var styles = function styles(theme) {
	  return {
	    /* Styles applied to the root element. */
	    root: (0, _extends2.default)({}, theme.typography.button, {
	      boxSizing: 'border-box',
	      minWidth: 64,
	      minHeight: 36,
	      padding: '8px 16px',
	      borderRadius: theme.shape.borderRadius,
	      color: theme.palette.text.primary,
	      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {
	        duration: theme.transitions.duration.short
	      }),
	      '&:hover': {
	        textDecoration: 'none',
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.text.primary, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        },
	        '&$disabled': {
	          backgroundColor: 'transparent'
	        }
	      },
	      '&$disabled': {
	        color: theme.palette.action.disabled
	      }
	    }),
	
	    /* Styles applied to the span element that wraps the children. */
	    label: {
	      width: '100%',
	      // assure the correct width for iOS Safari
	      display: 'inherit',
	      alignItems: 'inherit',
	      justifyContent: 'inherit'
	    },
	
	    /* Styles applied to the root element if `variant="text"`. */
	    text: {},
	
	    /* Styles applied to the root element if `variant="text"` and `color="primary"`. */
	    textPrimary: {
	      color: theme.palette.primary.main,
	      '&:hover': {
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary.main, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	
	    /* Styles applied to the root element if `variant="text"` and `color="secondary"`. */
	    textSecondary: {
	      color: theme.palette.secondary.main,
	      '&:hover': {
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	
	    /* Styles applied to the root element for backwards compatibility with legacy variant naming. */
	    flat: {},
	
	    /* Styles applied to the root element for backwards compatibility with legacy variant naming. */
	    flatPrimary: {},
	
	    /* Styles applied to the root element for backwards compatibility with legacy variant naming. */
	    flatSecondary: {},
	
	    /* Styles applied to the root element if `variant="outlined"`. */
	    outlined: {
	      border: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')
	    },
	
	    /* Styles applied to the root element if `variant="outlined"` and `color="primary"`. */
	    outlinedPrimary: {
	      color: theme.palette.primary.main,
	      border: "1px solid ".concat((0, _colorManipulator.fade)(theme.palette.primary.main, 0.5)),
	      '&:hover': {
	        border: "1px solid ".concat(theme.palette.primary.main),
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary.main, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      },
	      '&$disabled': {
	        border: "1px solid ".concat(theme.palette.action.disabled)
	      }
	    },
	
	    /* Styles applied to the root element if `variant="outlined"` and `color="secondary"`. */
	    outlinedSecondary: {
	      color: theme.palette.secondary.main,
	      border: "1px solid ".concat((0, _colorManipulator.fade)(theme.palette.secondary.main, 0.5)),
	      '&:hover': {
	        border: "1px solid ".concat(theme.palette.secondary.main),
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      },
	      '&$disabled': {
	        border: "1px solid ".concat(theme.palette.action.disabled)
	      }
	    },
	
	    /* Styles applied to the root element if `variant="[contained | fab]"`. */
	    contained: {
	      color: theme.palette.getContrastText(theme.palette.grey[300]),
	      backgroundColor: theme.palette.grey[300],
	      boxShadow: theme.shadows[2],
	      '&$focusVisible': {
	        boxShadow: theme.shadows[6]
	      },
	      '&:active': {
	        boxShadow: theme.shadows[8]
	      },
	      '&$disabled': {
	        color: theme.palette.action.disabled,
	        boxShadow: theme.shadows[0],
	        backgroundColor: theme.palette.action.disabledBackground
	      },
	      '&:hover': {
	        backgroundColor: theme.palette.grey.A100,
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: theme.palette.grey[300]
	        },
	        '&$disabled': {
	          backgroundColor: theme.palette.action.disabledBackground
	        }
	      }
	    },
	
	    /* Styles applied to the root element if `variant="[contained | fab]"` and `color="primary"`. */
	    containedPrimary: {
	      color: theme.palette.primary.contrastText,
	      backgroundColor: theme.palette.primary.main,
	      '&:hover': {
	        backgroundColor: theme.palette.primary.dark,
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: theme.palette.primary.main
	        }
	      }
	    },
	
	    /* Styles applied to the root element if `variant="[contained | fab]"` and `color="secondary"`. */
	    containedSecondary: {
	      color: theme.palette.secondary.contrastText,
	      backgroundColor: theme.palette.secondary.main,
	      '&:hover': {
	        backgroundColor: theme.palette.secondary.dark,
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: theme.palette.secondary.main
	        }
	      }
	    },
	
	    /* Styles applied to the root element for backwards compatibility with legacy variant naming. */
	    raised: {},
	    // legacy
	
	    /* Styles applied to the root element for backwards compatibility with legacy variant naming. */
	    raisedPrimary: {},
	    // legacy
	
	    /* Styles applied to the root element for backwards compatibility with legacy variant naming. */
	    raisedSecondary: {},
	    // legacy
	
	    /* Styles applied to the root element if `variant="[fab | extendedFab]"`. */
	    fab: {
	      borderRadius: '50%',
	      padding: 0,
	      minWidth: 0,
	      width: 56,
	      height: 56,
	      boxShadow: theme.shadows[6],
	      '&:active': {
	        boxShadow: theme.shadows[12]
	      }
	    },
	
	    /* Styles applied to the root element if `variant="extendedFab"`. */
	    extendedFab: {
	      borderRadius: 48 / 2,
	      padding: '0 16px',
	      width: 'auto',
	      minWidth: 48,
	      height: 48
	    },
	
	    /* Styles applied to the ButtonBase root element if the button is keyboard focused. */
	    focusVisible: {},
	
	    /* Styles applied to the root element if `disabled={true}`. */
	    disabled: {},
	
	    /* Styles applied to the root element if `color="inherit"`. */
	    colorInherit: {
	      color: 'inherit'
	    },
	
	    /* Styles applied to the root element if `mini={true}` & `variant="[fab | extendedFab]"`. */
	    mini: {
	      width: 40,
	      height: 40
	    },
	
	    /* Styles applied to the root element if `size="small"`. */
	    sizeSmall: {
	      padding: '7px 8px',
	      minWidth: 64,
	      minHeight: 32,
	      fontSize: theme.typography.pxToRem(13)
	    },
	
	    /* Styles applied to the root element if `size="large"`. */
	    sizeLarge: {
	      padding: '8px 24px',
	      minWidth: 112,
	      minHeight: 40,
	      fontSize: theme.typography.pxToRem(15)
	    },
	
	    /* Styles applied to the root element if `fullWidth={true}`. */
	    fullWidth: {
	      width: '100%'
	    }
	  };
	};
	
	exports.styles = styles;
	
	function Button(props) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      color = props.color,
	      disabled = props.disabled,
	      disableFocusRipple = props.disableFocusRipple,
	      focusVisibleClassName = props.focusVisibleClassName,
	      fullWidth = props.fullWidth,
	      mini = props.mini,
	      size = props.size,
	      variant = props.variant,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "color", "disabled", "disableFocusRipple", "focusVisibleClassName", "fullWidth", "mini", "size", "variant"]);
	  var fab = variant === 'fab' || variant === 'extendedFab';
	  var contained = variant === 'contained' || variant === 'raised';
	  var text = variant === 'text' || variant === 'flat';
	  var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.fab, fab), (0, _defineProperty2.default)(_classNames, classes.mini, fab && mini), (0, _defineProperty2.default)(_classNames, classes.extendedFab, variant === 'extendedFab'), (0, _defineProperty2.default)(_classNames, classes.text, text), (0, _defineProperty2.default)(_classNames, classes.textPrimary, text && color === 'primary'), (0, _defineProperty2.default)(_classNames, classes.textSecondary, text && color === 'secondary'), (0, _defineProperty2.default)(_classNames, classes.flat, variant === 'text' || variant === 'flat'), (0, _defineProperty2.default)(_classNames, classes.flatPrimary, (variant === 'text' || variant === 'flat') && color === 'primary'), (0, _defineProperty2.default)(_classNames, classes.flatSecondary, (variant === 'text' || variant === 'flat') && color === 'secondary'), (0, _defineProperty2.default)(_classNames, classes.contained, contained || fab), (0, _defineProperty2.default)(_classNames, classes.containedPrimary, (contained || fab) && color === 'primary'), (0, _defineProperty2.default)(_classNames, classes.containedSecondary, (contained || fab) && color === 'secondary'), (0, _defineProperty2.default)(_classNames, classes.raised, contained || fab), (0, _defineProperty2.default)(_classNames, classes.raisedPrimary, (contained || fab) && color === 'primary'), (0, _defineProperty2.default)(_classNames, classes.raisedSecondary, (contained || fab) && color === 'secondary'), (0, _defineProperty2.default)(_classNames, classes.outlined, variant === 'outlined'), (0, _defineProperty2.default)(_classNames, classes.outlinedPrimary, variant === 'outlined' && color === 'primary'), (0, _defineProperty2.default)(_classNames, classes.outlinedSecondary, variant === 'outlined' && color === 'secondary'), (0, _defineProperty2.default)(_classNames, classes["size".concat((0, _helpers.capitalize)(size))], size !== 'medium'), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.fullWidth, fullWidth), (0, _defineProperty2.default)(_classNames, classes.colorInherit, color === 'inherit'), _classNames), classNameProp);
	  return _react.default.createElement(_ButtonBase.default, (0, _extends2.default)({
	    className: className,
	    disabled: disabled,
	    focusRipple: !disableFocusRipple,
	    focusVisibleClassName: (0, _classnames.default)(classes.focusVisible, focusVisibleClassName)
	  }, other), _react.default.createElement("span", {
	    className: classes.label
	  }, children));
	}
	
	Button.propTypes =  false ? {
	  /**
	   * The content of the button.
	   */
	  children: _propTypes.default.node.isRequired,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The color of the component. It supports those theme colors that make sense for this component.
	   */
	  color: _propTypes.default.oneOf(['default', 'inherit', 'primary', 'secondary']),
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the button will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the  keyboard focus ripple will be disabled.
	   * `disableRipple` must also be true.
	   */
	  disableFocusRipple: _propTypes.default.bool,
	
	  /**
	   * If `true`, the ripple effect will be disabled.
	   */
	  disableRipple: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  focusVisibleClassName: _propTypes.default.string,
	
	  /**
	   * If `true`, the button will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * The URL to link to when the button is clicked.
	   * If defined, an `a` element will be used as the root node.
	   */
	  href: _propTypes.default.string,
	
	  /**
	   * If `true`, and `variant` is `'fab'`, will use mini floating action button styling.
	   */
	  mini: _propTypes.default.bool,
	
	  /**
	   * The size of the button.
	   * `small` is equivalent to the dense button styling.
	   */
	  size: _propTypes.default.oneOf(['small', 'medium', 'large']),
	
	  /**
	   * @ignore
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The variant to use.
	   * __WARNING__: `flat` and `raised` are deprecated.
	   * Instead use `text` and `contained` respectively.
	   * `fab` and `extendedFab` are deprecated.
	   * Instead use `<Fab>` and `<Fab variant="extended">`
	   */
	  variant: (0, _chainPropTypes.default)(_propTypes.default.oneOf(['text', 'outlined', 'contained', 'fab', 'extendedFab', 'flat', 'raised']), function (props) {
	    if (props.variant === 'flat') {
	      return new Error('The `flat` variant will be removed in the next major release. ' + '`text` is equivalent and should be used instead.');
	    }
	
	    if (props.variant === 'raised') {
	      return new Error('The `raised` variant will be removed in the next major release. ' + '`contained` is equivalent and should be used instead.');
	    }
	
	    if (props.variant === 'fab') {
	      return new Error('The `fab` variant will be removed in the next major release. ' + 'The `<Fab>` component is equivalent and should be used instead.');
	    }
	
	    if (props.variant === 'extendedFab') {
	      return new Error('The `fab` variant will be removed in the next major release. ' + 'The `<Fab>` component with `variant="extended"` is equivalent ' + 'and should be used instead.');
	    }
	
	    return null;
	  })
	} : {};
	Button.defaultProps = {
	  color: 'default',
	  component: 'button',
	  disabled: false,
	  disableFocusRipple: false,
	  fullWidth: false,
	  mini: false,
	  size: 'medium',
	  type: 'button',
	  variant: 'text'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiButton'
	})(Button);
	
	exports.default = _default;

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(29));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _keycode = _interopRequireDefault(__webpack_require__(116));
	
	var _ownerWindow = _interopRequireDefault(__webpack_require__(179));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _NoSsr = _interopRequireDefault(__webpack_require__(237));
	
	var _focusVisible = __webpack_require__(592);
	
	var _TouchRipple = _interopRequireDefault(__webpack_require__(590));
	
	var _createRippleHandler = _interopRequireDefault(__webpack_require__(591));
	
	var styles = {
	  /* Styles applied to the root element. */
	  root: {
	    display: 'inline-flex',
	    alignItems: 'center',
	    justifyContent: 'center',
	    position: 'relative',
	    // Remove grey highlight
	    WebkitTapHighlightColor: 'transparent',
	    backgroundColor: 'transparent',
	    // Reset default value
	    // We disable the focus ring for mouse, touch and keyboard users.
	    outline: 'none',
	    border: 0,
	    margin: 0,
	    // Remove the margin in Safari
	    borderRadius: 0,
	    padding: 0,
	    // Remove the padding in Firefox
	    cursor: 'pointer',
	    userSelect: 'none',
	    verticalAlign: 'middle',
	    '-moz-appearance': 'none',
	    // Reset
	    '-webkit-appearance': 'none',
	    // Reset
	    textDecoration: 'none',
	    // So we take precedent over the style of a native <a /> element.
	    color: 'inherit',
	    '&::-moz-focus-inner': {
	      borderStyle: 'none' // Remove Firefox dotted outline.
	
	    },
	    '&$disabled': {
	      pointerEvents: 'none',
	      // Disable link interactions
	      cursor: 'default'
	    }
	  },
	
	  /* Styles applied to the root element if `disabled={true}`. */
	  disabled: {},
	
	  /* Styles applied to the root element if keyboard focused. */
	  focusVisible: {}
	};
	/* istanbul ignore if */
	
	exports.styles = styles;
	
	if (false) {
	  throw new Error('Material-UI: react@16.3.0 or greater is required.');
	}
	/**
	 * `ButtonBase` contains as few styles as possible.
	 * It aims to be a simple building block for creating a button.
	 * It contains a load of style reset and some focus/ripple logic.
	 */
	
	
	var ButtonBase =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(ButtonBase, _React$Component);
	
	  function ButtonBase() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, ButtonBase);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ButtonBase)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    _this.state = {};
	    _this.keyDown = false;
	    _this.focusVisibleCheckTime = 50;
	    _this.focusVisibleMaxCheckTimes = 5;
	    _this.handleMouseDown = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'MouseDown', 'start', function () {
	      clearTimeout(_this.focusVisibleTimeout);
	
	      if (_this.state.focusVisible) {
	        _this.setState({
	          focusVisible: false
	        });
	      }
	    });
	    _this.handleMouseUp = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'MouseUp', 'stop');
	    _this.handleMouseLeave = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'MouseLeave', 'stop', function (event) {
	      if (_this.state.focusVisible) {
	        event.preventDefault();
	      }
	    });
	    _this.handleTouchStart = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'TouchStart', 'start');
	    _this.handleTouchEnd = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'TouchEnd', 'stop');
	    _this.handleTouchMove = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'TouchMove', 'stop');
	    _this.handleBlur = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'Blur', 'stop', function () {
	      clearTimeout(_this.focusVisibleTimeout);
	
	      if (_this.state.focusVisible) {
	        _this.setState({
	          focusVisible: false
	        });
	      }
	    });
	
	    _this.onRippleRef = function (node) {
	      _this.ripple = node;
	    };
	
	    _this.onFocusVisibleHandler = function (event) {
	      _this.keyDown = false;
	
	      _this.setState({
	        focusVisible: true
	      });
	
	      if (_this.props.onFocusVisible) {
	        _this.props.onFocusVisible(event);
	      }
	    };
	
	    _this.handleKeyDown = function (event) {
	      var _this$props = _this.props,
	          component = _this$props.component,
	          focusRipple = _this$props.focusRipple,
	          onKeyDown = _this$props.onKeyDown,
	          onClick = _this$props.onClick;
	      var key = (0, _keycode.default)(event); // Check if key is already down to avoid repeats being counted as multiple activations
	
	      if (focusRipple && !_this.keyDown && _this.state.focusVisible && _this.ripple && key === 'space') {
	        _this.keyDown = true;
	        event.persist();
	
	        _this.ripple.stop(event, function () {
	          _this.ripple.start(event);
	        });
	      }
	
	      if (onKeyDown) {
	        onKeyDown(event);
	      } // Keyboard accessibility for non interactive elements
	
	
	      if (event.target === event.currentTarget && component && component !== 'button' && (key === 'space' || key === 'enter') && !(_this.button.tagName === 'A' && _this.button.href)) {
	        event.preventDefault();
	
	        if (onClick) {
	          onClick(event);
	        }
	      }
	    };
	
	    _this.handleKeyUp = function (event) {
	      if (_this.props.focusRipple && (0, _keycode.default)(event) === 'space' && _this.ripple && _this.state.focusVisible) {
	        _this.keyDown = false;
	        event.persist();
	
	        _this.ripple.stop(event, function () {
	          _this.ripple.pulsate(event);
	        });
	      }
	
	      if (_this.props.onKeyUp) {
	        _this.props.onKeyUp(event);
	      }
	    };
	
	    _this.handleFocus = function (event) {
	      if (_this.props.disabled) {
	        return;
	      } // Fix for https://github.com/facebook/react/issues/7769
	
	
	      if (!_this.button) {
	        _this.button = event.currentTarget;
	      }
	
	      event.persist();
	      (0, _focusVisible.detectFocusVisible)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), _this.button, function () {
	        _this.onFocusVisibleHandler(event);
	      });
	
	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	    };
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(ButtonBase, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      this.button = _reactDom.default.findDOMNode(this);
	      (0, _focusVisible.listenForFocusKeys)((0, _ownerWindow.default)(this.button));
	
	      if (this.props.action) {
	        this.props.action({
	          focusVisible: function focusVisible() {
	            _this2.setState({
	              focusVisible: true
	            });
	
	            _this2.button.focus();
	          }
	        });
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps, prevState) {
	      if (this.props.focusRipple && !this.props.disableRipple && !prevState.focusVisible && this.state.focusVisible) {
	        this.ripple.pulsate();
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      clearTimeout(this.focusVisibleTimeout);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _classNames;
	
	      var _this$props2 = this.props,
	          action = _this$props2.action,
	          buttonRef = _this$props2.buttonRef,
	          centerRipple = _this$props2.centerRipple,
	          children = _this$props2.children,
	          classes = _this$props2.classes,
	          classNameProp = _this$props2.className,
	          component = _this$props2.component,
	          disabled = _this$props2.disabled,
	          disableRipple = _this$props2.disableRipple,
	          disableTouchRipple = _this$props2.disableTouchRipple,
	          focusRipple = _this$props2.focusRipple,
	          focusVisibleClassName = _this$props2.focusVisibleClassName,
	          onBlur = _this$props2.onBlur,
	          onFocus = _this$props2.onFocus,
	          onFocusVisible = _this$props2.onFocusVisible,
	          onKeyDown = _this$props2.onKeyDown,
	          onKeyUp = _this$props2.onKeyUp,
	          onMouseDown = _this$props2.onMouseDown,
	          onMouseLeave = _this$props2.onMouseLeave,
	          onMouseUp = _this$props2.onMouseUp,
	          onTouchEnd = _this$props2.onTouchEnd,
	          onTouchMove = _this$props2.onTouchMove,
	          onTouchStart = _this$props2.onTouchStart,
	          tabIndex = _this$props2.tabIndex,
	          TouchRippleProps = _this$props2.TouchRippleProps,
	          type = _this$props2.type,
	          other = (0, _objectWithoutProperties2.default)(_this$props2, ["action", "buttonRef", "centerRipple", "children", "classes", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "onBlur", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "type"]);
	      var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.focusVisible, this.state.focusVisible), (0, _defineProperty2.default)(_classNames, focusVisibleClassName, this.state.focusVisible), _classNames), classNameProp);
	      var ComponentProp = component;
	
	      if (ComponentProp === 'button' && other.href) {
	        ComponentProp = 'a';
	      }
	
	      var buttonProps = {};
	
	      if (ComponentProp === 'button') {
	        buttonProps.type = type || 'button';
	        buttonProps.disabled = disabled;
	      } else {
	        buttonProps.role = 'button';
	      }
	
	      return _react.default.createElement(ComponentProp, (0, _extends2.default)({
	        className: className,
	        onBlur: this.handleBlur,
	        onFocus: this.handleFocus,
	        onKeyDown: this.handleKeyDown,
	        onKeyUp: this.handleKeyUp,
	        onMouseDown: this.handleMouseDown,
	        onMouseLeave: this.handleMouseLeave,
	        onMouseUp: this.handleMouseUp,
	        onTouchEnd: this.handleTouchEnd,
	        onTouchMove: this.handleTouchMove,
	        onTouchStart: this.handleTouchStart,
	        ref: buttonRef,
	        tabIndex: disabled ? '-1' : tabIndex
	      }, buttonProps, other), children, !disableRipple && !disabled ? _react.default.createElement(_NoSsr.default, null, _react.default.createElement(_TouchRipple.default, (0, _extends2.default)({
	        innerRef: this.onRippleRef,
	        center: centerRipple
	      }, TouchRippleProps))) : null);
	    }
	  }], [{
	    key: "getDerivedStateFromProps",
	    value: function getDerivedStateFromProps(nextProps, prevState) {
	      if (typeof prevState.focusVisible === 'undefined') {
	        return {
	          focusVisible: false,
	          lastDisabled: nextProps.disabled
	        };
	      } // The blur won't fire when the disabled state is set on a focused input.
	      // We need to book keep the focused state manually.
	
	
	      if (!prevState.prevState && nextProps.disabled && prevState.focusVisible) {
	        return {
	          focusVisible: false,
	          lastDisabled: nextProps.disabled
	        };
	      }
	
	      return {
	        lastDisabled: nextProps.disabled
	      };
	    }
	  }]);
	  return ButtonBase;
	}(_react.default.Component);
	
	ButtonBase.propTypes =  false ? {
	  /**
	   * Callback fired when the component mounts.
	   * This is useful when you want to trigger an action programmatically.
	   * It currently only supports `focusVisible()` action.
	   *
	   * @param {object} actions This object contains all possible actions
	   * that can be triggered programmatically.
	   */
	  action: _propTypes.default.func,
	
	  /**
	   * Use that property to pass a ref callback to the native button component.
	   */
	  buttonRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the ripples will be centered.
	   * They won't start at the cursor interaction position.
	   */
	  centerRipple: _propTypes.default.bool,
	
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the base button will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the ripple effect will be disabled.
	   */
	  disableRipple: _propTypes.default.bool,
	
	  /**
	   * If `true`, the touch ripple effect will be disabled.
	   */
	  disableTouchRipple: _propTypes.default.bool,
	
	  /**
	   * If `true`, the base button will have a keyboard focus ripple.
	   * `disableRipple` must also be `false`.
	   */
	  focusRipple: _propTypes.default.bool,
	
	  /**
	   * This property can help a person know which element has the keyboard focus.
	   * The class name will be applied when the element gain the focus through a keyboard interaction.
	   * It's a polyfill for the [CSS :focus-visible feature](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
	   * The rational for using this feature [is explain here](https://github.com/WICG/focus-visible/blob/master/explainer.md).
	   */
	  focusVisibleClassName: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  onBlur: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onClick: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onFocus: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component is focused with a keyboard.
	   * We trigger a `onFocus` callback too.
	   */
	  onFocusVisible: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onKeyDown: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onKeyUp: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onMouseDown: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onMouseLeave: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onMouseUp: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onTouchEnd: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onTouchMove: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onTouchStart: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  role: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  tabIndex: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
	
	  /**
	   * Properties applied to the `TouchRipple` element.
	   */
	  TouchRippleProps: _propTypes.default.object,
	
	  /**
	   * Used to control the button's purpose.
	   * This property passes the value to the `type` attribute of the native button component.
	   * Valid property values include `button`, `submit`, and `reset`.
	   */
	  type: _propTypes.default.string
	} : {};
	ButtonBase.defaultProps = {
	  centerRipple: false,
	  component: 'button',
	  disableRipple: false,
	  disableTouchRipple: false,
	  focusRipple: false,
	  tabIndex: '0',
	  type: 'button'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiButtonBase'
	})(ButtonBase);
	
	exports.default = _default;

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _Transition = _interopRequireDefault(__webpack_require__(130));
	
	/**
	 * @ignore - internal component.
	 */
	var Ripple =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Ripple, _React$Component);
	
	  function Ripple() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Ripple);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Ripple)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    _this.state = {
	      visible: false,
	      leaving: false
	    };
	
	    _this.handleEnter = function () {
	      _this.setState({
	        visible: true
	      });
	    };
	
	    _this.handleExit = function () {
	      _this.setState({
	        leaving: true
	      });
	    };
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(Ripple, [{
	    key: "render",
	    value: function render() {
	      var _classNames, _classNames2;
	
	      var _this$props = this.props,
	          classes = _this$props.classes,
	          classNameProp = _this$props.className,
	          pulsate = _this$props.pulsate,
	          rippleX = _this$props.rippleX,
	          rippleY = _this$props.rippleY,
	          rippleSize = _this$props.rippleSize,
	          other = (0, _objectWithoutProperties2.default)(_this$props, ["classes", "className", "pulsate", "rippleX", "rippleY", "rippleSize"]);
	      var _this$state = this.state,
	          visible = _this$state.visible,
	          leaving = _this$state.leaving;
	      var rippleClassName = (0, _classnames.default)(classes.ripple, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.rippleVisible, visible), (0, _defineProperty2.default)(_classNames, classes.ripplePulsate, pulsate), _classNames), classNameProp);
	      var rippleStyles = {
	        width: rippleSize,
	        height: rippleSize,
	        top: -(rippleSize / 2) + rippleY,
	        left: -(rippleSize / 2) + rippleX
	      };
	      var childClassName = (0, _classnames.default)(classes.child, (_classNames2 = {}, (0, _defineProperty2.default)(_classNames2, classes.childLeaving, leaving), (0, _defineProperty2.default)(_classNames2, classes.childPulsate, pulsate), _classNames2));
	      return _react.default.createElement(_Transition.default, (0, _extends2.default)({
	        onEnter: this.handleEnter,
	        onExit: this.handleExit
	      }, other), _react.default.createElement("span", {
	        className: rippleClassName,
	        style: rippleStyles
	      }, _react.default.createElement("span", {
	        className: childClassName
	      })));
	    }
	  }]);
	  return Ripple;
	}(_react.default.Component);
	
	Ripple.propTypes =  false ? {
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
	   */
	  pulsate: _propTypes.default.bool,
	
	  /**
	   * Diameter of the ripple.
	   */
	  rippleSize: _propTypes.default.number,
	
	  /**
	   * Horizontal position of the ripple center.
	   */
	  rippleX: _propTypes.default.number,
	
	  /**
	   * Vertical position of the ripple center.
	   */
	  rippleY: _propTypes.default.number
	} : {};
	Ripple.defaultProps = {
	  pulsate: false
	};
	var _default = Ripple;
	exports.default = _default;

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = exports.DELAY_RIPPLE = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(84));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(29));
	
	var _TransitionGroup = _interopRequireDefault(__webpack_require__(1741));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _Ripple = _interopRequireDefault(__webpack_require__(589));
	
	var DURATION = 550;
	var DELAY_RIPPLE = 80;
	exports.DELAY_RIPPLE = DELAY_RIPPLE;
	
	var styles = function styles(theme) {
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      display: 'block',
	      position: 'absolute',
	      overflow: 'hidden',
	      borderRadius: 'inherit',
	      width: '100%',
	      height: '100%',
	      left: 0,
	      top: 0,
	      pointerEvents: 'none',
	      zIndex: 0
	    },
	
	    /* Styles applied to the internal `Ripple` components `ripple` class. */
	    ripple: {
	      width: 50,
	      height: 50,
	      left: 0,
	      top: 0,
	      opacity: 0,
	      position: 'absolute'
	    },
	
	    /* Styles applied to the internal `Ripple` components `rippleVisible` class. */
	    rippleVisible: {
	      opacity: 0.3,
	      transform: 'scale(1)',
	      animation: "mui-ripple-enter ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
	    },
	
	    /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */
	    ripplePulsate: {
	      animationDuration: "".concat(theme.transitions.duration.shorter, "ms")
	    },
	
	    /* Styles applied to the internal `Ripple` components `child` class. */
	    child: {
	      opacity: 1,
	      display: 'block',
	      width: '100%',
	      height: '100%',
	      borderRadius: '50%',
	      backgroundColor: 'currentColor'
	    },
	
	    /* Styles applied to the internal `Ripple` components `childLeaving` class. */
	    childLeaving: {
	      opacity: 0,
	      animation: "mui-ripple-exit ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
	    },
	
	    /* Styles applied to the internal `Ripple` components `childPulsate` class. */
	    childPulsate: {
	      position: 'absolute',
	      left: 0,
	      top: 0,
	      animation: "mui-ripple-pulsate 2500ms ".concat(theme.transitions.easing.easeInOut, " 200ms infinite")
	    },
	    '@keyframes mui-ripple-enter': {
	      '0%': {
	        transform: 'scale(0)',
	        opacity: 0.1
	      },
	      '100%': {
	        transform: 'scale(1)',
	        opacity: 0.3
	      }
	    },
	    '@keyframes mui-ripple-exit': {
	      '0%': {
	        opacity: 1
	      },
	      '100%': {
	        opacity: 0
	      }
	    },
	    '@keyframes mui-ripple-pulsate': {
	      '0%': {
	        transform: 'scale(1)'
	      },
	      '50%': {
	        transform: 'scale(0.92)'
	      },
	      '100%': {
	        transform: 'scale(1)'
	      }
	    }
	  };
	};
	
	exports.styles = styles;
	
	var TouchRipple =
	/*#__PURE__*/
	function (_React$PureComponent) {
	  (0, _inherits2.default)(TouchRipple, _React$PureComponent);
	
	  function TouchRipple() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, TouchRipple);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TouchRipple)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    _this.state = {
	      // eslint-disable-next-line react/no-unused-state
	      nextKey: 0,
	      ripples: []
	    };
	
	    _this.pulsate = function () {
	      _this.start({}, {
	        pulsate: true
	      });
	    };
	
	    _this.start = function () {
	      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var cb = arguments.length > 2 ? arguments[2] : undefined;
	      var _options$pulsate = options.pulsate,
	          pulsate = _options$pulsate === void 0 ? false : _options$pulsate,
	          _options$center = options.center,
	          center = _options$center === void 0 ? _this.props.center || options.pulsate : _options$center,
	          _options$fakeElement = options.fakeElement,
	          fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;
	
	      if (event.type === 'mousedown' && _this.ignoringMouseDown) {
	        _this.ignoringMouseDown = false;
	        return;
	      }
	
	      if (event.type === 'touchstart') {
	        _this.ignoringMouseDown = true;
	      }
	
	      var element = fakeElement ? null : _reactDom.default.findDOMNode((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));
	      var rect = element ? element.getBoundingClientRect() : {
	        width: 0,
	        height: 0,
	        left: 0,
	        top: 0
	      }; // Get the size of the ripple
	
	      var rippleX;
	      var rippleY;
	      var rippleSize;
	
	      if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
	        rippleX = Math.round(rect.width / 2);
	        rippleY = Math.round(rect.height / 2);
	      } else {
	        var clientX = event.clientX ? event.clientX : event.touches[0].clientX;
	        var clientY = event.clientY ? event.clientY : event.touches[0].clientY;
	        rippleX = Math.round(clientX - rect.left);
	        rippleY = Math.round(clientY - rect.top);
	      }
	
	      if (center) {
	        rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.
	
	        if (rippleSize % 2 === 0) {
	          rippleSize += 1;
	        }
	      } else {
	        var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
	        var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
	        rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
	      } // Touche devices
	
	
	      if (event.touches) {
	        // Prepare the ripple effect.
	        _this.startTimerCommit = function () {
	          _this.startCommit({
	            pulsate: pulsate,
	            rippleX: rippleX,
	            rippleY: rippleY,
	            rippleSize: rippleSize,
	            cb: cb
	          });
	        }; // Deplay the execution of the ripple effect.
	
	
	        _this.startTimer = setTimeout(function () {
	          if (_this.startTimerCommit) {
	            _this.startTimerCommit();
	
	            _this.startTimerCommit = null;
	          }
	        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.
	      } else {
	        _this.startCommit({
	          pulsate: pulsate,
	          rippleX: rippleX,
	          rippleY: rippleY,
	          rippleSize: rippleSize,
	          cb: cb
	        });
	      }
	    };
	
	    _this.startCommit = function (params) {
	      var pulsate = params.pulsate,
	          rippleX = params.rippleX,
	          rippleY = params.rippleY,
	          rippleSize = params.rippleSize,
	          cb = params.cb;
	
	      _this.setState(function (state) {
	        return {
	          nextKey: state.nextKey + 1,
	          ripples: (0, _toConsumableArray2.default)(state.ripples).concat([_react.default.createElement(_Ripple.default, {
	            key: state.nextKey,
	            classes: _this.props.classes,
	            timeout: {
	              exit: DURATION,
	              enter: DURATION
	            },
	            pulsate: pulsate,
	            rippleX: rippleX,
	            rippleY: rippleY,
	            rippleSize: rippleSize
	          })])
	        };
	      }, cb);
	    };
	
	    _this.stop = function (event, cb) {
	      clearTimeout(_this.startTimer);
	      var ripples = _this.state.ripples; // The touch interaction occurs too quickly.
	      // We still want to show ripple effect.
	
	      if (event.type === 'touchend' && _this.startTimerCommit) {
	        event.persist();
	
	        _this.startTimerCommit();
	
	        _this.startTimerCommit = null;
	        _this.startTimer = setTimeout(function () {
	          _this.stop(event, cb);
	        }, 0);
	        return;
	      }
	
	      _this.startTimerCommit = null;
	
	      if (ripples && ripples.length) {
	        _this.setState({
	          ripples: ripples.slice(1)
	        }, cb);
	      }
	    };
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(TouchRipple, [{
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      clearTimeout(this.startTimer);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          center = _this$props.center,
	          classes = _this$props.classes,
	          className = _this$props.className,
	          other = (0, _objectWithoutProperties2.default)(_this$props, ["center", "classes", "className"]);
	      return _react.default.createElement(_TransitionGroup.default, (0, _extends2.default)({
	        component: "span",
	        enter: true,
	        exit: true,
	        className: (0, _classnames.default)(classes.root, className)
	      }, other), this.state.ripples);
	    }
	  }]);
	  return TouchRipple;
	}(_react.default.PureComponent);
	
	TouchRipple.propTypes =  false ? {
	  /**
	   * If `true`, the ripple starts at the center of the component
	   * rather than at the point of interaction.
	   */
	  center: _propTypes.default.bool,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string
	} : {};
	TouchRipple.defaultProps = {
	  center: false
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  flip: false,
	  name: 'MuiTouchRipple'
	})(TouchRipple);
	
	exports.default = _default;

/***/ }),
/* 591 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	/* eslint-disable import/no-mutable-exports */
	var createRippleHandler = function createRippleHandler(instance, eventName, action, cb) {
	  return function (event) {
	    if (cb) {
	      cb.call(instance, event);
	    }
	
	    var ignore = false; // Ignore events that have been `event.preventDefault()` marked.
	
	    if (event.defaultPrevented) {
	      ignore = true;
	    }
	
	    if (instance.props.disableTouchRipple && eventName !== 'Blur') {
	      ignore = true;
	    }
	
	    if (!ignore && instance.ripple) {
	      instance.ripple[action](event);
	    }
	
	    if (typeof instance.props["on".concat(eventName)] === 'function') {
	      instance.props["on".concat(eventName)](event);
	    }
	
	    return true;
	  };
	};
	/* istanbul ignore if */
	
	
	if (typeof window === 'undefined') {
	  createRippleHandler = function createRippleHandler() {
	    return function () {};
	  };
	}
	
	var _default = createRippleHandler;
	exports.default = _default;

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.detectFocusVisible = detectFocusVisible;
	exports.listenForFocusKeys = listenForFocusKeys;
	
	var _keycode = _interopRequireDefault(__webpack_require__(116));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(56));
	
	var internal = {
	  focusKeyPressed: false,
	  keyUpEventTimeout: -1
	};
	
	function findActiveElement(doc) {
	  var activeElement = doc.activeElement;
	
	  while (activeElement && activeElement.shadowRoot && activeElement.shadowRoot.activeElement) {
	    activeElement = activeElement.shadowRoot.activeElement;
	  }
	
	  return activeElement;
	}
	
	function detectFocusVisible(instance, element, callback) {
	  var attempt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
	   false ? (0, _warning.default)(instance.focusVisibleCheckTime, 'Material-UI: missing instance.focusVisibleCheckTime.') : void 0;
	   false ? (0, _warning.default)(instance.focusVisibleMaxCheckTimes, 'Material-UI: missing instance.focusVisibleMaxCheckTimes.') : void 0;
	  instance.focusVisibleTimeout = setTimeout(function () {
	    var doc = (0, _ownerDocument.default)(element);
	    var activeElement = findActiveElement(doc);
	
	    if (internal.focusKeyPressed && (activeElement === element || element.contains(activeElement))) {
	      callback();
	    } else if (attempt < instance.focusVisibleMaxCheckTimes) {
	      detectFocusVisible(instance, element, callback, attempt + 1);
	    }
	  }, instance.focusVisibleCheckTime);
	}
	
	var FOCUS_KEYS = ['tab', 'enter', 'space', 'esc', 'up', 'down', 'left', 'right'];
	
	function isFocusKey(event) {
	  return FOCUS_KEYS.indexOf((0, _keycode.default)(event)) > -1;
	}
	
	var handleKeyUpEvent = function handleKeyUpEvent(event) {
	  if (isFocusKey(event)) {
	    internal.focusKeyPressed = true; // Let's consider that the user is using a keyboard during a window frame of 1s.
	
	    clearTimeout(internal.keyUpEventTimeout);
	    internal.keyUpEventTimeout = setTimeout(function () {
	      internal.focusKeyPressed = false;
	    }, 1e3);
	  }
	};
	
	function listenForFocusKeys(win) {
	  // The event listener will only be added once per window.
	  // Duplicate event listeners will be ignored by addEventListener.
	  // Also, this logic is client side only, we don't need a teardown.
	  win.addEventListener('keyup', handleKeyUpEvent);
	}

/***/ }),
/* 593 */,
/* 594 */,
/* 595 */,
/* 596 */,
/* 597 */,
/* 598 */,
/* 599 */,
/* 600 */,
/* 601 */,
/* 602 */,
/* 603 */,
/* 604 */,
/* 605 */,
/* 606 */,
/* 607 */,
/* 608 */,
/* 609 */,
/* 610 */,
/* 611 */,
/* 612 */,
/* 613 */,
/* 614 */,
/* 615 */,
/* 616 */,
/* 617 */,
/* 618 */,
/* 619 */,
/* 620 */,
/* 621 */,
/* 622 */,
/* 623 */,
/* 624 */,
/* 625 */,
/* 626 */,
/* 627 */,
/* 628 */,
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _Transition = _interopRequireDefault(__webpack_require__(130));
	
	var _transitions = __webpack_require__(62);
	
	var _withTheme = _interopRequireDefault(__webpack_require__(74));
	
	var _utils = __webpack_require__(104);
	
	// @inheritedComponent Transition
	var styles = {
	  entering: {
	    opacity: 1
	  },
	  entered: {
	    opacity: 1
	  }
	};
	/**
	 * The Fade transition is used by the [Modal](/utils/modal/) component.
	 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
	 */
	
	var Fade =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Fade, _React$Component);
	
	  function Fade() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Fade);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Fade)).call.apply(_getPrototypeOf2, [this].concat(args)));
	
	    _this.handleEnter = function (node) {
	      var theme = _this.props.theme;
	      (0, _utils.reflow)(node); // So the animation always start from the start.
	
	      var transitionProps = (0, _utils.getTransitionProps)(_this.props, {
	        mode: 'enter'
	      });
	      node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
	      node.style.transition = theme.transitions.create('opacity', transitionProps);
	
	      if (_this.props.onEnter) {
	        _this.props.onEnter(node);
	      }
	    };
	
	    _this.handleExit = function (node) {
	      var theme = _this.props.theme;
	      var transitionProps = (0, _utils.getTransitionProps)(_this.props, {
	        mode: 'exit'
	      });
	      node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
	      node.style.transition = theme.transitions.create('opacity', transitionProps);
	
	      if (_this.props.onExit) {
	        _this.props.onExit(node);
	      }
	    };
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(Fade, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          children = _this$props.children,
	          onEnter = _this$props.onEnter,
	          onExit = _this$props.onExit,
	          styleProp = _this$props.style,
	          theme = _this$props.theme,
	          other = (0, _objectWithoutProperties2.default)(_this$props, ["children", "onEnter", "onExit", "style", "theme"]);
	      var style = (0, _extends2.default)({}, styleProp, _react.default.isValidElement(children) ? children.props.style : {});
	      return _react.default.createElement(_Transition.default, (0, _extends2.default)({
	        appear: true,
	        onEnter: this.handleEnter,
	        onExit: this.handleExit
	      }, other), function (state, childProps) {
	        return _react.default.cloneElement(children, (0, _extends2.default)({
	          style: (0, _extends2.default)({
	            opacity: 0,
	            willChange: 'opacity'
	          }, styles[state], style)
	        }, childProps));
	      });
	    }
	  }]);
	  return Fade;
	}(_react.default.Component);
	
	Fade.propTypes =  false ? {
	  /**
	   * A single child content element.
	   */
	  children: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func]),
	
	  /**
	   * If `true`, the component will transition in.
	   */
	  in: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  onEnter: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onExit: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  style: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  theme: _propTypes.default.object.isRequired,
	
	  /**
	   * The duration for the transition, in milliseconds.
	   * You may specify a single timeout for all transitions, or individually with an object.
	   */
	  timeout: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	    enter: _propTypes.default.number,
	    exit: _propTypes.default.number
	  })])
	} : {};
	Fade.defaultProps = {
	  timeout: {
	    enter: _transitions.duration.enteringScreen,
	    exit: _transitions.duration.leavingScreen
	  }
	};
	
	var _default = (0, _withTheme.default)()(Fade);
	
	exports.default = _default;

/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _InputBase = _interopRequireDefault(__webpack_require__(132));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	// @inheritedComponent InputBase
	var styles = function styles(theme) {
	  var light = theme.palette.type === 'light';
	  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
	  var backgroundColor = light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)';
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      position: 'relative',
	      backgroundColor: backgroundColor,
	      borderTopLeftRadius: theme.shape.borderRadius,
	      borderTopRightRadius: theme.shape.borderRadius,
	      transition: theme.transitions.create('background-color', {
	        duration: theme.transitions.duration.shorter,
	        easing: theme.transitions.easing.easeOut
	      }),
	      '&:hover': {
	        backgroundColor: light ? 'rgba(0, 0, 0, 0.13)' : 'rgba(255, 255, 255, 0.13)',
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: backgroundColor
	        }
	      },
	      '&$focused': {
	        backgroundColor: light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)'
	      },
	      '&$disabled': {
	        backgroundColor: light ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)'
	      }
	    },
	
	    /* Styles applied to the root element if `disableUnderline={false}`. */
	    underline: {
	      '&:after': {
	        borderBottom: "2px solid ".concat(theme.palette.primary[light ? 'dark' : 'light']),
	        left: 0,
	        bottom: 0,
	        // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
	        content: '""',
	        position: 'absolute',
	        right: 0,
	        transform: 'scaleX(0)',
	        transition: theme.transitions.create('transform', {
	          duration: theme.transitions.duration.shorter,
	          easing: theme.transitions.easing.easeOut
	        }),
	        pointerEvents: 'none' // Transparent to the hover style.
	
	      },
	      '&$focused:after': {
	        transform: 'scaleX(1)'
	      },
	      '&$error:after': {
	        borderBottomColor: theme.palette.error.main,
	        transform: 'scaleX(1)' // error is always underlined in red
	
	      },
	      '&:before': {
	        borderBottom: "1px solid ".concat(bottomLineColor),
	        left: 0,
	        bottom: 0,
	        // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
	        content: '"\\00a0"',
	        position: 'absolute',
	        right: 0,
	        transition: theme.transitions.create('border-bottom-color', {
	          duration: theme.transitions.duration.shorter
	        }),
	        pointerEvents: 'none' // Transparent to the hover style.
	
	      },
	      '&:hover:not($disabled):not($focused):not($error):before': {
	        borderBottom: "1px solid ".concat(theme.palette.text.primary)
	      },
	      '&$disabled:before': {
	        borderBottom: "1px dotted ".concat(bottomLineColor)
	      }
	    },
	
	    /* Styles applied to the root element if the component is focused. */
	    focused: {},
	
	    /* Styles applied to the root element if `disabled={true}`. */
	    disabled: {},
	
	    /* Styles applied to the root element if `startAdornment` is provided. */
	    adornedStart: {
	      paddingLeft: 12
	    },
	
	    /* Styles applied to the root element if `endAdornment` is provided. */
	    adornedEnd: {
	      paddingRight: 12
	    },
	
	    /* Styles applied to the root element if `error={true}`. */
	    error: {},
	
	    /* Styles applied to the root element if `multiline={true}`. */
	    multiline: {
	      padding: '27px 12px 10px',
	      boxSizing: 'border-box' // Prevent padding issue with fullWidth.
	
	    },
	
	    /* Styles applied to the `input` element. */
	    input: {
	      padding: '27px 12px 10px'
	    },
	
	    /* Styles applied to the `input` element if `margin="dense"`. */
	    inputMarginDense: {
	      paddingTop: 24,
	      paddingBottom: 6
	    },
	
	    /* Styles applied to the `input` element if `multiline={true}`. */
	    inputMultiline: {
	      padding: 0
	    },
	
	    /* Styles applied to the `input` element if `startAdornment` is provided. */
	    inputAdornedStart: {
	      paddingLeft: 0
	    },
	
	    /* Styles applied to the `input` element if `endAdornment` is provided. */
	    inputAdornedEnd: {
	      paddingRight: 0
	    }
	  };
	};
	
	exports.styles = styles;
	
	function FilledInput(props) {
	  var disableUnderline = props.disableUnderline,
	      classes = props.classes,
	      other = (0, _objectWithoutProperties2.default)(props, ["disableUnderline", "classes"]);
	  return _react.default.createElement(_InputBase.default, (0, _extends2.default)({
	    classes: (0, _extends2.default)({}, classes, {
	      root: (0, _classnames.default)(classes.root, (0, _defineProperty2.default)({}, classes.underline, !disableUnderline)),
	      underline: null
	    })
	  }, other));
	}
	
	FilledInput.propTypes =  false ? {
	  /**
	   * This property helps users to fill forms faster, especially on mobile devices.
	   * The name can be confusing, as it's more like an autofill.
	   * You can learn more about it here:
	   * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill
	   */
	  autoComplete: _propTypes.default.string,
	
	  /**
	   * If `true`, the input will be focused during the first mount.
	   */
	  autoFocus: _propTypes.default.bool,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The CSS class name of the wrapper element.
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The default input value, useful when not controlling the component.
	   */
	  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object]))]),
	
	  /**
	   * If `true`, the input will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will not have an underline.
	   */
	  disableUnderline: _propTypes.default.bool,
	
	  /**
	   * End `InputAdornment` for this component.
	   */
	  endAdornment: _propTypes.default.node,
	
	  /**
	   * If `true`, the input will indicate an error. This is normally obtained via context from
	   * FormControl.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * The id of the `input` element.
	   */
	  id: _propTypes.default.string,
	
	  /**
	   * The component used for the native input.
	   * Either a string to use a DOM element or a component.
	   */
	  inputComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Attributes applied to the `input` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * Use that property to pass a ref callback to the native input component.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   */
	  margin: _propTypes.default.oneOf(['dense', 'none']),
	
	  /**
	   * If `true`, a textarea element will be rendered.
	   */
	  multiline: _propTypes.default.bool,
	
	  /**
	   * Name attribute of the `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * Callback fired when the value is changed.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * The short hint displayed in the input before the user enters a value.
	   */
	  placeholder: _propTypes.default.string,
	
	  /**
	   * It prevents the user from changing the value of the field
	   * (not from interacting with the field).
	   */
	  readOnly: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will be required.
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  rowsMax: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Start `InputAdornment` for this component.
	   */
	  startAdornment: _propTypes.default.node,
	
	  /**
	   * Type of the input element. It should be a valid HTML5 input type.
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The input value, required for a controlled component.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object]))])
	} : {};
	_InputBase.default.defaultProps = {
	  fullWidth: false,
	  inputComponent: 'input',
	  multiline: false,
	  type: 'text'
	};
	FilledInput.muiName = 'Input';
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiFilledInput'
	})(FilledInput);
	
	exports.default = _default;

/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _utils = __webpack_require__(233);
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _helpers = __webpack_require__(19);
	
	var _reactHelpers = __webpack_require__(45);
	
	var _FormControlContext = _interopRequireDefault(__webpack_require__(231));
	
	var styles = {
	  /* Styles applied to the root element. */
	  root: {
	    display: 'inline-flex',
	    flexDirection: 'column',
	    position: 'relative',
	    // Reset fieldset default style.
	    minWidth: 0,
	    padding: 0,
	    margin: 0,
	    border: 0,
	    verticalAlign: 'top' // Fix alignment issue on Safari.
	
	  },
	
	  /* Styles applied to the root element if `margin="normal"`. */
	  marginNormal: {
	    marginTop: 16,
	    marginBottom: 8
	  },
	
	  /* Styles applied to the root element if `margin="dense"`. */
	  marginDense: {
	    marginTop: 8,
	    marginBottom: 4
	  },
	
	  /* Styles applied to the root element if `fullWidth={true}`. */
	  fullWidth: {
	    width: '100%'
	  }
	};
	/**
	 * Provides context such as filled/focused/error/required for form inputs.
	 * Relying on the context provides high flexibilty and ensures that the state always stays
	 * consistent across the children of the `FormControl`.
	 * This context is used by the following components:
	 *  - FormLabel
	 *  - FormHelperText
	 *  - Input
	 *  - InputLabel
	 *
	 * ⚠️ Only one input can be used within a FormControl.
	 */
	
	exports.styles = styles;
	
	var FormControl =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(FormControl, _React$Component);
	  (0, _createClass2.default)(FormControl, null, [{
	    key: "getDerivedStateFromProps",
	    value: function getDerivedStateFromProps(props, state) {
	      if (props.disabled && state.focused) {
	        return {
	          focused: false
	        };
	      }
	
	      return null;
	    }
	  }]);
	
	  function FormControl(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, FormControl);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FormControl).call(this));
	
	    _this.handleFocus = function () {
	      _this.setState(function (state) {
	        return !state.focused ? {
	          focused: true
	        } : null;
	      });
	    };
	
	    _this.handleBlur = function () {
	      _this.setState(function (state) {
	        return state.focused ? {
	          focused: false
	        } : null;
	      });
	    };
	
	    _this.handleDirty = function () {
	      if (!_this.state.filled) {
	        _this.setState({
	          filled: true
	        });
	      }
	    };
	
	    _this.handleClean = function () {
	      if (_this.state.filled) {
	        _this.setState({
	          filled: false
	        });
	      }
	    };
	
	    _this.state = {
	      adornedStart: false,
	      filled: false,
	      focused: false
	    }; // We need to iterate through the children and find the Input in order
	    // to fully support server side rendering.
	
	    var children = props.children;
	
	    if (children) {
	      _react.default.Children.forEach(children, function (child) {
	        if (!(0, _reactHelpers.isMuiElement)(child, ['Input', 'Select'])) {
	          return;
	        }
	
	        if ((0, _utils.isFilled)(child.props, true)) {
	          _this.state.filled = true;
	        }
	
	        var input = (0, _reactHelpers.isMuiElement)(child, ['Select']) ? child.props.input : child;
	
	        if (input && (0, _utils.isAdornedStart)(input.props)) {
	          _this.state.adornedStart = true;
	        }
	      });
	    }
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(FormControl, [{
	    key: "render",
	    value: function render() {
	      var _classNames;
	
	      var _this$props = this.props,
	          classes = _this$props.classes,
	          className = _this$props.className,
	          Component = _this$props.component,
	          disabled = _this$props.disabled,
	          error = _this$props.error,
	          fullWidth = _this$props.fullWidth,
	          margin = _this$props.margin,
	          required = _this$props.required,
	          variant = _this$props.variant,
	          other = (0, _objectWithoutProperties2.default)(_this$props, ["classes", "className", "component", "disabled", "error", "fullWidth", "margin", "required", "variant"]);
	      var _this$state = this.state,
	          adornedStart = _this$state.adornedStart,
	          filled = _this$state.filled,
	          focused = _this$state.focused;
	      var childContext = {
	        adornedStart: adornedStart,
	        disabled: disabled,
	        error: error,
	        filled: filled,
	        focused: focused,
	        margin: margin,
	        onBlur: this.handleBlur,
	        onEmpty: this.handleClean,
	        onFilled: this.handleDirty,
	        onFocus: this.handleFocus,
	        required: required,
	        variant: variant
	      };
	      return _react.default.createElement(_FormControlContext.default.Provider, {
	        value: childContext
	      }, _react.default.createElement(Component, (0, _extends2.default)({
	        className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes["margin".concat((0, _helpers.capitalize)(margin))], margin !== 'none'), (0, _defineProperty2.default)(_classNames, classes.fullWidth, fullWidth), _classNames), className)
	      }, other)));
	    }
	  }]);
	  return FormControl;
	}(_react.default.Component);
	
	FormControl.propTypes =  false ? {
	  /**
	   * The contents of the form control.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the label, input and helper text should be displayed in a disabled state.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label should be displayed in an error state.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the component will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
	   */
	  margin: _propTypes.default.oneOf(['none', 'dense', 'normal']),
	
	  /**
	   * If `true`, the label will indicate that the input is required.
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * The variant to use.
	   */
	  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])
	} : {};
	FormControl.defaultProps = {
	  component: 'div',
	  disabled: false,
	  error: false,
	  fullWidth: false,
	  margin: 'none',
	  required: false,
	  variant: 'standard'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiFormControl'
	})(FormControl);
	
	exports.default = _default;

/***/ }),
/* 632 */,
/* 633 */,
/* 634 */,
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _formControlState = _interopRequireDefault(__webpack_require__(101));
	
	var _withFormControlContext = _interopRequireDefault(__webpack_require__(73));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var styles = function styles(theme) {
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      color: theme.palette.text.secondary,
	      fontFamily: theme.typography.fontFamily,
	      fontSize: theme.typography.pxToRem(12),
	      textAlign: 'left',
	      marginTop: 8,
	      lineHeight: '1em',
	      minHeight: '1em',
	      margin: 0,
	      '&$disabled': {
	        color: theme.palette.text.disabled
	      },
	      '&$error': {
	        color: theme.palette.error.main
	      }
	    },
	
	    /* Styles applied to the root element if `error={true}`. */
	    error: {},
	
	    /* Styles applied to the root element if `disabled={true}`. */
	    disabled: {},
	
	    /* Styles applied to the root element if `margin="dense"`. */
	    marginDense: {
	      marginTop: 4
	    },
	
	    /* Styles applied to the root element if `variant="filled"` or `variant="outlined"`. */
	    contained: {
	      margin: '8px 12px 0'
	    },
	
	    /* Styles applied to the root element if `focused={true}`. */
	    focused: {},
	
	    /* Styles applied to the root element if `filled={true}`. */
	    filled: {},
	
	    /* Styles applied to the root element if `required={true}`. */
	    required: {}
	  };
	};
	
	exports.styles = styles;
	
	function FormHelperText(props) {
	  var _classNames;
	
	  var classes = props.classes,
	      classNameProp = props.className,
	      Component = props.component,
	      disabled = props.disabled,
	      error = props.error,
	      filled = props.filled,
	      focused = props.focused,
	      margin = props.margin,
	      muiFormControl = props.muiFormControl,
	      required = props.required,
	      variant = props.variant,
	      other = (0, _objectWithoutProperties2.default)(props, ["classes", "className", "component", "disabled", "error", "filled", "focused", "margin", "muiFormControl", "required", "variant"]);
	  var fcs = (0, _formControlState.default)({
	    props: props,
	    muiFormControl: muiFormControl,
	    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']
	  });
	  return _react.default.createElement(Component, (0, _extends2.default)({
	    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.contained, fcs.variant === 'filled' || fcs.variant === 'outlined'), (0, _defineProperty2.default)(_classNames, classes.marginDense, fcs.margin === 'dense'), (0, _defineProperty2.default)(_classNames, classes.disabled, fcs.disabled), (0, _defineProperty2.default)(_classNames, classes.error, fcs.error), (0, _defineProperty2.default)(_classNames, classes.filled, fcs.filled), (0, _defineProperty2.default)(_classNames, classes.focused, fcs.focused), (0, _defineProperty2.default)(_classNames, classes.required, fcs.required), _classNames), classNameProp)
	  }, other));
	}
	
	FormHelperText.propTypes =  false ? {
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the helper text should be displayed in a disabled state.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, helper text should be displayed in an error state.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the helper text should use filled classes key.
	   */
	  filled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the helper text should use focused classes key.
	   */
	  focused: _propTypes.default.bool,
	
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   */
	  margin: _propTypes.default.oneOf(['dense']),
	
	  /**
	   * @ignore
	   */
	  muiFormControl: _propTypes.default.object,
	
	  /**
	   * If `true`, the helper text should use required classes key.
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * The variant to use.
	   */
	  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])
	} : {};
	FormHelperText.defaultProps = {
	  component: 'p'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiFormHelperText'
	})((0, _withFormControlContext.default)(FormHelperText));
	
	exports.default = _default;

/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _formControlState = _interopRequireDefault(__webpack_require__(101));
	
	var _withFormControlContext = _interopRequireDefault(__webpack_require__(73));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var styles = function styles(theme) {
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      fontFamily: theme.typography.fontFamily,
	      color: theme.palette.text.secondary,
	      fontSize: theme.typography.pxToRem(16),
	      lineHeight: 1,
	      padding: 0,
	      '&$focused': {
	        color: theme.palette.primary[theme.palette.type === 'light' ? 'dark' : 'light']
	      },
	      '&$disabled': {
	        color: theme.palette.text.disabled
	      },
	      '&$error': {
	        color: theme.palette.error.main
	      }
	    },
	
	    /* Styles applied to the root element if `focused={true}`. */
	    focused: {},
	
	    /* Styles applied to the root element if `disabled={true}`. */
	    disabled: {},
	
	    /* Styles applied to the root element if `error={true}`. */
	    error: {},
	
	    /* Styles applied to the root element if `filled={true}`. */
	    filled: {},
	
	    /* Styles applied to the root element if `required={true}`. */
	    required: {},
	    asterisk: {
	      '&$error': {
	        color: theme.palette.error.main
	      }
	    }
	  };
	};
	
	exports.styles = styles;
	
	function FormLabel(props) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      Component = props.component,
	      disabled = props.disabled,
	      error = props.error,
	      filled = props.filled,
	      focused = props.focused,
	      muiFormControl = props.muiFormControl,
	      required = props.required,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "component", "disabled", "error", "filled", "focused", "muiFormControl", "required"]);
	  var fcs = (0, _formControlState.default)({
	    props: props,
	    muiFormControl: muiFormControl,
	    states: ['required', 'focused', 'disabled', 'error', 'filled']
	  });
	  return _react.default.createElement(Component, (0, _extends2.default)({
	    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.disabled, fcs.disabled), (0, _defineProperty2.default)(_classNames, classes.error, fcs.error), (0, _defineProperty2.default)(_classNames, classes.filled, fcs.filled), (0, _defineProperty2.default)(_classNames, classes.focused, fcs.focused), (0, _defineProperty2.default)(_classNames, classes.required, fcs.required), _classNames), classNameProp)
	  }, other), children, fcs.required && _react.default.createElement("span", {
	    className: (0, _classnames.default)(classes.asterisk, (0, _defineProperty2.default)({}, classes.error, fcs.error))
	  }, "\u2009*"));
	}
	
	FormLabel.propTypes =  false ? {
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the label should be displayed in a disabled state.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label should be displayed in an error state.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label should use filled classes key.
	   */
	  filled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input of this label is focused (used by `FormGroup` components).
	   */
	  focused: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  muiFormControl: _propTypes.default.object,
	
	  /**
	   * If `true`, the label will indicate that the input is required.
	   */
	  required: _propTypes.default.bool
	} : {};
	FormLabel.defaultProps = {
	  component: 'label'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiFormLabel'
	})((0, _withFormControlContext.default)(FormLabel));
	
	exports.default = _default;

/***/ }),
/* 637 */,
/* 638 */,
/* 639 */,
/* 640 */,
/* 641 */,
/* 642 */,
/* 643 */,
/* 644 */,
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _Transition = _interopRequireDefault(__webpack_require__(130));
	
	var _withTheme = _interopRequireDefault(__webpack_require__(74));
	
	var _utils = __webpack_require__(104);
	
	// @inheritedComponent Transition
	function getScale(value) {
	  return "scale(".concat(value, ", ").concat(Math.pow(value, 2), ")");
	}
	
	var styles = {
	  entering: {
	    opacity: 1,
	    transform: getScale(1)
	  },
	  entered: {
	    opacity: 1,
	    // Use translateZ to scrolling issue on Chrome.
	    transform: "".concat(getScale(1), " translateZ(0)")
	  }
	};
	/**
	 * The Grow transition is used by the [Tooltip](/demos/tooltips/) and
	 * [Popover](/utils/popover/) components.
	 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
	 */
	
	var Grow =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Grow, _React$Component);
	
	  function Grow() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Grow);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Grow)).call.apply(_getPrototypeOf2, [this].concat(args)));
	
	    _this.handleEnter = function (node) {
	      var _this$props = _this.props,
	          theme = _this$props.theme,
	          timeout = _this$props.timeout;
	      (0, _utils.reflow)(node); // So the animation always start from the start.
	
	      var _getTransitionProps = (0, _utils.getTransitionProps)(_this.props, {
	        mode: 'enter'
	      }),
	          transitionDuration = _getTransitionProps.duration,
	          delay = _getTransitionProps.delay;
	
	      var duration = 0;
	
	      if (timeout === 'auto') {
	        duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
	        _this.autoTimeout = duration;
	      } else {
	        duration = transitionDuration;
	      }
	
	      node.style.transition = [theme.transitions.create('opacity', {
	        duration: duration,
	        delay: delay
	      }), theme.transitions.create('transform', {
	        duration: duration * 0.666,
	        delay: delay
	      })].join(',');
	
	      if (_this.props.onEnter) {
	        _this.props.onEnter(node);
	      }
	    };
	
	    _this.handleExit = function (node) {
	      var _this$props2 = _this.props,
	          theme = _this$props2.theme,
	          timeout = _this$props2.timeout;
	      var duration = 0;
	
	      var _getTransitionProps2 = (0, _utils.getTransitionProps)(_this.props, {
	        mode: 'exit'
	      }),
	          transitionDuration = _getTransitionProps2.duration,
	          delay = _getTransitionProps2.delay;
	
	      if (timeout === 'auto') {
	        duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
	        _this.autoTimeout = duration;
	      } else {
	        duration = transitionDuration;
	      }
	
	      node.style.transition = [theme.transitions.create('opacity', {
	        duration: duration,
	        delay: delay
	      }), theme.transitions.create('transform', {
	        duration: duration * 0.666,
	        delay: delay || duration * 0.333
	      })].join(',');
	      node.style.opacity = '0';
	      node.style.transform = getScale(0.75);
	
	      if (_this.props.onExit) {
	        _this.props.onExit(node);
	      }
	    };
	
	    _this.addEndListener = function (_, next) {
	      if (_this.props.timeout === 'auto') {
	        _this.timer = setTimeout(next, _this.autoTimeout || 0);
	      }
	    };
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(Grow, [{
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      clearTimeout(this.timer);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props3 = this.props,
	          children = _this$props3.children,
	          onEnter = _this$props3.onEnter,
	          onExit = _this$props3.onExit,
	          styleProp = _this$props3.style,
	          theme = _this$props3.theme,
	          timeout = _this$props3.timeout,
	          other = (0, _objectWithoutProperties2.default)(_this$props3, ["children", "onEnter", "onExit", "style", "theme", "timeout"]);
	      var style = (0, _extends2.default)({}, styleProp, _react.default.isValidElement(children) ? children.props.style : {});
	      return _react.default.createElement(_Transition.default, (0, _extends2.default)({
	        appear: true,
	        onEnter: this.handleEnter,
	        onExit: this.handleExit,
	        addEndListener: this.addEndListener,
	        timeout: timeout === 'auto' ? null : timeout
	      }, other), function (state, childProps) {
	        return _react.default.cloneElement(children, (0, _extends2.default)({
	          style: (0, _extends2.default)({
	            opacity: 0,
	            transform: getScale(0.75)
	          }, styles[state], style)
	        }, childProps));
	      });
	    }
	  }]);
	  return Grow;
	}(_react.default.Component);
	
	Grow.propTypes =  false ? {
	  /**
	   * A single child content element.
	   */
	  children: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func]),
	
	  /**
	   * If `true`, show the component; triggers the enter or exit animation.
	   */
	  in: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  onEnter: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onExit: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  style: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  theme: _propTypes.default.object.isRequired,
	
	  /**
	   * The duration for the transition, in milliseconds.
	   * You may specify a single timeout for all transitions, or individually with an object.
	   *
	   * Set to 'auto' to automatically calculate transition time based on height.
	   */
	  timeout: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	    enter: _propTypes.default.number,
	    exit: _propTypes.default.number
	  }), _propTypes.default.oneOf(['auto'])])
	} : {};
	Grow.defaultProps = {
	  timeout: 'auto'
	};
	Grow.muiSupportAuto = true;
	
	var _default = (0, _withTheme.default)()(Grow);
	
	exports.default = _default;

/***/ }),
/* 646 */,
/* 647 */,
/* 648 */,
/* 649 */,
/* 650 */,
/* 651 */,
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _InputBase = _interopRequireDefault(__webpack_require__(132));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	// @inheritedComponent InputBase
	var styles = function styles(theme) {
	  var light = theme.palette.type === 'light';
	  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      position: 'relative'
	    },
	
	    /* Styles applied to the root element if the component is a descendant of `FormControl`. */
	    formControl: {
	      'label + &': {
	        marginTop: 16
	      }
	    },
	
	    /* Styles applied to the root element if the component is focused. */
	    focused: {},
	
	    /* Styles applied to the root element if `disabled={true}`. */
	    disabled: {},
	
	    /* Styles applied to the root element if `disableUnderline={false}`. */
	    underline: {
	      '&:after': {
	        borderBottom: "2px solid ".concat(theme.palette.primary[light ? 'dark' : 'light']),
	        left: 0,
	        bottom: 0,
	        // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
	        content: '""',
	        position: 'absolute',
	        right: 0,
	        transform: 'scaleX(0)',
	        transition: theme.transitions.create('transform', {
	          duration: theme.transitions.duration.shorter,
	          easing: theme.transitions.easing.easeOut
	        }),
	        pointerEvents: 'none' // Transparent to the hover style.
	
	      },
	      '&$focused:after': {
	        transform: 'scaleX(1)'
	      },
	      '&$error:after': {
	        borderBottomColor: theme.palette.error.main,
	        transform: 'scaleX(1)' // error is always underlined in red
	
	      },
	      '&:before': {
	        borderBottom: "1px solid ".concat(bottomLineColor),
	        left: 0,
	        bottom: 0,
	        // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
	        content: '"\\00a0"',
	        position: 'absolute',
	        right: 0,
	        transition: theme.transitions.create('border-bottom-color', {
	          duration: theme.transitions.duration.shorter
	        }),
	        pointerEvents: 'none' // Transparent to the hover style.
	
	      },
	      '&:hover:not($disabled):not($focused):not($error):before': {
	        borderBottom: "2px solid ".concat(theme.palette.text.primary),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          borderBottom: "1px solid ".concat(bottomLineColor)
	        }
	      },
	      '&$disabled:before': {
	        borderBottomStyle: 'dotted'
	      }
	    },
	
	    /* Styles applied to the root element if `error={true}`. */
	    error: {},
	
	    /* Styles applied to the root element if `multiline={true}`. */
	    multiline: {},
	
	    /* Styles applied to the root element if `fullWidth={true}`. */
	    fullWidth: {},
	
	    /* Styles applied to the `input` element. */
	    input: {},
	
	    /* Styles applied to the `input` element if `margin="dense"`. */
	    inputMarginDense: {},
	
	    /* Styles applied to the `input` element if `multiline={true}`. */
	    inputMultiline: {},
	
	    /* Styles applied to the `input` element if `type` is not "text"`. */
	    inputType: {},
	
	    /* Styles applied to the `input` element if `type="search"`. */
	    inputTypeSearch: {}
	  };
	};
	
	exports.styles = styles;
	
	function Input(props) {
	  var disableUnderline = props.disableUnderline,
	      classes = props.classes,
	      other = (0, _objectWithoutProperties2.default)(props, ["disableUnderline", "classes"]);
	  return _react.default.createElement(_InputBase.default, (0, _extends2.default)({
	    classes: (0, _extends2.default)({}, classes, {
	      root: (0, _classnames.default)(classes.root, (0, _defineProperty2.default)({}, classes.underline, !disableUnderline)),
	      underline: null
	    })
	  }, other));
	}
	
	Input.propTypes =  false ? {
	  /**
	   * This property helps users to fill forms faster, especially on mobile devices.
	   * The name can be confusing, as it's more like an autofill.
	   * You can learn more about it here:
	   * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill
	   */
	  autoComplete: _propTypes.default.string,
	
	  /**
	   * If `true`, the input will be focused during the first mount.
	   */
	  autoFocus: _propTypes.default.bool,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The CSS class name of the wrapper element.
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The default input value, useful when not controlling the component.
	   */
	  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object]))]),
	
	  /**
	   * If `true`, the input will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will not have an underline.
	   */
	  disableUnderline: _propTypes.default.bool,
	
	  /**
	   * End `InputAdornment` for this component.
	   */
	  endAdornment: _propTypes.default.node,
	
	  /**
	   * If `true`, the input will indicate an error. This is normally obtained via context from
	   * FormControl.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * The id of the `input` element.
	   */
	  id: _propTypes.default.string,
	
	  /**
	   * The component used for the native input.
	   * Either a string to use a DOM element or a component.
	   */
	  inputComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Attributes applied to the `input` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * Use that property to pass a ref callback to the native input component.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   */
	  margin: _propTypes.default.oneOf(['dense', 'none']),
	
	  /**
	   * If `true`, a textarea element will be rendered.
	   */
	  multiline: _propTypes.default.bool,
	
	  /**
	   * Name attribute of the `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * Callback fired when the value is changed.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * The short hint displayed in the input before the user enters a value.
	   */
	  placeholder: _propTypes.default.string,
	
	  /**
	   * It prevents the user from changing the value of the field
	   * (not from interacting with the field).
	   */
	  readOnly: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will be required.
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  rowsMax: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Start `InputAdornment` for this component.
	   */
	  startAdornment: _propTypes.default.node,
	
	  /**
	   * Type of the input element. It should be a valid HTML5 input type.
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The input value, required for a controlled component.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object]))])
	} : {};
	_InputBase.default.defaultProps = {
	  fullWidth: false,
	  inputComponent: 'input',
	  multiline: false,
	  type: 'text'
	};
	Input.muiName = 'Input';
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiInput'
	})(Input);
	
	exports.default = _default;

/***/ }),
/* 653 */,
/* 654 */,
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _formControlState = _interopRequireDefault(__webpack_require__(101));
	
	var _FormControlContext = _interopRequireDefault(__webpack_require__(231));
	
	var _withFormControlContext = _interopRequireDefault(__webpack_require__(73));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _reactHelpers = __webpack_require__(45);
	
	var _Textarea = _interopRequireDefault(__webpack_require__(656));
	
	var _utils = __webpack_require__(233);
	
	/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */
	var styles = function styles(theme) {
	  var light = theme.palette.type === 'light';
	  var placeholder = {
	    color: 'currentColor',
	    opacity: light ? 0.42 : 0.5,
	    transition: theme.transitions.create('opacity', {
	      duration: theme.transitions.duration.shorter
	    })
	  };
	  var placeholderHidden = {
	    opacity: 0
	  };
	  var placeholderVisible = {
	    opacity: light ? 0.42 : 0.5
	  };
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      // Mimics the default input display property used by browsers for an input.
	      fontFamily: theme.typography.fontFamily,
	      color: theme.palette.text.primary,
	      fontSize: theme.typography.pxToRem(16),
	      lineHeight: '1.1875em',
	      // Reset (19px), match the native input line-height
	      cursor: 'text',
	      display: 'inline-flex',
	      alignItems: 'center',
	      '&$disabled': {
	        color: theme.palette.text.disabled,
	        cursor: 'default'
	      }
	    },
	
	    /* Styles applied to the root element if the component is a descendant of `FormControl`. */
	    formControl: {},
	
	    /* Styles applied to the root element if the component is focused. */
	    focused: {},
	
	    /* Styles applied to the root element if `disabled={true}`. */
	    disabled: {},
	
	    /* Styles applied to the root element if `startAdornment` is provided. */
	    adornedStart: {},
	
	    /* Styles applied to the root element if `endAdornment` is provided. */
	    adornedEnd: {},
	
	    /* Styles applied to the root element if `error={true}`. */
	    error: {},
	
	    /* Styles applied to the `input` element if `margin="dense"`. */
	    marginDense: {},
	
	    /* Styles applied to the root element if `multiline={true}`. */
	    multiline: {
	      padding: "".concat(8 - 2, "px 0 ").concat(8 - 1, "px")
	    },
	
	    /* Styles applied to the root element if `fullWidth={true}`. */
	    fullWidth: {
	      width: '100%'
	    },
	
	    /* Styles applied to the `input` element. */
	    input: {
	      font: 'inherit',
	      color: 'currentColor',
	      padding: "".concat(8 - 2, "px 0 ").concat(8 - 1, "px"),
	      border: 0,
	      boxSizing: 'content-box',
	      background: 'none',
	      margin: 0,
	      // Reset for Safari
	      // Remove grey highlight
	      WebkitTapHighlightColor: 'transparent',
	      display: 'block',
	      // Make the flex item shrink with Firefox
	      minWidth: 0,
	      width: '100%',
	      // Fix IE 11 width issue
	      '&::-webkit-input-placeholder': placeholder,
	      '&::-moz-placeholder': placeholder,
	      // Firefox 19+
	      '&:-ms-input-placeholder': placeholder,
	      // IE 11
	      '&::-ms-input-placeholder': placeholder,
	      // Edge
	      '&:focus': {
	        outline: 0
	      },
	      // Reset Firefox invalid required input style
	      '&:invalid': {
	        boxShadow: 'none'
	      },
	      '&::-webkit-search-decoration': {
	        // Remove the padding when type=search.
	        '-webkit-appearance': 'none'
	      },
	      // Show and hide the placeholder logic
	      'label[data-shrink=false] + $formControl &': {
	        '&::-webkit-input-placeholder': placeholderHidden,
	        '&::-moz-placeholder': placeholderHidden,
	        // Firefox 19+
	        '&:-ms-input-placeholder': placeholderHidden,
	        // IE 11
	        '&::-ms-input-placeholder': placeholderHidden,
	        // Edge
	        '&:focus::-webkit-input-placeholder': placeholderVisible,
	        '&:focus::-moz-placeholder': placeholderVisible,
	        // Firefox 19+
	        '&:focus:-ms-input-placeholder': placeholderVisible,
	        // IE 11
	        '&:focus::-ms-input-placeholder': placeholderVisible // Edge
	
	      },
	      '&$disabled': {
	        opacity: 1 // Reset iOS opacity
	
	      }
	    },
	
	    /* Styles applied to the `input` element if `margin="dense"`. */
	    inputMarginDense: {
	      paddingTop: 4 - 1
	    },
	
	    /* Styles applied to the `input` element if `multiline={true}`. */
	    inputMultiline: {
	      resize: 'none',
	      padding: 0
	    },
	
	    /* Styles applied to the `input` element if `type` is not "text"`. */
	    inputType: {
	      // type="date" or type="time", etc. have specific styles we need to reset.
	      height: '1.1875em' // Reset (19px), match the native input line-height
	
	    },
	
	    /* Styles applied to the `input` element if `type="search"`. */
	    inputTypeSearch: {
	      // Improve type search style.
	      '-moz-appearance': 'textfield',
	      '-webkit-appearance': 'textfield'
	    },
	
	    /* Styles applied to the `input` element if `startAdornment` is provided. */
	    inputAdornedStart: {},
	
	    /* Styles applied to the `input` element if `endAdornment` is provided. */
	    inputAdornedEnd: {}
	  };
	};
	/**
	 * `InputBase` contains as few styles as possible.
	 * It aims to be a simple building block for creating an input.
	 * It contains a load of style reset and some state logic.
	 */
	
	
	exports.styles = styles;
	
	var InputBase =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(InputBase, _React$Component);
	  (0, _createClass2.default)(InputBase, null, [{
	    key: "getDerivedStateFromProps",
	    value: function getDerivedStateFromProps(props, state) {
	      // The blur won't fire when the disabled state is set on a focused input.
	      // We need to book keep the focused state manually.
	      if (props.disabled && state.focused) {
	        return {
	          focused: false
	        };
	      }
	
	      return null;
	    }
	  }]);
	
	  function InputBase(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, InputBase);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputBase).call(this, props));
	    _this.state = {
	      focused: false
	    };
	
	    _this.handleFocus = function (event) {
	      var muiFormControl = _this.props.muiFormControl; // Fix a bug with IE 11 where the focus/blur events are triggered
	      // while the input is disabled.
	
	      if ((0, _formControlState.default)({
	        props: _this.props,
	        muiFormControl: muiFormControl,
	        states: ['disabled']
	      }).disabled) {
	        event.stopPropagation();
	        return;
	      }
	
	      _this.setState({
	        focused: true
	      });
	
	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	
	      if (muiFormControl && muiFormControl.onFocus) {
	        muiFormControl.onFocus(event);
	      }
	    };
	
	    _this.handleBlur = function (event) {
	      _this.setState({
	        focused: false
	      });
	
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	
	      var muiFormControl = _this.props.muiFormControl;
	
	      if (muiFormControl && muiFormControl.onBlur) {
	        muiFormControl.onBlur(event);
	      }
	    };
	
	    _this.handleChange = function () {
	      if (!_this.isControlled) {
	        _this.checkDirty(_this.inputRef);
	      } // Perform in the willUpdate
	
	
	      if (_this.props.onChange) {
	        var _this$props;
	
	        (_this$props = _this.props).onChange.apply(_this$props, arguments);
	      }
	    };
	
	    _this.handleRefInput = function (ref) {
	      _this.inputRef = ref;
	      var refProp;
	
	      if (_this.props.inputRef) {
	        refProp = _this.props.inputRef;
	      } else if (_this.props.inputProps && _this.props.inputProps.ref) {
	        refProp = _this.props.inputProps.ref;
	      }
	
	      (0, _reactHelpers.setRef)(refProp, ref);
	    };
	
	    _this.handleClick = function (event) {
	      if (_this.inputRef && event.currentTarget === event.target) {
	        _this.inputRef.focus();
	      }
	
	      if (_this.props.onClick) {
	        _this.props.onClick(event);
	      }
	    };
	
	    _this.isControlled = props.value != null;
	
	    if (_this.isControlled) {
	      _this.checkDirty(props);
	    }
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(InputBase, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (!this.isControlled) {
	        this.checkDirty(this.inputRef);
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      // Book keep the focused state.
	      if (!prevProps.disabled && this.props.disabled) {
	        var muiFormControl = this.props.muiFormControl;
	
	        if (muiFormControl && muiFormControl.onBlur) {
	          muiFormControl.onBlur();
	        }
	      }
	
	      if (this.isControlled) {
	        this.checkDirty(this.props);
	      } // else performed in the onChange
	
	    }
	  }, {
	    key: "checkDirty",
	    value: function checkDirty(obj) {
	      var muiFormControl = this.props.muiFormControl;
	
	      if ((0, _utils.isFilled)(obj)) {
	        if (muiFormControl && muiFormControl.onFilled) {
	          muiFormControl.onFilled();
	        }
	
	        if (this.props.onFilled) {
	          this.props.onFilled();
	        }
	
	        return;
	      }
	
	      if (muiFormControl && muiFormControl.onEmpty) {
	        muiFormControl.onEmpty();
	      }
	
	      if (this.props.onEmpty) {
	        this.props.onEmpty();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _classNames, _classNames2;
	
	      var _this$props2 = this.props,
	          autoComplete = _this$props2.autoComplete,
	          autoFocus = _this$props2.autoFocus,
	          classes = _this$props2.classes,
	          classNameProp = _this$props2.className,
	          defaultValue = _this$props2.defaultValue,
	          disabled = _this$props2.disabled,
	          endAdornment = _this$props2.endAdornment,
	          error = _this$props2.error,
	          fullWidth = _this$props2.fullWidth,
	          id = _this$props2.id,
	          inputComponent = _this$props2.inputComponent,
	          _this$props2$inputPro = _this$props2.inputProps;
	      _this$props2$inputPro = _this$props2$inputPro === void 0 ? {} : _this$props2$inputPro;
	      var inputPropsClassName = _this$props2$inputPro.className,
	          inputPropsProp = (0, _objectWithoutProperties2.default)(_this$props2$inputPro, ["className"]),
	          inputRef = _this$props2.inputRef,
	          margin = _this$props2.margin,
	          muiFormControl = _this$props2.muiFormControl,
	          multiline = _this$props2.multiline,
	          name = _this$props2.name,
	          onBlur = _this$props2.onBlur,
	          onChange = _this$props2.onChange,
	          onClick = _this$props2.onClick,
	          onEmpty = _this$props2.onEmpty,
	          onFilled = _this$props2.onFilled,
	          onFocus = _this$props2.onFocus,
	          onKeyDown = _this$props2.onKeyDown,
	          onKeyUp = _this$props2.onKeyUp,
	          placeholder = _this$props2.placeholder,
	          readOnly = _this$props2.readOnly,
	          renderPrefix = _this$props2.renderPrefix,
	          rows = _this$props2.rows,
	          rowsMax = _this$props2.rowsMax,
	          startAdornment = _this$props2.startAdornment,
	          type = _this$props2.type,
	          value = _this$props2.value,
	          other = (0, _objectWithoutProperties2.default)(_this$props2, ["autoComplete", "autoFocus", "classes", "className", "defaultValue", "disabled", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "muiFormControl", "multiline", "name", "onBlur", "onChange", "onClick", "onEmpty", "onFilled", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderPrefix", "rows", "rowsMax", "startAdornment", "type", "value"]);
	      var fcs = (0, _formControlState.default)({
	        props: this.props,
	        muiFormControl: muiFormControl,
	        states: ['disabled', 'error', 'margin', 'required', 'filled']
	      });
	      var focused = muiFormControl ? muiFormControl.focused : this.state.focused;
	      var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.disabled, fcs.disabled), (0, _defineProperty2.default)(_classNames, classes.error, fcs.error), (0, _defineProperty2.default)(_classNames, classes.fullWidth, fullWidth), (0, _defineProperty2.default)(_classNames, classes.focused, focused), (0, _defineProperty2.default)(_classNames, classes.formControl, muiFormControl), (0, _defineProperty2.default)(_classNames, classes.marginDense, fcs.margin === 'dense'), (0, _defineProperty2.default)(_classNames, classes.multiline, multiline), (0, _defineProperty2.default)(_classNames, classes.adornedStart, startAdornment), (0, _defineProperty2.default)(_classNames, classes.adornedEnd, endAdornment), _classNames), classNameProp);
	      var inputClassName = (0, _classnames.default)(classes.input, (_classNames2 = {}, (0, _defineProperty2.default)(_classNames2, classes.disabled, fcs.disabled), (0, _defineProperty2.default)(_classNames2, classes.inputType, type !== 'text'), (0, _defineProperty2.default)(_classNames2, classes.inputTypeSearch, type === 'search'), (0, _defineProperty2.default)(_classNames2, classes.inputMultiline, multiline), (0, _defineProperty2.default)(_classNames2, classes.inputMarginDense, fcs.margin === 'dense'), (0, _defineProperty2.default)(_classNames2, classes.inputAdornedStart, startAdornment), (0, _defineProperty2.default)(_classNames2, classes.inputAdornedEnd, endAdornment), _classNames2), inputPropsClassName);
	      var InputComponent = inputComponent;
	      var inputProps = (0, _extends2.default)({}, inputPropsProp, {
	        ref: this.handleRefInput
	      });
	
	      if (typeof InputComponent !== 'string') {
	        inputProps = (0, _extends2.default)({
	          // Rename ref to inputRef as we don't know the
	          // provided `inputComponent` structure.
	          inputRef: this.handleRefInput,
	          type: type
	        }, inputProps, {
	          ref: null
	        });
	      } else if (multiline) {
	        if (rows && !rowsMax) {
	          InputComponent = 'textarea';
	        } else {
	          inputProps = (0, _extends2.default)({
	            rowsMax: rowsMax,
	            textareaRef: this.handleRefInput
	          }, inputProps, {
	            ref: null
	          });
	          InputComponent = _Textarea.default;
	        }
	      } else {
	        inputProps = (0, _extends2.default)({
	          type: type
	        }, inputProps);
	      }
	
	      return _react.default.createElement(_FormControlContext.default.Provider, {
	        value: null
	      }, _react.default.createElement("div", (0, _extends2.default)({
	        className: className,
	        onClick: this.handleClick
	      }, other), renderPrefix ? renderPrefix((0, _extends2.default)({}, fcs, {
	        startAdornment: startAdornment,
	        focused: focused
	      })) : null, startAdornment, _react.default.createElement(InputComponent, (0, _extends2.default)({
	        "aria-invalid": fcs.error,
	        autoComplete: autoComplete,
	        autoFocus: autoFocus,
	        className: inputClassName,
	        defaultValue: defaultValue,
	        disabled: fcs.disabled,
	        id: id,
	        name: name,
	        onBlur: this.handleBlur,
	        onChange: this.handleChange,
	        onFocus: this.handleFocus,
	        onKeyDown: onKeyDown,
	        onKeyUp: onKeyUp,
	        placeholder: placeholder,
	        readOnly: readOnly,
	        required: fcs.required,
	        rows: rows,
	        value: value
	      }, inputProps)), endAdornment));
	    }
	  }]);
	  return InputBase;
	}(_react.default.Component);
	
	InputBase.propTypes =  false ? {
	  /**
	   * This property helps users to fill forms faster, especially on mobile devices.
	   * The name can be confusing, as it's more like an autofill.
	   * You can learn more about it here:
	   * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill
	   */
	  autoComplete: _propTypes.default.string,
	
	  /**
	   * If `true`, the input will be focused during the first mount.
	   */
	  autoFocus: _propTypes.default.bool,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The CSS class name of the wrapper element.
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The default input value, useful when not controlling the component.
	   */
	  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object]))]),
	
	  /**
	   * If `true`, the input will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * End `InputAdornment` for this component.
	   */
	  endAdornment: _propTypes.default.node,
	
	  /**
	   * If `true`, the input will indicate an error. This is normally obtained via context from
	   * FormControl.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * The id of the `input` element.
	   */
	  id: _propTypes.default.string,
	
	  /**
	   * The component used for the native input.
	   * Either a string to use a DOM element or a component.
	   */
	  inputComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Attributes applied to the `input` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * Use that property to pass a ref callback to the native input component.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   */
	  margin: _propTypes.default.oneOf(['dense', 'none']),
	
	  /**
	   * @ignore
	   */
	  muiFormControl: _propTypes.default.object,
	
	  /**
	   * If `true`, a textarea element will be rendered.
	   */
	  multiline: _propTypes.default.bool,
	
	  /**
	   * Name attribute of the `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  onBlur: _propTypes.default.func,
	
	  /**
	   * Callback fired when the value is changed.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onEmpty: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onFilled: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onFocus: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onKeyDown: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onKeyUp: _propTypes.default.func,
	
	  /**
	   * The short hint displayed in the input before the user enters a value.
	   */
	  placeholder: _propTypes.default.string,
	
	  /**
	   * It prevents the user from changing the value of the field
	   * (not from interacting with the field).
	   */
	  readOnly: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  renderPrefix: _propTypes.default.func,
	
	  /**
	   * If `true`, the input will be required.
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  rowsMax: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Start `InputAdornment` for this component.
	   */
	  startAdornment: _propTypes.default.node,
	
	  /**
	   * Type of the input element. It should be a valid HTML5 input type.
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The input value, required for a controlled component.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object]))])
	} : {};
	InputBase.defaultProps = {
	  fullWidth: false,
	  inputComponent: 'input',
	  multiline: false,
	  type: 'text'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiInputBase'
	})((0, _withFormControlContext.default)(InputBase));
	
	exports.default = _default;

/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _debounce = _interopRequireDefault(__webpack_require__(91));
	
	var _reactEventListener = _interopRequireDefault(__webpack_require__(59));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _reactHelpers = __webpack_require__(45);
	
	// < 1kb payload overhead when lodash/debounce is > 3kb.
	var ROWS_HEIGHT = 19;
	var styles = {
	  /* Styles applied to the root element. */
	  root: {
	    position: 'relative',
	    // because the shadow has position: 'absolute',
	    width: '100%'
	  },
	  textarea: {
	    width: '100%',
	    height: '100%',
	    resize: 'none',
	    font: 'inherit',
	    padding: 0,
	    cursor: 'inherit',
	    boxSizing: 'border-box',
	    lineHeight: 'inherit',
	    border: 'none',
	    outline: 'none',
	    background: 'transparent'
	  },
	  shadow: {
	    // Overflow also needed to here to remove the extra row
	    // added to textareas in Firefox.
	    overflow: 'hidden',
	    // Visibility needed to hide the extra text area on ipads
	    visibility: 'hidden',
	    position: 'absolute',
	    height: 'auto',
	    whiteSpace: 'pre-wrap'
	  }
	};
	/**
	 * @ignore - internal component.
	 */
	
	exports.styles = styles;
	
	var Textarea =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Textarea, _React$Component);
	
	  function Textarea(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Textarea);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Textarea).call(this));
	
	    _this.handleRefInput = function (ref) {
	      _this.inputRef = ref;
	      (0, _reactHelpers.setRef)(_this.props.textareaRef, ref);
	    };
	
	    _this.handleRefSinglelineShadow = function (ref) {
	      _this.singlelineShadowRef = ref;
	    };
	
	    _this.handleRefShadow = function (ref) {
	      _this.shadowRef = ref;
	    };
	
	    _this.handleChange = function (event) {
	      _this.value = event.target.value;
	
	      if (!_this.isControlled) {
	        // The component is not controlled, we need to update the shallow value.
	        _this.shadowRef.value = _this.value;
	
	        _this.syncHeightWithShadow();
	      }
	
	      if (_this.props.onChange) {
	        _this.props.onChange(event);
	      }
	    };
	
	    _this.isControlled = props.value != null; // <Input> expects the components it renders to respond to 'value'
	    // so that it can check whether they are filled.
	
	    _this.value = props.value || props.defaultValue || '';
	    _this.state = {
	      height: Number(props.rows) * ROWS_HEIGHT
	    };
	
	    if (typeof window !== 'undefined') {
	      _this.handleResize = (0, _debounce.default)(function () {
	        _this.syncHeightWithShadow();
	      }, 166); // Corresponds to 10 frames at 60 Hz.
	    }
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(Textarea, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.syncHeightWithShadow();
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      this.syncHeightWithShadow();
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.handleResize.clear();
	    }
	  }, {
	    key: "syncHeightWithShadow",
	    value: function syncHeightWithShadow() {
	      var props = this.props; // Guarding for **broken** shallow rendering method that call componentDidMount
	      // but doesn't handle refs correctly.
	      // To remove once the shallow rendering has been fixed.
	
	      if (!this.shadowRef) {
	        return;
	      }
	
	      if (this.isControlled) {
	        // The component is controlled, we need to update the shallow value.
	        this.shadowRef.value = props.value == null ? '' : String(props.value);
	      }
	
	      var lineHeight = this.singlelineShadowRef.scrollHeight;
	      var newHeight = this.shadowRef.scrollHeight; // Guarding for jsdom, where scrollHeight isn't present.
	      // See https://github.com/tmpvar/jsdom/issues/1013
	
	      if (newHeight === undefined) {
	        return;
	      }
	
	      if (Number(props.rowsMax) >= Number(props.rows)) {
	        newHeight = Math.min(Number(props.rowsMax) * lineHeight, newHeight);
	      }
	
	      newHeight = Math.max(newHeight, lineHeight); // Need a large enough different to update the height.
	      // This prevents infinite rendering loop.
	
	      if (Math.abs(this.state.height - newHeight) > 1) {
	        this.setState({
	          height: newHeight
	        });
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          classes = _this$props.classes,
	          className = _this$props.className,
	          defaultValue = _this$props.defaultValue,
	          onChange = _this$props.onChange,
	          rows = _this$props.rows,
	          rowsMax = _this$props.rowsMax,
	          textareaRef = _this$props.textareaRef,
	          value = _this$props.value,
	          style = _this$props.style,
	          other = (0, _objectWithoutProperties2.default)(_this$props, ["classes", "className", "defaultValue", "onChange", "rows", "rowsMax", "textareaRef", "value", "style"]);
	      return _react.default.createElement("div", {
	        className: classes.root
	      }, _react.default.createElement(_reactEventListener.default, {
	        target: "window",
	        onResize: this.handleResize
	      }), _react.default.createElement("textarea", {
	        "aria-hidden": "true",
	        className: (0, _classnames.default)(classes.textarea, classes.shadow),
	        readOnly: true,
	        ref: this.handleRefSinglelineShadow,
	        rows: "1",
	        tabIndex: -1,
	        value: ""
	      }), _react.default.createElement("textarea", {
	        "aria-hidden": "true",
	        className: (0, _classnames.default)(classes.textarea, classes.shadow),
	        defaultValue: defaultValue,
	        readOnly: true,
	        ref: this.handleRefShadow,
	        rows: rows,
	        tabIndex: -1,
	        value: value
	      }), _react.default.createElement("textarea", (0, _extends2.default)({
	        rows: rows,
	        className: (0, _classnames.default)(classes.textarea, className),
	        defaultValue: defaultValue,
	        value: value,
	        onChange: this.handleChange,
	        ref: this.handleRefInput,
	        style: (0, _extends2.default)({
	          height: this.state.height
	        }, style)
	      }, other)));
	    }
	  }]);
	  return Textarea;
	}(_react.default.Component);
	
	Textarea.propTypes =  false ? {
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * @ignore
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  rowsMax: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Use that property to pass a ref callback to the native textarea element.
	   */
	  textareaRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * @ignore
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
	} : {};
	Textarea.defaultProps = {
	  rows: 1
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiPrivateTextarea'
	})(Textarea);
	
	exports.default = _default;

/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _formControlState = _interopRequireDefault(__webpack_require__(101));
	
	var _withFormControlContext = _interopRequireDefault(__webpack_require__(73));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _FormLabel = _interopRequireDefault(__webpack_require__(355));
	
	// @inheritedComponent FormLabel
	var styles = function styles(theme) {
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      transformOrigin: 'top left'
	    },
	
	    /* Styles applied to the root element if `focused={true}`. */
	    focused: {},
	
	    /* Styles applied to the root element if `disabled={true}`. */
	    disabled: {},
	
	    /* Styles applied to the root element if `error={true}`. */
	    error: {},
	
	    /* Styles applied to the root element if `required={true}`. */
	    required: {},
	
	    /* Styles applied to the root element if the component is a descendant of `FormControl`. */
	    formControl: {
	      position: 'absolute',
	      left: 0,
	      top: 0,
	      // slight alteration to spec spacing to match visual spec result
	      transform: 'translate(0, 24px) scale(1)'
	    },
	
	    /* Styles applied to the root element if `margin="dense"`. */
	    marginDense: {
	      // Compensation for the `Input.inputDense` style.
	      transform: 'translate(0, 21px) scale(1)'
	    },
	
	    /* Styles applied to the `input` element if `shrink={true}`. */
	    shrink: {
	      transform: 'translate(0, 1.5px) scale(0.75)',
	      transformOrigin: 'top left'
	    },
	
	    /* Styles applied to the `input` element if `disableAnimation={false}`. */
	    animated: {
	      transition: theme.transitions.create(['color', 'transform'], {
	        duration: theme.transitions.duration.shorter,
	        easing: theme.transitions.easing.easeOut
	      })
	    },
	
	    /* Styles applied to the root element if `variant="filled"`. */
	    filled: {
	      // Chrome's autofill feature gives the input field a yellow background.
	      // Since the input field is behind the label in the HTML tree,
	      // the input field is drawn last and hides the label with an opaque background color.
	      // zIndex: 1 will raise the label above opaque background-colors of input.
	      zIndex: 1,
	      pointerEvents: 'none',
	      transform: 'translate(12px, 20px) scale(1)',
	      '&$marginDense': {
	        transform: 'translate(12px, 17px) scale(1)'
	      },
	      '&$shrink': {
	        transform: 'translate(12px, 10px) scale(0.75)',
	        '&$marginDense': {
	          transform: 'translate(12px, 7px) scale(0.75)'
	        }
	      }
	    },
	
	    /* Styles applied to the root element if `variant="outlined"`. */
	    outlined: {
	      // see comment above on filled.zIndex
	      zIndex: 1,
	      pointerEvents: 'none',
	      transform: 'translate(14px, 20px) scale(1)',
	      '&$marginDense': {
	        transform: 'translate(14px, 17px) scale(1)'
	      },
	      '&$shrink': {
	        transform: 'translate(14px, -6px) scale(0.75)'
	      }
	    }
	  };
	};
	
	exports.styles = styles;
	
	function InputLabel(props) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      disableAnimation = props.disableAnimation,
	      FormLabelClasses = props.FormLabelClasses,
	      margin = props.margin,
	      muiFormControl = props.muiFormControl,
	      shrinkProp = props.shrink,
	      variant = props.variant,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "disableAnimation", "FormLabelClasses", "margin", "muiFormControl", "shrink", "variant"]);
	  var shrink = shrinkProp;
	
	  if (typeof shrink === 'undefined' && muiFormControl) {
	    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;
	  }
	
	  var fcs = (0, _formControlState.default)({
	    props: props,
	    muiFormControl: muiFormControl,
	    states: ['margin', 'variant']
	  });
	  var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.formControl, muiFormControl), (0, _defineProperty2.default)(_classNames, classes.animated, !disableAnimation), (0, _defineProperty2.default)(_classNames, classes.shrink, shrink), (0, _defineProperty2.default)(_classNames, classes.marginDense, fcs.margin === 'dense'), (0, _defineProperty2.default)(_classNames, classes.filled, fcs.variant === 'filled'), (0, _defineProperty2.default)(_classNames, classes.outlined, fcs.variant === 'outlined'), _classNames), classNameProp);
	  return _react.default.createElement(_FormLabel.default, (0, _extends2.default)({
	    "data-shrink": shrink,
	    className: className,
	    classes: (0, _extends2.default)({
	      focused: classes.focused,
	      disabled: classes.disabled,
	      error: classes.error,
	      required: classes.required
	    }, FormLabelClasses)
	  }, other), children);
	}
	
	InputLabel.propTypes =  false ? {
	  /**
	   * The contents of the `InputLabel`.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * If `true`, the transition animation is disabled.
	   */
	  disableAnimation: _propTypes.default.bool,
	
	  /**
	   * If `true`, apply disabled class.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label will be displayed in an error state.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input of this label is focused.
	   */
	  focused: _propTypes.default.bool,
	
	  /**
	   * `classes` property applied to the [`FormLabel`](/api/form-label/) element.
	   */
	  FormLabelClasses: _propTypes.default.object,
	
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   */
	  margin: _propTypes.default.oneOf(['dense']),
	
	  /**
	   * @ignore
	   */
	  muiFormControl: _propTypes.default.object,
	
	  /**
	   * if `true`, the label will indicate that the input is required.
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label is shrunk.
	   */
	  shrink: _propTypes.default.bool,
	
	  /**
	   * The variant to use.
	   */
	  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])
	} : {};
	InputLabel.defaultProps = {
	  disableAnimation: false
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiInputLabel'
	})((0, _withFormControlContext.default)(InputLabel));
	
	exports.default = _default;

/***/ }),
/* 658 */,
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _ListContext = _interopRequireDefault(__webpack_require__(133));
	
	var styles = {
	  /* Styles applied to the root element. */
	  root: {
	    listStyle: 'none',
	    margin: 0,
	    padding: 0,
	    position: 'relative'
	  },
	
	  /* Styles applied to the root element if `disablePadding={false}`. */
	  padding: {
	    paddingTop: 8,
	    paddingBottom: 8
	  },
	
	  /* Styles applied to the root element if `dense={true}` & `disablePadding={false}`. */
	  dense: {
	    paddingTop: 4,
	    paddingBottom: 4
	  },
	
	  /* Styles applied to the root element if a `subheader` is provided. */
	  subheader: {
	    paddingTop: 0
	  }
	};
	exports.styles = styles;
	
	function List(props) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      Component = props.component,
	      dense = props.dense,
	      disablePadding = props.disablePadding,
	      subheader = props.subheader,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "component", "dense", "disablePadding", "subheader"]);
	  return _react.default.createElement(Component, (0, _extends2.default)({
	    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.dense, dense && !disablePadding), (0, _defineProperty2.default)(_classNames, classes.padding, !disablePadding), (0, _defineProperty2.default)(_classNames, classes.subheader, subheader), _classNames), className)
	  }, other), _react.default.createElement(_ListContext.default.Provider, {
	    value: {
	      dense: dense
	    }
	  }, subheader, children));
	}
	
	List.propTypes =  false ? {
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for
	   * the list and list items. The property is available to descendant components as the
	   * `dense` context.
	   */
	  dense: _propTypes.default.bool,
	
	  /**
	   * If `true`, vertical padding will be removed from the list.
	   */
	  disablePadding: _propTypes.default.bool,
	
	  /**
	   * The content of the subheader, normally `ListSubheader`.
	   */
	  subheader: _propTypes.default.node
	} : {};
	List.defaultProps = {
	  component: 'ul',
	  dense: false,
	  disablePadding: false
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiList'
	})(List);
	
	exports.default = _default;

/***/ }),
/* 660 */,
/* 661 */,
/* 662 */,
/* 663 */,
/* 664 */,
/* 665 */,
/* 666 */,
/* 667 */,
/* 668 */,
/* 669 */,
/* 670 */,
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(29));
	
	var _keycode = _interopRequireDefault(__webpack_require__(116));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(56));
	
	var _List = _interopRequireDefault(__webpack_require__(358));
	
	// @inheritedComponent List
	var MenuList =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(MenuList, _React$Component);
	
	  function MenuList() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, MenuList);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MenuList)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    _this.state = {
	      currentTabIndex: null
	    };
	
	    _this.handleBlur = function (event) {
	      _this.blurTimer = setTimeout(function () {
	        if (_this.listRef) {
	          var list = _this.listRef;
	          var currentFocus = (0, _ownerDocument.default)(list).activeElement;
	
	          if (!list.contains(currentFocus)) {
	            _this.resetTabIndex();
	          }
	        }
	      }, 30);
	
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    };
	
	    _this.handleKeyDown = function (event) {
	      var list = _this.listRef;
	      var key = (0, _keycode.default)(event);
	      var currentFocus = (0, _ownerDocument.default)(list).activeElement;
	
	      if ((key === 'up' || key === 'down') && (!currentFocus || currentFocus && !list.contains(currentFocus))) {
	        if (_this.selectedItemRef) {
	          _this.selectedItemRef.focus();
	        } else {
	          list.firstChild.focus();
	        }
	      } else if (key === 'down') {
	        event.preventDefault();
	
	        if (currentFocus.nextElementSibling) {
	          currentFocus.nextElementSibling.focus();
	        }
	      } else if (key === 'up') {
	        event.preventDefault();
	
	        if (currentFocus.previousElementSibling) {
	          currentFocus.previousElementSibling.focus();
	        }
	      }
	
	      if (_this.props.onKeyDown) {
	        _this.props.onKeyDown(event, key);
	      }
	    };
	
	    _this.handleItemFocus = function (event) {
	      var list = _this.listRef;
	
	      if (list) {
	        for (var i = 0; i < list.children.length; i += 1) {
	          if (list.children[i] === event.currentTarget) {
	            _this.setTabIndex(i);
	
	            break;
	          }
	        }
	      }
	    };
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(MenuList, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.resetTabIndex();
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      clearTimeout(this.blurTimer);
	    }
	  }, {
	    key: "setTabIndex",
	    value: function setTabIndex(index) {
	      this.setState({
	        currentTabIndex: index
	      });
	    }
	  }, {
	    key: "focus",
	    value: function focus() {
	      var currentTabIndex = this.state.currentTabIndex;
	      var list = this.listRef;
	
	      if (!list || !list.children || !list.firstChild) {
	        return;
	      }
	
	      if (currentTabIndex && currentTabIndex >= 0) {
	        list.children[currentTabIndex].focus();
	      } else {
	        list.firstChild.focus();
	      }
	    }
	  }, {
	    key: "resetTabIndex",
	    value: function resetTabIndex() {
	      var list = this.listRef;
	      var currentFocus = (0, _ownerDocument.default)(list).activeElement;
	      var items = [];
	
	      for (var i = 0; i < list.children.length; i += 1) {
	        items.push(list.children[i]);
	      }
	
	      var currentFocusIndex = items.indexOf(currentFocus);
	
	      if (currentFocusIndex !== -1) {
	        return this.setTabIndex(currentFocusIndex);
	      }
	
	      if (this.selectedItemRef) {
	        return this.setTabIndex(items.indexOf(this.selectedItemRef));
	      }
	
	      return this.setTabIndex(0);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _this$props = this.props,
	          children = _this$props.children,
	          className = _this$props.className,
	          onBlur = _this$props.onBlur,
	          onKeyDown = _this$props.onKeyDown,
	          other = (0, _objectWithoutProperties2.default)(_this$props, ["children", "className", "onBlur", "onKeyDown"]);
	      return _react.default.createElement(_List.default, (0, _extends2.default)({
	        role: "menu",
	        ref: function ref(_ref) {
	          _this2.listRef = _reactDom.default.findDOMNode(_ref);
	        },
	        className: className,
	        onKeyDown: this.handleKeyDown,
	        onBlur: this.handleBlur
	      }, other), _react.default.Children.map(children, function (child, index) {
	        if (!_react.default.isValidElement(child)) {
	          return null;
	        }
	
	         false ? (0, _warning.default)(child.type !== _react.default.Fragment, ["Material-UI: the MenuList component doesn't accept a Fragment as a child.", 'Consider providing an array instead.'].join('\n')) : void 0;
	        return _react.default.cloneElement(child, {
	          tabIndex: index === _this2.state.currentTabIndex ? 0 : -1,
	          ref: child.props.selected ? function (ref) {
	            _this2.selectedItemRef = _reactDom.default.findDOMNode(ref);
	          } : undefined,
	          onFocus: _this2.handleItemFocus
	        });
	      }));
	    }
	  }]);
	  return MenuList;
	}(_react.default.Component);
	
	MenuList.propTypes =  false ? {
	  /**
	   * MenuList contents, normally `MenuItem`s.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  onBlur: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onKeyDown: _propTypes.default.func
	} : {};
	var _default = MenuList;
	exports.default = _default;

/***/ }),
/* 672 */,
/* 673 */,
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(29));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _keycode = _interopRequireDefault(__webpack_require__(116));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(56));
	
	var _RootRef = _interopRequireDefault(__webpack_require__(239));
	
	var _Portal = _interopRequireDefault(__webpack_require__(238));
	
	var _helpers = __webpack_require__(19);
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _ModalManager = _interopRequireDefault(__webpack_require__(360));
	
	var _Backdrop = _interopRequireDefault(__webpack_require__(346));
	
	var _manageAriaHidden = __webpack_require__(361);
	
	function getContainer(container, defaultContainer) {
	  container = typeof container === 'function' ? container() : container;
	  return _reactDom.default.findDOMNode(container) || defaultContainer;
	}
	
	function getHasTransition(props) {
	  return props.children ? props.children.props.hasOwnProperty('in') : false;
	}
	
	var styles = function styles(theme) {
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      position: 'fixed',
	      zIndex: theme.zIndex.modal,
	      right: 0,
	      bottom: 0,
	      top: 0,
	      left: 0
	    },
	
	    /* Styles applied to the root element if the `Modal` has exited. */
	    hidden: {
	      visibility: 'hidden'
	    }
	  };
	};
	/* istanbul ignore if */
	
	
	exports.styles = styles;
	
	if (false) {
	  throw new Error('Material-UI: react@16.3.0 or greater is required.');
	}
	/**
	 * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
	 */
	
	
	var Modal =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Modal, _React$Component);
	
	  function Modal(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Modal);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Modal).call(this));
	    _this.mounted = false;
	
	    _this.handleOpen = function () {
	      var doc = (0, _ownerDocument.default)(_this.mountNode);
	      var container = getContainer(_this.props.container, doc.body);
	
	      _this.props.manager.add((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), container);
	
	      doc.addEventListener('keydown', _this.handleDocumentKeyDown);
	      doc.addEventListener('focus', _this.enforceFocus, true);
	
	      if (_this.dialogRef) {
	        _this.handleOpened();
	      }
	    };
	
	    _this.handleRendered = function () {
	      if (_this.props.onRendered) {
	        _this.props.onRendered();
	      }
	
	      if (_this.props.open) {
	        _this.handleOpened();
	      } else {
	        (0, _manageAriaHidden.ariaHidden)(_this.modalRef, true);
	      }
	    };
	
	    _this.handleOpened = function () {
	      _this.autoFocus();
	
	      _this.props.manager.mount((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this))); // Fix a bug on Chrome where the scroll isn't initially 0.
	
	
	      _this.modalRef.scrollTop = 0;
	    };
	
	    _this.handleClose = function () {
	      _this.props.manager.remove((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));
	
	      var doc = (0, _ownerDocument.default)(_this.mountNode);
	      doc.removeEventListener('keydown', _this.handleDocumentKeyDown);
	      doc.removeEventListener('focus', _this.enforceFocus, true);
	
	      _this.restoreLastFocus();
	    };
	
	    _this.handleExited = function () {
	      _this.setState({
	        exited: true
	      });
	    };
	
	    _this.handleBackdropClick = function (event) {
	      if (event.target !== event.currentTarget) {
	        return;
	      }
	
	      if (_this.props.onBackdropClick) {
	        _this.props.onBackdropClick(event);
	      }
	
	      if (!_this.props.disableBackdropClick && _this.props.onClose) {
	        _this.props.onClose(event, 'backdropClick');
	      }
	    };
	
	    _this.handleDocumentKeyDown = function (event) {
	      // Ignore events that have been `event.preventDefault()` marked.
	      if ((0, _keycode.default)(event) !== 'esc' || !_this.isTopModal() || event.defaultPrevented) {
	        return;
	      }
	
	      if (_this.props.onEscapeKeyDown) {
	        _this.props.onEscapeKeyDown(event);
	      }
	
	      if (!_this.props.disableEscapeKeyDown && _this.props.onClose) {
	        _this.props.onClose(event, 'escapeKeyDown');
	      }
	    };
	
	    _this.enforceFocus = function () {
	      // The Modal might not already be mounted.
	      if (!_this.isTopModal() || _this.props.disableEnforceFocus || !_this.mounted || !_this.dialogRef) {
	        return;
	      }
	
	      var currentActiveElement = (0, _ownerDocument.default)(_this.mountNode).activeElement;
	
	      if (!_this.dialogRef.contains(currentActiveElement)) {
	        _this.dialogRef.focus();
	      }
	    };
	
	    _this.handlePortalRef = function (ref) {
	      _this.mountNode = ref ? ref.getMountNode() : ref;
	    };
	
	    _this.handleModalRef = function (ref) {
	      _this.modalRef = ref;
	    };
	
	    _this.onRootRef = function (ref) {
	      _this.dialogRef = ref;
	    };
	
	    _this.state = {
	      exited: !props.open
	    };
	    return _this;
	  }
	
	  (0, _createClass2.default)(Modal, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.mounted = true;
	
	      if (this.props.open) {
	        this.handleOpen();
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      if (prevProps.open && !this.props.open) {
	        this.handleClose();
	      } else if (!prevProps.open && this.props.open) {
	        this.lastFocus = (0, _ownerDocument.default)(this.mountNode).activeElement;
	        this.handleOpen();
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.mounted = false;
	
	      if (this.props.open || getHasTransition(this.props) && !this.state.exited) {
	        this.handleClose();
	      }
	    }
	  }, {
	    key: "autoFocus",
	    value: function autoFocus() {
	      // We might render an empty child.
	      if (this.props.disableAutoFocus || !this.dialogRef) {
	        return;
	      }
	
	      var currentActiveElement = (0, _ownerDocument.default)(this.mountNode).activeElement;
	
	      if (!this.dialogRef.contains(currentActiveElement)) {
	        if (!this.dialogRef.hasAttribute('tabIndex')) {
	           false ? (0, _warning.default)(false, ['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to "-1".'].join('\n')) : void 0;
	          this.dialogRef.setAttribute('tabIndex', -1);
	        }
	
	        this.lastFocus = currentActiveElement;
	        this.dialogRef.focus();
	      }
	    }
	  }, {
	    key: "restoreLastFocus",
	    value: function restoreLastFocus() {
	      if (this.props.disableRestoreFocus || !this.lastFocus) {
	        return;
	      } // Not all elements in IE 11 have a focus method.
	      // Because IE 11 market share is low, we accept the restore focus being broken
	      // and we silent the issue.
	
	
	      if (this.lastFocus.focus) {
	        this.lastFocus.focus();
	      }
	
	      this.lastFocus = null;
	    }
	  }, {
	    key: "isTopModal",
	    value: function isTopModal() {
	      return this.props.manager.isTopModal(this);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          BackdropComponent = _this$props.BackdropComponent,
	          BackdropProps = _this$props.BackdropProps,
	          children = _this$props.children,
	          classes = _this$props.classes,
	          className = _this$props.className,
	          container = _this$props.container,
	          disableAutoFocus = _this$props.disableAutoFocus,
	          disableBackdropClick = _this$props.disableBackdropClick,
	          disableEnforceFocus = _this$props.disableEnforceFocus,
	          disableEscapeKeyDown = _this$props.disableEscapeKeyDown,
	          disablePortal = _this$props.disablePortal,
	          disableRestoreFocus = _this$props.disableRestoreFocus,
	          hideBackdrop = _this$props.hideBackdrop,
	          keepMounted = _this$props.keepMounted,
	          manager = _this$props.manager,
	          onBackdropClick = _this$props.onBackdropClick,
	          onClose = _this$props.onClose,
	          onEscapeKeyDown = _this$props.onEscapeKeyDown,
	          onRendered = _this$props.onRendered,
	          open = _this$props.open,
	          other = (0, _objectWithoutProperties2.default)(_this$props, ["BackdropComponent", "BackdropProps", "children", "classes", "className", "container", "disableAutoFocus", "disableBackdropClick", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onEscapeKeyDown", "onRendered", "open"]);
	      var exited = this.state.exited;
	      var hasTransition = getHasTransition(this.props);
	
	      if (!keepMounted && !open && (!hasTransition || exited)) {
	        return null;
	      }
	
	      var childProps = {}; // It's a Transition like component
	
	      if (hasTransition) {
	        childProps.onExited = (0, _helpers.createChainedFunction)(this.handleExited, children.props.onExited);
	      }
	
	      if (children.props.role === undefined) {
	        childProps.role = children.props.role || 'document';
	      }
	
	      if (children.props.tabIndex === undefined) {
	        childProps.tabIndex = children.props.tabIndex || '-1';
	      }
	
	      return _react.default.createElement(_Portal.default, {
	        ref: this.handlePortalRef,
	        container: container,
	        disablePortal: disablePortal,
	        onRendered: this.handleRendered
	      }, _react.default.createElement("div", (0, _extends2.default)({
	        ref: this.handleModalRef,
	        className: (0, _classnames.default)('mui-fixed', classes.root, className, (0, _defineProperty2.default)({}, classes.hidden, exited))
	      }, other), hideBackdrop ? null : _react.default.createElement(BackdropComponent, (0, _extends2.default)({
	        open: open,
	        onClick: this.handleBackdropClick
	      }, BackdropProps)), _react.default.createElement(_RootRef.default, {
	        rootRef: this.onRootRef
	      }, _react.default.cloneElement(children, childProps))));
	    }
	  }], [{
	    key: "getDerivedStateFromProps",
	    value: function getDerivedStateFromProps(nextProps) {
	      if (nextProps.open) {
	        return {
	          exited: false
	        };
	      }
	
	      if (!getHasTransition(nextProps)) {
	        // Otherwise let handleExited take care of marking exited.
	        return {
	          exited: true
	        };
	      }
	
	      return null;
	    }
	  }]);
	  return Modal;
	}(_react.default.Component);
	
	Modal.propTypes =  false ? {
	  /**
	   * A backdrop component. This property enables custom backdrop rendering.
	   */
	  BackdropComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Properties applied to the [`Backdrop`](/api/backdrop/) element.
	   */
	  BackdropProps: _propTypes.default.object,
	
	  /**
	   * A single child content element.
	   */
	  children: _propTypes.default.element,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * A node, component instance, or function that returns either.
	   * The `container` will have the portal children appended to it.
	   */
	  container: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
	
	  /**
	   * If `true`, the modal will not automatically shift focus to itself when it opens, and
	   * replace it to the last focused element when it closes.
	   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
	   *
	   * Generally this should never be set to `true` as it makes the modal less
	   * accessible to assistive technologies, like screen readers.
	   */
	  disableAutoFocus: _propTypes.default.bool,
	
	  /**
	   * If `true`, clicking the backdrop will not fire any callback.
	   */
	  disableBackdropClick: _propTypes.default.bool,
	
	  /**
	   * If `true`, the modal will not prevent focus from leaving the modal while open.
	   *
	   * Generally this should never be set to `true` as it makes the modal less
	   * accessible to assistive technologies, like screen readers.
	   */
	  disableEnforceFocus: _propTypes.default.bool,
	
	  /**
	   * If `true`, hitting escape will not fire any callback.
	   */
	  disableEscapeKeyDown: _propTypes.default.bool,
	
	  /**
	   * Disable the portal behavior.
	   * The children stay within it's parent DOM hierarchy.
	   */
	  disablePortal: _propTypes.default.bool,
	
	  /**
	   * If `true`, the modal will not restore focus to previously focused element once
	   * modal is hidden.
	   */
	  disableRestoreFocus: _propTypes.default.bool,
	
	  /**
	   * If `true`, the backdrop is not rendered.
	   */
	  hideBackdrop: _propTypes.default.bool,
	
	  /**
	   * Always keep the children in the DOM.
	   * This property can be useful in SEO situation or
	   * when you want to maximize the responsiveness of the Modal.
	   */
	  keepMounted: _propTypes.default.bool,
	
	  /**
	   * A modal manager used to track and manage the state of open
	   * Modals. This enables customizing how modals interact within a container.
	   */
	  manager: _propTypes.default.object,
	
	  /**
	   * Callback fired when the backdrop is clicked.
	   */
	  onBackdropClick: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component requests to be closed.
	   * The `reason` parameter can optionally be used to control the response to `onClose`.
	   *
	   * @param {object} event The event source of the callback
	   * @param {string} reason Can be:`"escapeKeyDown"`, `"backdropClick"`
	   */
	  onClose: _propTypes.default.func,
	
	  /**
	   * Callback fired when the escape key is pressed,
	   * `disableEscapeKeyDown` is false and the modal is in focus.
	   */
	  onEscapeKeyDown: _propTypes.default.func,
	
	  /**
	   * Callback fired once the children has been mounted into the `container`.
	   * It signals that the `open={true}` property took effect.
	   */
	  onRendered: _propTypes.default.func,
	
	  /**
	   * If `true`, the modal is open.
	   */
	  open: _propTypes.default.bool.isRequired
	} : {};
	Modal.defaultProps = {
	  BackdropComponent: _Backdrop.default,
	  disableAutoFocus: false,
	  disableBackdropClick: false,
	  disableEnforceFocus: false,
	  disableEscapeKeyDown: false,
	  disablePortal: false,
	  disableRestoreFocus: false,
	  hideBackdrop: false,
	  keepMounted: false,
	  // Modals don't open on the server so this won't conflict with concurrent requests.
	  manager: new _ModalManager.default()
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  flip: false,
	  name: 'MuiModal'
	})(Modal);
	
	exports.default = _default;

/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isBody = isBody;
	exports.default = isOverflowing;
	
	var _isWindow = _interopRequireDefault(__webpack_require__(290));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(56));
	
	var _ownerWindow = _interopRequireDefault(__webpack_require__(179));
	
	function isBody(node) {
	  return node && node.tagName.toLowerCase() === 'body';
	} // Do we have a vertical scroll bar?
	
	
	function isOverflowing(container) {
	  var doc = (0, _ownerDocument.default)(container);
	  var win = (0, _ownerWindow.default)(doc);
	  /* istanbul ignore next */
	
	  if (!(0, _isWindow.default)(doc) && !isBody(container)) {
	    return container.scrollHeight > container.clientHeight;
	  } // Takes in account potential non zero margin on the body.
	
	
	  var style = win.getComputedStyle(doc.body);
	  var marginLeft = parseInt(style.getPropertyValue('margin-left'), 10);
	  var marginRight = parseInt(style.getPropertyValue('margin-right'), 10);
	  return marginLeft + doc.body.clientWidth + marginRight < win.innerWidth;
	}

/***/ }),
/* 676 */,
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _utils = __webpack_require__(40);
	
	/**
	 * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).
	 *
	 * This component can be useful in a variety of situations:
	 * - Escape hatch for broken dependencies not supporting SSR.
	 * - Improve the time-to-first paint on the client by only rendering above the fold.
	 * - Reduce the rendering time on the server.
	 * - Under too heavy server load, you can turn on service degradation.
	 */
	var NoSsr =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(NoSsr, _React$Component);
	
	  function NoSsr() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, NoSsr);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(NoSsr)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    _this.mounted = false;
	    _this.state = {
	      mounted: false
	    };
	    return _this;
	  }
	
	  (0, _createClass2.default)(NoSsr, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      this.mounted = true;
	
	      if (this.props.defer) {
	        // Wondering why we use two RAFs? Check this video out:
	        // https://www.youtube.com/watch?v=cCOL7MC4Pl0
	        requestAnimationFrame(function () {
	          // The browser should be about to render the DOM that React commited at this point.
	          // We don't want to interrupt. Let's wait the next raf.
	          requestAnimationFrame(function () {
	            if (_this2.mounted) {
	              _this2.setState({
	                mounted: true
	              });
	            }
	          });
	        });
	      } else {
	        this.setState({
	          mounted: true
	        });
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.mounted = false;
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          children = _this$props.children,
	          fallback = _this$props.fallback;
	      return this.state.mounted ? children : fallback;
	    }
	  }]);
	  return NoSsr;
	}(_react.default.Component);
	
	NoSsr.propTypes =  false ? {
	  children: _propTypes.default.node.isRequired,
	
	  /**
	   * If `true`, the component will not only prevent server side rendering.
	   * It will also defer the rendering of the children into a different screen frame.
	   */
	  defer: _propTypes.default.bool,
	
	  /**
	   * The fallback content to display.
	   */
	  fallback: _propTypes.default.node
	} : {};
	NoSsr.propTypes =  false ? (0, _utils.exactProp)(NoSsr.propTypes) : {};
	NoSsr.defaultProps = {
	  defer: false,
	  fallback: null
	};
	var _default = NoSsr;
	exports.default = _default;

/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _extends3 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _styles = __webpack_require__(86);
	
	var _helpers = __webpack_require__(19);
	
	var styles = function styles(theme) {
	  var align = theme.direction === 'rtl' ? 'right' : 'left';
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      position: 'absolute',
	      bottom: 0,
	      right: 0,
	      top: -5,
	      left: 0,
	      margin: 0,
	      padding: 0,
	      pointerEvents: 'none',
	      borderRadius: theme.shape.borderRadius,
	      borderStyle: 'solid',
	      borderWidth: 1,
	      // Match the Input Label
	      transition: theme.transitions.create(["padding-".concat(align), 'border-color', 'border-width'], {
	        duration: theme.transitions.duration.shorter,
	        easing: theme.transitions.easing.easeOut
	      })
	    },
	
	    /* Styles applied to the legend element. */
	    legend: {
	      textAlign: 'left',
	      padding: 0,
	      lineHeight: '11px',
	      transition: theme.transitions.create('width', {
	        duration: theme.transitions.duration.shorter,
	        easing: theme.transitions.easing.easeOut
	      })
	    }
	  };
	};
	/**
	 * @ignore - internal component.
	 */
	
	
	exports.styles = styles;
	
	function NotchedOutline(props) {
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      labelWidthProp = props.labelWidth,
	      notched = props.notched,
	      style = props.style,
	      theme = props.theme,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "labelWidth", "notched", "style", "theme"]);
	  var align = theme.direction === 'rtl' ? 'right' : 'left';
	  var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0;
	  return _react.default.createElement("fieldset", (0, _extends3.default)({
	    "aria-hidden": true,
	    style: (0, _extends3.default)((0, _defineProperty2.default)({}, "padding".concat((0, _helpers.capitalize)(align)), 8 + (notched ? 0 : labelWidth / 2)), style),
	    className: (0, _classnames.default)(classes.root, className)
	  }, other), _react.default.createElement("legend", {
	    className: classes.legend,
	    style: {
	      // IE 11: fieldset with legend does not render
	      // a border radius. This maintains consistency
	      // by always having a legend rendered
	      width: notched ? labelWidth : 0.01
	    }
	  }, _react.default.createElement("span", {
	    dangerouslySetInnerHTML: {
	      __html: '&#8203;'
	    }
	  })));
	}
	
	NotchedOutline.propTypes =  false ? {
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The width of the legend.
	   */
	  labelWidth: _propTypes.default.number.isRequired,
	
	  /**
	   * If `true`, the outline is notched to accommodate the label.
	   */
	  notched: _propTypes.default.bool.isRequired,
	
	  /**
	   * @ignore
	   */
	  style: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  theme: _propTypes.default.object
	} : {};
	
	var _default = (0, _styles.withStyles)(styles, {
	  name: 'MuiPrivateNotchedOutline',
	  withTheme: true
	})(NotchedOutline);
	
	exports.default = _default;

/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _InputBase = _interopRequireDefault(__webpack_require__(132));
	
	var _NotchedOutline = _interopRequireDefault(__webpack_require__(678));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	// @inheritedComponent InputBase
	var styles = function styles(theme) {
	  var borderColor = theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)';
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      position: 'relative',
	      '& $notchedOutline': {
	        borderColor: borderColor
	      },
	      '&:hover:not($disabled):not($focused):not($error) $notchedOutline': {
	        borderColor: theme.palette.text.primary,
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          borderColor: borderColor
	        }
	      },
	      '&$focused $notchedOutline': {
	        borderColor: theme.palette.primary.main,
	        borderWidth: 2
	      },
	      '&$error $notchedOutline': {
	        borderColor: theme.palette.error.main
	      },
	      '&$disabled $notchedOutline': {
	        borderColor: theme.palette.action.disabled
	      }
	    },
	
	    /* Styles applied to the root element if the component is focused. */
	    focused: {},
	
	    /* Styles applied to the root element if `disabled={true}`. */
	    disabled: {},
	
	    /* Styles applied to the root element if `startAdornment` is provided. */
	    adornedStart: {
	      paddingLeft: 14
	    },
	
	    /* Styles applied to the root element if `endAdornment` is provided. */
	    adornedEnd: {
	      paddingRight: 14
	    },
	
	    /* Styles applied to the root element if `error={true}`. */
	    error: {},
	
	    /* Styles applied to the root element if `multiline={true}`. */
	    multiline: {
	      padding: '18.5px 14px',
	      boxSizing: 'border-box' // Prevent padding issue with fullWidth.
	
	    },
	
	    /* Styles applied to the `NotchedOutline` element. */
	    notchedOutline: {},
	
	    /* Styles applied to the `input` element. */
	    input: {
	      padding: '18.5px 14px'
	    },
	
	    /* Styles applied to the `input` element if `margin="dense"`. */
	    inputMarginDense: {
	      paddingTop: 15,
	      paddingBottom: 15
	    },
	
	    /* Styles applied to the `input` element if `multiline={true}`. */
	    inputMultiline: {
	      padding: 0
	    },
	
	    /* Styles applied to the `input` element if `startAdornment` is provided. */
	    inputAdornedStart: {
	      paddingLeft: 0
	    },
	
	    /* Styles applied to the `input` element if `endAdornment` is provided. */
	    inputAdornedEnd: {
	      paddingRight: 0
	    }
	  };
	};
	
	exports.styles = styles;
	
	function OutlinedInput(props) {
	  var classes = props.classes,
	      labelWidth = props.labelWidth,
	      notched = props.notched,
	      other = (0, _objectWithoutProperties2.default)(props, ["classes", "labelWidth", "notched"]);
	  return _react.default.createElement(_InputBase.default, (0, _extends2.default)({
	    renderPrefix: function renderPrefix(state) {
	      return _react.default.createElement(_NotchedOutline.default, {
	        className: classes.notchedOutline,
	        labelWidth: labelWidth,
	        notched: typeof notched !== 'undefined' ? notched : Boolean(state.startAdornment || state.filled || state.focused)
	      });
	    },
	    classes: (0, _extends2.default)({}, classes, {
	      root: (0, _classnames.default)(classes.root, classes.underline),
	      notchedOutline: null
	    })
	  }, other));
	}
	
	OutlinedInput.propTypes =  false ? {
	  /**
	   * This property helps users to fill forms faster, especially on mobile devices.
	   * The name can be confusing, as it's more like an autofill.
	   * You can learn more about it here:
	   * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill
	   */
	  autoComplete: _propTypes.default.string,
	
	  /**
	   * If `true`, the input will be focused during the first mount.
	   */
	  autoFocus: _propTypes.default.bool,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The CSS class name of the wrapper element.
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The default input value, useful when not controlling the component.
	   */
	  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object]))]),
	
	  /**
	   * If `true`, the input will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * End `InputAdornment` for this component.
	   */
	  endAdornment: _propTypes.default.node,
	
	  /**
	   * If `true`, the input will indicate an error. This is normally obtained via context from
	   * FormControl.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * The id of the `input` element.
	   */
	  id: _propTypes.default.string,
	
	  /**
	   * The component used for the native input.
	   * Either a string to use a DOM element or a component.
	   */
	  inputComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Attributes applied to the `input` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * Use that property to pass a ref callback to the native input component.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * The width of the legend.
	   */
	  labelWidth: _propTypes.default.number.isRequired,
	
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   */
	  margin: _propTypes.default.oneOf(['dense', 'none']),
	
	  /**
	   * If `true`, a textarea element will be rendered.
	   */
	  multiline: _propTypes.default.bool,
	
	  /**
	   * Name attribute of the `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * If `true`, the outline is notched to accommodate the label.
	   */
	  notched: _propTypes.default.bool,
	
	  /**
	   * Callback fired when the value is changed.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * The short hint displayed in the input before the user enters a value.
	   */
	  placeholder: _propTypes.default.string,
	
	  /**
	   * It prevents the user from changing the value of the field
	   * (not from interacting with the field).
	   */
	  readOnly: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will be required.
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  rowsMax: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Start `InputAdornment` for this component.
	   */
	  startAdornment: _propTypes.default.node,
	
	  /**
	   * Type of the input element. It should be a valid HTML5 input type.
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The input value, required for a controlled component.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object]))])
	} : {};
	_InputBase.default.defaultProps = {
	  fullWidth: false,
	  inputComponent: 'input',
	  multiline: false,
	  type: 'text'
	};
	OutlinedInput.muiName = 'Input';
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiOutlinedInput'
	})(OutlinedInput);
	
	exports.default = _default;

/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var styles = function styles(theme) {
	  var elevations = {};
	  theme.shadows.forEach(function (shadow, index) {
	    elevations["elevation".concat(index)] = {
	      boxShadow: shadow
	    };
	  });
	  return (0, _extends2.default)({
	    /* Styles applied to the root element. */
	    root: {
	      backgroundColor: theme.palette.background.paper
	    },
	
	    /* Styles applied to the root element if `square={false}`. */
	    rounded: {
	      borderRadius: theme.shape.borderRadius
	    }
	  }, elevations);
	};
	
	exports.styles = styles;
	
	function Paper(props) {
	  var classes = props.classes,
	      classNameProp = props.className,
	      Component = props.component,
	      square = props.square,
	      elevation = props.elevation,
	      other = (0, _objectWithoutProperties2.default)(props, ["classes", "className", "component", "square", "elevation"]);
	   false ? (0, _warning.default)(elevation >= 0 && elevation < 25, "Material-UI: this elevation `".concat(elevation, "` is not implemented.")) : void 0;
	  var className = (0, _classnames.default)(classes.root, classes["elevation".concat(elevation)], (0, _defineProperty2.default)({}, classes.rounded, !square), classNameProp);
	  return _react.default.createElement(Component, (0, _extends2.default)({
	    className: className
	  }, other));
	}
	
	Paper.propTypes =  false ? {
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Shadow depth, corresponds to `dp` in the spec.
	   * It's accepting values between 0 and 24 inclusive.
	   */
	  elevation: _propTypes.default.number,
	
	  /**
	   * If `true`, rounded corners are disabled.
	   */
	  square: _propTypes.default.bool
	} : {};
	Paper.defaultProps = {
	  component: 'div',
	  elevation: 2,
	  square: false
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiPaper'
	})(Paper);
	
	exports.default = _default;

/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(29));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _debounce = _interopRequireDefault(__webpack_require__(91));
	
	var _reactEventListener = _interopRequireDefault(__webpack_require__(59));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(56));
	
	var _ownerWindow = _interopRequireDefault(__webpack_require__(179));
	
	var _helpers = __webpack_require__(19);
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _Modal = _interopRequireDefault(__webpack_require__(178));
	
	var _Grow = _interopRequireDefault(__webpack_require__(102));
	
	var _Paper = _interopRequireDefault(__webpack_require__(39));
	
	// @inheritedComponent Modal
	// < 1kb payload overhead when lodash/debounce is > 3kb.
	function getOffsetTop(rect, vertical) {
	  var offset = 0;
	
	  if (typeof vertical === 'number') {
	    offset = vertical;
	  } else if (vertical === 'center') {
	    offset = rect.height / 2;
	  } else if (vertical === 'bottom') {
	    offset = rect.height;
	  }
	
	  return offset;
	}
	
	function getOffsetLeft(rect, horizontal) {
	  var offset = 0;
	
	  if (typeof horizontal === 'number') {
	    offset = horizontal;
	  } else if (horizontal === 'center') {
	    offset = rect.width / 2;
	  } else if (horizontal === 'right') {
	    offset = rect.width;
	  }
	
	  return offset;
	}
	
	function getTransformOriginValue(transformOrigin) {
	  return [transformOrigin.horizontal, transformOrigin.vertical].map(function (n) {
	    return typeof n === 'number' ? "".concat(n, "px") : n;
	  }).join(' ');
	} // Sum the scrollTop between two elements.
	
	
	function getScrollParent(parent, child) {
	  var element = child;
	  var scrollTop = 0;
	
	  while (element && element !== parent) {
	    element = element.parentNode;
	    scrollTop += element.scrollTop;
	  }
	
	  return scrollTop;
	}
	
	function getAnchorEl(anchorEl) {
	  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
	}
	
	var styles = {
	  /* Styles applied to the `Paper` component. */
	  paper: {
	    position: 'absolute',
	    overflowY: 'auto',
	    overflowX: 'hidden',
	    // So we see the popover when it's empty.
	    // It's most likely on issue on userland.
	    minWidth: 16,
	    minHeight: 16,
	    maxWidth: 'calc(100% - 32px)',
	    maxHeight: 'calc(100% - 32px)',
	    // We disable the focus ring for mouse, touch and keyboard users.
	    outline: 'none'
	  }
	};
	exports.styles = styles;
	
	var Popover =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Popover, _React$Component);
	
	  function Popover() {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Popover);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Popover).call(this));
	    _this.handleGetOffsetTop = getOffsetTop;
	    _this.handleGetOffsetLeft = getOffsetLeft;
	
	    _this.componentWillUnmount = function () {
	      _this.handleResize.clear();
	    };
	
	    _this.setPositioningStyles = function (element) {
	      var positioning = _this.getPositioningStyle(element);
	
	      if (positioning.top !== null) {
	        element.style.top = positioning.top;
	      }
	
	      if (positioning.left !== null) {
	        element.style.left = positioning.left;
	      }
	
	      element.style.transformOrigin = positioning.transformOrigin;
	    };
	
	    _this.getPositioningStyle = function (element) {
	      var _this$props = _this.props,
	          anchorEl = _this$props.anchorEl,
	          anchorReference = _this$props.anchorReference,
	          marginThreshold = _this$props.marginThreshold; // Check if the parent has requested anchoring on an inner content node
	
	      var contentAnchorOffset = _this.getContentAnchorOffset(element);
	
	      var elemRect = {
	        width: element.offsetWidth,
	        height: element.offsetHeight
	      }; // Get the transform origin point on the element itself
	
	      var transformOrigin = _this.getTransformOrigin(elemRect, contentAnchorOffset);
	
	      if (anchorReference === 'none') {
	        return {
	          top: null,
	          left: null,
	          transformOrigin: getTransformOriginValue(transformOrigin)
	        };
	      } // Get the offset of of the anchoring element
	
	
	      var anchorOffset = _this.getAnchorOffset(contentAnchorOffset); // Calculate element positioning
	
	
	      var top = anchorOffset.top - transformOrigin.vertical;
	      var left = anchorOffset.left - transformOrigin.horizontal;
	      var bottom = top + elemRect.height;
	      var right = left + elemRect.width; // Use the parent window of the anchorEl if provided
	
	      var containerWindow = (0, _ownerWindow.default)(getAnchorEl(anchorEl)); // Window thresholds taking required margin into account
	
	      var heightThreshold = containerWindow.innerHeight - marginThreshold;
	      var widthThreshold = containerWindow.innerWidth - marginThreshold; // Check if the vertical axis needs shifting
	
	      if (top < marginThreshold) {
	        var diff = top - marginThreshold;
	        top -= diff;
	        transformOrigin.vertical += diff;
	      } else if (bottom > heightThreshold) {
	        var _diff = bottom - heightThreshold;
	
	        top -= _diff;
	        transformOrigin.vertical += _diff;
	      }
	
	       false ? (0, _warning.default)(elemRect.height < heightThreshold || !elemRect.height || !heightThreshold, ['Material-UI: the popover component is too tall.', "Some part of it can not be seen on the screen (".concat(elemRect.height - heightThreshold, "px)."), 'Please consider adding a `max-height` to improve the user-experience.'].join('\n')) : void 0; // Check if the horizontal axis needs shifting
	
	      if (left < marginThreshold) {
	        var _diff2 = left - marginThreshold;
	
	        left -= _diff2;
	        transformOrigin.horizontal += _diff2;
	      } else if (right > widthThreshold) {
	        var _diff3 = right - widthThreshold;
	
	        left -= _diff3;
	        transformOrigin.horizontal += _diff3;
	      }
	
	      return {
	        top: "".concat(top, "px"),
	        left: "".concat(left, "px"),
	        transformOrigin: getTransformOriginValue(transformOrigin)
	      };
	    };
	
	    _this.handleEntering = function (element) {
	      if (_this.props.onEntering) {
	        _this.props.onEntering(element);
	      }
	
	      _this.setPositioningStyles(element);
	    };
	
	    if (typeof window !== 'undefined') {
	      _this.handleResize = (0, _debounce.default)(function () {
	        // Because we debounce the event, the open property might no longer be true
	        // when the callback resolves.
	        if (!_this.props.open) {
	          return;
	        }
	
	        _this.setPositioningStyles(_this.paperRef);
	      }, 166); // Corresponds to 10 frames at 60 Hz.
	    }
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(Popover, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (this.props.action) {
	        this.props.action({
	          updatePosition: this.handleResize
	        });
	      }
	    }
	  }, {
	    key: "getAnchorOffset",
	    // Returns the top/left offset of the position
	    // to attach to on the anchor element (or body if none is provided)
	    value: function getAnchorOffset(contentAnchorOffset) {
	      var _this$props2 = this.props,
	          anchorEl = _this$props2.anchorEl,
	          anchorOrigin = _this$props2.anchorOrigin,
	          anchorReference = _this$props2.anchorReference,
	          anchorPosition = _this$props2.anchorPosition;
	
	      if (anchorReference === 'anchorPosition') {
	         false ? (0, _warning.default)(anchorPosition, 'Material-UI: you need to provide a `anchorPosition` property when using ' + '<Popover anchorReference="anchorPosition" />.') : void 0;
	        return anchorPosition;
	      } // If an anchor element wasn't provided, just use the parent body element of this Popover
	
	
	      var anchorElement = getAnchorEl(anchorEl) || (0, _ownerDocument.default)(this.paperRef).body;
	      var anchorRect = anchorElement.getBoundingClientRect();
	      var anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : 'center';
	      return {
	        top: anchorRect.top + this.handleGetOffsetTop(anchorRect, anchorVertical),
	        left: anchorRect.left + this.handleGetOffsetLeft(anchorRect, anchorOrigin.horizontal)
	      };
	    } // Returns the vertical offset of inner content to anchor the transform on if provided
	
	  }, {
	    key: "getContentAnchorOffset",
	    value: function getContentAnchorOffset(element) {
	      var _this$props3 = this.props,
	          getContentAnchorEl = _this$props3.getContentAnchorEl,
	          anchorReference = _this$props3.anchorReference;
	      var contentAnchorOffset = 0;
	
	      if (getContentAnchorEl && anchorReference === 'anchorEl') {
	        var contentAnchorEl = getContentAnchorEl(element);
	
	        if (contentAnchorEl && element.contains(contentAnchorEl)) {
	          var scrollTop = getScrollParent(element, contentAnchorEl);
	          contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;
	        } // != the default value
	
	
	         false ? (0, _warning.default)(this.props.anchorOrigin.vertical === 'top', ['Material-UI: you can not change the default `anchorOrigin.vertical` value ', 'when also providing the `getContentAnchorEl` property to the popover component.', 'Only use one of the two properties.', 'Set `getContentAnchorEl` to `null | undefined`' + ' or leave `anchorOrigin.vertical` unchanged.'].join('\n')) : void 0;
	      }
	
	      return contentAnchorOffset;
	    } // Return the base transform origin using the element
	    // and taking the content anchor offset into account if in use
	
	  }, {
	    key: "getTransformOrigin",
	    value: function getTransformOrigin(elemRect) {
	      var contentAnchorOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	      var transformOrigin = this.props.transformOrigin;
	      return {
	        vertical: this.handleGetOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset,
	        horizontal: this.handleGetOffsetLeft(elemRect, transformOrigin.horizontal)
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _this$props4 = this.props,
	          action = _this$props4.action,
	          anchorEl = _this$props4.anchorEl,
	          anchorOrigin = _this$props4.anchorOrigin,
	          anchorPosition = _this$props4.anchorPosition,
	          anchorReference = _this$props4.anchorReference,
	          children = _this$props4.children,
	          classes = _this$props4.classes,
	          containerProp = _this$props4.container,
	          elevation = _this$props4.elevation,
	          getContentAnchorEl = _this$props4.getContentAnchorEl,
	          marginThreshold = _this$props4.marginThreshold,
	          ModalClasses = _this$props4.ModalClasses,
	          onEnter = _this$props4.onEnter,
	          onEntered = _this$props4.onEntered,
	          onEntering = _this$props4.onEntering,
	          onExit = _this$props4.onExit,
	          onExited = _this$props4.onExited,
	          onExiting = _this$props4.onExiting,
	          open = _this$props4.open,
	          PaperProps = _this$props4.PaperProps,
	          role = _this$props4.role,
	          transformOrigin = _this$props4.transformOrigin,
	          TransitionComponent = _this$props4.TransitionComponent,
	          transitionDurationProp = _this$props4.transitionDuration,
	          _this$props4$Transiti = _this$props4.TransitionProps,
	          TransitionProps = _this$props4$Transiti === void 0 ? {} : _this$props4$Transiti,
	          other = (0, _objectWithoutProperties2.default)(_this$props4, ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "classes", "container", "elevation", "getContentAnchorEl", "marginThreshold", "ModalClasses", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "open", "PaperProps", "role", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps"]);
	      var transitionDuration = transitionDurationProp;
	
	      if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {
	        transitionDuration = undefined;
	      } // If the container prop is provided, use that
	      // If the anchorEl prop is provided, use its parent body element as the container
	      // If neither are provided let the Modal take care of choosing the container
	
	
	      var container = containerProp || (anchorEl ? (0, _ownerDocument.default)(getAnchorEl(anchorEl)).body : undefined);
	      return _react.default.createElement(_Modal.default, (0, _extends2.default)({
	        classes: ModalClasses,
	        container: container,
	        open: open,
	        BackdropProps: {
	          invisible: true
	        }
	      }, other), _react.default.createElement(TransitionComponent, (0, _extends2.default)({
	        appear: true,
	        in: open,
	        onEnter: onEnter,
	        onEntered: onEntered,
	        onExit: onExit,
	        onExited: onExited,
	        onExiting: onExiting,
	        role: role,
	        timeout: transitionDuration
	      }, TransitionProps, {
	        onEntering: (0, _helpers.createChainedFunction)(this.handleEntering, TransitionProps.onEntering)
	      }), _react.default.createElement(_Paper.default, (0, _extends2.default)({
	        className: classes.paper,
	        elevation: elevation,
	        ref: function ref(_ref) {
	          _this2.paperRef = _reactDom.default.findDOMNode(_ref);
	        }
	      }, PaperProps), _react.default.createElement(_reactEventListener.default, {
	        target: "window",
	        onResize: this.handleResize
	      }), children)));
	    }
	  }]);
	  return Popover;
	}(_react.default.Component);
	
	Popover.propTypes =  false ? {
	  /**
	   * This is callback property. It's called by the component on mount.
	   * This is useful when you want to trigger an action programmatically.
	   * It currently only supports updatePosition() action.
	   *
	   * @param {object} actions This object contains all posible actions
	   * that can be triggered programmatically.
	   */
	  action: _propTypes.default.func,
	
	  /**
	   * This is the DOM element, or a function that returns the DOM element,
	   * that may be used to set the position of the popover.
	   */
	  anchorEl: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
	
	  /**
	   * This is the point on the anchor where the popover's
	   * `anchorEl` will attach to. This is not used when the
	   * anchorReference is 'anchorPosition'.
	   *
	   * Options:
	   * vertical: [top, center, bottom];
	   * horizontal: [left, center, right].
	   */
	  anchorOrigin: _propTypes.default.shape({
	    horizontal: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.oneOf(['left', 'center', 'right'])]).isRequired,
	    vertical: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.oneOf(['top', 'center', 'bottom'])]).isRequired
	  }),
	
	  /**
	   * This is the position that may be used
	   * to set the position of the popover.
	   * The coordinates are relative to
	   * the application's client area.
	   */
	  anchorPosition: _propTypes.default.shape({
	    left: _propTypes.default.number.isRequired,
	    top: _propTypes.default.number.isRequired
	  }),
	
	  /*
	   * This determines which anchor prop to refer to to set
	   * the position of the popover.
	   */
	  anchorReference: _propTypes.default.oneOf(['anchorEl', 'anchorPosition', 'none']),
	
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * A node, component instance, or function that returns either.
	   * The `container` will passed to the Modal component.
	   * By default, it uses the body of the anchorEl's top-level document object,
	   * so it's simply `document.body` most of the time.
	   */
	  container: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
	
	  /**
	   * The elevation of the popover.
	   */
	  elevation: _propTypes.default.number,
	
	  /**
	   * This function is called in order to retrieve the content anchor element.
	   * It's the opposite of the `anchorEl` property.
	   * The content anchor element should be an element inside the popover.
	   * It's used to correctly scroll and set the position of the popover.
	   * The positioning strategy tries to make the content anchor element just above the
	   * anchor element.
	   */
	  getContentAnchorEl: _propTypes.default.func,
	
	  /**
	   * Specifies how close to the edge of the window the popover can appear.
	   */
	  marginThreshold: _propTypes.default.number,
	
	  /**
	   * `classes` property applied to the [`Modal`](/api/modal/) element.
	   */
	  ModalClasses: _propTypes.default.object,
	
	  /**
	   * Callback fired when the component requests to be closed.
	   *
	   * @param {object} event The event source of the callback.
	   */
	  onClose: _propTypes.default.func,
	
	  /**
	   * Callback fired before the component is entering.
	   */
	  onEnter: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component has entered.
	   */
	  onEntered: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component is entering.
	   */
	  onEntering: _propTypes.default.func,
	
	  /**
	   * Callback fired before the component is exiting.
	   */
	  onExit: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component has exited.
	   */
	  onExited: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component is exiting.
	   */
	  onExiting: _propTypes.default.func,
	
	  /**
	   * If `true`, the popover is visible.
	   */
	  open: _propTypes.default.bool.isRequired,
	
	  /**
	   * Properties applied to the [`Paper`](/api/paper/) element.
	   */
	  PaperProps: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  role: _propTypes.default.string,
	
	  /**
	   * This is the point on the popover which
	   * will attach to the anchor's origin.
	   *
	   * Options:
	   * vertical: [top, center, bottom, x(px)];
	   * horizontal: [left, center, right, x(px)].
	   */
	  transformOrigin: _propTypes.default.shape({
	    horizontal: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.oneOf(['left', 'center', 'right'])]).isRequired,
	    vertical: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.oneOf(['top', 'center', 'bottom'])]).isRequired
	  }),
	
	  /**
	   * Transition component.
	   */
	  TransitionComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Set to 'auto' to automatically calculate transition time based on height.
	   */
	  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	    enter: _propTypes.default.number,
	    exit: _propTypes.default.number
	  }), _propTypes.default.oneOf(['auto'])]),
	
	  /**
	   * Properties applied to the `Transition` element.
	   */
	  TransitionProps: _propTypes.default.object
	} : {};
	Popover.defaultProps = {
	  anchorReference: 'anchorEl',
	  anchorOrigin: {
	    vertical: 'top',
	    horizontal: 'left'
	  },
	  elevation: 8,
	  marginThreshold: 16,
	  transformOrigin: {
	    vertical: 'top',
	    horizontal: 'left'
	  },
	  TransitionComponent: _Grow.default,
	  transitionDuration: 'auto'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiPopover'
	})(Popover);
	
	exports.default = _default;

/***/ }),
/* 682 */,
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(29));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(56));
	
	var _utils = __webpack_require__(40);
	
	function getContainer(container, defaultContainer) {
	  container = typeof container === 'function' ? container() : container;
	  return _reactDom.default.findDOMNode(container) || defaultContainer;
	}
	
	function getOwnerDocument(element) {
	  return (0, _ownerDocument.default)(_reactDom.default.findDOMNode(element));
	}
	/**
	 * Portals provide a first-class way to render children into a DOM node
	 * that exists outside the DOM hierarchy of the parent component.
	 */
	
	
	var Portal =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Portal, _React$Component);
	
	  function Portal() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Portal);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Portal)).call.apply(_getPrototypeOf2, [this].concat(args)));
	
	    _this.getMountNode = function () {
	      return _this.mountNode;
	    };
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(Portal, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.setMountNode(this.props.container); // Only rerender if needed
	
	      if (!this.props.disablePortal) {
	        this.forceUpdate(this.props.onRendered);
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      if (prevProps.container !== this.props.container || prevProps.disablePortal !== this.props.disablePortal) {
	        this.setMountNode(this.props.container); // Only rerender if needed
	
	        if (!this.props.disablePortal) {
	          this.forceUpdate(this.props.onRendered);
	        }
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.mountNode = null;
	    }
	  }, {
	    key: "setMountNode",
	    value: function setMountNode(container) {
	      if (this.props.disablePortal) {
	        this.mountNode = _reactDom.default.findDOMNode(this).parentElement;
	        return;
	      }
	
	      this.mountNode = getContainer(container, getOwnerDocument(this).body);
	    }
	    /**
	     * @public
	     */
	
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          children = _this$props.children,
	          disablePortal = _this$props.disablePortal;
	
	      if (disablePortal) {
	        return children;
	      }
	
	      return this.mountNode ? _reactDom.default.createPortal(children, this.mountNode) : null;
	    }
	  }]);
	  return Portal;
	}(_react.default.Component);
	
	Portal.propTypes =  false ? {
	  /**
	   * The children to render into the `container`.
	   */
	  children: _propTypes.default.node.isRequired,
	
	  /**
	   * A node, component instance, or function that returns either.
	   * The `container` will have the portal children appended to it.
	   * By default, it uses the body of the top-level document object,
	   * so it's simply `document.body` most of the time.
	   */
	  container: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
	
	  /**
	   * Disable the portal behavior.
	   * The children stay within it's parent DOM hierarchy.
	   */
	  disablePortal: _propTypes.default.bool,
	
	  /**
	   * Callback fired once the children has been mounted into the `container`.
	   */
	  onRendered: _propTypes.default.func
	} : {};
	Portal.defaultProps = {
	  disablePortal: false
	};
	Portal.propTypes =  false ? (0, _utils.exactProp)(Portal.propTypes) : {};
	var _default = Portal;
	exports.default = _default;

/***/ }),
/* 684 */,
/* 685 */,
/* 686 */,
/* 687 */,
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(29));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _utils = __webpack_require__(40);
	
	var _reactHelpers = __webpack_require__(45);
	
	/**
	 * Helper component to allow attaching a ref to a
	 * wrapped element to access the underlying DOM element.
	 *
	 * It's highly inspired by https://github.com/facebook/react/issues/11401#issuecomment-340543801.
	 * For example:
	 * ```jsx
	 * import React from 'react';
	 * import RootRef from '@material-ui/core/RootRef';
	 *
	 * class MyComponent extends React.Component {
	 *   constructor() {
	 *     super();
	 *     this.domRef = React.createRef();
	 *   }
	 *
	 *   componentDidMount() {
	 *     console.log(this.domRef.current); // DOM node
	 *   }
	 *
	 *   render() {
	 *     return (
	 *       <RootRef rootRef={this.domRef}>
	 *         <SomeChildComponent />
	 *       </RootRef>
	 *     );
	 *   }
	 * }
	 * ```
	 */
	var RootRef =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(RootRef, _React$Component);
	
	  function RootRef() {
	    (0, _classCallCheck2.default)(this, RootRef);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RootRef).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(RootRef, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.ref = _reactDom.default.findDOMNode(this);
	      (0, _reactHelpers.setRef)(this.props.rootRef, this.ref);
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      var ref = _reactDom.default.findDOMNode(this);
	
	      if (prevProps.rootRef !== this.props.rootRef || this.ref !== ref) {
	        if (prevProps.rootRef !== this.props.rootRef) {
	          (0, _reactHelpers.setRef)(prevProps.rootRef, null);
	        }
	
	        this.ref = ref;
	        (0, _reactHelpers.setRef)(this.props.rootRef, this.ref);
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.ref = null;
	      (0, _reactHelpers.setRef)(this.props.rootRef, null);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return this.props.children;
	    }
	  }]);
	  return RootRef;
	}(_react.default.Component);
	
	RootRef.propTypes =  false ? {
	  /**
	   * The wrapped element.
	   */
	  children: _propTypes.default.element.isRequired,
	
	  /**
	   * Provide a way to access the DOM node of the wrapped element.
	   * You can provide a callback ref or a `React.createRef()` ref.
	   */
	  rootRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]).isRequired
	} : {};
	RootRef.propTypes =  false ? (0, _utils.exactProp)(RootRef.propTypes) : {};
	var _default = RootRef;
	exports.default = _default;

/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _SelectInput = _interopRequireDefault(__webpack_require__(690));
	
	var _formControlState = _interopRequireDefault(__webpack_require__(101));
	
	var _withFormControlContext = _interopRequireDefault(__webpack_require__(73));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _mergeClasses = _interopRequireDefault(__webpack_require__(385));
	
	var _ArrowDropDown = _interopRequireDefault(__webpack_require__(379));
	
	var _Input = _interopRequireDefault(__webpack_require__(176));
	
	var _NativeSelect = __webpack_require__(362);
	
	var _NativeSelectInput = _interopRequireDefault(__webpack_require__(363));
	
	// @inheritedComponent Input
	// To replace with InputBase in v4.0.0
	var styles = _NativeSelect.styles;
	exports.styles = styles;
	
	function Select(props) {
	  var autoWidth = props.autoWidth,
	      children = props.children,
	      classes = props.classes,
	      displayEmpty = props.displayEmpty,
	      IconComponent = props.IconComponent,
	      input = props.input,
	      inputProps = props.inputProps,
	      MenuProps = props.MenuProps,
	      muiFormControl = props.muiFormControl,
	      multiple = props.multiple,
	      native = props.native,
	      onClose = props.onClose,
	      onOpen = props.onOpen,
	      open = props.open,
	      renderValue = props.renderValue,
	      SelectDisplayProps = props.SelectDisplayProps,
	      variant = props.variant,
	      other = (0, _objectWithoutProperties2.default)(props, ["autoWidth", "children", "classes", "displayEmpty", "IconComponent", "input", "inputProps", "MenuProps", "muiFormControl", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"]);
	  var inputComponent = native ? _NativeSelectInput.default : _SelectInput.default;
	  var fcs = (0, _formControlState.default)({
	    props: props,
	    muiFormControl: muiFormControl,
	    states: ['variant']
	  });
	  return _react.default.cloneElement(input, (0, _extends2.default)({
	    // Most of the logic is implemented in `SelectInput`.
	    // The `Select` component is a simple API wrapper to expose something better to play with.
	    inputComponent: inputComponent,
	    inputProps: (0, _extends2.default)({
	      children: children,
	      IconComponent: IconComponent,
	      variant: fcs.variant,
	      type: undefined,
	      // We render a select. We can ignore the type provided by the `Input`.
	      multiple: multiple
	    }, native ? {} : {
	      autoWidth: autoWidth,
	      displayEmpty: displayEmpty,
	      MenuProps: MenuProps,
	      onClose: onClose,
	      onOpen: onOpen,
	      open: open,
	      renderValue: renderValue,
	      SelectDisplayProps: SelectDisplayProps
	    }, inputProps, {
	      classes: inputProps ? (0, _mergeClasses.default)({
	        baseClasses: classes,
	        newClasses: inputProps.classes,
	        Component: Select
	      }) : classes
	    }, input ? input.props.inputProps : {})
	  }, other));
	}
	
	Select.propTypes =  false ? {
	  /**
	   * If true, the width of the popover will automatically be set according to the items inside the
	   * menu, otherwise it will be at least the width of the select input.
	   */
	  autoWidth: _propTypes.default.bool,
	
	  /**
	   * The option elements to populate the select with.
	   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * If `true`, the selected item is displayed even if its value is empty.
	   * You can only use it when the `native` property is `false` (default).
	   */
	  displayEmpty: _propTypes.default.bool,
	
	  /**
	   * The icon that displays the arrow.
	   */
	  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * An `Input` element; does not have to be a material-ui specific `Input`.
	   */
	  input: _propTypes.default.element,
	
	  /**
	   * Attributes applied to the `input` element.
	   * When `native` is `true`, the attributes are applied on the `select` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * Properties applied to the [`Menu`](/api/menu/) element.
	   */
	  MenuProps: _propTypes.default.object,
	
	  /**
	   * If true, `value` must be an array and the menu will support multiple selections.
	   * You can only use it when the `native` property is `false` (default).
	   */
	  multiple: _propTypes.default.bool,
	
	  /**
	   * If `true`, the component will be using a native `select` element.
	   */
	  native: _propTypes.default.bool,
	
	  /**
	   * Callback function fired when a menu item is selected.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   * @param {object} [child] The react element that was selected when `native` is `false` (default).
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component requests to be closed.
	   * Use in controlled mode (see open).
	   *
	   * @param {object} event The event source of the callback
	   */
	  onClose: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component requests to be opened.
	   * Use in controlled mode (see open).
	   *
	   * @param {object} event The event source of the callback
	   */
	  onOpen: _propTypes.default.func,
	
	  /**
	   * Control `select` open state.
	   * You can only use it when the `native` property is `false` (default).
	   */
	  open: _propTypes.default.bool,
	
	  /**
	   * Render the selected value.
	   * You can only use it when the `native` property is `false` (default).
	   *
	   * @param {*} value The `value` provided to the component.
	   * @returns {ReactElement}
	   */
	  renderValue: _propTypes.default.func,
	
	  /**
	   * Properties applied to the clickable div element.
	   */
	  SelectDisplayProps: _propTypes.default.object,
	
	  /**
	   * The input value.
	   * This property is required when the `native` property is `false` (default).
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object]))]),
	
	  /**
	   * The variant to use.
	   */
	  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])
	} : {};
	Select.defaultProps = {
	  autoWidth: false,
	  displayEmpty: false,
	  IconComponent: _ArrowDropDown.default,
	  input: _react.default.createElement(_Input.default, null),
	  multiple: false,
	  native: false
	};
	Select.muiName = 'Select';
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiSelect'
	})((0, _withFormControlContext.default)(Select));
	
	exports.default = _default;

/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(84));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _typeof2 = _interopRequireDefault(__webpack_require__(131));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _keycode = _interopRequireDefault(__webpack_require__(116));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _Menu = _interopRequireDefault(__webpack_require__(359));
	
	var _utils = __webpack_require__(233);
	
	var _reactHelpers = __webpack_require__(45);
	
	function areEqualValues(a, b) {
	  if ((0, _typeof2.default)(b) === 'object' && b !== null) {
	    return a === b;
	  }
	
	  return String(a) === String(b);
	}
	/**
	 * @ignore - internal component.
	 */
	
	
	var SelectInput =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(SelectInput, _React$Component);
	
	  function SelectInput(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, SelectInput);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SelectInput).call(this));
	    _this.ignoreNextBlur = false;
	
	    _this.update = function (_ref) {
	      var event = _ref.event,
	          open = _ref.open;
	
	      if (_this.isOpenControlled) {
	        if (open) {
	          _this.props.onOpen(event);
	        } else {
	          _this.props.onClose(event);
	        }
	
	        return;
	      }
	
	      _this.setState({
	        // Perfom the layout computation outside of the render method.
	        menuMinWidth: _this.props.autoWidth ? null : _this.displayRef.clientWidth,
	        open: open
	      });
	    };
	
	    _this.handleClick = function (event) {
	      // Opening the menu is going to blur the. It will be focused back when closed.
	      _this.ignoreNextBlur = true;
	
	      _this.update({
	        open: true,
	        event: event
	      });
	    };
	
	    _this.handleClose = function (event) {
	      _this.update({
	        open: false,
	        event: event
	      });
	    };
	
	    _this.handleItemClick = function (child) {
	      return function (event) {
	        if (!_this.props.multiple) {
	          _this.update({
	            open: false,
	            event: event
	          });
	        }
	
	        var _this$props = _this.props,
	            onChange = _this$props.onChange,
	            name = _this$props.name;
	
	        if (onChange) {
	          var value;
	
	          if (_this.props.multiple) {
	            value = Array.isArray(_this.props.value) ? (0, _toConsumableArray2.default)(_this.props.value) : [];
	            var itemIndex = value.indexOf(child.props.value);
	
	            if (itemIndex === -1) {
	              value.push(child.props.value);
	            } else {
	              value.splice(itemIndex, 1);
	            }
	          } else {
	            value = child.props.value;
	          }
	
	          event.persist();
	          event.target = {
	            value: value,
	            name: name
	          };
	          onChange(event, child);
	        }
	      };
	    };
	
	    _this.handleBlur = function (event) {
	      if (_this.ignoreNextBlur === true) {
	        // The parent components are relying on the bubbling of the event.
	        event.stopPropagation();
	        _this.ignoreNextBlur = false;
	        return;
	      }
	
	      if (_this.props.onBlur) {
	        var _this$props2 = _this.props,
	            value = _this$props2.value,
	            name = _this$props2.name;
	        event.persist();
	        event.target = {
	          value: value,
	          name: name
	        };
	
	        _this.props.onBlur(event);
	      }
	    };
	
	    _this.handleKeyDown = function (event) {
	      if (_this.props.readOnly) {
	        return;
	      }
	
	      if (['space', 'up', 'down'].indexOf((0, _keycode.default)(event)) !== -1) {
	        event.preventDefault(); // Opening the menu is going to blur the. It will be focused back when closed.
	
	        _this.ignoreNextBlur = true;
	
	        _this.update({
	          open: true,
	          event: event
	        });
	      }
	    };
	
	    _this.handleDisplayRef = function (ref) {
	      _this.displayRef = ref;
	    };
	
	    _this.handleInputRef = function (ref) {
	      var inputRef = _this.props.inputRef;
	
	      if (!inputRef) {
	        return;
	      }
	
	      var nodeProxy = {
	        node: ref,
	        // By pass the native input as we expose a rich object (array).
	        value: _this.props.value,
	        focus: function focus() {
	          _this.displayRef.focus();
	        }
	      };
	      (0, _reactHelpers.setRef)(inputRef, nodeProxy);
	    };
	
	    _this.isOpenControlled = props.open !== undefined;
	    _this.state = {
	      menuMinWidth: null,
	      open: false
	    };
	    return _this;
	  }
	
	  (0, _createClass2.default)(SelectInput, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (this.isOpenControlled && this.props.open) {
	        // Focus the display node so the focus is restored on this element once
	        // the menu is closed.
	        this.displayRef.focus(); // Rerender with the resolve `displayRef` reference.
	
	        this.forceUpdate();
	      }
	
	      if (this.props.autoFocus) {
	        this.displayRef.focus();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this,
	          _classNames;
	
	      var _this$props3 = this.props,
	          autoWidth = _this$props3.autoWidth,
	          children = _this$props3.children,
	          classes = _this$props3.classes,
	          className = _this$props3.className,
	          disabled = _this$props3.disabled,
	          displayEmpty = _this$props3.displayEmpty,
	          IconComponent = _this$props3.IconComponent,
	          inputRef = _this$props3.inputRef,
	          _this$props3$MenuProp = _this$props3.MenuProps,
	          MenuProps = _this$props3$MenuProp === void 0 ? {} : _this$props3$MenuProp,
	          multiple = _this$props3.multiple,
	          name = _this$props3.name,
	          onBlur = _this$props3.onBlur,
	          onChange = _this$props3.onChange,
	          onClose = _this$props3.onClose,
	          onFocus = _this$props3.onFocus,
	          onOpen = _this$props3.onOpen,
	          openProp = _this$props3.open,
	          readOnly = _this$props3.readOnly,
	          renderValue = _this$props3.renderValue,
	          required = _this$props3.required,
	          SelectDisplayProps = _this$props3.SelectDisplayProps,
	          tabIndexProp = _this$props3.tabIndex,
	          _this$props3$type = _this$props3.type,
	          type = _this$props3$type === void 0 ? 'hidden' : _this$props3$type,
	          value = _this$props3.value,
	          variant = _this$props3.variant,
	          other = (0, _objectWithoutProperties2.default)(_this$props3, ["autoWidth", "children", "classes", "className", "disabled", "displayEmpty", "IconComponent", "inputRef", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "required", "SelectDisplayProps", "tabIndex", "type", "value", "variant"]);
	      var open = this.isOpenControlled && this.displayRef ? openProp : this.state.open;
	      delete other['aria-invalid'];
	      var display;
	      var displaySingle = '';
	      var displayMultiple = [];
	      var computeDisplay = false; // No need to display any value if the field is empty.
	
	      if ((0, _utils.isFilled)(this.props) || displayEmpty) {
	        if (renderValue) {
	          display = renderValue(value);
	        } else {
	          computeDisplay = true;
	        }
	      }
	
	      var items = _react.default.Children.map(children, function (child) {
	        if (!_react.default.isValidElement(child)) {
	          return null;
	        }
	
	         false ? (0, _warning.default)(child.type !== _react.default.Fragment, ["Material-UI: the Select component doesn't accept a Fragment as a child.", 'Consider providing an array instead.'].join('\n')) : void 0;
	        var selected;
	
	        if (multiple) {
	          if (!Array.isArray(value)) {
	            throw new Error('Material-UI: the `value` property must be an array ' + 'when using the `Select` component with `multiple`.');
	          }
	
	          selected = value.some(function (v) {
	            return areEqualValues(v, child.props.value);
	          });
	
	          if (selected && computeDisplay) {
	            displayMultiple.push(child.props.children);
	          }
	        } else {
	          selected = areEqualValues(value, child.props.value);
	
	          if (selected && computeDisplay) {
	            displaySingle = child.props.children;
	          }
	        }
	
	        return _react.default.cloneElement(child, {
	          onClick: _this2.handleItemClick(child),
	          role: 'option',
	          selected: selected,
	          value: undefined,
	          // The value is most likely not a valid HTML attribute.
	          'data-value': child.props.value // Instead, we provide it as a data attribute.
	
	        });
	      });
	
	      if (computeDisplay) {
	        display = multiple ? displayMultiple.join(', ') : displaySingle;
	      } // Avoid performing a layout computation in the render method.
	
	
	      var menuMinWidth = this.state.menuMinWidth;
	
	      if (!autoWidth && this.isOpenControlled && this.displayRef) {
	        menuMinWidth = this.displayRef.clientWidth;
	      }
	
	      var tabIndex;
	
	      if (typeof tabIndexProp !== 'undefined') {
	        tabIndex = tabIndexProp;
	      } else {
	        tabIndex = disabled ? null : 0;
	      }
	
	      return _react.default.createElement("div", {
	        className: classes.root
	      }, _react.default.createElement("div", (0, _extends2.default)({
	        className: (0, _classnames.default)(classes.select, classes.selectMenu, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.filled, variant === 'filled'), (0, _defineProperty2.default)(_classNames, classes.outlined, variant === 'outlined'), _classNames), className),
	        ref: this.handleDisplayRef,
	        "aria-pressed": open ? 'true' : 'false',
	        tabIndex: tabIndex,
	        role: "button",
	        "aria-owns": open ? "menu-".concat(name || '') : undefined,
	        "aria-haspopup": "true",
	        onKeyDown: this.handleKeyDown,
	        onBlur: this.handleBlur,
	        onClick: disabled || readOnly ? null : this.handleClick,
	        onFocus: onFocus
	      }, SelectDisplayProps), display || _react.default.createElement("span", {
	        dangerouslySetInnerHTML: {
	          __html: '&#8203;'
	        }
	      })), _react.default.createElement("input", (0, _extends2.default)({
	        value: Array.isArray(value) ? value.join(',') : value,
	        name: name,
	        ref: this.handleInputRef,
	        type: type
	      }, other)), _react.default.createElement(IconComponent, {
	        className: classes.icon
	      }), _react.default.createElement(_Menu.default, (0, _extends2.default)({
	        id: "menu-".concat(name || ''),
	        anchorEl: this.displayRef,
	        open: open,
	        onClose: this.handleClose
	      }, MenuProps, {
	        MenuListProps: (0, _extends2.default)({
	          role: 'listbox'
	        }, MenuProps.MenuListProps),
	        PaperProps: (0, _extends2.default)({}, MenuProps.PaperProps, {
	          style: (0, _extends2.default)({
	            minWidth: menuMinWidth
	          }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)
	        })
	      }), items));
	    }
	  }]);
	  return SelectInput;
	}(_react.default.Component);
	
	SelectInput.propTypes =  false ? {
	  /**
	   * @ignore
	   */
	  autoFocus: _propTypes.default.bool,
	
	  /**
	   * If true, the width of the popover will automatically be set according to the items inside the
	   * menu, otherwise it will be at least the width of the select input.
	   */
	  autoWidth: _propTypes.default.bool,
	
	  /**
	   * The option elements to populate the select with.
	   * Can be some `<MenuItem>` elements.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The CSS class name of the select element.
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * If `true`, the select will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the selected item is displayed even if its value is empty.
	   */
	  displayEmpty: _propTypes.default.bool,
	
	  /**
	   * The icon that displays the arrow.
	   */
	  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Use that property to pass a ref callback to the native select element.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Properties applied to the [`Menu`](/api/menu/) element.
	   */
	  MenuProps: _propTypes.default.object,
	
	  /**
	   * If true, `value` must be an array and the menu will support multiple selections.
	   */
	  multiple: _propTypes.default.bool,
	
	  /**
	   * Name attribute of the `select` or hidden `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  onBlur: _propTypes.default.func,
	
	  /**
	   * Callback function fired when a menu item is selected.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   * @param {object} [child] The react element that was selected.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component requests to be closed.
	   * Use in controlled mode (see open).
	   *
	   * @param {object} event The event source of the callback
	   */
	  onClose: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onFocus: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component requests to be opened.
	   * Use in controlled mode (see open).
	   *
	   * @param {object} event The event source of the callback
	   */
	  onOpen: _propTypes.default.func,
	
	  /**
	   * Control `select` open state.
	   */
	  open: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  readOnly: _propTypes.default.bool,
	
	  /**
	   * Render the selected value.
	   *
	   * @param {*} value The `value` provided to the component.
	   * @returns {ReactElement}
	   */
	  renderValue: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * Properties applied to the clickable div element.
	   */
	  SelectDisplayProps: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  tabIndex: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
	
	  /**
	   * @ignore
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The input value.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object]))]).isRequired,
	
	  /**
	   * The variant to use.
	   */
	  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])
	} : {};
	var _default = SelectInput;
	exports.default = _default;

/***/ }),
/* 691 */,
/* 692 */,
/* 693 */,
/* 694 */,
/* 695 */,
/* 696 */,
/* 697 */,
/* 698 */,
/* 699 */,
/* 700 */,
/* 701 */,
/* 702 */,
/* 703 */,
/* 704 */,
/* 705 */,
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(9));
	
	var _helpers = __webpack_require__(19);
	
	var styles = function styles(theme) {
	  return {
	    /* Styles applied to the root element. */
	    root: {
	      userSelect: 'none',
	      width: '1em',
	      height: '1em',
	      display: 'inline-block',
	      fill: 'currentColor',
	      flexShrink: 0,
	      fontSize: 24,
	      transition: theme.transitions.create('fill', {
	        duration: theme.transitions.duration.shorter
	      })
	    },
	
	    /* Styles applied to the root element if `color="primary"`. */
	    colorPrimary: {
	      color: theme.palette.primary.main
	    },
	
	    /* Styles applied to the root element if `color="secondary"`. */
	    colorSecondary: {
	      color: theme.palette.secondary.main
	    },
	
	    /* Styles applied to the root element if `color="action"`. */
	    colorAction: {
	      color: theme.palette.action.active
	    },
	
	    /* Styles applied to the root element if `color="error"`. */
	    colorError: {
	      color: theme.palette.error.main
	    },
	
	    /* Styles applied to the root element if `color="disabled"`. */
	    colorDisabled: {
	      color: theme.palette.action.disabled
	    },
	
	    /* Styles applied to the root element if `fontSize="inherit"`. */
	    fontSizeInherit: {
	      fontSize: 'inherit'
	    },
	
	    /* Styles applied to the root element if `fontSize="small"`. */
	    fontSizeSmall: {
	      fontSize: 20
	    },
	
	    /* Styles applied to the root element if `fontSize="large"`. */
	    fontSizeLarge: {
	      fontSize: 35
	    }
	  };
	};
	
	exports.styles = styles;
	
	function SvgIcon(props) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      color = props.color,
	      Component = props.component,
	      fontSize = props.fontSize,
	      nativeColor = props.nativeColor,
	      titleAccess = props.titleAccess,
	      viewBox = props.viewBox,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "color", "component", "fontSize", "nativeColor", "titleAccess", "viewBox"]);
	  return _react.default.createElement(Component, (0, _extends2.default)({
	    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes["color".concat((0, _helpers.capitalize)(color))], color !== 'inherit'), (0, _defineProperty2.default)(_classNames, classes["fontSize".concat((0, _helpers.capitalize)(fontSize))], fontSize !== 'default'), _classNames), className),
	    focusable: "false",
	    viewBox: viewBox,
	    color: nativeColor,
	    "aria-hidden": titleAccess ? 'false' : 'true',
	    role: titleAccess ? 'img' : 'presentation'
	  }, other), children, titleAccess ? _react.default.createElement("title", null, titleAccess) : null);
	}
	
	SvgIcon.propTypes =  false ? {
	  /**
	   * Node passed into the SVG element.
	   */
	  children: _propTypes.default.node.isRequired,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The color of the component. It supports those theme colors that make sense for this component.
	   * You can use the `nativeColor` property to apply a color attribute to the SVG element.
	   */
	  color: _propTypes.default.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
	   */
	  fontSize: _propTypes.default.oneOf(['inherit', 'default', 'small', 'large']),
	
	  /**
	   * Applies a color attribute to the SVG element.
	   */
	  nativeColor: _propTypes.default.string,
	
	  /**
	   * The shape-rendering attribute. The behavior of the different options is described
	   * [here](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
	   * If you are having issues with blurry icons you should investigate this property.
	   */
	  shapeRendering: _propTypes.default.string,
	
	  /**
	   * Provides a human-readable title for the element that contains it.
	   * https://www.w3.org/TR/SVG-access/#Equivalent
	   */
	  titleAccess: _propTypes.default.string,
	
	  /**
	   * Allows you to redefine what the coordinates without units mean inside an SVG element.
	   * For example, if the SVG element is 500 (width) by 200 (height),
	   * and you pass viewBox="0 0 50 20",
	   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
	   * to bottom right (50,20) and each unit will be worth 10px.
	   */
	  viewBox: _propTypes.default.string
	} : {};
	SvgIcon.defaultProps = {
	  color: 'inherit',
	  component: 'svg',
	  fontSize: 'default',
	  viewBox: '0 0 24 24'
	};
	SvgIcon.muiName = 'SvgIcon';
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiSvgIcon'
	})(SvgIcon);
	
	exports.default = _default;

/***/ }),
/* 707 */,
/* 708 */,
/* 709 */,
/* 710 */,
/* 711 */,
/* 712 */,
/* 713 */,
/* 714 */,
/* 715 */,
/* 716 */,
/* 717 */,
/* 718 */,
/* 719 */,
/* 720 */,
/* 721 */,
/* 722 */,
/* 723 */,
/* 724 */,
/* 725 */,
/* 726 */,
/* 727 */,
/* 728 */,
/* 729 */,
/* 730 */,
/* 731 */,
/* 732 */,
/* 733 */,
/* 734 */,
/* 735 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(29));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _Input = _interopRequireDefault(__webpack_require__(176));
	
	var _FilledInput = _interopRequireDefault(__webpack_require__(351));
	
	var _OutlinedInput = _interopRequireDefault(__webpack_require__(364));
	
	var _InputLabel = _interopRequireDefault(__webpack_require__(356));
	
	var _FormControl = _interopRequireDefault(__webpack_require__(352));
	
	var _FormHelperText = _interopRequireDefault(__webpack_require__(354));
	
	var _Select = _interopRequireDefault(__webpack_require__(240));
	
	// @inheritedComponent FormControl
	var variantComponent = {
	  standard: _Input.default,
	  filled: _FilledInput.default,
	  outlined: _OutlinedInput.default
	};
	/**
	 * The `TextField` is a convenience wrapper for the most common cases (80%).
	 * It cannot be all things to all people, otherwise the API would grow out of control.
	 *
	 * ## Advanced Configuration
	 *
	 * It's important to understand that the text field is a simple abstraction
	 * on top of the following components:
	 * - [FormControl](/api/form-control/)
	 * - [InputLabel](/api/input-label/)
	 * - [Input](/api/input/)
	 * - [FormHelperText](/api/form-helper-text/)
	 *
	 * If you wish to alter the properties applied to the native input, you can do so as follows:
	 *
	 * ```jsx
	 * const inputProps = {
	 *   step: 300,
	 * };
	 *
	 * return <TextField id="time" type="time" inputProps={inputProps} />;
	 * ```
	 *
	 * For advanced cases, please look at the source of TextField by clicking on the
	 * "Edit this page" button above. Consider either:
	 * - using the upper case props for passing values directly to the components
	 * - using the underlying components directly as shown in the demos
	 */
	
	var TextField =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(TextField, _React$Component);
	
	  function TextField(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, TextField);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TextField).call(this, props));
	    _this.labelRef = _react.default.createRef();
	    return _this;
	  }
	
	  (0, _createClass2.default)(TextField, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (this.props.variant === 'outlined') {
	        this.labelNode = _reactDom.default.findDOMNode(this.labelRef.current);
	        this.forceUpdate();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          autoComplete = _this$props.autoComplete,
	          autoFocus = _this$props.autoFocus,
	          children = _this$props.children,
	          className = _this$props.className,
	          defaultValue = _this$props.defaultValue,
	          error = _this$props.error,
	          FormHelperTextProps = _this$props.FormHelperTextProps,
	          fullWidth = _this$props.fullWidth,
	          helperText = _this$props.helperText,
	          id = _this$props.id,
	          InputLabelProps = _this$props.InputLabelProps,
	          inputProps = _this$props.inputProps,
	          InputProps = _this$props.InputProps,
	          inputRef = _this$props.inputRef,
	          label = _this$props.label,
	          multiline = _this$props.multiline,
	          name = _this$props.name,
	          onBlur = _this$props.onBlur,
	          onChange = _this$props.onChange,
	          onFocus = _this$props.onFocus,
	          placeholder = _this$props.placeholder,
	          required = _this$props.required,
	          rows = _this$props.rows,
	          rowsMax = _this$props.rowsMax,
	          select = _this$props.select,
	          SelectProps = _this$props.SelectProps,
	          type = _this$props.type,
	          value = _this$props.value,
	          variant = _this$props.variant,
	          other = (0, _objectWithoutProperties2.default)(_this$props, ["autoComplete", "autoFocus", "children", "className", "defaultValue", "error", "FormHelperTextProps", "fullWidth", "helperText", "id", "InputLabelProps", "inputProps", "InputProps", "inputRef", "label", "multiline", "name", "onBlur", "onChange", "onFocus", "placeholder", "required", "rows", "rowsMax", "select", "SelectProps", "type", "value", "variant"]);
	       false ? (0, _warning.default)(!select || Boolean(children), 'Material-UI: `children` must be passed when using the `TextField` component with `select`.') : void 0;
	      var InputMore = {};
	
	      if (variant === 'outlined') {
	        if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {
	          InputMore.notched = InputLabelProps.shrink;
	        }
	
	        InputMore.labelWidth = this.labelNode && this.labelNode.offsetWidth || 0;
	      }
	
	      var helperTextId = helperText && id ? "".concat(id, "-helper-text") : undefined;
	      var InputComponent = variantComponent[variant];
	
	      var InputElement = _react.default.createElement(InputComponent, (0, _extends2.default)({
	        autoComplete: autoComplete,
	        autoFocus: autoFocus,
	        defaultValue: defaultValue,
	        fullWidth: fullWidth,
	        multiline: multiline,
	        name: name,
	        rows: rows,
	        rowsMax: rowsMax,
	        type: type,
	        value: value,
	        id: id,
	        inputRef: inputRef,
	        onBlur: onBlur,
	        onChange: onChange,
	        onFocus: onFocus,
	        placeholder: placeholder,
	        inputProps: inputProps
	      }, InputMore, InputProps));
	
	      return _react.default.createElement(_FormControl.default, (0, _extends2.default)({
	        "aria-describedby": helperTextId,
	        className: className,
	        error: error,
	        fullWidth: fullWidth,
	        required: required,
	        variant: variant
	      }, other), label && _react.default.createElement(_InputLabel.default, (0, _extends2.default)({
	        htmlFor: id,
	        ref: this.labelRef
	      }, InputLabelProps), label), select ? _react.default.createElement(_Select.default, (0, _extends2.default)({
	        value: value,
	        input: InputElement
	      }, SelectProps), children) : InputElement, helperText && _react.default.createElement(_FormHelperText.default, (0, _extends2.default)({
	        id: helperTextId
	      }, FormHelperTextProps), helperText));
	    }
	  }]);
	  return TextField;
	}(_react.default.Component);
	
	TextField.propTypes =  false ? {
	  /**
	   * This property helps users to fill forms faster, especially on mobile devices.
	   * The name can be confusing, as it's more like an autofill.
	   * You can learn more about it here:
	   * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill
	   */
	  autoComplete: _propTypes.default.string,
	
	  /**
	   * If `true`, the input will be focused during the first mount.
	   */
	  autoFocus: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The default value of the `Input` element.
	   */
	  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * If `true`, the input will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label will be displayed in an error state.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * Properties applied to the [`FormHelperText`](/api/form-helper-text/) element.
	   */
	  FormHelperTextProps: _propTypes.default.object,
	
	  /**
	   * If `true`, the input will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * The helper text content.
	   */
	  helperText: _propTypes.default.node,
	
	  /**
	   * The id of the `input` element.
	   * Use that property to make `label` and `helperText` accessible for screen readers.
	   */
	  id: _propTypes.default.string,
	
	  /**
	   * Properties applied to the [`InputLabel`](/api/input-label/) element.
	   */
	  InputLabelProps: _propTypes.default.object,
	
	  /**
	   * Properties applied to the `Input` element.
	   */
	  InputProps: _propTypes.default.object,
	
	  /**
	   * Attributes applied to the native `input` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * Use that property to pass a ref callback to the native input component.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * The label content.
	   */
	  label: _propTypes.default.node,
	
	  /**
	   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
	   */
	  margin: _propTypes.default.oneOf(['none', 'dense', 'normal']),
	
	  /**
	   * If `true`, a textarea element will be rendered instead of an input.
	   */
	  multiline: _propTypes.default.bool,
	
	  /**
	   * Name attribute of the `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  onBlur: _propTypes.default.func,
	
	  /**
	   * Callback fired when the value is changed.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onFocus: _propTypes.default.func,
	
	  /**
	   * The short hint displayed in the input before the user enters a value.
	   */
	  placeholder: _propTypes.default.string,
	
	  /**
	   * If `true`, the label is displayed as required and the input will be required.
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  rowsMax: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Render a `Select` element while passing the `Input` element to `Select` as `input` parameter.
	   * If this option is set you must pass the options of the select as children.
	   */
	  select: _propTypes.default.bool,
	
	  /**
	   * Properties applied to the [`Select`](/api/select/) element.
	   */
	  SelectProps: _propTypes.default.object,
	
	  /**
	   * Type attribute of the `Input` element. It should be a valid HTML5 input type.
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The value of the `Input` element, required for a controlled component.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool]))]),
	
	  /**
	   * The variant to use.
	   */
	  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])
	} : {};
	TextField.defaultProps = {
	  required: false,
	  select: false,
	  variant: 'standard'
	};
	var _default = TextField;
	exports.default = _default;

/***/ }),
/* 736 */,
/* 737 */,
/* 738 */,
/* 739 */,
/* 740 */,
/* 741 */,
/* 742 */,
/* 743 */,
/* 744 */,
/* 745 */,
/* 746 */,
/* 747 */,
/* 748 */,
/* 749 */,
/* 750 */,
/* 751 */,
/* 752 */,
/* 753 */,
/* 754 */,
/* 755 */,
/* 756 */,
/* 757 */,
/* 758 */,
/* 759 */,
/* 760 */,
/* 761 */,
/* 762 */,
/* 763 */,
/* 764 */,
/* 765 */,
/* 766 */,
/* 767 */,
/* 768 */,
/* 769 */,
/* 770 */,
/* 771 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.MuiThemeProviderOld = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _brcast = _interopRequireDefault(__webpack_require__(404));
	
	var _utils = __webpack_require__(40);
	
	var _themeListener = _interopRequireWildcard(__webpack_require__(245));
	
	/* eslint-disable no-underscore-dangle */
	
	/**
	 * This component takes a `theme` property.
	 * It makes the `theme` available down the React tree thanks to React context.
	 * This component should preferably be used at **the root of your component tree**.
	 */
	var MuiThemeProviderOld =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(MuiThemeProviderOld, _React$Component);
	
	  // We are not using the React state in order to avoid unnecessary rerender.
	  function MuiThemeProviderOld(props, context) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, MuiThemeProviderOld);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MuiThemeProviderOld).call(this)); // Get the outer theme from the context, can be null
	
	    _this.broadcast = (0, _brcast.default)();
	    _this.outerTheme = _themeListener.default.initial(context); // Propagate the theme so it can be accessed by the children
	
	    _this.broadcast.setState(_this.mergeOuterLocalTheme(props.theme));
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(MuiThemeProviderOld, [{
	    key: "getChildContext",
	    value: function getChildContext() {
	      var _ref;
	
	      var _this$props = this.props,
	          disableStylesGeneration = _this$props.disableStylesGeneration,
	          sheetsCache = _this$props.sheetsCache,
	          sheetsManager = _this$props.sheetsManager;
	      var muiThemeProviderOptions = this.context.muiThemeProviderOptions || {};
	
	      if (disableStylesGeneration !== undefined) {
	        muiThemeProviderOptions.disableStylesGeneration = disableStylesGeneration;
	      }
	
	      if (sheetsCache !== undefined) {
	        muiThemeProviderOptions.sheetsCache = sheetsCache;
	      }
	
	      if (sheetsManager !== undefined) {
	        muiThemeProviderOptions.sheetsManager = sheetsManager;
	      }
	
	      return _ref = {}, (0, _defineProperty2.default)(_ref, _themeListener.CHANNEL, this.broadcast), (0, _defineProperty2.default)(_ref, "muiThemeProviderOptions", muiThemeProviderOptions), _ref;
	    }
	  }, {
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      // Subscribe on the outer theme, if present
	      this.unsubscribeId = _themeListener.default.subscribe(this.context, function (outerTheme) {
	        _this2.outerTheme = outerTheme; // Forward the parent theme update to the children
	
	        _this2.broadcast.setState(_this2.mergeOuterLocalTheme(_this2.props.theme));
	      });
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      // Propagate a local theme update
	      if (this.props.theme !== prevProps.theme) {
	        this.broadcast.setState(this.mergeOuterLocalTheme(this.props.theme));
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      if (this.unsubscribeId !== null) {
	        _themeListener.default.unsubscribe(this.context, this.unsubscribeId);
	      }
	    } // Simple merge between the outer theme and the local theme
	
	  }, {
	    key: "mergeOuterLocalTheme",
	    value: function mergeOuterLocalTheme(localTheme) {
	      // To support composition of theme.
	      if (typeof localTheme === 'function') {
	         false ? (0, _warning.default)(this.outerTheme, ['Material-UI: you are providing a theme function property ' + 'to the MuiThemeProvider component:', '<MuiThemeProvider theme={outerTheme => outerTheme} />', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\n')) : void 0;
	        return localTheme(this.outerTheme);
	      }
	
	      if (!this.outerTheme) {
	        return localTheme;
	      }
	
	      return (0, _extends2.default)({}, this.outerTheme, localTheme);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      // TODO move the sheetsManager property to a different component.
	      // warning(
	      //   typeof window !== 'undefined' || this.props.sheetsManager,
	      //   [
	      //     'Material-UI: you need to provide a sheetsManager to the MuiThemeProvider ' +
	      //       'when rendering on the server.',
	      //     'If you do not, you might experience a memory leak',
	      //   ].join('\n'),
	      // );
	      return this.props.children;
	    }
	  }]);
	  return MuiThemeProviderOld;
	}(_react.default.Component);
	
	exports.MuiThemeProviderOld = MuiThemeProviderOld;
	MuiThemeProviderOld.propTypes =  false ? {
	  /**
	   * You can wrap a node.
	   */
	  children: _propTypes.default.node.isRequired,
	
	  /**
	   * You can disable the generation of the styles with this option.
	   * It can be useful when traversing the React tree outside of the HTML
	   * rendering step on the server.
	   * Let's say you are using react-apollo to extract all
	   * the queries made by the interface server side.
	   * You can significantly speed up the traversal with this property.
	   */
	  disableStylesGeneration: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   *
	   * In beta.
	   */
	  sheetsCache: _propTypes.default.object,
	
	  /**
	   * The sheetsManager is used to deduplicate style sheet injection in the page.
	   * It's deduplicating using the (theme, styles) couple.
	   * On the server, you should provide a new instance for each request.
	   */
	  sheetsManager: _propTypes.default.object,
	
	  /**
	   * A theme object.
	   */
	  theme: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]).isRequired
	} : {};
	MuiThemeProviderOld.propTypes =  false ? (0, _utils.exactProp)(MuiThemeProviderOld.propTypes) : {};
	MuiThemeProviderOld.childContextTypes = (0, _extends2.default)({}, _themeListener.default.contextTypes, {
	  muiThemeProviderOptions: _propTypes.default.object
	});
	MuiThemeProviderOld.contextTypes = (0, _extends2.default)({}, _themeListener.default.contextTypes, {
	  muiThemeProviderOptions: _propTypes.default.object
	});
	/* istanbul ignore if */
	
	if (!_utils.ponyfillGlobal.__MUI_STYLES__) {
	  _utils.ponyfillGlobal.__MUI_STYLES__ = {};
	}
	
	if (!_utils.ponyfillGlobal.__MUI_STYLES__.MuiThemeProvider) {
	  _utils.ponyfillGlobal.__MUI_STYLES__.MuiThemeProvider = MuiThemeProviderOld;
	}
	
	var _default = _utils.ponyfillGlobal.__MUI_STYLES__.MuiThemeProvider;
	exports.default = _default;

/***/ }),
/* 772 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createMixins;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _extends3 = _interopRequireDefault(__webpack_require__(4));
	
	function createMixins(breakpoints, spacing, mixins) {
	  var _toolbar;
	
	  return (0, _extends3.default)({
	    gutters: function gutters() {
	      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      return (0, _extends3.default)({
	        paddingLeft: spacing.unit * 2,
	        paddingRight: spacing.unit * 2
	      }, styles, (0, _defineProperty2.default)({}, breakpoints.up('sm'), (0, _extends3.default)({
	        paddingLeft: spacing.unit * 3,
	        paddingRight: spacing.unit * 3
	      }, styles[breakpoints.up('sm')])));
	    },
	    toolbar: (_toolbar = {
	      minHeight: 56
	    }, (0, _defineProperty2.default)(_toolbar, "".concat(breakpoints.up('xs'), " and (orientation: landscape)"), {
	      minHeight: 48
	    }), (0, _defineProperty2.default)(_toolbar, breakpoints.up('sm'), {
	      minHeight: 64
	    }), _toolbar)
	  }, mixins);
	}

/***/ }),
/* 773 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createPalette;
	exports.dark = exports.light = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _deepmerge = _interopRequireDefault(__webpack_require__(193));
	
	var _indigo = _interopRequireDefault(__webpack_require__(376));
	
	var _pink = _interopRequireDefault(__webpack_require__(377));
	
	var _grey = _interopRequireDefault(__webpack_require__(375));
	
	var _red = _interopRequireDefault(__webpack_require__(378));
	
	var _common = _interopRequireDefault(__webpack_require__(374));
	
	var _colorManipulator = __webpack_require__(61);
	
	// < 1kb payload overhead when lodash/merge is > 3kb.
	var light = {
	  // The colors used to style the text.
	  text: {
	    // The most important text.
	    primary: 'rgba(0, 0, 0, 0.87)',
	    // Secondary text.
	    secondary: 'rgba(0, 0, 0, 0.54)',
	    // Disabled text have even lower visual prominence.
	    disabled: 'rgba(0, 0, 0, 0.38)',
	    // Text hints.
	    hint: 'rgba(0, 0, 0, 0.38)'
	  },
	  // The color used to divide different elements.
	  divider: 'rgba(0, 0, 0, 0.12)',
	  // The background colors used to style the surfaces.
	  // Consistency between these values is important.
	  background: {
	    paper: _common.default.white,
	    default: _grey.default[50]
	  },
	  // The colors used to style the action elements.
	  action: {
	    // The color of an active action like an icon button.
	    active: 'rgba(0, 0, 0, 0.54)',
	    // The color of an hovered action.
	    hover: 'rgba(0, 0, 0, 0.08)',
	    hoverOpacity: 0.08,
	    // The color of a selected action.
	    selected: 'rgba(0, 0, 0, 0.14)',
	    // The color of a disabled action.
	    disabled: 'rgba(0, 0, 0, 0.26)',
	    // The background color of a disabled action.
	    disabledBackground: 'rgba(0, 0, 0, 0.12)'
	  }
	};
	exports.light = light;
	var dark = {
	  text: {
	    primary: _common.default.white,
	    secondary: 'rgba(255, 255, 255, 0.7)',
	    disabled: 'rgba(255, 255, 255, 0.5)',
	    hint: 'rgba(255, 255, 255, 0.5)',
	    icon: 'rgba(255, 255, 255, 0.5)'
	  },
	  divider: 'rgba(255, 255, 255, 0.12)',
	  background: {
	    paper: _grey.default[800],
	    default: '#303030'
	  },
	  action: {
	    active: _common.default.white,
	    hover: 'rgba(255, 255, 255, 0.1)',
	    hoverOpacity: 0.1,
	    selected: 'rgba(255, 255, 255, 0.2)',
	    disabled: 'rgba(255, 255, 255, 0.3)',
	    disabledBackground: 'rgba(255, 255, 255, 0.12)'
	  }
	};
	exports.dark = dark;
	
	function addLightOrDark(intent, direction, shade, tonalOffset) {
	  if (!intent[direction]) {
	    if (intent.hasOwnProperty(shade)) {
	      intent[direction] = intent[shade];
	    } else if (direction === 'light') {
	      intent.light = (0, _colorManipulator.lighten)(intent.main, tonalOffset);
	    } else if (direction === 'dark') {
	      intent.dark = (0, _colorManipulator.darken)(intent.main, tonalOffset * 1.5);
	    }
	  }
	}
	
	function createPalette(palette) {
	  var _palette$primary = palette.primary,
	      primary = _palette$primary === void 0 ? {
	    light: _indigo.default[300],
	    main: _indigo.default[500],
	    dark: _indigo.default[700]
	  } : _palette$primary,
	      _palette$secondary = palette.secondary,
	      secondary = _palette$secondary === void 0 ? {
	    light: _pink.default.A200,
	    main: _pink.default.A400,
	    dark: _pink.default.A700
	  } : _palette$secondary,
	      _palette$error = palette.error,
	      error = _palette$error === void 0 ? {
	    light: _red.default[300],
	    main: _red.default[500],
	    dark: _red.default[700]
	  } : _palette$error,
	      _palette$type = palette.type,
	      type = _palette$type === void 0 ? 'light' : _palette$type,
	      _palette$contrastThre = palette.contrastThreshold,
	      contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,
	      _palette$tonalOffset = palette.tonalOffset,
	      tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,
	      other = (0, _objectWithoutProperties2.default)(palette, ["primary", "secondary", "error", "type", "contrastThreshold", "tonalOffset"]);
	
	  function getContrastText(background) {
	    // Use the same logic as
	    // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
	    // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54
	    var contrastText = (0, _colorManipulator.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
	
	    if (false) {
	      var contrast = (0, _colorManipulator.getContrastRatio)(background, contrastText);
	      process.env.NODE_ENV !== "production" ? (0, _warning.default)(contrast >= 3, ["Material-UI: the contrast ratio of ".concat(contrast, ":1 for ").concat(contrastText, " on ").concat(background), 'falls below the WACG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\n')) : void 0;
	    }
	
	    return contrastText;
	  }
	
	  function augmentColor(color) {
	    var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;
	    var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;
	    var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700;
	
	    if (!color.main && color[mainShade]) {
	      color.main = color[mainShade];
	    }
	
	    if (false) {
	      throw new Error(['Material-UI: the color provided to augmentColor(color) is invalid.', "The color object needs to have a `main` property or a `".concat(mainShade, "` property.")].join('\n'));
	    }
	
	    addLightOrDark(color, 'light', lightShade, tonalOffset);
	    addLightOrDark(color, 'dark', darkShade, tonalOffset);
	
	    if (!color.contrastText) {
	      color.contrastText = getContrastText(color.main);
	    }
	
	    return color;
	  }
	
	  augmentColor(primary);
	  augmentColor(secondary, 'A400', 'A200', 'A700');
	  augmentColor(error);
	  var types = {
	    dark: dark,
	    light: light
	  };
	   false ? (0, _warning.default)(types[type], "Material-UI: the palette type `".concat(type, "` is not supported.")) : void 0;
	  var paletteOutput = (0, _deepmerge.default)((0, _extends2.default)({
	    // A collection of common colors.
	    common: _common.default,
	    // The palette type, can be light or dark.
	    type: type,
	    // The colors used to represent primary interface elements for a user.
	    primary: primary,
	    // The colors used to represent secondary interface elements for a user.
	    secondary: secondary,
	    // The colors used to represent interface elements that the user should be made aware of.
	    error: error,
	    // The grey colors.
	    grey: _grey.default,
	    // Used by `getContrastText()` to maximize the contrast between the background and
	    // the text.
	    contrastThreshold: contrastThreshold,
	    // Take a background color and return the color of the text to maximize the contrast.
	    getContrastText: getContrastText,
	    // Generate a rich color object.
	    augmentColor: augmentColor,
	    // Used by the functions below to shift a color's luminance by approximately
	    // two indexes within its tonal palette.
	    // E.g., shift from Red 500 to Red 300 or Red 700.
	    tonalOffset: tonalOffset
	  }, types[type]), other, {
	    clone: false // No need to clone deep
	
	  });
	  return paletteOutput;
	}

/***/ }),
/* 774 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createStyles;
	
	function createStyles(styles) {
	  return styles;
	}

/***/ }),
/* 775 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createTypography;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _deepmerge = _interopRequireDefault(__webpack_require__(193));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _utils = __webpack_require__(40);
	
	// < 1kb payload overhead when lodash/merge is > 3kb.
	function round(value) {
	  return Math.round(value * 1e5) / 1e5;
	}
	
	var caseAllCaps = {
	  textTransform: 'uppercase'
	};
	var defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
	/**
	 * @see @link{https://material.io/design/typography/the-type-system.html}
	 * @see @link{https://material.io/design/typography/understanding-typography.html}
	 */
	
	function createTypography(palette, typography) {
	  var _ref = typeof typography === 'function' ? typography(palette) : typography,
	      _ref$fontFamily = _ref.fontFamily,
	      fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily,
	      _ref$fontSize = _ref.fontSize,
	      fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,
	      _ref$fontWeightLight = _ref.fontWeightLight,
	      fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,
	      _ref$fontWeightRegula = _ref.fontWeightRegular,
	      fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,
	      _ref$fontWeightMedium = _ref.fontWeightMedium,
	      fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,
	      _ref$htmlFontSize = _ref.htmlFontSize,
	      htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,
	      _ref$useNextVariants = _ref.useNextVariants,
	      useNextVariants = _ref$useNextVariants === void 0 ? Boolean(_utils.ponyfillGlobal.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__) : _ref$useNextVariants,
	      _ref$suppressWarning = _ref.suppressWarning,
	      suppressWarning = _ref$suppressWarning === void 0 ? false : _ref$suppressWarning,
	      allVariants = _ref.allVariants,
	      other = (0, _objectWithoutProperties2.default)(_ref, ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "htmlFontSize", "useNextVariants", "suppressWarning", "allVariants"]);
	
	   false ? (0, _warning.default)(useNextVariants || suppressWarning, 'Material-UI: you are using the deprecated typography variants ' + 'that will be removed in the next major release.' + '\nPlease read the migration guide under https://material-ui.com/style/typography#migration-to-typography-v2') : void 0;
	  var coef = fontSize / 14;
	
	  var pxToRem = function pxToRem(size) {
	    return "".concat(size / htmlFontSize * coef, "rem");
	  };
	
	  var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) {
	    return (0, _extends2.default)({
	      color: palette.text.primary,
	      fontFamily: fontFamily,
	      fontWeight: fontWeight,
	      fontSize: pxToRem(size),
	      // Unitless following http://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
	      lineHeight: lineHeight
	    }, fontFamily === defaultFontFamily ? {
	      letterSpacing: "".concat(round(letterSpacing / size), "em")
	    } : {}, casing, allVariants);
	  };
	
	  var nextVariants = {
	    h1: buildVariant(fontWeightLight, 96, 1, -1.5),
	    h2: buildVariant(fontWeightLight, 60, 1, -0.5),
	    h3: buildVariant(fontWeightRegular, 48, 1.04, 0),
	    h4: buildVariant(fontWeightRegular, 34, 1.17, 0.25),
	    h5: buildVariant(fontWeightRegular, 24, 1.33, 0),
	    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
	    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
	    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
	    body1Next: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
	    body2Next: buildVariant(fontWeightRegular, 14, 1.5, 0.15),
	    buttonNext: buildVariant(fontWeightMedium, 14, 1.5, 0.4, caseAllCaps),
	    captionNext: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
	    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)
	  }; // To remove in v4
	
	  var oldVariants = {
	    display4: (0, _extends2.default)({
	      fontSize: pxToRem(112),
	      fontWeight: fontWeightLight,
	      fontFamily: fontFamily,
	      letterSpacing: '-.04em',
	      lineHeight: "".concat(round(128 / 112), "em"),
	      marginLeft: '-.04em',
	      color: palette.text.secondary
	    }, allVariants),
	    display3: (0, _extends2.default)({
	      fontSize: pxToRem(56),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      letterSpacing: '-.02em',
	      lineHeight: "".concat(round(73 / 56), "em"),
	      marginLeft: '-.02em',
	      color: palette.text.secondary
	    }, allVariants),
	    display2: (0, _extends2.default)({
	      fontSize: pxToRem(45),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(51 / 45), "em"),
	      marginLeft: '-.02em',
	      color: palette.text.secondary
	    }, allVariants),
	    display1: (0, _extends2.default)({
	      fontSize: pxToRem(34),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(41 / 34), "em"),
	      color: palette.text.secondary
	    }, allVariants),
	    headline: (0, _extends2.default)({
	      fontSize: pxToRem(24),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(32.5 / 24), "em"),
	      color: palette.text.primary
	    }, allVariants),
	    title: (0, _extends2.default)({
	      fontSize: pxToRem(21),
	      fontWeight: fontWeightMedium,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(24.5 / 21), "em"),
	      color: palette.text.primary
	    }, allVariants),
	    subheading: (0, _extends2.default)({
	      fontSize: pxToRem(16),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(24 / 16), "em"),
	      color: palette.text.primary
	    }, allVariants),
	    body2: (0, _extends2.default)({
	      fontSize: pxToRem(14),
	      fontWeight: fontWeightMedium,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(24 / 14), "em"),
	      color: palette.text.primary
	    }, allVariants),
	    body1: (0, _extends2.default)({
	      fontSize: pxToRem(14),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(20.5 / 14), "em"),
	      color: palette.text.primary
	    }, allVariants),
	    caption: (0, _extends2.default)({
	      fontSize: pxToRem(12),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(16.5 / 12), "em"),
	      color: palette.text.secondary
	    }, allVariants),
	    button: (0, _extends2.default)({
	      fontSize: pxToRem(14),
	      textTransform: 'uppercase',
	      fontWeight: fontWeightMedium,
	      fontFamily: fontFamily,
	      color: palette.text.primary
	    }, allVariants)
	  };
	  return (0, _deepmerge.default)((0, _extends2.default)({
	    pxToRem: pxToRem,
	    round: round,
	    fontFamily: fontFamily,
	    fontSize: fontSize,
	    fontWeightLight: fontWeightLight,
	    fontWeightRegular: fontWeightRegular,
	    fontWeightMedium: fontWeightMedium
	  }, oldVariants, nextVariants, useNextVariants ? {
	    body1: nextVariants.body1Next,
	    body2: nextVariants.body2Next,
	    button: nextVariants.buttonNext,
	    caption: nextVariants.captionNext
	  } : {}, {
	    useNextVariants: useNextVariants
	  }), other, {
	    clone: false // No need to clone deep
	
	  });
	}

/***/ }),
/* 776 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _typeof2 = _interopRequireDefault(__webpack_require__(131));
	
	var _warning = _interopRequireDefault(__webpack_require__(15));
	
	var _deepmerge = _interopRequireDefault(__webpack_require__(193));
	
	// < 1kb payload overhead when lodash/merge is > 3kb.
	// Support for the jss-expand plugin.
	function arrayMerge(destination, source) {
	  return source;
	}
	
	function getStylesCreator(stylesOrCreator) {
	  var themingEnabled = typeof stylesOrCreator === 'function';
	   false ? (0, _warning.default)((0, _typeof2.default)(stylesOrCreator) === 'object' || themingEnabled, ['Material-UI: the first argument provided to withStyles() is invalid.', 'You need to provide a function generating the styles or a styles object.'].join('\n')) : void 0;
	
	  function create(theme, name) {
	    var styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;
	
	    if (!name || !theme.overrides || !theme.overrides[name]) {
	      return styles;
	    }
	
	    var overrides = theme.overrides[name];
	    var stylesWithOverrides = (0, _extends2.default)({}, styles);
	    Object.keys(overrides).forEach(function (key) {
	       false ? (0, _warning.default)(stylesWithOverrides[key], ['Material-UI: you are trying to override a style that does not exist.', "Fix the `".concat(key, "` key of `theme.overrides.").concat(name, "`.")].join('\n')) : void 0;
	      stylesWithOverrides[key] = (0, _deepmerge.default)(stylesWithOverrides[key], overrides[key], {
	        arrayMerge: arrayMerge
	      });
	    });
	    return stylesWithOverrides;
	  }
	
	  return {
	    create: create,
	    options: {},
	    themingEnabled: themingEnabled
	  };
	}
	
	var _default = getStylesCreator;
	exports.default = _default;

/***/ }),
/* 777 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	// Used https://github.com/thinkloop/multi-key-cache as inspiration
	var multiKeyStore = {
	  set: function set(cache, key1, key2, value) {
	    var subCache = cache.get(key1);
	
	    if (!subCache) {
	      subCache = new Map();
	      cache.set(key1, subCache);
	    }
	
	    subCache.set(key2, value);
	  },
	  get: function get(cache, key1, key2) {
	    var subCache = cache.get(key1);
	    return subCache ? subCache.get(key2) : undefined;
	  },
	  delete: function _delete(cache, key1, key2) {
	    var subCache = cache.get(key1);
	    subCache.delete(key2);
	  }
	};
	var _default = multiKeyStore;
	exports.default = _default;

/***/ }),
/* 778 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	// Share the same values than in
	// https://github.com/cssinjs/jss/blob/master/packages/react-jss/src/ns.js
	var ns = {
	  jss: '64a55d578f856d258dc345b094a2a2b3',
	  sheetsRegistry: 'd4bd0baacbc52bbd48bbb9eb24344ecd',
	  sheetOptions: '6fc570d6bd61383819d0f9e7407c452d'
	};
	var _default = ns;
	exports.default = _default;

/***/ }),
/* 779 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var shadowKeyUmbraOpacity = 0.2;
	var shadowKeyPenumbraOpacity = 0.14;
	var shadowAmbientShadowOpacity = 0.12;
	
	function createShadow() {
	  return ["".concat(arguments.length <= 0 ? undefined : arguments[0], "px ").concat(arguments.length <= 1 ? undefined : arguments[1], "px ").concat(arguments.length <= 2 ? undefined : arguments[2], "px ").concat(arguments.length <= 3 ? undefined : arguments[3], "px rgba(0, 0, 0, ").concat(shadowKeyUmbraOpacity, ")"), "".concat(arguments.length <= 4 ? undefined : arguments[4], "px ").concat(arguments.length <= 5 ? undefined : arguments[5], "px ").concat(arguments.length <= 6 ? undefined : arguments[6], "px ").concat(arguments.length <= 7 ? undefined : arguments[7], "px rgba(0, 0, 0, ").concat(shadowKeyPenumbraOpacity, ")"), "".concat(arguments.length <= 8 ? undefined : arguments[8], "px ").concat(arguments.length <= 9 ? undefined : arguments[9], "px ").concat(arguments.length <= 10 ? undefined : arguments[10], "px ").concat(arguments.length <= 11 ? undefined : arguments[11], "px rgba(0, 0, 0, ").concat(shadowAmbientShadowOpacity, ")")].join(',');
	}
	
	var shadows = ['none', createShadow(0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1), createShadow(0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2), createShadow(0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
	var _default = shadows;
	exports.default = _default;

/***/ }),
/* 780 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var shape = {
	  borderRadius: 4
	};
	var _default = shape;
	exports.default = _default;

/***/ }),
/* 781 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var spacing = {
	  // All components align to an 8dp square baseline grid for mobile, tablet, and desktop.
	  // https://material.io/design/layout/understanding-layout.html#pixel-density
	  unit: 8
	};
	var _default = spacing;
	exports.default = _default;

/***/ }),
/* 782 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	// We need to centralize the zIndex definitions as they work
	// like global values in the browser.
	var zIndex = {
	  mobileStepper: 1000,
	  appBar: 1100,
	  drawer: 1200,
	  modal: 1300,
	  snackbar: 1400,
	  tooltip: 1500
	};
	var _default = zIndex;
	exports.default = _default;

/***/ }),
/* 783 */,
/* 784 */,
/* 785 */,
/* 786 */,
/* 787 */,
/* 788 */,
/* 789 */,
/* 790 */,
/* 791 */,
/* 792 */,
/* 793 */,
/* 794 */,
/* 795 */,
/* 796 */,
/* 797 */,
/* 798 */,
/* 799 */,
/* 800 */,
/* 801 */,
/* 802 */,
/* 803 */,
/* 804 */,
/* 805 */,
/* 806 */,
/* 807 */,
/* 808 */,
/* 809 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	function chainPropTypes(propType1, propType2) {
	  /* istanbul ignore if */
	  if (true) {
	    return function () {
	      return null;
	    };
	  }
	
	  return function validate() {
	    return propType1.apply(void 0, arguments) || propType2.apply(void 0, arguments);
	  };
	}
	
	var _default = chainPropTypes;
	exports.default = _default;

/***/ }),
/* 810 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(249);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _typeof2 = _interopRequireDefault(__webpack_require__(815));
	
	var _reactIs = __webpack_require__(543);
	
	/**
	 * A factory that returns a propTypes validator that only accepts values that
	 * are also accepted by React.createElement
	 * e.g. "div", functional, class components, forwardRef etc.
	 *
	 * @param {boolean} isRequired If `true` returns a validator
	 *                             that will throw if nullish values are passed
	 */
	function createComponentProp(isRequired) {
	  /* istanbul ignore if */
	  if (true) {
	    return function () {
	      return null;
	    };
	  }
	
	  return function componentPropType(props, key, componentName, location, propFullName) {
	    var prop = props[key];
	    var propName = propFullName || key;
	    var message;
	
	    if (prop == null) {
	      if (isRequired) {
	        message = "The ".concat(location, " `").concat(propName, "` is marked as required in `").concat(componentName, "`, ") + "but its value is `".concat((0, _typeof2.default)(prop), "`.");
	      }
	    } else if (!(0, _reactIs.isValidElementType)(prop)) {
	      var preciseType = (0, _typeof2.default)(prop);
	      message = "Invalid ".concat(location, " `").concat(propName, "` of type `").concat(preciseType, "` ") + "supplied to `".concat(componentName, "`, expected a component.");
	    }
	
	    if (message != null) {
	      // change error message slightly on every check to prevent caching when testing
	      // which would not trigger console errors on subsequent fails
	      return new Error("".concat(message).concat( false ? Date.now() : ''));
	    }
	
	    return null;
	  };
	}
	
	var componentPropType = createComponentProp(false);
	componentPropType.isRequired = createComponentProp(true);
	var _default = componentPropType;
	exports.default = _default;

/***/ }),
/* 811 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(249);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.specialProperty = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(813));
	
	var _extends3 = _interopRequireDefault(__webpack_require__(814));
	
	// This module is based on https://github.com/airbnb/prop-types-exact repository.
	// However, in order to reduce the number of dependencies and to remove some extra safe checks
	// the module was forked.
	// Only exported for test purposes.
	var specialProperty = "exact-prop: \u200B";
	exports.specialProperty = specialProperty;
	
	function exactProp(propTypes) {
	  /* istanbul ignore if */
	  if (true) {
	    return propTypes;
	  }
	
	  return (0, _extends3.default)({}, propTypes, (0, _defineProperty2.default)({}, specialProperty, function (props) {
	    var unsupportedProps = Object.keys(props).filter(function (prop) {
	      return !propTypes.hasOwnProperty(prop);
	    });
	
	    if (unsupportedProps.length > 0) {
	      return new Error("The following properties are not supported: ".concat(unsupportedProps.map(function (prop) {
	        return "`".concat(prop, "`");
	      }).join(', '), ". Please remove them."));
	    }
	
	    return null;
	  }));
	}
	
	var _default = exactProp;
	exports.default = _default;

/***/ }),
/* 812 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getFunctionName = getFunctionName;
	exports.default = void 0;
	// Fork of recompose/getDisplayName with added IE 11 support
	// Simplified polyfill for IE 11 support
	// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3
	var fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
	
	function getFunctionName(fn) {
	  var match = "".concat(fn).match(fnNameMatchRegex);
	  var name = match && match[1];
	  return name || '';
	}
	
	function getDisplayName(Component) {
	  if (typeof Component === 'string') {
	    return Component;
	  }
	
	  if (!Component) {
	    return undefined;
	  }
	
	  return Component.displayName || Component.name || getFunctionName(Component) || 'Component';
	}
	
	var _default = getDisplayName;
	exports.default = _default;

/***/ }),
/* 813 */
/***/ (function(module, exports) {

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	}
	
	module.exports = _defineProperty;
	module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),
/* 814 */
/***/ (function(module, exports) {

	function _extends() {
	  module.exports = _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  module.exports["default"] = module.exports, module.exports.__esModule = true;
	  return _extends.apply(this, arguments);
	}
	
	module.exports = _extends;
	module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),
/* 815 */
/***/ (function(module, exports) {

	function _typeof(obj) {
	  "@babel/helpers - typeof";
	
	  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
	    module.exports = _typeof = function _typeof(obj) {
	      return typeof obj;
	    };
	
	    module.exports["default"] = module.exports, module.exports.__esModule = true;
	  } else {
	    module.exports = _typeof = function _typeof(obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	    };
	
	    module.exports["default"] = module.exports, module.exports.__esModule = true;
	  }
	
	  return _typeof(obj);
	}
	
	module.exports = _typeof;
	module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),
/* 816 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	/* eslint-disable */
	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var _default = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	
	exports.default = _default;

/***/ }),
/* 817 */
/***/ (function(module, exports) {

	/* The following list is defined in React's core */
	var IS_UNITLESS = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	module.exports = function(name, value) {
	  if(typeof value === 'number' && !IS_UNITLESS[ name ]) {
	    return value + 'px';
	  } else {
	    return value;
	  }
	};

/***/ }),
/* 818 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var events = __webpack_require__(112);
	var inherits = __webpack_require__(390);
	
	/**
	 * A DerivedHelper is a way to create sub requests to
	 * Algolia from a main helper.
	 * @class
	 * @classdesc The DerivedHelper provides an event based interface for search callbacks:
	 *  - search: when a search is triggered using the `search()` method.
	 *  - result: when the response is retrieved from Algolia and is processed.
	 *    This event contains a {@link SearchResults} object and the
	 *    {@link SearchParameters} corresponding to this answer.
	 */
	function DerivedHelper(mainHelper, fn) {
	  this.main = mainHelper;
	  this.fn = fn;
	  this.lastResults = null;
	}
	
	inherits(DerivedHelper, events.EventEmitter);
	
	/**
	 * Detach this helper from the main helper
	 * @return {undefined}
	 * @throws Error if the derived helper is already detached
	 */
	DerivedHelper.prototype.detach = function() {
	  this.removeAllListeners();
	  this.main.detachDerivedHelper(this);
	};
	
	DerivedHelper.prototype.getModifiedState = function(parameters) {
	  return this.fn(parameters);
	};
	
	module.exports = DerivedHelper;


/***/ }),
/* 819 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Functions to manipulate refinement lists
	 *
	 * The RefinementList is not formally defined through a prototype but is based
	 * on a specific structure.
	 *
	 * @module SearchParameters.refinementList
	 *
	 * @typedef {string[]} SearchParameters.refinementList.Refinements
	 * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList
	 */
	
	var isUndefined = __webpack_require__(516);
	var isString = __webpack_require__(164);
	var isFunction = __webpack_require__(125);
	var isEmpty = __webpack_require__(80);
	var defaults = __webpack_require__(318);
	
	var reduce = __webpack_require__(166);
	var filter = __webpack_require__(319);
	var omit = __webpack_require__(97);
	
	var lib = {
	  /**
	   * Adds a refinement to a RefinementList
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} attribute the attribute to refine
	   * @param {string} value the value of the refinement, if the value is not a string it will be converted
	   * @return {RefinementList} a new and updated refinement list
	   */
	  addRefinement: function addRefinement(refinementList, attribute, value) {
	    if (lib.isRefined(refinementList, attribute, value)) {
	      return refinementList;
	    }
	
	    var valueAsString = '' + value;
	
	    var facetRefinement = !refinementList[attribute] ?
	      [valueAsString] :
	      refinementList[attribute].concat(valueAsString);
	
	    var mod = {};
	
	    mod[attribute] = facetRefinement;
	
	    return defaults({}, mod, refinementList);
	  },
	  /**
	   * Removes refinement(s) for an attribute:
	   *  - if the value is specified removes the refinement for the value on the attribute
	   *  - if no value is specified removes all the refinements for this attribute
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} attribute the attribute to refine
	   * @param {string} [value] the value of the refinement
	   * @return {RefinementList} a new and updated refinement lst
	   */
	  removeRefinement: function removeRefinement(refinementList, attribute, value) {
	    if (isUndefined(value)) {
	      return lib.clearRefinement(refinementList, attribute);
	    }
	
	    var valueAsString = '' + value;
	
	    return lib.clearRefinement(refinementList, function(v, f) {
	      return attribute === f && valueAsString === v;
	    });
	  },
	  /**
	   * Toggles the refinement value for an attribute.
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} attribute the attribute to refine
	   * @param {string} value the value of the refinement
	   * @return {RefinementList} a new and updated list
	   */
	  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {
	    if (isUndefined(value)) throw new Error('toggleRefinement should be used with a value');
	
	    if (lib.isRefined(refinementList, attribute, value)) {
	      return lib.removeRefinement(refinementList, attribute, value);
	    }
	
	    return lib.addRefinement(refinementList, attribute, value);
	  },
	  /**
	   * Clear all or parts of a RefinementList. Depending on the arguments, three
	   * kinds of behavior can happen:
	   *  - if no attribute is provided: clears the whole list
	   *  - if an attribute is provided as a string: clears the list for the specific attribute
	   *  - if an attribute is provided as a function: discards the elements for which the function returns true
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} [attribute] the attribute or function to discard
	   * @param {string} [refinementType] optional parameter to give more context to the attribute function
	   * @return {RefinementList} a new and updated refinement list
	   */
	  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {
	    if (isUndefined(attribute)) {
	      if (isEmpty(refinementList)) return refinementList;
	      return {};
	    } else if (isString(attribute)) {
	      if (isEmpty(refinementList[attribute])) return refinementList;
	      return omit(refinementList, attribute);
	    } else if (isFunction(attribute)) {
	      var hasChanged = false;
	
	      var newRefinementList = reduce(refinementList, function(memo, values, key) {
	        var facetList = filter(values, function(value) {
	          return !attribute(value, key, refinementType);
	        });
	
	        if (!isEmpty(facetList)) {
	          if (facetList.length !== values.length) hasChanged = true;
	          memo[key] = facetList;
	        }
	        else hasChanged = true;
	
	        return memo;
	      }, {});
	
	      if (hasChanged) return newRefinementList;
	      return refinementList;
	    }
	  },
	  /**
	   * Test if the refinement value is used for the attribute. If no refinement value
	   * is provided, test if the refinementList contains any refinement for the
	   * given attribute.
	   * @param {RefinementList} refinementList the list of refinement
	   * @param {string} attribute name of the attribute
	   * @param {string} [refinementValue] value of the filter/refinement
	   * @return {boolean}
	   */
	  isRefined: function isRefined(refinementList, attribute, refinementValue) {
	    var indexOf = __webpack_require__(210);
	
	    var containsRefinements = !!refinementList[attribute] &&
	      refinementList[attribute].length > 0;
	
	    if (isUndefined(refinementValue) || !containsRefinements) {
	      return containsRefinements;
	    }
	
	    var refinementValueAsString = '' + refinementValue;
	
	    return indexOf(refinementList[attribute], refinementValueAsString) !== -1;
	  }
	};
	
	module.exports = lib;


/***/ }),
/* 820 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var forEach = __webpack_require__(124);
	var filter = __webpack_require__(319);
	var map = __webpack_require__(81);
	var isEmpty = __webpack_require__(80);
	var indexOf = __webpack_require__(210);
	
	function filterState(state, filters) {
	  var partialState = {};
	  var attributeFilters = filter(filters, function(f) { return f.indexOf('attribute:') !== -1; });
	  var attributes = map(attributeFilters, function(aF) { return aF.split(':')[1]; });
	
	  if (indexOf(attributes, '*') === -1) {
	    forEach(attributes, function(attr) {
	      if (state.isConjunctiveFacet(attr) && state.isFacetRefined(attr)) {
	        if (!partialState.facetsRefinements) partialState.facetsRefinements = {};
	        partialState.facetsRefinements[attr] = state.facetsRefinements[attr];
	      }
	
	      if (state.isDisjunctiveFacet(attr) && state.isDisjunctiveFacetRefined(attr)) {
	        if (!partialState.disjunctiveFacetsRefinements) partialState.disjunctiveFacetsRefinements = {};
	        partialState.disjunctiveFacetsRefinements[attr] = state.disjunctiveFacetsRefinements[attr];
	      }
	
	      if (state.isHierarchicalFacet(attr) && state.isHierarchicalFacetRefined(attr)) {
	        if (!partialState.hierarchicalFacetsRefinements) partialState.hierarchicalFacetsRefinements = {};
	        partialState.hierarchicalFacetsRefinements[attr] = state.hierarchicalFacetsRefinements[attr];
	      }
	
	      var numericRefinements = state.getNumericRefinements(attr);
	      if (!isEmpty(numericRefinements)) {
	        if (!partialState.numericRefinements) partialState.numericRefinements = {};
	        partialState.numericRefinements[attr] = state.numericRefinements[attr];
	      }
	    });
	  } else {
	    if (!isEmpty(state.numericRefinements)) {
	      partialState.numericRefinements = state.numericRefinements;
	    }
	    if (!isEmpty(state.facetsRefinements)) partialState.facetsRefinements = state.facetsRefinements;
	    if (!isEmpty(state.disjunctiveFacetsRefinements)) {
	      partialState.disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements;
	    }
	    if (!isEmpty(state.hierarchicalFacetsRefinements)) {
	      partialState.hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements;
	    }
	  }
	
	  var searchParameters = filter(
	    filters,
	    function(f) {
	      return f.indexOf('attribute:') === -1;
	    }
	  );
	
	  forEach(
	    searchParameters,
	    function(parameterKey) {
	      partialState[parameterKey] = state[parameterKey];
	    }
	  );
	
	  return partialState;
	}
	
	module.exports = filterState;


/***/ }),
/* 821 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var invert = __webpack_require__(514);
	var keys = __webpack_require__(58);
	
	var keys2Short = {
	  advancedSyntax: 'aS',
	  allowTyposOnNumericTokens: 'aTONT',
	  analyticsTags: 'aT',
	  analytics: 'a',
	  aroundLatLngViaIP: 'aLLVIP',
	  aroundLatLng: 'aLL',
	  aroundPrecision: 'aP',
	  aroundRadius: 'aR',
	  attributesToHighlight: 'aTH',
	  attributesToRetrieve: 'aTR',
	  attributesToSnippet: 'aTS',
	  disjunctiveFacetsRefinements: 'dFR',
	  disjunctiveFacets: 'dF',
	  distinct: 'd',
	  facetsExcludes: 'fE',
	  facetsRefinements: 'fR',
	  facets: 'f',
	  getRankingInfo: 'gRI',
	  hierarchicalFacetsRefinements: 'hFR',
	  hierarchicalFacets: 'hF',
	  highlightPostTag: 'hPoT',
	  highlightPreTag: 'hPrT',
	  hitsPerPage: 'hPP',
	  ignorePlurals: 'iP',
	  index: 'idx',
	  insideBoundingBox: 'iBB',
	  insidePolygon: 'iPg',
	  length: 'l',
	  maxValuesPerFacet: 'mVPF',
	  minimumAroundRadius: 'mAR',
	  minProximity: 'mP',
	  minWordSizefor1Typo: 'mWS1T',
	  minWordSizefor2Typos: 'mWS2T',
	  numericFilters: 'nF',
	  numericRefinements: 'nR',
	  offset: 'o',
	  optionalWords: 'oW',
	  page: 'p',
	  queryType: 'qT',
	  query: 'q',
	  removeWordsIfNoResults: 'rWINR',
	  replaceSynonymsInHighlight: 'rSIH',
	  restrictSearchableAttributes: 'rSA',
	  synonyms: 's',
	  tagFilters: 'tF',
	  tagRefinements: 'tR',
	  typoTolerance: 'tT',
	  optionalTagFilters: 'oTF',
	  optionalFacetFilters: 'oFF',
	  snippetEllipsisText: 'sET',
	  disableExactOnAttributes: 'dEOA',
	  enableExactOnSingleWordQuery: 'eEOSWQ'
	};
	
	var short2Keys = invert(keys2Short);
	
	module.exports = {
	  /**
	   * All the keys of the state, encoded.
	   * @const
	   */
	  ENCODED_PARAMETERS: keys(short2Keys),
	  /**
	   * Decode a shorten attribute
	   * @param {string} shortKey the shorten attribute
	   * @return {string} the decoded attribute, undefined otherwise
	   */
	  decode: function(shortKey) {
	    return short2Keys[shortKey];
	  },
	  /**
	   * Encode an attribute into a short version
	   * @param {string} key the attribute
	   * @return {string} the shorten attribute
	   */
	  encode: function(key) {
	    return keys2Short[key];
	  }
	};


/***/ }),
/* 822 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = generateTrees;
	
	var last = __webpack_require__(517);
	var map = __webpack_require__(81);
	var reduce = __webpack_require__(166);
	var orderBy = __webpack_require__(325);
	var trim = __webpack_require__(520);
	var find = __webpack_require__(71);
	var pickBy = __webpack_require__(1505);
	
	var prepareHierarchicalFacetSortBy = __webpack_require__(389);
	
	function generateTrees(state) {
	  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {
	    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];
	    var hierarchicalFacetRefinement = state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&
	      state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0] || '';
	    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	    var hierarchicalRootPath = state._getHierarchicalRootPath(hierarchicalFacet);
	    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(hierarchicalFacet);
	    var sortBy = prepareHierarchicalFacetSortBy(state._getHierarchicalFacetSortBy(hierarchicalFacet));
	
	    var generateTreeFn = generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath,
	      hierarchicalShowParentLevel, hierarchicalFacetRefinement);
	
	    var results = hierarchicalFacetResult;
	
	    if (hierarchicalRootPath) {
	      results = hierarchicalFacetResult.slice(hierarchicalRootPath.split(hierarchicalSeparator).length);
	    }
	
	    return reduce(results, generateTreeFn, {
	      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,
	      count: null, // root level, no count
	      isRefined: true, // root level, always refined
	      path: null, // root level, no path
	      data: null
	    });
	  };
	}
	
	function generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath,
	                                  hierarchicalShowParentLevel, currentRefinement) {
	  return function generateTree(hierarchicalTree, hierarchicalFacetResult, currentHierarchicalLevel) {
	    var parent = hierarchicalTree;
	
	    if (currentHierarchicalLevel > 0) {
	      var level = 0;
	
	      parent = hierarchicalTree;
	
	      while (level < currentHierarchicalLevel) {
	        parent = parent && find(parent.data, {isRefined: true});
	        level++;
	      }
	    }
	
	    // we found a refined parent, let's add current level data under it
	    if (parent) {
	      // filter values in case an object has multiple categories:
	      //   {
	      //     categories: {
	      //       level0: ['beers', 'bières'],
	      //       level1: ['beers > IPA', 'bières > Belges']
	      //     }
	      //   }
	      //
	      // If parent refinement is `beers`, then we do not want to have `bières > Belges`
	      // showing up
	
	      var onlyMatchingValuesFn = filterFacetValues(parent.path || hierarchicalRootPath,
	        currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel);
	
	      parent.data = orderBy(
	        map(
	          pickBy(hierarchicalFacetResult.data, onlyMatchingValuesFn),
	          formatHierarchicalFacetValue(hierarchicalSeparator, currentRefinement)
	        ),
	        sortBy[0], sortBy[1]
	      );
	    }
	
	    return hierarchicalTree;
	  };
	}
	
	function filterFacetValues(parentPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath,
	                           hierarchicalShowParentLevel) {
	  return function(facetCount, facetValue) {
	    // we want the facetValue is a child of hierarchicalRootPath
	    if (hierarchicalRootPath &&
	      (facetValue.indexOf(hierarchicalRootPath) !== 0 || hierarchicalRootPath === facetValue)) {
	      return false;
	    }
	
	    // we always want root levels (only when there is no prefix path)
	    return !hierarchicalRootPath && facetValue.indexOf(hierarchicalSeparator) === -1 ||
	      // if there is a rootPath, being root level mean 1 level under rootPath
	      hierarchicalRootPath &&
	      facetValue.split(hierarchicalSeparator).length - hierarchicalRootPath.split(hierarchicalSeparator).length === 1 ||
	      // if current refinement is a root level and current facetValue is a root level,
	      // keep the facetValue
	      facetValue.indexOf(hierarchicalSeparator) === -1 &&
	      currentRefinement.indexOf(hierarchicalSeparator) === -1 ||
	      // currentRefinement is a child of the facet value
	      currentRefinement.indexOf(facetValue) === 0 ||
	      // facetValue is a child of the current parent, add it
	      facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&
	      (hierarchicalShowParentLevel || facetValue.indexOf(currentRefinement) === 0);
	  };
	}
	
	function formatHierarchicalFacetValue(hierarchicalSeparator, currentRefinement) {
	  return function format(facetCount, facetValue) {
	    return {
	      name: trim(last(facetValue.split(hierarchicalSeparator))),
	      path: facetValue,
	      count: facetCount,
	      isRefined: currentRefinement === facetValue || currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,
	      data: null
	    };
	  };
	}


/***/ }),
/* 823 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var SearchParameters = __webpack_require__(250);
	var SearchResults = __webpack_require__(388);
	var DerivedHelper = __webpack_require__(818);
	var requestBuilder = __webpack_require__(825);
	
	var events = __webpack_require__(112);
	var inherits = __webpack_require__(390);
	
	var flatten = __webpack_require__(512);
	var forEach = __webpack_require__(124);
	var isEmpty = __webpack_require__(80);
	var map = __webpack_require__(81);
	
	var url = __webpack_require__(391);
	var version = __webpack_require__(392);
	
	/**
	 * Event triggered when a parameter is set or updated
	 * @event AlgoliaSearchHelper#event:change
	 * @property {SearchParameters} state the current parameters with the latest changes applied
	 * @property {SearchResults} lastResults the previous results received from Algolia. `null` before
	 * the first request
	 * @example
	 * helper.on('change', function(state, lastResults) {
	 *   console.log('The parameters have changed');
	 * });
	 */
	
	/**
	 * Event triggered when a main search is sent to Algolia
	 * @event AlgoliaSearchHelper#event:search
	 * @property {SearchParameters} state the parameters used for this search
	 * @property {SearchResults} lastResults the results from the previous search. `null` if
	 * it is the first search.
	 * @example
	 * helper.on('search', function(state, lastResults) {
	 *   console.log('Search sent');
	 * });
	 */
	
	/**
	 * Event triggered when a search using `searchForFacetValues` is sent to Algolia
	 * @event AlgoliaSearchHelper#event:searchForFacetValues
	 * @property {SearchParameters} state the parameters used for this search
	 * it is the first search.
	 * @property {string} facet the facet searched into
	 * @property {string} query the query used to search in the facets
	 * @example
	 * helper.on('searchForFacetValues', function(state, facet, query) {
	 *   console.log('searchForFacetValues sent');
	 * });
	 */
	
	/**
	 * Event triggered when a search using `searchOnce` is sent to Algolia
	 * @event AlgoliaSearchHelper#event:searchOnce
	 * @property {SearchParameters} state the parameters used for this search
	 * it is the first search.
	 * @example
	 * helper.on('searchOnce', function(state) {
	 *   console.log('searchOnce sent');
	 * });
	 */
	
	/**
	 * Event triggered when the results are retrieved from Algolia
	 * @event AlgoliaSearchHelper#event:result
	 * @property {SearchResults} results the results received from Algolia
	 * @property {SearchParameters} state the parameters used to query Algolia. Those might
	 * be different from the one in the helper instance (for example if the network is unreliable).
	 * @example
	 * helper.on('result', function(results, state) {
	 *   console.log('Search results received');
	 * });
	 */
	
	/**
	 * Event triggered when Algolia sends back an error. For example, if an unknown parameter is
	 * used, the error can be caught using this event.
	 * @event AlgoliaSearchHelper#event:error
	 * @property {Error} error the error returned by the Algolia.
	 * @example
	 * helper.on('error', function(error) {
	 *   console.log('Houston we got a problem.');
	 * });
	 */
	
	/**
	 * Event triggered when the queue of queries have been depleted (with any result or outdated queries)
	 * @event AlgoliaSearchHelper#event:searchQueueEmpty
	 * @example
	 * helper.on('searchQueueEmpty', function() {
	 *   console.log('No more search pending');
	 *   // This is received before the result event if we're not expecting new results
	 * });
	 *
	 * helper.search();
	 */
	
	/**
	 * Initialize a new AlgoliaSearchHelper
	 * @class
	 * @classdesc The AlgoliaSearchHelper is a class that ease the management of the
	 * search. It provides an event based interface for search callbacks:
	 *  - change: when the internal search state is changed.
	 *    This event contains a {@link SearchParameters} object and the
	 *    {@link SearchResults} of the last result if any.
	 *  - search: when a search is triggered using the `search()` method.
	 *  - result: when the response is retrieved from Algolia and is processed.
	 *    This event contains a {@link SearchResults} object and the
	 *    {@link SearchParameters} corresponding to this answer.
	 *  - error: when the response is an error. This event contains the error returned by the server.
	 * @param  {AlgoliaSearch} client an AlgoliaSearch client
	 * @param  {string} index the index name to query
	 * @param  {SearchParameters | object} options an object defining the initial
	 * config of the search. It doesn't have to be a {SearchParameters},
	 * just an object containing the properties you need from it.
	 */
	function AlgoliaSearchHelper(client, index, options) {
	  if (client.addAlgoliaAgent && !doesClientAgentContainsHelper(client)) {
	    client.addAlgoliaAgent('JS Helper (' + version + ')');
	  }
	
	  this.setClient(client);
	  var opts = options || {};
	  opts.index = index;
	  this.state = SearchParameters.make(opts);
	  this.lastResults = null;
	  this._queryId = 0;
	  this._lastQueryIdReceived = -1;
	  this.derivedHelpers = [];
	  this._currentNbQueries = 0;
	}
	
	inherits(AlgoliaSearchHelper, events.EventEmitter);
	
	/**
	 * Start the search with the parameters set in the state. When the
	 * method is called, it triggers a `search` event. The results will
	 * be available through the `result` event. If an error occurs, an
	 * `error` will be fired instead.
	 * @return {AlgoliaSearchHelper}
	 * @fires search
	 * @fires result
	 * @fires error
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.search = function() {
	  this._search();
	  return this;
	};
	
	/**
	 * Gets the search query parameters that would be sent to the Algolia Client
	 * for the hits
	 * @return {object} Query Parameters
	 */
	AlgoliaSearchHelper.prototype.getQuery = function() {
	  var state = this.state;
	  return requestBuilder._getHitsSearchParams(state);
	};
	
	/**
	 * Start a search using a modified version of the current state. This method does
	 * not trigger the helper lifecycle and does not modify the state kept internally
	 * by the helper. This second aspect means that the next search call will be the
	 * same as a search call before calling searchOnce.
	 * @param {object} options can contain all the parameters that can be set to SearchParameters
	 * plus the index
	 * @param {function} [callback] optional callback executed when the response from the
	 * server is back.
	 * @return {promise|undefined} if a callback is passed the method returns undefined
	 * otherwise it returns a promise containing an object with two keys :
	 *  - content with a SearchResults
	 *  - state with the state used for the query as a SearchParameters
	 * @example
	 * // Changing the number of records returned per page to 1
	 * // This example uses the callback API
	 * var state = helper.searchOnce({hitsPerPage: 1},
	 *   function(error, content, state) {
	 *     // if an error occurred it will be passed in error, otherwise its value is null
	 *     // content contains the results formatted as a SearchResults
	 *     // state is the instance of SearchParameters used for this search
	 *   });
	 * @example
	 * // Changing the number of records returned per page to 1
	 * // This example uses the promise API
	 * var state1 = helper.searchOnce({hitsPerPage: 1})
	 *                 .then(promiseHandler);
	 *
	 * function promiseHandler(res) {
	 *   // res contains
	 *   // {
	 *   //   content : SearchResults
	 *   //   state   : SearchParameters (the one used for this specific search)
	 *   // }
	 * }
	 */
	AlgoliaSearchHelper.prototype.searchOnce = function(options, cb) {
	  var tempState = !options ? this.state : this.state.setQueryParameters(options);
	  var queries = requestBuilder._getQueries(tempState.index, tempState);
	  var self = this;
	
	  this._currentNbQueries++;
	
	  this.emit('searchOnce', tempState);
	
	  if (cb) {
	    this.client
	      .search(queries)
	      .then(function(content) {
	        self._currentNbQueries--;
	        if (self._currentNbQueries === 0) {
	          self.emit('searchQueueEmpty');
	        }
	
	        cb(null, new SearchResults(tempState, content.results), tempState);
	      })
	      .catch(function(err) {
	        self._currentNbQueries--;
	        if (self._currentNbQueries === 0) {
	          self.emit('searchQueueEmpty');
	        }
	
	        cb(err, null, tempState);
	      });
	
	    return undefined;
	  }
	
	  return this.client.search(queries).then(function(content) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	    return {
	      content: new SearchResults(tempState, content.results),
	      state: tempState,
	      _originalResponse: content
	    };
	  }, function(e) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	    throw e;
	  });
	};
	
	/**
	 * Structure of each result when using
	 * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)
	 * @typedef FacetSearchHit
	 * @type {object}
	 * @property {string} value the facet value
	 * @property {string} highlighted the facet value highlighted with the query string
	 * @property {number} count number of occurrence of this facet value
	 * @property {boolean} isRefined true if the value is already refined
	 */
	
	/**
	 * Structure of the data resolved by the
	 * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)
	 * promise.
	 * @typedef FacetSearchResult
	 * @type {object}
	 * @property {FacetSearchHit} facetHits the results for this search for facet values
	 * @property {number} processingTimeMS time taken by the query inside the engine
	 */
	
	/**
	 * Search for facet values based on an query and the name of a faceted attribute. This
	 * triggers a search and will return a promise. On top of using the query, it also sends
	 * the parameters from the state so that the search is narrowed down to only the possible values.
	 *
	 * See the description of [FacetSearchResult](reference.html#FacetSearchResult)
	 * @param {string} facet the name of the faceted attribute
	 * @param {string} query the string query for the search
	 * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100
	 * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes
	 * it in the generated query.
	 * @return {promise.<FacetSearchResult>} the results of the search
	 */
	AlgoliaSearchHelper.prototype.searchForFacetValues = function(facet, query, maxFacetHits, userState) {
	  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';
	  if (
	    !clientHasSFFV &&
	    typeof this.client.initIndex !== 'function'
	  ) {
	    throw new Error(
	      'search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues'
	    );
	  }
	  var state = this.state.setQueryParameters(userState || {});
	  var isDisjunctive = state.isDisjunctiveFacet(facet);
	  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);
	
	  this._currentNbQueries++;
	  var self = this;
	
	  this.emit('searchForFacetValues', state, facet, query);
	  var searchForFacetValuesPromise = clientHasSFFV
	    ? this.client.searchForFacetValues([{indexName: state.index, params: algoliaQuery}])
	    : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);
	
	  return searchForFacetValuesPromise.then(function addIsRefined(content) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	
	    content = Array.isArray(content) ? content[0] : content;
	
	    content.facetHits = forEach(content.facetHits, function(f) {
	      f.isRefined = isDisjunctive ?
	        state.isDisjunctiveFacetRefined(facet, f.value) :
	        state.isFacetRefined(facet, f.value);
	    });
	
	    return content;
	  }, function(e) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	    throw e;
	  });
	};
	
	/**
	 * Sets the text query used for the search.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} q the user query
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setQuery = function(q) {
	  this._change(this.state.setPage(0).setQuery(q));
	  return this;
	};
	
	/**
	 * Remove all the types of refinements except tags. A string can be provided to remove
	 * only the refinements of a specific attribute. For more advanced use case, you can
	 * provide a function instead. This function should follow the
	 * [clearCallback definition](#SearchParameters.clearCallback).
	 *
	 * This method resets the current page to 0.
	 * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 * @example
	 * // Removing all the refinements
	 * helper.clearRefinements().search();
	 * @example
	 * // Removing all the filters on a the category attribute.
	 * helper.clearRefinements('category').search();
	 * @example
	 * // Removing only the exclude filters on the category facet.
	 * helper.clearRefinements(function(value, attribute, type) {
	 *   return type === 'exclude' && attribute === 'category';
	 * }).search();
	 */
	AlgoliaSearchHelper.prototype.clearRefinements = function(name) {
	  this._change(this.state.setPage(0).clearRefinements(name));
	  return this;
	};
	
	/**
	 * Remove all the tag filters.
	 *
	 * This method resets the current page to 0.
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.clearTags = function() {
	  this._change(this.state.setPage(0).clearTags());
	  return this;
	};
	
	/**
	 * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value (will be converted to string)
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).addDisjunctiveFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.addDisjunctiveRefine = function() {
	  return this.addDisjunctiveFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Adds a refinement on a hierarchical facet. It will throw
	 * an exception if the facet is not defined or if the facet
	 * is already refined.
	 *
	 * This method resets the current page to 0.
	 * @param {string} facet the facet name
	 * @param {string} path the hierarchical facet path
	 * @return {AlgoliaSearchHelper}
	 * @throws Error if the facet is not defined or if the facet is refined
	 * @chainable
	 * @fires change
	 */
	AlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).addHierarchicalFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} attribute the attribute on which the numeric filter applies
	 * @param  {string} operator the operator of the filter
	 * @param  {number} value the value of the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addNumericRefinement = function(attribute, operator, value) {
	  this._change(this.state.setPage(0).addNumericRefinement(attribute, operator, value));
	  return this;
	};
	
	/**
	 * Adds a filter to a faceted attribute with the `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value (will be converted to string)
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).addFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.addRefine = function() {
	  return this.addFacetRefinement.apply(this, arguments);
	};
	
	
	/**
	 * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value (will be converted to string)
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addFacetExclusion = function(facet, value) {
	  this._change(this.state.setPage(0).addExcludeRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}
	 */
	AlgoliaSearchHelper.prototype.addExclude = function() {
	  return this.addFacetExclusion.apply(this, arguments);
	};
	
	/**
	 * Adds a tag filter with the `tag` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param {string} tag the tag to add to the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addTag = function(tag) {
	  this._change(this.state.setPage(0).addTagRefinement(tag));
	  return this;
	};
	
	/**
	 * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * Some parameters are optional, triggering different behavior:
	 *  - if the value is not provided, then all the numeric value will be removed for the
	 *  specified attribute/operator couple.
	 *  - if the operator is not provided either, then all the numeric filter on this attribute
	 *  will be removed.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} attribute the attribute on which the numeric filter applies
	 * @param  {string} [operator] the operator of the filter
	 * @param  {number} [value] the value of the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeNumericRefinement = function(attribute, operator, value) {
	  this._change(this.state.setPage(0).removeNumericRefinement(attribute, operator, value));
	  return this;
	};
	
	/**
	 * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * If the value is omitted, then this method will remove all the filters for the
	 * attribute.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} [value] the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).removeDisjunctiveFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function() {
	  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Removes the refinement set on a hierarchical facet.
	 * @param {string} facet the facet name
	 * @return {AlgoliaSearchHelper}
	 * @throws Error if the facet is not defined or if the facet is not refined
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function(facet) {
	  this._change(this.state.setPage(0).removeHierarchicalFacetRefinement(facet));
	
	  return this;
	};
	
	/**
	 * Removes a filter to a faceted attribute with the `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * If the value is omitted, then this method will remove all the filters for the
	 * attribute.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} [value] the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).removeFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.removeRefine = function() {
	  return this.removeFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Removes an exclusion filter to a faceted attribute with the `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * If the value is omitted, then this method will remove all the filters for the
	 * attribute.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} [value] the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeFacetExclusion = function(facet, value) {
	  this._change(this.state.setPage(0).removeExcludeRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}
	 */
	AlgoliaSearchHelper.prototype.removeExclude = function() {
	  return this.removeFacetExclusion.apply(this, arguments);
	};
	
	/**
	 * Removes a tag filter with the `tag` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param {string} tag tag to remove from the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeTag = function(tag) {
	  this._change(this.state.setPage(0).removeTagRefinement(tag));
	  return this;
	};
	
	/**
	 * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.toggleFacetExclusion = function(facet, value) {
	  this._change(this.state.setPage(0).toggleExcludeFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}
	 */
	AlgoliaSearchHelper.prototype.toggleExclude = function() {
	  return this.toggleFacetExclusion.apply(this, arguments);
	};
	
	/**
	 * Adds or removes a filter to a faceted attribute with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method can be used for conjunctive, disjunctive and hierarchical filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value
	 * @return {AlgoliaSearchHelper}
	 * @throws Error will throw an error if the facet is not declared in the settings of the helper
	 * @fires change
	 * @chainable
	 * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.toggleRefinement = function(facet, value) {
	  return this.toggleFacetRefinement(facet, value);
	};
	
	/**
	 * Adds or removes a filter to a faceted attribute with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method can be used for conjunctive, disjunctive and hierarchical filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value
	 * @return {AlgoliaSearchHelper}
	 * @throws Error will throw an error if the facet is not declared in the settings of the helper
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.toggleFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).toggleFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.toggleRefine = function() {
	  return this.toggleFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Adds or removes a tag filter with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method resets the current page to 0.
	 * @param {string} tag tag to remove or add
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.toggleTag = function(tag) {
	  this._change(this.state.setPage(0).toggleTagRefinement(tag));
	  return this;
	};
	
	/**
	 * Increments the page number by one.
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 * @example
	 * helper.setPage(0).nextPage().getPage();
	 * // returns 1
	 */
	AlgoliaSearchHelper.prototype.nextPage = function() {
	  return this.setPage(this.state.page + 1);
	};
	
	/**
	 * Decrements the page number by one.
	 * @fires change
	 * @return {AlgoliaSearchHelper}
	 * @chainable
	 * @example
	 * helper.setPage(1).previousPage().getPage();
	 * // returns 0
	 */
	AlgoliaSearchHelper.prototype.previousPage = function() {
	  return this.setPage(this.state.page - 1);
	};
	
	/**
	 * @private
	 */
	function setCurrentPage(page) {
	  if (page < 0) throw new Error('Page requested below 0.');
	
	  this._change(this.state.setPage(page));
	  return this;
	}
	
	/**
	 * Change the current page
	 * @deprecated
	 * @param  {number} page The page number
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;
	
	/**
	 * Updates the current page.
	 * @function
	 * @param  {number} page The page number
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setPage = setCurrentPage;
	
	/**
	 * Updates the name of the index that will be targeted by the query.
	 *
	 * This method resets the current page to 0.
	 * @param {string} name the index name
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setIndex = function(name) {
	  this._change(this.state.setPage(0).setIndex(name));
	  return this;
	};
	
	/**
	 * Update a parameter of the search. This method reset the page
	 *
	 * The complete list of parameters is available on the
	 * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).
	 * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)
	 * or benefit from higher-level APIs (all the kind of filters and facets have their own API)
	 *
	 * This method resets the current page to 0.
	 * @param {string} parameter name of the parameter to update
	 * @param {any} value new value of the parameter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 * @example
	 * helper.setQueryParameter('hitsPerPage', 20).search();
	 */
	AlgoliaSearchHelper.prototype.setQueryParameter = function(parameter, value) {
	  this._change(this.state.setPage(0).setQueryParameter(parameter, value));
	  return this;
	};
	
	/**
	 * Set the whole state (warning: will erase previous state)
	 * @param {SearchParameters} newState the whole new state
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setState = function(newState) {
	  this._change(SearchParameters.make(newState));
	  return this;
	};
	
	/**
	 * Get the current search state stored in the helper. This object is immutable.
	 * @param {string[]} [filters] optional filters to retrieve only a subset of the state
	 * @return {SearchParameters|object} if filters is specified a plain object is
	 * returned containing only the requested fields, otherwise return the unfiltered
	 * state
	 * @example
	 * // Get the complete state as stored in the helper
	 * helper.getState();
	 * @example
	 * // Get a part of the state with all the refinements on attributes and the query
	 * helper.getState(['query', 'attribute:category']);
	 */
	AlgoliaSearchHelper.prototype.getState = function(filters) {
	  if (filters === undefined) return this.state;
	  return this.state.filter(filters);
	};
	
	/**
	 * DEPRECATED Get part of the state as a query string. By default, the output keys will not
	 * be prefixed and will only take the applied refinements and the query.
	 * @deprecated
	 * @param {object} [options] May contain the following parameters :
	 *
	 * **filters** : possible values are all the keys of the [SearchParameters](#searchparameters), `index` for
	 * the index, all the refinements with `attribute:*` or for some specific attributes with
	 * `attribute:theAttribute`
	 *
	 * **prefix** : prefix in front of the keys
	 *
	 * **moreAttributes** : more values to be added in the query string. Those values
	 *    won't be prefixed.
	 * @return {string} the query string
	 */
	AlgoliaSearchHelper.prototype.getStateAsQueryString = function getStateAsQueryString(options) {
	  var filters = options && options.filters || ['query', 'attribute:*'];
	  var partialState = this.getState(filters);
	
	  return url.getQueryStringFromState(partialState, options);
	};
	
	/**
	 * DEPRECATED Read a query string and return an object containing the state. Use
	 * url module.
	 * @deprecated
	 * @static
	 * @param {string} queryString the query string that will be decoded
	 * @param {object} options accepted options :
	 *   - prefix : the prefix used for the saved attributes, you have to provide the
	 *     same that was used for serialization
	 * @return {object} partial search parameters object (same properties than in the
	 * SearchParameters but not exhaustive)
	 * @see {@link url#getStateFromQueryString}
	 */
	AlgoliaSearchHelper.getConfigurationFromQueryString = url.getStateFromQueryString;
	
	/**
	 * DEPRECATED Retrieve an object of all the properties that are not understandable as helper
	 * parameters. Use url module.
	 * @deprecated
	 * @static
	 * @param {string} queryString the query string to read
	 * @param {object} options the options
	 *   - prefixForParameters : prefix used for the helper configuration keys
	 * @return {object} the object containing the parsed configuration that doesn't
	 * to the helper
	 */
	AlgoliaSearchHelper.getForeignConfigurationInQueryString = url.getUnrecognizedParametersInQueryString;
	
	/**
	 * DEPRECATED Overrides part of the state with the properties stored in the provided query
	 * string.
	 * @deprecated
	 * @param {string} queryString the query string containing the informations to url the state
	 * @param {object} options optional parameters :
	 *  - prefix : prefix used for the algolia parameters
	 *  - triggerChange : if set to true the state update will trigger a change event
	 */
	AlgoliaSearchHelper.prototype.setStateFromQueryString = function(queryString, options) {
	  var triggerChange = options && options.triggerChange || false;
	  var configuration = url.getStateFromQueryString(queryString, options);
	  var updatedState = this.state.setQueryParameters(configuration);
	
	  if (triggerChange) this.setState(updatedState);
	  else this.overrideStateWithoutTriggeringChangeEvent(updatedState);
	};
	
	/**
	 * Override the current state without triggering a change event.
	 * Do not use this method unless you know what you are doing. (see the example
	 * for a legit use case)
	 * @param {SearchParameters} newState the whole new state
	 * @return {AlgoliaSearchHelper}
	 * @example
	 *  helper.on('change', function(state){
	 *    // In this function you might want to find a way to store the state in the url/history
	 *    updateYourURL(state)
	 *  })
	 *  window.onpopstate = function(event){
	 *    // This is naive though as you should check if the state is really defined etc.
	 *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()
	 *  }
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function(newState) {
	  this.state = new SearchParameters(newState);
	  return this;
	};
	
	/**
	 * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}
	 */
	AlgoliaSearchHelper.prototype.isRefined = function(facet, value) {
	  if (this.state.isConjunctiveFacet(facet)) {
	    return this.state.isFacetRefined(facet, value);
	  } else if (this.state.isDisjunctiveFacet(facet)) {
	    return this.state.isDisjunctiveFacetRefined(facet, value);
	  }
	
	  throw new Error(facet +
	    ' is not properly defined in this helper configuration' +
	    '(use the facets or disjunctiveFacets keys to configure it)');
	};
	
	/**
	 * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.
	 * @param {string} attribute the name of the attribute
	 * @return {boolean} true if the attribute is filtered by at least one value
	 * @example
	 * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters
	 * helper.hasRefinements('price'); // false
	 * helper.addNumericRefinement('price', '>', 100);
	 * helper.hasRefinements('price'); // true
	 *
	 * helper.hasRefinements('color'); // false
	 * helper.addFacetRefinement('color', 'blue');
	 * helper.hasRefinements('color'); // true
	 *
	 * helper.hasRefinements('material'); // false
	 * helper.addDisjunctiveFacetRefinement('material', 'plastic');
	 * helper.hasRefinements('material'); // true
	 *
	 * helper.hasRefinements('categories'); // false
	 * helper.toggleFacetRefinement('categories', 'kitchen > knife');
	 * helper.hasRefinements('categories'); // true
	 *
	 */
	AlgoliaSearchHelper.prototype.hasRefinements = function(attribute) {
	  if (!isEmpty(this.state.getNumericRefinements(attribute))) {
	    return true;
	  } else if (this.state.isConjunctiveFacet(attribute)) {
	    return this.state.isFacetRefined(attribute);
	  } else if (this.state.isDisjunctiveFacet(attribute)) {
	    return this.state.isDisjunctiveFacetRefined(attribute);
	  } else if (this.state.isHierarchicalFacet(attribute)) {
	    return this.state.isHierarchicalFacetRefined(attribute);
	  }
	
	  // there's currently no way to know that the user did call `addNumericRefinement` at some point
	  // thus we cannot distinguish if there once was a numeric refinement that was cleared
	  // so we will return false in every other situations to be consistent
	  // while what we should do here is throw because we did not find the attribute in any type
	  // of refinement
	  return false;
	};
	
	/**
	 * Check if a value is excluded for a specific faceted attribute. If the value
	 * is omitted then the function checks if there is any excluding refinements.
	 *
	 * @param  {string}  facet name of the attribute for used for faceting
	 * @param  {string}  [value] optional value. If passed will test that this value
	   * is filtering the given facet.
	 * @return {boolean} true if refined
	 * @example
	 * helper.isExcludeRefined('color'); // false
	 * helper.isExcludeRefined('color', 'blue') // false
	 * helper.isExcludeRefined('color', 'red') // false
	 *
	 * helper.addFacetExclusion('color', 'red');
	 *
	 * helper.isExcludeRefined('color'); // true
	 * helper.isExcludeRefined('color', 'blue') // false
	 * helper.isExcludeRefined('color', 'red') // true
	 */
	AlgoliaSearchHelper.prototype.isExcluded = function(facet, value) {
	  return this.state.isExcludeRefined(facet, value);
	};
	
	/**
	 * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}
	 */
	AlgoliaSearchHelper.prototype.isDisjunctiveRefined = function(facet, value) {
	  return this.state.isDisjunctiveFacetRefined(facet, value);
	};
	
	/**
	 * Check if the string is a currently filtering tag.
	 * @param {string} tag tag to check
	 * @return {boolean}
	 */
	AlgoliaSearchHelper.prototype.hasTag = function(tag) {
	  return this.state.isTagRefined(tag);
	};
	
	/**
	 * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}
	 */
	AlgoliaSearchHelper.prototype.isTagRefined = function() {
	  return this.hasTagRefinements.apply(this, arguments);
	};
	
	
	/**
	 * Get the name of the currently used index.
	 * @return {string}
	 * @example
	 * helper.setIndex('highestPrice_products').getIndex();
	 * // returns 'highestPrice_products'
	 */
	AlgoliaSearchHelper.prototype.getIndex = function() {
	  return this.state.index;
	};
	
	function getCurrentPage() {
	  return this.state.page;
	}
	
	/**
	 * Get the currently selected page
	 * @deprecated
	 * @return {number} the current page
	 */
	AlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;
	/**
	 * Get the currently selected page
	 * @function
	 * @return {number} the current page
	 */
	AlgoliaSearchHelper.prototype.getPage = getCurrentPage;
	
	/**
	 * Get all the tags currently set to filters the results.
	 *
	 * @return {string[]} The list of tags currently set.
	 */
	AlgoliaSearchHelper.prototype.getTags = function() {
	  return this.state.tagRefinements;
	};
	
	/**
	 * Get a parameter of the search by its name. It is possible that a parameter is directly
	 * defined in the index dashboard, but it will be undefined using this method.
	 *
	 * The complete list of parameters is
	 * available on the
	 * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).
	 * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)
	 * or benefit from higher-level APIs (all the kind of filters have their own API)
	 * @param {string} parameterName the parameter name
	 * @return {any} the parameter value
	 * @example
	 * var hitsPerPage = helper.getQueryParameter('hitsPerPage');
	 */
	AlgoliaSearchHelper.prototype.getQueryParameter = function(parameterName) {
	  return this.state.getQueryParameter(parameterName);
	};
	
	/**
	 * Get the list of refinements for a given attribute. This method works with
	 * conjunctive, disjunctive, excluding and numerical filters.
	 *
	 * See also SearchResults#getRefinements
	 *
	 * @param {string} facetName attribute name used for faceting
	 * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and
	 * a type. Numeric also contains an operator.
	 * @example
	 * helper.addNumericRefinement('price', '>', 100);
	 * helper.getRefinements('price');
	 * // [
	 * //   {
	 * //     "value": [
	 * //       100
	 * //     ],
	 * //     "operator": ">",
	 * //     "type": "numeric"
	 * //   }
	 * // ]
	 * @example
	 * helper.addFacetRefinement('color', 'blue');
	 * helper.addFacetExclusion('color', 'red');
	 * helper.getRefinements('color');
	 * // [
	 * //   {
	 * //     "value": "blue",
	 * //     "type": "conjunctive"
	 * //   },
	 * //   {
	 * //     "value": "red",
	 * //     "type": "exclude"
	 * //   }
	 * // ]
	 * @example
	 * helper.addDisjunctiveFacetRefinement('material', 'plastic');
	 * // [
	 * //   {
	 * //     "value": "plastic",
	 * //     "type": "disjunctive"
	 * //   }
	 * // ]
	 */
	AlgoliaSearchHelper.prototype.getRefinements = function(facetName) {
	  var refinements = [];
	
	  if (this.state.isConjunctiveFacet(facetName)) {
	    var conjRefinements = this.state.getConjunctiveRefinements(facetName);
	
	    forEach(conjRefinements, function(r) {
	      refinements.push({
	        value: r,
	        type: 'conjunctive'
	      });
	    });
	
	    var excludeRefinements = this.state.getExcludeRefinements(facetName);
	
	    forEach(excludeRefinements, function(r) {
	      refinements.push({
	        value: r,
	        type: 'exclude'
	      });
	    });
	  } else if (this.state.isDisjunctiveFacet(facetName)) {
	    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);
	
	    forEach(disjRefinements, function(r) {
	      refinements.push({
	        value: r,
	        type: 'disjunctive'
	      });
	    });
	  }
	
	  var numericRefinements = this.state.getNumericRefinements(facetName);
	
	  forEach(numericRefinements, function(value, operator) {
	    refinements.push({
	      value: value,
	      operator: operator,
	      type: 'numeric'
	    });
	  });
	
	  return refinements;
	};
	
	/**
	 * Return the current refinement for the (attribute, operator)
	 * @param {string} attribute attribute in the record
	 * @param {string} operator operator applied on the refined values
	 * @return {Array.<number|number[]>} refined values
	 */
	AlgoliaSearchHelper.prototype.getNumericRefinement = function(attribute, operator) {
	  return this.state.getNumericRefinement(attribute, operator);
	};
	
	/**
	 * Get the current breadcrumb for a hierarchical facet, as an array
	 * @param  {string} facetName Hierarchical facet name
	 * @return {array.<string>} the path as an array of string
	 */
	AlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function(facetName) {
	  return this.state.getHierarchicalFacetBreadcrumb(facetName);
	};
	
	// /////////// PRIVATE
	
	/**
	 * Perform the underlying queries
	 * @private
	 * @return {undefined}
	 * @fires search
	 * @fires result
	 * @fires error
	 */
	AlgoliaSearchHelper.prototype._search = function() {
	  var state = this.state;
	  var mainQueries = requestBuilder._getQueries(state.index, state);
	
	  var states = [{
	    state: state,
	    queriesCount: mainQueries.length,
	    helper: this
	  }];
	
	  this.emit('search', state, this.lastResults);
	
	  var derivedQueries = map(this.derivedHelpers, function(derivedHelper) {
	    var derivedState = derivedHelper.getModifiedState(state);
	    var queries = requestBuilder._getQueries(derivedState.index, derivedState);
	    states.push({
	      state: derivedState,
	      queriesCount: queries.length,
	      helper: derivedHelper
	    });
	    derivedHelper.emit('search', derivedState, derivedHelper.lastResults);
	    return queries;
	  });
	
	  var queries = mainQueries.concat(flatten(derivedQueries));
	  var queryId = this._queryId++;
	
	  this._currentNbQueries++;
	
	  try {
	    this.client.search(queries)
	      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))
	      .catch(this._dispatchAlgoliaError.bind(this, queryId));
	  } catch (err) {
	    // If we reach this part, we're in an internal error state
	    this.emit('error', err);
	  }
	};
	
	/**
	 * Transform the responses as sent by the server and transform them into a user
	 * usable object that merge the results of all the batch requests. It will dispatch
	 * over the different helper + derived helpers (when there are some).
	 * @private
	 * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}
	 *  state state used for to generate the request
	 * @param {number} queryId id of the current request
	 * @param {object} content content of the response
	 * @return {undefined}
	 */
	AlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function(states, queryId, content) {
	  // FIXME remove the number of outdated queries discarded instead of just one
	
	  if (queryId < this._lastQueryIdReceived) {
	    // Outdated answer
	    return;
	  }
	
	  this._currentNbQueries -= (queryId - this._lastQueryIdReceived);
	  this._lastQueryIdReceived = queryId;
	
	  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');
	
	  var results = content.results.slice();
	  forEach(states, function(s) {
	    var state = s.state;
	    var queriesCount = s.queriesCount;
	    var helper = s.helper;
	    var specificResults = results.splice(0, queriesCount);
	
	    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);
	    helper.emit('result', formattedResponse, state);
	  });
	};
	
	AlgoliaSearchHelper.prototype._dispatchAlgoliaError = function(queryId, err) {
	  if (queryId < this._lastQueryIdReceived) {
	    // Outdated answer
	    return;
	  }
	
	  this._currentNbQueries -= queryId - this._lastQueryIdReceived;
	  this._lastQueryIdReceived = queryId;
	
	  this.emit('error', err);
	
	  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');
	};
	
	AlgoliaSearchHelper.prototype.containsRefinement = function(query, facetFilters, numericFilters, tagFilters) {
	  return query ||
	    facetFilters.length !== 0 ||
	    numericFilters.length !== 0 ||
	    tagFilters.length !== 0;
	};
	
	/**
	 * Test if there are some disjunctive refinements on the facet
	 * @private
	 * @param {string} facet the attribute to test
	 * @return {boolean}
	 */
	AlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function(facet) {
	  return this.state.disjunctiveRefinements[facet] &&
	    this.state.disjunctiveRefinements[facet].length > 0;
	};
	
	AlgoliaSearchHelper.prototype._change = function(newState) {
	  if (newState !== this.state) {
	    this.state = newState;
	    this.emit('change', this.state, this.lastResults);
	  }
	};
	
	/**
	 * Clears the cache of the underlying Algolia client.
	 * @return {AlgoliaSearchHelper}
	 */
	AlgoliaSearchHelper.prototype.clearCache = function() {
	  this.client.clearCache && this.client.clearCache();
	  return this;
	};
	
	/**
	 * Updates the internal client instance. If the reference of the clients
	 * are equal then no update is actually done.
	 * @param  {AlgoliaSearch} newClient an AlgoliaSearch client
	 * @return {AlgoliaSearchHelper}
	 */
	AlgoliaSearchHelper.prototype.setClient = function(newClient) {
	  if (this.client === newClient) return this;
	
	  if (newClient.addAlgoliaAgent && !doesClientAgentContainsHelper(newClient)) {
	    newClient.addAlgoliaAgent('JS Helper (' + version + ')');
	  }
	  this.client = newClient;
	
	  return this;
	};
	
	/**
	 * Gets the instance of the currently used client.
	 * @return {AlgoliaSearch}
	 */
	AlgoliaSearchHelper.prototype.getClient = function() {
	  return this.client;
	};
	
	/**
	 * Creates an derived instance of the Helper. A derived helper
	 * is a way to request other indices synchronised with the lifecycle
	 * of the main Helper. This mechanism uses the multiqueries feature
	 * of Algolia to aggregate all the requests in a single network call.
	 *
	 * This method takes a function that is used to create a new SearchParameter
	 * that will be used to create requests to Algolia. Those new requests
	 * are created just before the `search` event. The signature of the function
	 * is `SearchParameters -> SearchParameters`.
	 *
	 * This method returns a new DerivedHelper which is an EventEmitter
	 * that fires the same `search`, `result` and `error` events. Those
	 * events, however, will receive data specific to this DerivedHelper
	 * and the SearchParameters that is returned by the call of the
	 * parameter function.
	 * @param {function} fn SearchParameters -> SearchParameters
	 * @return {DerivedHelper}
	 */
	AlgoliaSearchHelper.prototype.derive = function(fn) {
	  var derivedHelper = new DerivedHelper(this, fn);
	  this.derivedHelpers.push(derivedHelper);
	  return derivedHelper;
	};
	
	/**
	 * This method detaches a derived Helper from the main one. Prefer using the one from the
	 * derived helper itself, to remove the event listeners too.
	 * @private
	 * @return {undefined}
	 * @throws Error
	 */
	AlgoliaSearchHelper.prototype.detachDerivedHelper = function(derivedHelper) {
	  var pos = this.derivedHelpers.indexOf(derivedHelper);
	  if (pos === -1) throw new Error('Derived helper already detached');
	  this.derivedHelpers.splice(pos, 1);
	};
	
	/**
	 * This method returns true if there is currently at least one on-going search.
	 * @return {boolean} true if there is a search pending
	 */
	AlgoliaSearchHelper.prototype.hasPendingRequests = function() {
	  return this._currentNbQueries > 0;
	};
	
	/**
	 * @typedef AlgoliaSearchHelper.NumericRefinement
	 * @type {object}
	 * @property {number[]} value the numbers that are used for filtering this attribute with
	 * the operator specified.
	 * @property {string} operator the faceting data: value, number of entries
	 * @property {string} type will be 'numeric'
	 */
	
	/**
	 * @typedef AlgoliaSearchHelper.FacetRefinement
	 * @type {object}
	 * @property {string} value the string use to filter the attribute
	 * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'
	 */
	
	
	/*
	 * This function tests if the _ua parameter of the client
	 * already contains the JS Helper UA
	 */
	function doesClientAgentContainsHelper(client) {
	  // this relies on JS Client internal variable, this might break if implementation changes
	  var currentAgent = client._ua;
	  return !currentAgent ? false :
	    currentAgent.indexOf('JS Helper') !== -1;
	}
	
	module.exports = AlgoliaSearchHelper;


/***/ }),
/* 824 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var map = __webpack_require__(81);
	var isNumber = __webpack_require__(515);
	var isString = __webpack_require__(164);
	function valToNumber(v) {
	  if (isNumber(v)) {
	    return v;
	  } else if (isString(v)) {
	    return parseFloat(v);
	  } else if (Array.isArray(v)) {
	    return map(v, valToNumber);
	  }
	
	  throw new Error('The value should be a number, a parseable string or an array of those.');
	}
	
	module.exports = valToNumber;


/***/ }),
/* 825 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var forEach = __webpack_require__(124);
	var map = __webpack_require__(81);
	var reduce = __webpack_require__(166);
	var merge = __webpack_require__(324);
	
	var requestBuilder = {
	  /**
	   * Get all the queries to send to the client, those queries can used directly
	   * with the Algolia client.
	   * @private
	   * @return {object[]} The queries
	   */
	  _getQueries: function getQueries(index, state) {
	    var queries = [];
	
	    // One query for the hits
	    queries.push({
	      indexName: index,
	      params: requestBuilder._getHitsSearchParams(state)
	    });
	
	    // One for each disjunctive facets
	    forEach(state.getRefinedDisjunctiveFacets(), function(refinedFacet) {
	      queries.push({
	        indexName: index,
	        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)
	      });
	    });
	
	    // maybe more to get the root level of hierarchical facets when activated
	    forEach(state.getRefinedHierarchicalFacets(), function(refinedFacet) {
	      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);
	
	      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);
	      // if we are deeper than level 0 (starting from `beer > IPA`)
	      // we want to get the root values
	      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {
	        queries.push({
	          indexName: index,
	          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)
	        });
	      }
	    });
	
	    return queries;
	  },
	
	  /**
	   * Build search parameters used to fetch hits
	   * @private
	   * @return {object.<string, any>}
	   */
	  _getHitsSearchParams: function(state) {
	    var facets = state.facets
	      .concat(state.disjunctiveFacets)
	      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));
	
	
	    var facetFilters = requestBuilder._getFacetFilters(state);
	    var numericFilters = requestBuilder._getNumericFilters(state);
	    var tagFilters = requestBuilder._getTagFilters(state);
	    var additionalParams = {
	      facets: facets,
	      tagFilters: tagFilters
	    };
	
	    if (facetFilters.length > 0) {
	      additionalParams.facetFilters = facetFilters;
	    }
	
	    if (numericFilters.length > 0) {
	      additionalParams.numericFilters = numericFilters;
	    }
	
	    return merge(state.getQueryParams(), additionalParams);
	  },
	
	  /**
	   * Build search parameters used to fetch a disjunctive facet
	   * @private
	   * @param  {string} facet the associated facet name
	   * @param  {boolean} hierarchicalRootLevel ?? FIXME
	   * @return {object}
	   */
	  _getDisjunctiveFacetSearchParams: function(state, facet, hierarchicalRootLevel) {
	    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);
	    var numericFilters = requestBuilder._getNumericFilters(state, facet);
	    var tagFilters = requestBuilder._getTagFilters(state);
	    var additionalParams = {
	      hitsPerPage: 1,
	      page: 0,
	      attributesToRetrieve: [],
	      attributesToHighlight: [],
	      attributesToSnippet: [],
	      tagFilters: tagFilters,
	      analytics: false,
	      clickAnalytics: false
	    };
	
	    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);
	
	    if (hierarchicalFacet) {
	      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(
	        state,
	        hierarchicalFacet,
	        hierarchicalRootLevel
	      );
	    } else {
	      additionalParams.facets = facet;
	    }
	
	    if (numericFilters.length > 0) {
	      additionalParams.numericFilters = numericFilters;
	    }
	
	    if (facetFilters.length > 0) {
	      additionalParams.facetFilters = facetFilters;
	    }
	
	    return merge(state.getQueryParams(), additionalParams);
	  },
	
	  /**
	   * Return the numeric filters in an algolia request fashion
	   * @private
	   * @param {string} [facetName] the name of the attribute for which the filters should be excluded
	   * @return {string[]} the numeric filters in the algolia format
	   */
	  _getNumericFilters: function(state, facetName) {
	    if (state.numericFilters) {
	      return state.numericFilters;
	    }
	
	    var numericFilters = [];
	
	    forEach(state.numericRefinements, function(operators, attribute) {
	      forEach(operators, function(values, operator) {
	        if (facetName !== attribute) {
	          forEach(values, function(value) {
	            if (Array.isArray(value)) {
	              var vs = map(value, function(v) {
	                return attribute + operator + v;
	              });
	              numericFilters.push(vs);
	            } else {
	              numericFilters.push(attribute + operator + value);
	            }
	          });
	        }
	      });
	    });
	
	    return numericFilters;
	  },
	
	  /**
	   * Return the tags filters depending
	   * @private
	   * @return {string}
	   */
	  _getTagFilters: function(state) {
	    if (state.tagFilters) {
	      return state.tagFilters;
	    }
	
	    return state.tagRefinements.join(',');
	  },
	
	
	  /**
	   * Build facetFilters parameter based on current refinements. The array returned
	   * contains strings representing the facet filters in the algolia format.
	   * @private
	   * @param  {string} [facet] if set, the current disjunctive facet
	   * @return {array.<string>}
	   */
	  _getFacetFilters: function(state, facet, hierarchicalRootLevel) {
	    var facetFilters = [];
	
	    forEach(state.facetsRefinements, function(facetValues, facetName) {
	      forEach(facetValues, function(facetValue) {
	        facetFilters.push(facetName + ':' + facetValue);
	      });
	    });
	
	    forEach(state.facetsExcludes, function(facetValues, facetName) {
	      forEach(facetValues, function(facetValue) {
	        facetFilters.push(facetName + ':-' + facetValue);
	      });
	    });
	
	    forEach(state.disjunctiveFacetsRefinements, function(facetValues, facetName) {
	      if (facetName === facet || !facetValues || facetValues.length === 0) return;
	      var orFilters = [];
	
	      forEach(facetValues, function(facetValue) {
	        orFilters.push(facetName + ':' + facetValue);
	      });
	
	      facetFilters.push(orFilters);
	    });
	
	    forEach(state.hierarchicalFacetsRefinements, function(facetValues, facetName) {
	      var facetValue = facetValues[0];
	
	      if (facetValue === undefined) {
	        return;
	      }
	
	      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);
	      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);
	      var attributeToRefine;
	      var attributesIndex;
	
	      // we ask for parent facet values only when the `facet` is the current hierarchical facet
	      if (facet === facetName) {
	        // if we are at the root level already, no need to ask for facet values, we get them from
	        // the hits query
	        if (facetValue.indexOf(separator) === -1 || (!rootPath && hierarchicalRootLevel === true) ||
	          (rootPath && rootPath.split(separator).length === facetValue.split(separator).length)) {
	          return;
	        }
	
	        if (!rootPath) {
	          attributesIndex = facetValue.split(separator).length - 2;
	          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));
	        } else {
	          attributesIndex = rootPath.split(separator).length - 1;
	          facetValue = rootPath;
	        }
	
	        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];
	      } else {
	        attributesIndex = facetValue.split(separator).length - 1;
	
	        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];
	      }
	
	      if (attributeToRefine) {
	        facetFilters.push([attributeToRefine + ':' + facetValue]);
	      }
	    });
	
	    return facetFilters;
	  },
	
	  _getHitsHierarchicalFacetsAttributes: function(state) {
	    var out = [];
	
	    return reduce(
	      state.hierarchicalFacets,
	      // ask for as much levels as there's hierarchical refinements
	      function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {
	        var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];
	
	        // if no refinement, ask for root level
	        if (!hierarchicalRefinement) {
	          allAttributes.push(hierarchicalFacet.attributes[0]);
	          return allAttributes;
	        }
	
	        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	        var level = hierarchicalRefinement.split(separator).length;
	        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);
	
	        return allAttributes.concat(newAttributes);
	      }, out);
	  },
	
	  _getDisjunctiveHierarchicalFacetAttribute: function(state, hierarchicalFacet, rootLevel) {
	    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	    if (rootLevel === true) {
	      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);
	      var attributeIndex = 0;
	
	      if (rootPath) {
	        attributeIndex = rootPath.split(separator).length;
	      }
	      return [hierarchicalFacet.attributes[attributeIndex]];
	    }
	
	    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';
	    // if refinement is 'beers > IPA > Flying dog',
	    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)
	
	    var parentLevel = hierarchicalRefinement.split(separator).length - 1;
	    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);
	  },
	
	  getSearchForFacetQuery: function(facetName, query, maxFacetHits, state) {
	    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ?
	      state.clearRefinements(facetName) :
	      state;
	    var searchForFacetSearchParameters = {
	      facetQuery: query,
	      facetName: facetName
	    };
	    if (typeof maxFacetHits === 'number') {
	      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;
	    }
	    var queries = merge(requestBuilder._getHitsSearchParams(stateForSearchForFacetValues), searchForFacetSearchParameters);
	    return queries;
	  }
	};
	
	module.exports = requestBuilder;


/***/ }),
/* 826 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = AlgoliaSearchCore;
	
	var errors = __webpack_require__(180);
	var exitPromise = __webpack_require__(834);
	var IndexCore = __webpack_require__(827);
	var store = __webpack_require__(837);
	
	// We will always put the API KEY in the JSON body in case of too long API KEY,
	// to avoid query string being too long and failing in various conditions (our server limit, browser limit,
	// proxies limit)
	var MAX_API_KEY_LENGTH = 500;
	var RESET_APP_DATA_TIMER =
	  ({"NODE_ENV":"production","PUBLIC_DIR":"/Users/danlevy/code/oss/dans-blog/public"}).RESET_APP_DATA_TIMER && parseInt(({"NODE_ENV":"production","PUBLIC_DIR":"/Users/danlevy/code/oss/dans-blog/public"}).RESET_APP_DATA_TIMER, 10) ||
	  60 * 2 * 1000; // after 2 minutes reset to first host
	
	/*
	 * Algolia Search library initialization
	 * https://www.algolia.com/
	 *
	 * @param {string} applicationID - Your applicationID, found in your dashboard
	 * @param {string} apiKey - Your API key, found in your dashboard
	 * @param {Object} [opts]
	 * @param {number} [opts.timeout=2000] - The request timeout set in milliseconds,
	 * another request will be issued after this timeout
	 * @param {string} [opts.protocol='https:'] - The protocol used to query Algolia Search API.
	 *                                        Set to 'http:' to force using http.
	 * @param {Object|Array} [opts.hosts={
	 *           read: [this.applicationID + '-dsn.algolia.net'].concat([
	 *             this.applicationID + '-1.algolianet.com',
	 *             this.applicationID + '-2.algolianet.com',
	 *             this.applicationID + '-3.algolianet.com']
	 *           ]),
	 *           write: [this.applicationID + '.algolia.net'].concat([
	 *             this.applicationID + '-1.algolianet.com',
	 *             this.applicationID + '-2.algolianet.com',
	 *             this.applicationID + '-3.algolianet.com']
	 *           ]) - The hosts to use for Algolia Search API.
	 *           If you provide them, you will less benefit from our HA implementation
	 */
	function AlgoliaSearchCore(applicationID, apiKey, opts) {
	  var debug = __webpack_require__(150)('algoliasearch');
	
	  var clone = __webpack_require__(106);
	  var isArray = __webpack_require__(92);
	  var map = __webpack_require__(181);
	
	  var usage = 'Usage: algoliasearch(applicationID, apiKey, opts)';
	
	  if (opts._allowEmptyCredentials !== true && !applicationID) {
	    throw new errors.AlgoliaSearchError('Please provide an application ID. ' + usage);
	  }
	
	  if (opts._allowEmptyCredentials !== true && !apiKey) {
	    throw new errors.AlgoliaSearchError('Please provide an API key. ' + usage);
	  }
	
	  this.applicationID = applicationID;
	  this.apiKey = apiKey;
	
	  this.hosts = {
	    read: [],
	    write: []
	  };
	
	  opts = opts || {};
	
	  this._timeouts = opts.timeouts || {
	    connect: 1 * 1000, // 500ms connect is GPRS latency
	    read: 2 * 1000,
	    write: 30 * 1000
	  };
	
	  // backward compat, if opts.timeout is passed, we use it to configure all timeouts like before
	  if (opts.timeout) {
	    this._timeouts.connect = this._timeouts.read = this._timeouts.write = opts.timeout;
	  }
	
	  var protocol = opts.protocol || 'https:';
	  // while we advocate for colon-at-the-end values: 'http:' for `opts.protocol`
	  // we also accept `http` and `https`. It's a common error.
	  if (!/:$/.test(protocol)) {
	    protocol = protocol + ':';
	  }
	
	  if (protocol !== 'http:' && protocol !== 'https:') {
	    throw new errors.AlgoliaSearchError('protocol must be `http:` or `https:` (was `' + opts.protocol + '`)');
	  }
	
	  this._checkAppIdData();
	
	  if (!opts.hosts) {
	    var defaultHosts = map(this._shuffleResult, function(hostNumber) {
	      return applicationID + '-' + hostNumber + '.algolianet.com';
	    });
	
	    // no hosts given, compute defaults
	    var mainSuffix = (opts.dsn === false ? '' : '-dsn') + '.algolia.net';
	    this.hosts.read = [this.applicationID + mainSuffix].concat(defaultHosts);
	    this.hosts.write = [this.applicationID + '.algolia.net'].concat(defaultHosts);
	  } else if (isArray(opts.hosts)) {
	    // when passing custom hosts, we need to have a different host index if the number
	    // of write/read hosts are different.
	    this.hosts.read = clone(opts.hosts);
	    this.hosts.write = clone(opts.hosts);
	  } else {
	    this.hosts.read = clone(opts.hosts.read);
	    this.hosts.write = clone(opts.hosts.write);
	  }
	
	  // add protocol and lowercase hosts
	  this.hosts.read = map(this.hosts.read, prepareHost(protocol));
	  this.hosts.write = map(this.hosts.write, prepareHost(protocol));
	
	  this.extraHeaders = {};
	
	  // In some situations you might want to warm the cache
	  this.cache = opts._cache || {};
	
	  this._ua = opts._ua;
	  this._useCache = opts._useCache === undefined || opts._cache ? true : opts._useCache;
	  this._useRequestCache = this._useCache && opts._useRequestCache;
	  this._useFallback = opts.useFallback === undefined ? true : opts.useFallback;
	
	  this._setTimeout = opts._setTimeout;
	
	  debug('init done, %j', this);
	}
	
	/*
	 * Get the index object initialized
	 *
	 * @param indexName the name of index
	 * @param callback the result callback with one argument (the Index instance)
	 */
	AlgoliaSearchCore.prototype.initIndex = function(indexName) {
	  return new IndexCore(this, indexName);
	};
	
	/**
	* Add an extra field to the HTTP request
	*
	* @param name the header field name
	* @param value the header field value
	*/
	AlgoliaSearchCore.prototype.setExtraHeader = function(name, value) {
	  this.extraHeaders[name.toLowerCase()] = value;
	};
	
	/**
	* Get the value of an extra HTTP header
	*
	* @param name the header field name
	*/
	AlgoliaSearchCore.prototype.getExtraHeader = function(name) {
	  return this.extraHeaders[name.toLowerCase()];
	};
	
	/**
	* Remove an extra field from the HTTP request
	*
	* @param name the header field name
	*/
	AlgoliaSearchCore.prototype.unsetExtraHeader = function(name) {
	  delete this.extraHeaders[name.toLowerCase()];
	};
	
	/**
	* Augment sent x-algolia-agent with more data, each agent part
	* is automatically separated from the others by a semicolon;
	*
	* @param algoliaAgent the agent to add
	*/
	AlgoliaSearchCore.prototype.addAlgoliaAgent = function(algoliaAgent) {
	  var algoliaAgentWithDelimiter = '; ' + algoliaAgent;
	
	  if (this._ua.indexOf(algoliaAgentWithDelimiter) === -1) {
	    this._ua += algoliaAgentWithDelimiter;
	  }
	};
	
	/*
	 * Wrapper that try all hosts to maximize the quality of service
	 */
	AlgoliaSearchCore.prototype._jsonRequest = function(initialOpts) {
	  this._checkAppIdData();
	
	  var requestDebug = __webpack_require__(150)('algoliasearch:' + initialOpts.url);
	
	
	  var body;
	  var cacheID;
	  var additionalUA = initialOpts.additionalUA || '';
	  var cache = initialOpts.cache;
	  var client = this;
	  var tries = 0;
	  var usingFallback = false;
	  var hasFallback = client._useFallback && client._request.fallback && initialOpts.fallback;
	  var headers;
	
	  if (
	    this.apiKey.length > MAX_API_KEY_LENGTH &&
	    initialOpts.body !== undefined &&
	    (initialOpts.body.params !== undefined || // index.search()
	    initialOpts.body.requests !== undefined) // client.search()
	  ) {
	    initialOpts.body.apiKey = this.apiKey;
	    headers = this._computeRequestHeaders({
	      additionalUA: additionalUA,
	      withApiKey: false,
	      headers: initialOpts.headers
	    });
	  } else {
	    headers = this._computeRequestHeaders({
	      additionalUA: additionalUA,
	      headers: initialOpts.headers
	    });
	  }
	
	  if (initialOpts.body !== undefined) {
	    body = safeJSONStringify(initialOpts.body);
	  }
	
	  requestDebug('request start');
	  var debugData = [];
	
	
	  function doRequest(requester, reqOpts) {
	    client._checkAppIdData();
	
	    var startTime = new Date();
	
	    if (client._useCache && !client._useRequestCache) {
	      cacheID = initialOpts.url;
	    }
	
	    // as we sometime use POST requests to pass parameters (like query='aa'),
	    // the cacheID must also include the body to be different between calls
	    if (client._useCache && !client._useRequestCache && body) {
	      cacheID += '_body_' + reqOpts.body;
	    }
	
	    // handle cache existence
	    if (isCacheValidWithCurrentID(!client._useRequestCache, cache, cacheID)) {
	      requestDebug('serving response from cache');
	
	      var responseText = cache[cacheID];
	
	      // Cache response must match the type of the original one
	      return client._promise.resolve({
	        body: JSON.parse(responseText),
	        responseText: responseText
	      });
	    }
	
	    // if we reached max tries
	    if (tries >= client.hosts[initialOpts.hostType].length) {
	      if (!hasFallback || usingFallback) {
	        requestDebug('could not get any response');
	        // then stop
	        return client._promise.reject(new errors.AlgoliaSearchError(
	          'Cannot connect to the AlgoliaSearch API.' +
	          ' Send an email to support@algolia.com to report and resolve the issue.' +
	          ' Application id was: ' + client.applicationID, {debugData: debugData}
	        ));
	      }
	
	      requestDebug('switching to fallback');
	
	      // let's try the fallback starting from here
	      tries = 0;
	
	      // method, url and body are fallback dependent
	      reqOpts.method = initialOpts.fallback.method;
	      reqOpts.url = initialOpts.fallback.url;
	      reqOpts.jsonBody = initialOpts.fallback.body;
	      if (reqOpts.jsonBody) {
	        reqOpts.body = safeJSONStringify(reqOpts.jsonBody);
	      }
	      // re-compute headers, they could be omitting the API KEY
	      headers = client._computeRequestHeaders({
	        additionalUA: additionalUA,
	        headers: initialOpts.headers
	      });
	
	      reqOpts.timeouts = client._getTimeoutsForRequest(initialOpts.hostType);
	      client._setHostIndexByType(0, initialOpts.hostType);
	      usingFallback = true; // the current request is now using fallback
	      return doRequest(client._request.fallback, reqOpts);
	    }
	
	    var currentHost = client._getHostByType(initialOpts.hostType);
	
	    var url = currentHost + reqOpts.url;
	    var options = {
	      body: reqOpts.body,
	      jsonBody: reqOpts.jsonBody,
	      method: reqOpts.method,
	      headers: headers,
	      timeouts: reqOpts.timeouts,
	      debug: requestDebug,
	      forceAuthHeaders: reqOpts.forceAuthHeaders
	    };
	
	    requestDebug('method: %s, url: %s, headers: %j, timeouts: %d',
	      options.method, url, options.headers, options.timeouts);
	
	    if (requester === client._request.fallback) {
	      requestDebug('using fallback');
	    }
	
	    // `requester` is any of this._request or this._request.fallback
	    // thus it needs to be called using the client as context
	    return requester.call(client, url, options).then(success, tryFallback);
	
	    function success(httpResponse) {
	      // compute the status of the response,
	      //
	      // When in browser mode, using XDR or JSONP, we have no statusCode available
	      // So we rely on our API response `status` property.
	      // But `waitTask` can set a `status` property which is not the statusCode (it's the task status)
	      // So we check if there's a `message` along `status` and it means it's an error
	      //
	      // That's the only case where we have a response.status that's not the http statusCode
	      var status = httpResponse && httpResponse.body && httpResponse.body.message && httpResponse.body.status ||
	
	        // this is important to check the request statusCode AFTER the body eventual
	        // statusCode because some implementations (jQuery XDomainRequest transport) may
	        // send statusCode 200 while we had an error
	        httpResponse.statusCode ||
	
	        // When in browser mode, using XDR or JSONP
	        // we default to success when no error (no response.status && response.message)
	        // If there was a JSON.parse() error then body is null and it fails
	        httpResponse && httpResponse.body && 200;
	
	      requestDebug('received response: statusCode: %s, computed statusCode: %d, headers: %j',
	        httpResponse.statusCode, status, httpResponse.headers);
	
	      var httpResponseOk = Math.floor(status / 100) === 2;
	
	      var endTime = new Date();
	      debugData.push({
	        currentHost: currentHost,
	        headers: removeCredentials(headers),
	        content: body || null,
	        contentLength: body !== undefined ? body.length : null,
	        method: reqOpts.method,
	        timeouts: reqOpts.timeouts,
	        url: reqOpts.url,
	        startTime: startTime,
	        endTime: endTime,
	        duration: endTime - startTime,
	        statusCode: status
	      });
	
	      if (httpResponseOk) {
	        if (client._useCache && !client._useRequestCache && cache) {
	          cache[cacheID] = httpResponse.responseText;
	        }
	
	        return {
	          responseText: httpResponse.responseText,
	          body: httpResponse.body
	        };
	      }
	
	      var shouldRetry = Math.floor(status / 100) !== 4;
	
	      if (shouldRetry) {
	        tries += 1;
	        return retryRequest();
	      }
	
	      requestDebug('unrecoverable error');
	
	      // no success and no retry => fail
	      var unrecoverableError = new errors.AlgoliaSearchError(
	        httpResponse.body && httpResponse.body.message, {debugData: debugData, statusCode: status}
	      );
	
	      return client._promise.reject(unrecoverableError);
	    }
	
	    function tryFallback(err) {
	      // error cases:
	      //  While not in fallback mode:
	      //    - CORS not supported
	      //    - network error
	      //  While in fallback mode:
	      //    - timeout
	      //    - network error
	      //    - badly formatted JSONP (script loaded, did not call our callback)
	      //  In both cases:
	      //    - uncaught exception occurs (TypeError)
	      requestDebug('error: %s, stack: %s', err.message, err.stack);
	
	      var endTime = new Date();
	      debugData.push({
	        currentHost: currentHost,
	        headers: removeCredentials(headers),
	        content: body || null,
	        contentLength: body !== undefined ? body.length : null,
	        method: reqOpts.method,
	        timeouts: reqOpts.timeouts,
	        url: reqOpts.url,
	        startTime: startTime,
	        endTime: endTime,
	        duration: endTime - startTime
	      });
	
	      if (!(err instanceof errors.AlgoliaSearchError)) {
	        err = new errors.Unknown(err && err.message, err);
	      }
	
	      tries += 1;
	
	      // stop the request implementation when:
	      if (
	        // we did not generate this error,
	        // it comes from a throw in some other piece of code
	        err instanceof errors.Unknown ||
	
	        // server sent unparsable JSON
	        err instanceof errors.UnparsableJSON ||
	
	        // max tries and already using fallback or no fallback
	        tries >= client.hosts[initialOpts.hostType].length &&
	        (usingFallback || !hasFallback)) {
	        // stop request implementation for this command
	        err.debugData = debugData;
	        return client._promise.reject(err);
	      }
	
	      // When a timeout occurred, retry by raising timeout
	      if (err instanceof errors.RequestTimeout) {
	        return retryRequestWithHigherTimeout();
	      }
	
	      return retryRequest();
	    }
	
	    function retryRequest() {
	      requestDebug('retrying request');
	      client._incrementHostIndex(initialOpts.hostType);
	      return doRequest(requester, reqOpts);
	    }
	
	    function retryRequestWithHigherTimeout() {
	      requestDebug('retrying request with higher timeout');
	      client._incrementHostIndex(initialOpts.hostType);
	      client._incrementTimeoutMultipler();
	      reqOpts.timeouts = client._getTimeoutsForRequest(initialOpts.hostType);
	      return doRequest(requester, reqOpts);
	    }
	  }
	
	  function isCacheValidWithCurrentID(
	    useRequestCache,
	    currentCache,
	    currentCacheID
	  ) {
	    return (
	      client._useCache &&
	      useRequestCache &&
	      currentCache &&
	      currentCache[currentCacheID] !== undefined
	    );
	  }
	
	
	  function interopCallbackReturn(request, callback) {
	    if (isCacheValidWithCurrentID(client._useRequestCache, cache, cacheID)) {
	      request.catch(function() {
	        // Release the cache on error
	        delete cache[cacheID];
	      });
	    }
	
	    if (typeof initialOpts.callback === 'function') {
	      // either we have a callback
	      request.then(function okCb(content) {
	        exitPromise(function() {
	          initialOpts.callback(null, callback(content));
	        }, client._setTimeout || setTimeout);
	      }, function nookCb(err) {
	        exitPromise(function() {
	          initialOpts.callback(err);
	        }, client._setTimeout || setTimeout);
	      });
	    } else {
	      // either we are using promises
	      return request.then(callback);
	    }
	  }
	
	  if (client._useCache && client._useRequestCache) {
	    cacheID = initialOpts.url;
	  }
	
	  // as we sometime use POST requests to pass parameters (like query='aa'),
	  // the cacheID must also include the body to be different between calls
	  if (client._useCache && client._useRequestCache && body) {
	    cacheID += '_body_' + body;
	  }
	
	  if (isCacheValidWithCurrentID(client._useRequestCache, cache, cacheID)) {
	    requestDebug('serving request from cache');
	
	    var maybePromiseForCache = cache[cacheID];
	
	    // In case the cache is warmup with value that is not a promise
	    var promiseForCache = typeof maybePromiseForCache.then !== 'function'
	      ? client._promise.resolve({responseText: maybePromiseForCache})
	      : maybePromiseForCache;
	
	    return interopCallbackReturn(promiseForCache, function(content) {
	      // In case of the cache request, return the original value
	      return JSON.parse(content.responseText);
	    });
	  }
	
	  var request = doRequest(
	    client._request, {
	      url: initialOpts.url,
	      method: initialOpts.method,
	      body: body,
	      jsonBody: initialOpts.body,
	      timeouts: client._getTimeoutsForRequest(initialOpts.hostType),
	      forceAuthHeaders: initialOpts.forceAuthHeaders
	    }
	  );
	
	  if (client._useCache && client._useRequestCache && cache) {
	    cache[cacheID] = request;
	  }
	
	  return interopCallbackReturn(request, function(content) {
	    // In case of the first request, return the JSON value
	    return content.body;
	  });
	};
	
	/*
	* Transform search param object in query string
	* @param {object} args arguments to add to the current query string
	* @param {string} params current query string
	* @return {string} the final query string
	*/
	AlgoliaSearchCore.prototype._getSearchParams = function(args, params) {
	  if (args === undefined || args === null) {
	    return params;
	  }
	  for (var key in args) {
	    if (key !== null && args[key] !== undefined && args.hasOwnProperty(key)) {
	      params += params === '' ? '' : '&';
	      params += key + '=' + encodeURIComponent(Object.prototype.toString.call(args[key]) === '[object Array]' ? safeJSONStringify(args[key]) : args[key]);
	    }
	  }
	  return params;
	};
	
	/**
	 * Compute the headers for a request
	 *
	 * @param [string] options.additionalUA semi-colon separated string with other user agents to add
	 * @param [boolean=true] options.withApiKey Send the api key as a header
	 * @param [Object] options.headers Extra headers to send
	 */
	AlgoliaSearchCore.prototype._computeRequestHeaders = function(options) {
	  var forEach = __webpack_require__(113);
	
	  var ua = options.additionalUA ?
	    this._ua + '; ' + options.additionalUA :
	    this._ua;
	
	  var requestHeaders = {
	    'x-algolia-agent': ua,
	    'x-algolia-application-id': this.applicationID
	  };
	
	  // browser will inline headers in the url, node.js will use http headers
	  // but in some situations, the API KEY will be too long (big secured API keys)
	  // so if the request is a POST and the KEY is very long, we will be asked to not put
	  // it into headers but in the JSON body
	  if (options.withApiKey !== false) {
	    requestHeaders['x-algolia-api-key'] = this.apiKey;
	  }
	
	  if (this.userToken) {
	    requestHeaders['x-algolia-usertoken'] = this.userToken;
	  }
	
	  if (this.securityTags) {
	    requestHeaders['x-algolia-tagfilters'] = this.securityTags;
	  }
	
	  forEach(this.extraHeaders, function addToRequestHeaders(value, key) {
	    requestHeaders[key] = value;
	  });
	
	  if (options.headers) {
	    forEach(options.headers, function addToRequestHeaders(value, key) {
	      requestHeaders[key] = value;
	    });
	  }
	
	  return requestHeaders;
	};
	
	/**
	 * Search through multiple indices at the same time
	 * @param  {Object[]}   queries  An array of queries you want to run.
	 * @param {string} queries[].indexName The index name you want to target
	 * @param {string} [queries[].query] The query to issue on this index. Can also be passed into `params`
	 * @param {Object} queries[].params Any search param like hitsPerPage, ..
	 * @param  {Function} callback Callback to be called
	 * @return {Promise|undefined} Returns a promise if no callback given
	 */
	AlgoliaSearchCore.prototype.search = function(queries, opts, callback) {
	  var isArray = __webpack_require__(92);
	  var map = __webpack_require__(181);
	
	  var usage = 'Usage: client.search(arrayOfQueries[, callback])';
	
	  if (!isArray(queries)) {
	    throw new Error(usage);
	  }
	
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  var client = this;
	
	  var postObj = {
	    requests: map(queries, function prepareRequest(query) {
	      var params = '';
	
	      // allow query.query
	      // so we are mimicing the index.search(query, params) method
	      // {indexName:, query:, params:}
	      if (query.query !== undefined) {
	        params += 'query=' + encodeURIComponent(query.query);
	      }
	
	      return {
	        indexName: query.indexName,
	        params: client._getSearchParams(query.params, params)
	      };
	    })
	  };
	
	  var JSONPParams = map(postObj.requests, function prepareJSONPParams(request, requestId) {
	    return requestId + '=' +
	      encodeURIComponent(
	        '/1/indexes/' + encodeURIComponent(request.indexName) + '?' +
	        request.params
	      );
	  }).join('&');
	
	  var url = '/1/indexes/*/queries';
	
	  if (opts.strategy !== undefined) {
	    postObj.strategy = opts.strategy;
	  }
	
	  return this._jsonRequest({
	    cache: this.cache,
	    method: 'POST',
	    url: url,
	    body: postObj,
	    hostType: 'read',
	    fallback: {
	      method: 'GET',
	      url: '/1/indexes/*',
	      body: {
	        params: JSONPParams
	      }
	    },
	    callback: callback
	  });
	};
	
	/**
	* Search for facet values
	* https://www.algolia.com/doc/rest-api/search#search-for-facet-values
	* This is the top-level API for SFFV.
	*
	* @param {object[]} queries An array of queries to run.
	* @param {string} queries[].indexName Index name, name of the index to search.
	* @param {object} queries[].params Query parameters.
	* @param {string} queries[].params.facetName Facet name, name of the attribute to search for values in.
	* Must be declared as a facet
	* @param {string} queries[].params.facetQuery Query for the facet search
	* @param {string} [queries[].params.*] Any search parameter of Algolia,
	* see https://www.algolia.com/doc/api-client/javascript/search#search-parameters
	* Pagination is not supported. The page and hitsPerPage parameters will be ignored.
	*/
	AlgoliaSearchCore.prototype.searchForFacetValues = function(queries) {
	  var isArray = __webpack_require__(92);
	  var map = __webpack_require__(181);
	
	  var usage = 'Usage: client.searchForFacetValues([{indexName, params: {facetName, facetQuery, ...params}}, ...queries])'; // eslint-disable-line max-len
	
	  if (!isArray(queries)) {
	    throw new Error(usage);
	  }
	
	  var client = this;
	
	  return client._promise.all(map(queries, function performQuery(query) {
	    if (
	      !query ||
	      query.indexName === undefined ||
	      query.params.facetName === undefined ||
	      query.params.facetQuery === undefined
	    ) {
	      throw new Error(usage);
	    }
	
	    var clone = __webpack_require__(106);
	    var omit = __webpack_require__(394);
	
	    var indexName = query.indexName;
	    var params = query.params;
	
	    var facetName = params.facetName;
	    var filteredParams = omit(clone(params), function(keyName) {
	      return keyName === 'facetName';
	    });
	    var searchParameters = client._getSearchParams(filteredParams, '');
	
	    return client._jsonRequest({
	      cache: client.cache,
	      method: 'POST',
	      url:
	        '/1/indexes/' +
	        encodeURIComponent(indexName) +
	        '/facets/' +
	        encodeURIComponent(facetName) +
	        '/query',
	      hostType: 'read',
	      body: {params: searchParameters}
	    });
	  }));
	};
	
	/**
	 * Set the extra security tagFilters header
	 * @param {string|array} tags The list of tags defining the current security filters
	 */
	AlgoliaSearchCore.prototype.setSecurityTags = function(tags) {
	  if (Object.prototype.toString.call(tags) === '[object Array]') {
	    var strTags = [];
	    for (var i = 0; i < tags.length; ++i) {
	      if (Object.prototype.toString.call(tags[i]) === '[object Array]') {
	        var oredTags = [];
	        for (var j = 0; j < tags[i].length; ++j) {
	          oredTags.push(tags[i][j]);
	        }
	        strTags.push('(' + oredTags.join(',') + ')');
	      } else {
	        strTags.push(tags[i]);
	      }
	    }
	    tags = strTags.join(',');
	  }
	
	  this.securityTags = tags;
	};
	
	/**
	 * Set the extra user token header
	 * @param {string} userToken The token identifying a uniq user (used to apply rate limits)
	 */
	AlgoliaSearchCore.prototype.setUserToken = function(userToken) {
	  this.userToken = userToken;
	};
	
	/**
	 * Clear all queries in client's cache
	 * @return undefined
	 */
	AlgoliaSearchCore.prototype.clearCache = function() {
	  this.cache = {};
	};
	
	/**
	* Set the number of milliseconds a request can take before automatically being terminated.
	* @deprecated
	* @param {Number} milliseconds
	*/
	AlgoliaSearchCore.prototype.setRequestTimeout = function(milliseconds) {
	  if (milliseconds) {
	    this._timeouts.connect = this._timeouts.read = this._timeouts.write = milliseconds;
	  }
	};
	
	/**
	* Set the three different (connect, read, write) timeouts to be used when requesting
	* @param {Object} timeouts
	*/
	AlgoliaSearchCore.prototype.setTimeouts = function(timeouts) {
	  this._timeouts = timeouts;
	};
	
	/**
	* Get the three different (connect, read, write) timeouts to be used when requesting
	* @param {Object} timeouts
	*/
	AlgoliaSearchCore.prototype.getTimeouts = function() {
	  return this._timeouts;
	};
	
	AlgoliaSearchCore.prototype._getAppIdData = function() {
	  var data = store.get(this.applicationID);
	  if (data !== null) this._cacheAppIdData(data);
	  return data;
	};
	
	AlgoliaSearchCore.prototype._setAppIdData = function(data) {
	  data.lastChange = (new Date()).getTime();
	  this._cacheAppIdData(data);
	  return store.set(this.applicationID, data);
	};
	
	AlgoliaSearchCore.prototype._checkAppIdData = function() {
	  var data = this._getAppIdData();
	  var now = (new Date()).getTime();
	  if (data === null || now - data.lastChange > RESET_APP_DATA_TIMER) {
	    return this._resetInitialAppIdData(data);
	  }
	
	  return data;
	};
	
	AlgoliaSearchCore.prototype._resetInitialAppIdData = function(data) {
	  var newData = data || {};
	  newData.hostIndexes = {read: 0, write: 0};
	  newData.timeoutMultiplier = 1;
	  newData.shuffleResult = newData.shuffleResult || shuffle([1, 2, 3]);
	  return this._setAppIdData(newData);
	};
	
	AlgoliaSearchCore.prototype._cacheAppIdData = function(data) {
	  this._hostIndexes = data.hostIndexes;
	  this._timeoutMultiplier = data.timeoutMultiplier;
	  this._shuffleResult = data.shuffleResult;
	};
	
	AlgoliaSearchCore.prototype._partialAppIdDataUpdate = function(newData) {
	  var foreach = __webpack_require__(113);
	  var currentData = this._getAppIdData();
	  foreach(newData, function(value, key) {
	    currentData[key] = value;
	  });
	
	  return this._setAppIdData(currentData);
	};
	
	AlgoliaSearchCore.prototype._getHostByType = function(hostType) {
	  return this.hosts[hostType][this._getHostIndexByType(hostType)];
	};
	
	AlgoliaSearchCore.prototype._getTimeoutMultiplier = function() {
	  return this._timeoutMultiplier;
	};
	
	AlgoliaSearchCore.prototype._getHostIndexByType = function(hostType) {
	  return this._hostIndexes[hostType];
	};
	
	AlgoliaSearchCore.prototype._setHostIndexByType = function(hostIndex, hostType) {
	  var clone = __webpack_require__(106);
	  var newHostIndexes = clone(this._hostIndexes);
	  newHostIndexes[hostType] = hostIndex;
	  this._partialAppIdDataUpdate({hostIndexes: newHostIndexes});
	  return hostIndex;
	};
	
	AlgoliaSearchCore.prototype._incrementHostIndex = function(hostType) {
	  return this._setHostIndexByType(
	    (this._getHostIndexByType(hostType) + 1) % this.hosts[hostType].length, hostType
	  );
	};
	
	AlgoliaSearchCore.prototype._incrementTimeoutMultipler = function() {
	  var timeoutMultiplier = Math.max(this._timeoutMultiplier + 1, 4);
	  return this._partialAppIdDataUpdate({timeoutMultiplier: timeoutMultiplier});
	};
	
	AlgoliaSearchCore.prototype._getTimeoutsForRequest = function(hostType) {
	  return {
	    connect: this._timeouts.connect * this._timeoutMultiplier,
	    complete: this._timeouts[hostType] * this._timeoutMultiplier
	  };
	};
	
	function prepareHost(protocol) {
	  return function prepare(host) {
	    return protocol + '//' + host.toLowerCase();
	  };
	}
	
	// Prototype.js < 1.7, a widely used library, defines a weird
	// Array.prototype.toJSON function that will fail to stringify our content
	// appropriately
	// refs:
	//   - https://groups.google.com/forum/#!topic/prototype-core/E-SAVvV_V9Q
	//   - https://github.com/sstephenson/prototype/commit/038a2985a70593c1a86c230fadbdfe2e4898a48c
	//   - http://stackoverflow.com/a/3148441/147079
	function safeJSONStringify(obj) {
	  /* eslint no-extend-native:0 */
	
	  if (Array.prototype.toJSON === undefined) {
	    return JSON.stringify(obj);
	  }
	
	  var toJSON = Array.prototype.toJSON;
	  delete Array.prototype.toJSON;
	  var out = JSON.stringify(obj);
	  Array.prototype.toJSON = toJSON;
	
	  return out;
	}
	
	function shuffle(array) {
	  var currentIndex = array.length;
	  var temporaryValue;
	  var randomIndex;
	
	  // While there remain elements to shuffle...
	  while (currentIndex !== 0) {
	    // Pick a remaining element...
	    randomIndex = Math.floor(Math.random() * currentIndex);
	    currentIndex -= 1;
	
	    // And swap it with the current element.
	    temporaryValue = array[currentIndex];
	    array[currentIndex] = array[randomIndex];
	    array[randomIndex] = temporaryValue;
	  }
	
	  return array;
	}
	
	function removeCredentials(headers) {
	  var newHeaders = {};
	
	  for (var headerName in headers) {
	    if (Object.prototype.hasOwnProperty.call(headers, headerName)) {
	      var value;
	
	      if (headerName === 'x-algolia-api-key' || headerName === 'x-algolia-application-id') {
	        value = '**hidden for security purposes**';
	      } else {
	        value = headers[headerName];
	      }
	
	      newHeaders[headerName] = value;
	    }
	  }
	
	  return newHeaders;
	}


/***/ }),
/* 827 */
/***/ (function(module, exports, __webpack_require__) {

	var buildSearchMethod = __webpack_require__(393);
	var deprecate = __webpack_require__(832);
	var deprecatedMessage = __webpack_require__(833);
	
	module.exports = IndexCore;
	
	/*
	* Index class constructor.
	* You should not use this method directly but use initIndex() function
	*/
	function IndexCore(algoliasearch, indexName) {
	  this.indexName = indexName;
	  this.as = algoliasearch;
	  this.typeAheadArgs = null;
	  this.typeAheadValueOption = null;
	
	  // make sure every index instance has it's own cache
	  this.cache = {};
	}
	
	/*
	* Clear all queries in cache
	*/
	IndexCore.prototype.clearCache = function() {
	  this.cache = {};
	};
	
	/*
	* Search inside the index using XMLHttpRequest request (Using a POST query to
	* minimize number of OPTIONS queries: Cross-Origin Resource Sharing).
	*
	* @param {string} [query] the full text query
	* @param {object} [args] (optional) if set, contains an object with query parameters:
	* - page: (integer) Pagination parameter used to select the page to retrieve.
	*                   Page is zero-based and defaults to 0. Thus,
	*                   to retrieve the 10th page you need to set page=9
	* - hitsPerPage: (integer) Pagination parameter used to select the number of hits per page. Defaults to 20.
	* - attributesToRetrieve: a string that contains the list of object attributes
	* you want to retrieve (let you minimize the answer size).
	*   Attributes are separated with a comma (for example "name,address").
	*   You can also use an array (for example ["name","address"]).
	*   By default, all attributes are retrieved. You can also use '*' to retrieve all
	*   values when an attributesToRetrieve setting is specified for your index.
	* - attributesToHighlight: a string that contains the list of attributes you
	*   want to highlight according to the query.
	*   Attributes are separated by a comma. You can also use an array (for example ["name","address"]).
	*   If an attribute has no match for the query, the raw value is returned.
	*   By default all indexed text attributes are highlighted.
	*   You can use `*` if you want to highlight all textual attributes.
	*   Numerical attributes are not highlighted.
	*   A matchLevel is returned for each highlighted attribute and can contain:
	*      - full: if all the query terms were found in the attribute,
	*      - partial: if only some of the query terms were found,
	*      - none: if none of the query terms were found.
	* - attributesToSnippet: a string that contains the list of attributes to snippet alongside
	* the number of words to return (syntax is `attributeName:nbWords`).
	*    Attributes are separated by a comma (Example: attributesToSnippet=name:10,content:10).
	*    You can also use an array (Example: attributesToSnippet: ['name:10','content:10']).
	*    By default no snippet is computed.
	* - minWordSizefor1Typo: the minimum number of characters in a query word to accept one typo in this word.
	* Defaults to 3.
	* - minWordSizefor2Typos: the minimum number of characters in a query word
	* to accept two typos in this word. Defaults to 7.
	* - getRankingInfo: if set to 1, the result hits will contain ranking
	* information in _rankingInfo attribute.
	* - aroundLatLng: search for entries around a given
	* latitude/longitude (specified as two floats separated by a comma).
	*   For example aroundLatLng=47.316669,5.016670).
	*   You can specify the maximum distance in meters with the aroundRadius parameter (in meters)
	*   and the precision for ranking with aroundPrecision
	*   (for example if you set aroundPrecision=100, two objects that are distant of
	*   less than 100m will be considered as identical for "geo" ranking parameter).
	*   At indexing, you should specify geoloc of an object with the _geoloc attribute
	*   (in the form {"_geoloc":{"lat":48.853409, "lng":2.348800}})
	* - insideBoundingBox: search entries inside a given area defined by the two extreme points
	* of a rectangle (defined by 4 floats: p1Lat,p1Lng,p2Lat,p2Lng).
	*   For example insideBoundingBox=47.3165,4.9665,47.3424,5.0201).
	*   At indexing, you should specify geoloc of an object with the _geoloc attribute
	*   (in the form {"_geoloc":{"lat":48.853409, "lng":2.348800}})
	* - numericFilters: a string that contains the list of numeric filters you want to
	* apply separated by a comma.
	*   The syntax of one filter is `attributeName` followed by `operand` followed by `value`.
	*   Supported operands are `<`, `<=`, `=`, `>` and `>=`.
	*   You can have multiple conditions on one attribute like for example numericFilters=price>100,price<1000.
	*   You can also use an array (for example numericFilters: ["price>100","price<1000"]).
	* - tagFilters: filter the query by a set of tags. You can AND tags by separating them by commas.
	*   To OR tags, you must add parentheses. For example, tags=tag1,(tag2,tag3) means tag1 AND (tag2 OR tag3).
	*   You can also use an array, for example tagFilters: ["tag1",["tag2","tag3"]]
	*   means tag1 AND (tag2 OR tag3).
	*   At indexing, tags should be added in the _tags** attribute
	*   of objects (for example {"_tags":["tag1","tag2"]}).
	* - facetFilters: filter the query by a list of facets.
	*   Facets are separated by commas and each facet is encoded as `attributeName:value`.
	*   For example: `facetFilters=category:Book,author:John%20Doe`.
	*   You can also use an array (for example `["category:Book","author:John%20Doe"]`).
	* - facets: List of object attributes that you want to use for faceting.
	*   Comma separated list: `"category,author"` or array `['category','author']`
	*   Only attributes that have been added in **attributesForFaceting** index setting
	*   can be used in this parameter.
	*   You can also use `*` to perform faceting on all attributes specified in **attributesForFaceting**.
	* - queryType: select how the query words are interpreted, it can be one of the following value:
	*    - prefixAll: all query words are interpreted as prefixes,
	*    - prefixLast: only the last word is interpreted as a prefix (default behavior),
	*    - prefixNone: no query word is interpreted as a prefix. This option is not recommended.
	* - optionalWords: a string that contains the list of words that should
	* be considered as optional when found in the query.
	*   Comma separated and array are accepted.
	* - distinct: If set to 1, enable the distinct feature (disabled by default)
	* if the attributeForDistinct index setting is set.
	*   This feature is similar to the SQL "distinct" keyword: when enabled
	*   in a query with the distinct=1 parameter,
	*   all hits containing a duplicate value for the attributeForDistinct attribute are removed from results.
	*   For example, if the chosen attribute is show_name and several hits have
	*   the same value for show_name, then only the best
	*   one is kept and others are removed.
	* - restrictSearchableAttributes: List of attributes you want to use for
	* textual search (must be a subset of the attributesToIndex index setting)
	* either comma separated or as an array
	* @param {function} [callback] the result callback called with two arguments:
	*  error: null or Error('message'). If false, the content contains the error.
	*  content: the server answer that contains the list of results.
	*/
	IndexCore.prototype.search = buildSearchMethod('query');
	
	/*
	* -- BETA --
	* Search a record similar to the query inside the index using XMLHttpRequest request (Using a POST query to
	* minimize number of OPTIONS queries: Cross-Origin Resource Sharing).
	*
	* @param {string} [query] the similar query
	* @param {object} [args] (optional) if set, contains an object with query parameters.
	*   All search parameters are supported (see search function), restrictSearchableAttributes and facetFilters
	*   are the two most useful to restrict the similar results and get more relevant content
	*/
	IndexCore.prototype.similarSearch = deprecate(
	  buildSearchMethod('similarQuery'),
	  deprecatedMessage(
	    'index.similarSearch(query[, callback])',
	    'index.search({ similarQuery: query }[, callback])'
	  )
	);
	
	/*
	* Browse index content. The response content will have a `cursor` property that you can use
	* to browse subsequent pages for this query. Use `index.browseFrom(cursor)` when you want.
	*
	* @param {string} query - The full text query
	* @param {Object} [queryParameters] - Any search query parameter
	* @param {Function} [callback] - The result callback called with two arguments
	*   error: null or Error('message')
	*   content: the server answer with the browse result
	* @return {Promise|undefined} Returns a promise if no callback given
	* @example
	* index.browse('cool songs', {
	*   tagFilters: 'public,comments',
	*   hitsPerPage: 500
	* }, callback);
	* @see {@link https://www.algolia.com/doc/rest_api#Browse|Algolia REST API Documentation}
	*/
	IndexCore.prototype.browse = function(query, queryParameters, callback) {
	  var merge = __webpack_require__(835);
	
	  var indexObj = this;
	
	  var page;
	  var hitsPerPage;
	
	  // we check variadic calls that are not the one defined
	  // .browse()/.browse(fn)
	  // => page = 0
	  if (arguments.length === 0 || arguments.length === 1 && typeof arguments[0] === 'function') {
	    page = 0;
	    callback = arguments[0];
	    query = undefined;
	  } else if (typeof arguments[0] === 'number') {
	    // .browse(2)/.browse(2, 10)/.browse(2, fn)/.browse(2, 10, fn)
	    page = arguments[0];
	    if (typeof arguments[1] === 'number') {
	      hitsPerPage = arguments[1];
	    } else if (typeof arguments[1] === 'function') {
	      callback = arguments[1];
	      hitsPerPage = undefined;
	    }
	    query = undefined;
	    queryParameters = undefined;
	  } else if (typeof arguments[0] === 'object') {
	    // .browse(queryParameters)/.browse(queryParameters, cb)
	    if (typeof arguments[1] === 'function') {
	      callback = arguments[1];
	    }
	    queryParameters = arguments[0];
	    query = undefined;
	  } else if (typeof arguments[0] === 'string' && typeof arguments[1] === 'function') {
	    // .browse(query, cb)
	    callback = arguments[1];
	    queryParameters = undefined;
	  }
	
	  // otherwise it's a .browse(query)/.browse(query, queryParameters)/.browse(query, queryParameters, cb)
	
	  // get search query parameters combining various possible calls
	  // to .browse();
	  queryParameters = merge({}, queryParameters || {}, {
	    page: page,
	    hitsPerPage: hitsPerPage,
	    query: query
	  });
	
	  var params = this.as._getSearchParams(queryParameters, '');
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/browse',
	    body: {params: params},
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	* Continue browsing from a previous position (cursor), obtained via a call to `.browse()`.
	*
	* @param {string} query - The full text query
	* @param {Object} [queryParameters] - Any search query parameter
	* @param {Function} [callback] - The result callback called with two arguments
	*   error: null or Error('message')
	*   content: the server answer with the browse result
	* @return {Promise|undefined} Returns a promise if no callback given
	* @example
	* index.browseFrom('14lkfsakl32', callback);
	* @see {@link https://www.algolia.com/doc/rest_api#Browse|Algolia REST API Documentation}
	*/
	IndexCore.prototype.browseFrom = function(cursor, callback) {
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/browse',
	    body: {cursor: cursor},
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	* Search for facet values
	* https://www.algolia.com/doc/rest-api/search#search-for-facet-values
	*
	* @param {string} params.facetName Facet name, name of the attribute to search for values in.
	* Must be declared as a facet
	* @param {string} params.facetQuery Query for the facet search
	* @param {string} [params.*] Any search parameter of Algolia,
	* see https://www.algolia.com/doc/api-client/javascript/search#search-parameters
	* Pagination is not supported. The page and hitsPerPage parameters will be ignored.
	* @param callback (optional)
	*/
	IndexCore.prototype.searchForFacetValues = function(params, callback) {
	  var clone = __webpack_require__(106);
	  var omit = __webpack_require__(394);
	  var usage = 'Usage: index.searchForFacetValues({facetName, facetQuery, ...params}[, callback])';
	
	  if (params.facetName === undefined || params.facetQuery === undefined) {
	    throw new Error(usage);
	  }
	
	  var facetName = params.facetName;
	  var filteredParams = omit(clone(params), function(keyName) {
	    return keyName === 'facetName';
	  });
	  var searchParameters = this.as._getSearchParams(filteredParams, '');
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' +
	      encodeURIComponent(this.indexName) + '/facets/' + encodeURIComponent(facetName) + '/query',
	    hostType: 'read',
	    body: {params: searchParameters},
	    callback: callback
	  });
	};
	
	IndexCore.prototype.searchFacet = deprecate(function(params, callback) {
	  return this.searchForFacetValues(params, callback);
	}, deprecatedMessage(
	  'index.searchFacet(params[, callback])',
	  'index.searchForFacetValues(params[, callback])'
	));
	
	IndexCore.prototype._search = function(params, url, callback, additionalUA) {
	  return this.as._jsonRequest({
	    cache: this.cache,
	    method: 'POST',
	    url: url || '/1/indexes/' + encodeURIComponent(this.indexName) + '/query',
	    body: {params: params},
	    hostType: 'read',
	    fallback: {
	      method: 'GET',
	      url: '/1/indexes/' + encodeURIComponent(this.indexName),
	      body: {params: params}
	    },
	    callback: callback,
	    additionalUA: additionalUA
	  });
	};
	
	/*
	* Get an object from this index
	*
	* @param objectID the unique identifier of the object to retrieve
	* @param attrs (optional) if set, contains the array of attribute names to retrieve
	* @param callback (optional) the result callback called with two arguments
	*  error: null or Error('message')
	*  content: the object to retrieve or the error message if a failure occurred
	*/
	IndexCore.prototype.getObject = function(objectID, attrs, callback) {
	  var indexObj = this;
	
	  if (arguments.length === 1 || typeof attrs === 'function') {
	    callback = attrs;
	    attrs = undefined;
	  }
	
	  var params = '';
	  if (attrs !== undefined) {
	    params = '?attributes=';
	    for (var i = 0; i < attrs.length; ++i) {
	      if (i !== 0) {
	        params += ',';
	      }
	      params += attrs[i];
	    }
	  }
	
	  return this.as._jsonRequest({
	    method: 'GET',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/' + encodeURIComponent(objectID) + params,
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	* Get several objects from this index
	*
	* @param objectIDs the array of unique identifier of objects to retrieve
	*/
	IndexCore.prototype.getObjects = function(objectIDs, attributesToRetrieve, callback) {
	  var isArray = __webpack_require__(92);
	  var map = __webpack_require__(181);
	
	  var usage = 'Usage: index.getObjects(arrayOfObjectIDs[, callback])';
	
	  if (!isArray(objectIDs)) {
	    throw new Error(usage);
	  }
	
	  var indexObj = this;
	
	  if (arguments.length === 1 || typeof attributesToRetrieve === 'function') {
	    callback = attributesToRetrieve;
	    attributesToRetrieve = undefined;
	  }
	
	  var body = {
	    requests: map(objectIDs, function prepareRequest(objectID) {
	      var request = {
	        indexName: indexObj.indexName,
	        objectID: objectID
	      };
	
	      if (attributesToRetrieve) {
	        request.attributesToRetrieve = attributesToRetrieve.join(',');
	      }
	
	      return request;
	    })
	  };
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/*/objects',
	    hostType: 'read',
	    body: body,
	    callback: callback
	  });
	};
	
	IndexCore.prototype.as = null;
	IndexCore.prototype.indexName = null;
	IndexCore.prototype.typeAheadArgs = null;
	IndexCore.prototype.typeAheadValueOption = null;


/***/ }),
/* 828 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var AlgoliaSearchCore = __webpack_require__(826);
	var createAlgoliasearch = __webpack_require__(829);
	
	module.exports = createAlgoliasearch(AlgoliaSearchCore, 'Browser (lite)');


/***/ }),
/* 829 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var global = __webpack_require__(1197);
	var Promise = global.Promise || __webpack_require__(1048).Promise;
	
	// This is the standalone browser build entry point
	// Browser implementation of the Algolia Search JavaScript client,
	// using XMLHttpRequest, XDomainRequest and JSONP as fallback
	module.exports = function createAlgoliasearch(AlgoliaSearch, uaSuffix) {
	  var inherits = __webpack_require__(43);
	  var errors = __webpack_require__(180);
	  var inlineHeaders = __webpack_require__(830);
	  var jsonpRequest = __webpack_require__(831);
	  var places = __webpack_require__(836);
	  uaSuffix = uaSuffix || '';
	
	  if (false) {
	    require('debug').enable('algoliasearch*');
	  }
	
	  function algoliasearch(applicationID, apiKey, opts) {
	    var cloneDeep = __webpack_require__(106);
	
	    opts = cloneDeep(opts || {});
	
	    opts._ua = opts._ua || algoliasearch.ua;
	
	    return new AlgoliaSearchBrowser(applicationID, apiKey, opts);
	  }
	
	  algoliasearch.version = __webpack_require__(838);
	
	  algoliasearch.ua =
	    'Algolia for JavaScript (' + algoliasearch.version + '); ' + uaSuffix;
	
	  algoliasearch.initPlaces = places(algoliasearch);
	
	  // we expose into window no matter how we are used, this will allow
	  // us to easily debug any website running algolia
	  global.__algolia = {
	    debug: __webpack_require__(150),
	    algoliasearch: algoliasearch
	  };
	
	  var support = {
	    hasXMLHttpRequest: 'XMLHttpRequest' in global,
	    hasXDomainRequest: 'XDomainRequest' in global
	  };
	
	  if (support.hasXMLHttpRequest) {
	    support.cors = 'withCredentials' in new XMLHttpRequest();
	  }
	
	  function AlgoliaSearchBrowser() {
	    // call AlgoliaSearch constructor
	    AlgoliaSearch.apply(this, arguments);
	  }
	
	  inherits(AlgoliaSearchBrowser, AlgoliaSearch);
	
	  AlgoliaSearchBrowser.prototype._request = function request(url, opts) {
	    return new Promise(function wrapRequest(resolve, reject) {
	      // no cors or XDomainRequest, no request
	      if (!support.cors && !support.hasXDomainRequest) {
	        // very old browser, not supported
	        reject(new errors.Network('CORS not supported'));
	        return;
	      }
	
	      url = inlineHeaders(url, opts.headers);
	
	      var body = opts.body;
	      var req = support.cors ? new XMLHttpRequest() : new XDomainRequest();
	      var reqTimeout;
	      var timedOut;
	      var connected = false;
	
	      reqTimeout = setTimeout(onTimeout, opts.timeouts.connect);
	      // we set an empty onprogress listener
	      // so that XDomainRequest on IE9 is not aborted
	      // refs:
	      //  - https://github.com/algolia/algoliasearch-client-js/issues/76
	      //  - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment
	      req.onprogress = onProgress;
	      if ('onreadystatechange' in req) req.onreadystatechange = onReadyStateChange;
	      req.onload = onLoad;
	      req.onerror = onError;
	
	      // do not rely on default XHR async flag, as some analytics code like hotjar
	      // breaks it and set it to false by default
	      if (req instanceof XMLHttpRequest) {
	        req.open(opts.method, url, true);
	
	        // The Analytics API never accepts Auth headers as query string
	        // this option exists specifically for them.
	        if (opts.forceAuthHeaders) {
	          req.setRequestHeader(
	            'x-algolia-application-id',
	            opts.headers['x-algolia-application-id']
	          );
	          req.setRequestHeader(
	            'x-algolia-api-key',
	            opts.headers['x-algolia-api-key']
	          );
	        }
	      } else {
	        req.open(opts.method, url);
	      }
	
	      // headers are meant to be sent after open
	      if (support.cors) {
	        if (body) {
	          if (opts.method === 'POST') {
	            // https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Simple_requests
	            req.setRequestHeader('content-type', 'application/x-www-form-urlencoded');
	          } else {
	            req.setRequestHeader('content-type', 'application/json');
	          }
	        }
	        req.setRequestHeader('accept', 'application/json');
	      }
	
	      if (body) {
	        req.send(body);
	      } else {
	        req.send();
	      }
	
	      // event object not received in IE8, at least
	      // but we do not use it, still important to note
	      function onLoad(/* event */) {
	        // When browser does not supports req.timeout, we can
	        // have both a load and timeout event, since handled by a dumb setTimeout
	        if (timedOut) {
	          return;
	        }
	
	        clearTimeout(reqTimeout);
	
	        var out;
	
	        try {
	          out = {
	            body: JSON.parse(req.responseText),
	            responseText: req.responseText,
	            statusCode: req.status,
	            // XDomainRequest does not have any response headers
	            headers: req.getAllResponseHeaders && req.getAllResponseHeaders() || {}
	          };
	        } catch (e) {
	          out = new errors.UnparsableJSON({
	            more: req.responseText
	          });
	        }
	
	        if (out instanceof errors.UnparsableJSON) {
	          reject(out);
	        } else {
	          resolve(out);
	        }
	      }
	
	      function onError(event) {
	        if (timedOut) {
	          return;
	        }
	
	        clearTimeout(reqTimeout);
	
	        // error event is trigerred both with XDR/XHR on:
	        //   - DNS error
	        //   - unallowed cross domain request
	        reject(
	          new errors.Network({
	            more: event
	          })
	        );
	      }
	
	      function onTimeout() {
	        timedOut = true;
	        req.abort();
	
	        reject(new errors.RequestTimeout());
	      }
	
	      function onConnect() {
	        connected = true;
	        clearTimeout(reqTimeout);
	        reqTimeout = setTimeout(onTimeout, opts.timeouts.complete);
	      }
	
	      function onProgress() {
	        if (!connected) onConnect();
	      }
	
	      function onReadyStateChange() {
	        if (!connected && req.readyState > 1) onConnect();
	      }
	    });
	  };
	
	  AlgoliaSearchBrowser.prototype._request.fallback = function requestFallback(url, opts) {
	    url = inlineHeaders(url, opts.headers);
	
	    return new Promise(function wrapJsonpRequest(resolve, reject) {
	      jsonpRequest(url, opts, function jsonpRequestDone(err, content) {
	        if (err) {
	          reject(err);
	          return;
	        }
	
	        resolve(content);
	      });
	    });
	  };
	
	  AlgoliaSearchBrowser.prototype._promise = {
	    reject: function rejectPromise(val) {
	      return Promise.reject(val);
	    },
	    resolve: function resolvePromise(val) {
	      return Promise.resolve(val);
	    },
	    delay: function delayPromise(ms) {
	      return new Promise(function resolveOnTimeout(resolve/* , reject*/) {
	        setTimeout(resolve, ms);
	      });
	    },
	    all: function all(promises) {
	      return Promise.all(promises);
	    }
	  };
	
	  return algoliasearch;
	};


/***/ }),
/* 830 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = inlineHeaders;
	
	var encode = __webpack_require__(531);
	
	function inlineHeaders(url, headers) {
	  if (/\?/.test(url)) {
	    url += '&';
	  } else {
	    url += '?';
	  }
	
	  return url + encode(headers);
	}


/***/ }),
/* 831 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = jsonpRequest;
	
	var errors = __webpack_require__(180);
	
	var JSONPCounter = 0;
	
	function jsonpRequest(url, opts, cb) {
	  if (opts.method !== 'GET') {
	    cb(new Error('Method ' + opts.method + ' ' + url + ' is not supported by JSONP.'));
	    return;
	  }
	
	  opts.debug('JSONP: start');
	
	  var cbCalled = false;
	  var timedOut = false;
	
	  JSONPCounter += 1;
	  var head = document.getElementsByTagName('head')[0];
	  var script = document.createElement('script');
	  var cbName = 'algoliaJSONP_' + JSONPCounter;
	  var done = false;
	
	  window[cbName] = function(data) {
	    removeGlobals();
	
	    if (timedOut) {
	      opts.debug('JSONP: Late answer, ignoring');
	      return;
	    }
	
	    cbCalled = true;
	
	    clean();
	
	    cb(null, {
	      body: data,
	      responseText: JSON.stringify(data)/* ,
	      // We do not send the statusCode, there's no statusCode in JSONP, it will be
	      // computed using data.status && data.message like with XDR
	      statusCode*/
	    });
	  };
	
	  // add callback by hand
	  url += '&callback=' + cbName;
	
	  // add body params manually
	  if (opts.jsonBody && opts.jsonBody.params) {
	    url += '&' + opts.jsonBody.params;
	  }
	
	  var ontimeout = setTimeout(timeout, opts.timeouts.complete);
	
	  // script onreadystatechange needed only for
	  // <= IE8
	  // https://github.com/angular/angular.js/issues/4523
	  script.onreadystatechange = readystatechange;
	  script.onload = success;
	  script.onerror = error;
	
	  script.async = true;
	  script.defer = true;
	  script.src = url;
	  head.appendChild(script);
	
	  function success() {
	    opts.debug('JSONP: success');
	
	    if (done || timedOut) {
	      return;
	    }
	
	    done = true;
	
	    // script loaded but did not call the fn => script loading error
	    if (!cbCalled) {
	      opts.debug('JSONP: Fail. Script loaded but did not call the callback');
	      clean();
	      cb(new errors.JSONPScriptFail());
	    }
	  }
	
	  function readystatechange() {
	    if (this.readyState === 'loaded' || this.readyState === 'complete') {
	      success();
	    }
	  }
	
	  function clean() {
	    clearTimeout(ontimeout);
	    script.onload = null;
	    script.onreadystatechange = null;
	    script.onerror = null;
	    head.removeChild(script);
	  }
	
	  function removeGlobals() {
	    try {
	      delete window[cbName];
	      delete window[cbName + '_loaded'];
	    } catch (e) {
	      window[cbName] = window[cbName + '_loaded'] = undefined;
	    }
	  }
	
	  function timeout() {
	    opts.debug('JSONP: Script timeout');
	    timedOut = true;
	    clean();
	    cb(new errors.RequestTimeout());
	  }
	
	  function error() {
	    opts.debug('JSONP: Script error');
	
	    if (done || timedOut) {
	      return;
	    }
	
	    clean();
	    cb(new errors.JSONPScriptError());
	  }
	}


/***/ }),
/* 832 */
/***/ (function(module, exports) {

	module.exports = function deprecate(fn, message) {
	  var warned = false;
	
	  function deprecated() {
	    if (!warned) {
	      /* eslint no-console:0 */
	      console.warn(message);
	      warned = true;
	    }
	
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	};


/***/ }),
/* 833 */
/***/ (function(module, exports) {

	module.exports = function deprecatedMessage(previousUsage, newUsage) {
	  var githubAnchorLink = previousUsage.toLowerCase()
	    .replace(/[\.\(\)]/g, '');
	
	  return 'algoliasearch: `' + previousUsage + '` was replaced by `' + newUsage +
	    '`. Please see https://github.com/algolia/algoliasearch-client-javascript/wiki/Deprecated#' + githubAnchorLink;
	};


/***/ }),
/* 834 */
/***/ (function(module, exports) {

	// Parse cloud does not supports setTimeout
	// We do not store a setTimeout reference in the client everytime
	// We only fallback to a fake setTimeout when not available
	// setTimeout cannot be override globally sadly
	module.exports = function exitPromise(fn, _setTimeout) {
	  _setTimeout(fn, 0);
	};


/***/ }),
/* 835 */
/***/ (function(module, exports, __webpack_require__) {

	var foreach = __webpack_require__(113);
	
	module.exports = function merge(destination/* , sources */) {
	  var sources = Array.prototype.slice.call(arguments);
	
	  foreach(sources, function(source) {
	    for (var keyName in source) {
	      if (source.hasOwnProperty(keyName)) {
	        if (typeof destination[keyName] === 'object' && typeof source[keyName] === 'object') {
	          destination[keyName] = merge({}, destination[keyName], source[keyName]);
	        } else if (source[keyName] !== undefined) {
	          destination[keyName] = source[keyName];
	        }
	      }
	    }
	  });
	
	  return destination;
	};


/***/ }),
/* 836 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = createPlacesClient;
	
	var qs3 = __webpack_require__(1549);
	var buildSearchMethod = __webpack_require__(393);
	
	function createPlacesClient(algoliasearch) {
	  return function places(appID, apiKey, opts) {
	    var cloneDeep = __webpack_require__(106);
	
	    opts = opts && cloneDeep(opts) || {};
	    opts.hosts = opts.hosts || [
	      'places-dsn.algolia.net',
	      'places-1.algolianet.com',
	      'places-2.algolianet.com',
	      'places-3.algolianet.com'
	    ];
	
	    // allow initPlaces() no arguments => community rate limited
	    if (arguments.length === 0 || typeof appID === 'object' || appID === undefined) {
	      appID = '';
	      apiKey = '';
	      opts._allowEmptyCredentials = true;
	    }
	
	    var client = algoliasearch(appID, apiKey, opts);
	    var index = client.initIndex('places');
	    index.search = buildSearchMethod('query', '/1/places/query');
	    index.reverse = function(options, callback) {
	      var encoded = qs3.encode(options);
	
	      return this.as._jsonRequest({
	        method: 'GET',
	        url: '/1/places/reverse?' + encoded,
	        hostType: 'read',
	        callback: callback
	      });
	    };
	
	    index.getObject = function(objectID, callback) {
	      return this.as._jsonRequest({
	        method: 'GET',
	        url: '/1/places/' + encodeURIComponent(objectID),
	        hostType: 'read',
	        callback: callback
	      });
	    };
	    return index;
	  };
	}


/***/ }),
/* 837 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var debug = __webpack_require__(150)('algoliasearch:src/hostIndexState.js');
	var localStorageNamespace = 'algoliasearch-client-js';
	
	var store;
	var moduleStore = {
	  state: {},
	  set: function(key, data) {
	    this.state[key] = data;
	    return this.state[key];
	  },
	  get: function(key) {
	    return this.state[key] || null;
	  }
	};
	
	var localStorageStore = {
	  set: function(key, data) {
	    moduleStore.set(key, data); // always replicate localStorageStore to moduleStore in case of failure
	
	    try {
	      var namespace = JSON.parse(global.localStorage[localStorageNamespace]);
	      namespace[key] = data;
	      global.localStorage[localStorageNamespace] = JSON.stringify(namespace);
	      return namespace[key];
	    } catch (e) {
	      return localStorageFailure(key, e);
	    }
	  },
	  get: function(key) {
	    try {
	      return JSON.parse(global.localStorage[localStorageNamespace])[key] || null;
	    } catch (e) {
	      return localStorageFailure(key, e);
	    }
	  }
	};
	
	function localStorageFailure(key, e) {
	  debug('localStorage failed with', e);
	  cleanup();
	  store = moduleStore;
	  return store.get(key);
	}
	
	store = supportsLocalStorage() ? localStorageStore : moduleStore;
	
	module.exports = {
	  get: getOrSet,
	  set: getOrSet,
	  supportsLocalStorage: supportsLocalStorage
	};
	
	function getOrSet(key, data) {
	  if (arguments.length === 1) {
	    return store.get(key);
	  }
	
	  return store.set(key, data);
	}
	
	function supportsLocalStorage() {
	  try {
	    if ('localStorage' in global &&
	      global.localStorage !== null) {
	      if (!global.localStorage[localStorageNamespace]) {
	        // actual creation of the namespace
	        global.localStorage.setItem(localStorageNamespace, JSON.stringify({}));
	      }
	      return true;
	    }
	
	    return false;
	  } catch (_) {
	    return false;
	  }
	}
	
	// In case of any error on localStorage, we clean our own namespace, this should handle
	// quota errors when a lot of keys + data are used
	function cleanup() {
	  try {
	    global.localStorage.removeItem(localStorageNamespace);
	  } catch (_) {
	    // nothing to do
	  }
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 838 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = '3.35.1';


/***/ }),
/* 839 */,
/* 840 */,
/* 841 */,
/* 842 */,
/* 843 */,
/* 844 */,
/* 845 */,
/* 846 */,
/* 847 */,
/* 848 */,
/* 849 */,
/* 850 */,
/* 851 */,
/* 852 */,
/* 853 */,
/* 854 */,
/* 855 */,
/* 856 */,
/* 857 */,
/* 858 */,
/* 859 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(17);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _Footnote = __webpack_require__(860);
	
	var _Footnote2 = _interopRequireDefault(_Footnote);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _footer;
	
	  return {
	    footer: (_footer = {
	      color: theme.main.colors.footer,
	      padding: "1.5rem 1.5rem  calc(" + theme.bars.sizes.actionsBar + "px + 1.5rem) 1.5rem",
	      "& p": {
	        margin: 0
	      }
	    }, _footer["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      padding: "2rem 2.5rem  calc(" + theme.bars.sizes.actionsBar + "px + 2rem) 2.5rem"
	    }, _footer["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      padding: "2rem 3rem 2rem 3rem"
	    }, _footer)
	  };
	};
	
	var Footer = function Footer(_ref) {
	  var classes = _ref.classes,
	      footnote = _ref.footnote,
	      githubEditUrl = _ref.githubEditUrl;
	  var html = footnote.html;
	
	
	  return _react2.default.createElement(
	    "footer",
	    { className: classes.footer },
	    _react2.default.createElement(_Footnote2.default, { content: html })
	  );
	};
	
	Footer.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  footnote: _propTypes2.default.object.isRequired,
	  githubEditUrl: _propTypes2.default.string
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Footer);
	module.exports = exports["default"];

/***/ }),
/* 860 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(17);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  return {
	    container: {
	      textAlign: "center",
	      fontSize: theme.footer.fonts.footnote.size + "em",
	      lineHeight: theme.footer.fonts.footnote.lineHeight,
	      color: theme.footer.colors.text,
	      "& a": {
	        color: theme.footer.colors.link,
	        fontWeight: "normal",
	        textShadow: "none"
	      },
	      "& a:hover": {
	        color: theme.footer.colors.linkHover
	      },
	      "& ul": {
	        listStyle: "none",
	        margin: 0,
	        padding: 0,
	        textAlign: "center"
	      },
	      "& li": {
	        display: "inline-block",
	        margin: "0 .3em"
	      }
	    }
	  };
	};
	
	var Footnote = function Footnote(_ref) {
	  var classes = _ref.classes,
	      content = _ref.content;
	
	  return _react2.default.createElement("div", { className: classes.container, dangerouslySetInnerHTML: { __html: content } });
	};
	
	Footnote.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  content: _propTypes2.default.string.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Footnote);
	module.exports = exports["default"];

/***/ }),
/* 861 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(17);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var styles = function styles(theme) {
	  var _title, _subTitle;
	
	  return {
	    header: {
	      margin: "0 0 3em"
	    },
	    title: (_title = {
	      color: theme.main.colors.title,
	      fontSize: theme.main.fonts.title.size + "em",
	      letterSpacing: "-0.04em",
	      fontWeight: theme.main.fonts.title.weight,
	      lineHeight: theme.main.fonts.title.lineHeight,
	      margin: "0 0 0.4em"
	    }, _title["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      fontSize: theme.main.fonts.title.sizeM + "em"
	    }, _title["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      fontSize: theme.main.fonts.title.sizeL + "em",
	      letterSpacing: "-0.05em"
	    }, _title),
	    subTitle: (_subTitle = {
	      color: theme.main.colors.subTitle,
	      fontSize: theme.main.fonts.subTitle.size + "em",
	      lineHeight: theme.main.fonts.subTitle.lineHeight,
	      fontWeight: theme.main.fonts.subTitle.weight
	    }, _subTitle["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      fontSize: theme.main.fonts.subTitle.sizeM + "em"
	    }, _subTitle["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      fontSize: theme.main.fonts.subTitle.sizeL + "em"
	    }, _subTitle)
	  };
	};
	
	var Header = function (_React$Component) {
	  _inherits(Header, _React$Component);
	
	  function Header() {
	    _classCallCheck(this, Header);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  Header.prototype.render = function render() {
	    var _props = this.props,
	        classes = _props.classes,
	        title = _props.title,
	        subTitle = _props.subTitle,
	        date = _props.date,
	        modified = _props.modified,
	        tags = _props.tags,
	        children = _props.children;
	
	    return _react2.default.createElement(
	      "header",
	      { className: classes.header },
	      _react2.default.createElement(
	        "h1",
	        { className: classes.title },
	        title
	      ),
	      _react2.default.createElement(
	        "h2",
	        { className: classes.subTitle },
	        subTitle
	      ),
	      children
	    );
	  };
	
	  return Header;
	}(_react2.default.Component);
	
	Header.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  title: _propTypes2.default.string.isRequired,
	  subTitle: _propTypes2.default.string,
	  tags: _propTypes2.default.array,
	  modified: _propTypes2.default.string,
	  date: _propTypes2.default.string.isRequired,
	  children: _propTypes2.default.array
	};
	exports.default = (0, _reactJss2.default)(styles)(Header);
	module.exports = exports["default"];

/***/ }),
/* 862 */,
/* 863 */,
/* 864 */,
/* 865 */,
/* 866 */,
/* 867 */,
/* 868 */,
/* 869 */,
/* 870 */,
/* 871 */,
/* 872 */,
/* 873 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(17);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _SpringScrollbars = __webpack_require__(399);
	
	var _SpringScrollbars2 = _interopRequireDefault(_SpringScrollbars);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _main, _article;
	
	  return {
	    main: (_main = {
	      position: "absolute",
	      top: 0,
	      left: 0,
	      bottom: 0,
	      width: "100%",
	      animationName: "main-entry",
	      animationDuration: ".5s"
	    }, _main["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      width: "calc(100vw - " + theme.info.sizes.width + "px - " + theme.bars.sizes.actionsBar + "px)",
	      left: theme.info.sizes.width + "px"
	    }, _main["@media print"] = {
	      position: "relative",
	      "& > div": {
	        overflow: "visible!important"
	      },
	      "& > div > div": {
	        position: "relative!important"
	      }
	    }, _main.backgroundRepeat = "no-repeat", _main.backgroundPosition = "center -320px", _main),
	    article: (_article = {
	      maxWidth: theme.main.sizes.maxWidth,
	      margin: "0 auto",
	      padding: "calc(1.5rem + " + theme.info.sizes.height + "px) 1.8rem 1.5rem 1.5rem",
	      "& strong, & b": {
	        letterSpacing: "-.02em",
	        fontWeight: 600
	      },
	      "& a": {
	        fontWeight: 600,
	        letterSpacing: "-.02em",
	        textShadow: "\n         2px  2px " + theme.main.colors.background + ",\n        -2px  2px " + theme.main.colors.background + ",\n        -2px -2px " + theme.main.colors.background + ",\n        -2px  2px " + theme.main.colors.background + ",\n        -2px  0   " + theme.main.colors.background + ",\n         2px  0   " + theme.main.colors.background + "\n      ",
	        display: "inline-block",
	        textDecoration: "none",
	        transition: "0.3s",
	        "&:hover": {
	          color: theme.base.colors.linkHover
	        }
	      }
	    }, _article["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      padding: "calc(2.5rem + " + theme.info.sizes.height + "px) 3.5rem 2.5rem"
	    }, _article["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      padding: "3.5rem"
	    }, _article),
	    "@keyframes main-entry": {
	      "0%": {
	        opacity: 0,
	        transform: "translateY(20px)"
	      },
	      "100%": {
	        opacity: 1,
	        transform: "translateY(0)"
	      }
	    }
	  };
	};
	
	var Main = function Main(_ref) {
	  var classes = _ref.classes,
	      children = _ref.children,
	      image = _ref.image;
	
	  return _react2.default.createElement(
	    "main",
	    { className: classes.main, style: { backgroundImage: image && "url(" + image + ")" } },
	    _react2.default.createElement(
	      _SpringScrollbars2.default,
	      null,
	      children
	    )
	  );
	};
	
	Main.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.any.isRequired,
	  image: _propTypes2.default.string
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Main);
	module.exports = exports["default"];

/***/ }),
/* 874 */,
/* 875 */,
/* 876 */,
/* 877 */,
/* 878 */,
/* 879 */,
/* 880 */,
/* 881 */,
/* 882 */,
/* 883 */,
/* 884 */,
/* 885 */,
/* 886 */,
/* 887 */,
/* 888 */,
/* 889 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(17);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _gatsbyLink = __webpack_require__(32);
	
	var _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  return {
	    link: {
	      padding: ".5em 0 1em 1em",
	      position: "relative",
	      fontSize: "1.2em",
	      display: "block",
	      width: "100%",
	      color: "#666",
	      "&::before": {
	        content: "\"\u2022\"",
	        position: "absolute",
	        top: ".5em",
	        left: ".1em",
	        color: theme.base.colors.accent
	      },
	      "& span": {
	        fontWeight: 300,
	        display: "block",
	        fontSize: ".9em",
	        margin: ".2em 0 0 0"
	      }
	    }
	  };
	};
	
	var Hit = function Hit(props) {
	  var classes = props.classes,
	      hit = props.hit;
	
	  console.log("Hit", JSON.stringify(props, null, 2));
	
	  if (!hit || !hit.fields || !hit.fields.slug) {
	    return _react2.default.createElement(
	      "div",
	      { className: "invalid-search-result" },
	      _react2.default.createElement(
	        "i",
	        null,
	        "[todo: verify search config]"
	      )
	    );
	  }
	
	  if (!hit || !hit.fields || !hit.fields.slug) {
	    return _react2.default.createElement("div", { className: "invalid-search-result" });
	  }
	
	  return _react2.default.createElement(
	    _gatsbyLink2.default,
	    { to: hit.fields.slug, className: classes.link },
	    hit.frontmatter.title,
	    hit.frontmatter.subTitle && _react2.default.createElement(
	      "span",
	      null,
	      hit.frontmatter.subTitle
	    )
	  );
	};
	
	Hit.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  hit: _propTypes2.default.object.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Hit);
	module.exports = exports["default"];

/***/ }),
/* 890 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(17);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _dom = __webpack_require__(1653);
	
	var _Hit = __webpack_require__(889);
	
	var _Hit2 = _interopRequireDefault(_Hit);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _aSpan, _aSpan2;
	
	  return {
	    search: {
	      marginTop: "-1em",
	      "& .ais-SearchBox": {
	        width: "100%"
	      },
	      "& .ais-SearchBox-form": {
	        position: "relative",
	        borderBottom: "1px solid #aaa",
	        display: "flex",
	        justifyContent: "space-between"
	      },
	      "& .ais-SearchBox-input": {
	        border: "none",
	        fontFamily: theme.base.fonts.styledFamily,
	        padding: ".2em",
	        fontSize: "1.4em",
	        flexGrow: 1
	      },
	      "& .ais-SearchBox-submit, & .ais-SearchBox-reset": {
	        background: "none",
	        border: "none",
	        fill: "#666",
	        flexGrow: 0
	      },
	      "& .ais-Stats": {
	        margin: ".5em 0 2em .3em",
	        fontSize: ".9em",
	        color: "#999",
	        display: "block"
	      },
	      "& .ais-Hits-list": {
	        listStyle: "none",
	        padding: 0
	      },
	      "& .ais-Pagination-list": {
	        display: "flex",
	        listStyle: "none",
	        justifyContent: "center",
	        padding: 0
	      },
	      "& .ais-Pagination-item": {
	        "& a, & span": (_aSpan = {
	          color: "#666",
	          fontSize: "1.2em",
	          display: "block",
	          padding: ".5em .5em 2em"
	        }, _aSpan["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	          fontSize: "1.3em",
	          padding: ".5em .7em 0"
	        }, _aSpan),
	        "& a": {
	          "&:hover": {
	            color: theme.base.colors.accent
	          }
	        },
	        "&.ais-Pagination-item--firstPage, &.ais-Pagination-item--previousPage, &.ais-Pagination-item--nextPage": {
	          "& a, & span": (_aSpan2 = {
	            padding: ".4em .5em .6em"
	          }, _aSpan2["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	            padding: ".4em .7em .6em"
	          }, _aSpan2)
	        }
	      },
	      "& a": {
	        fontWeight: 400
	      }
	    }
	  };
	};
	
	var Search = function Search(props) {
	  var classes = props.classes,
	      algolia = props.algolia;
	
	
	  return _react2.default.createElement(
	    "div",
	    { className: classes.search },
	    algolia && algolia.appId && _react2.default.createElement(
	      _dom.InstantSearch,
	      {
	        appId: algolia.appId,
	        apiKey: algolia.searchOnlyApiKey,
	        indexName: algolia.indexName
	      },
	      _react2.default.createElement(_dom.SearchBox, { translations: { placeholder: "Search" } }),
	      _react2.default.createElement(_dom.Stats, null),
	      _react2.default.createElement(_dom.Hits, { hitComponent: _Hit2.default }),
	      _react2.default.createElement(_dom.Pagination, null)
	    )
	  );
	};
	
	Search.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  algolia: _propTypes2.default.object.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Search);
	module.exports = exports["default"];

/***/ }),
/* 891 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactHelmet = __webpack_require__(534);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _config = __webpack_require__(75);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Seo = function Seo(props) {
	  var data = props.data,
	      facebook = props.facebook;
	
	  var postTitle = ((data || {}).frontmatter || {}).title;
	  var postDescription = ((data || {}).frontmatter || {}).description;
	  var postCover = ((data || {}).frontmatter || {}).cover;
	  var postSlug = ((data || {}).fields || {}).slug;
	
	  var title = postTitle ? postTitle + " - " + _config2.default.shortSiteTitle : _config2.default.siteTitle;
	  var description = postDescription ? postDescription : _config2.default.siteDescription;
	  var image = postCover ? postCover.childImageSharp.resolutions.src : _config2.default.siteImage;
	  var url = _config2.default.siteUrl + _config2.default.pathPrefix + postSlug;
	
	  return _react2.default.createElement(
	    _reactHelmet2.default,
	    {
	      htmlAttributes: {
	        lang: _config2.default.siteLanguage,
	        prefix: "og: http://ogp.me/ns#"
	      },
	      title: title || description,
	      defaultTitle: title || description
	    },
	    _react2.default.createElement(
	      "title",
	      null,
	      title || description
	    ),
	    _react2.default.createElement("meta", { name: "description", content: description }),
	    _react2.default.createElement("meta", { property: "og:url", content: url }),
	    _react2.default.createElement("meta", { property: "og:title", content: title }),
	    _react2.default.createElement("meta", { property: "og:description", content: description }),
	    _react2.default.createElement("meta", { property: "og:image", content: image }),
	    _react2.default.createElement("meta", { property: "og:type", content: "website" }),
	    _react2.default.createElement("meta", { property: "fb:app_id", content: facebook.appId }),
	    _react2.default.createElement("meta", { name: "twitter:card", content: "summary" }),
	    _react2.default.createElement("meta", {
	      name: "twitter:creator",
	      content: _config2.default.authorTwitterAccount ? _config2.default.authorTwitterAccount : ""
	    })
	  );
	};
	
	Seo.propTypes = {
	  data: _propTypes2.default.object,
	  facebook: _propTypes2.default.object.isRequired
	};
	
	exports.default = Seo;
	module.exports = exports["default"];

/***/ }),
/* 892 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCustomScrollbars = __webpack_require__(1554);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _rebound = __webpack_require__(1744);
	
	var _reactLazyload = __webpack_require__(128);
	
	var _reactRedux = __webpack_require__(54);
	
	var _store = __webpack_require__(51);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SpringScrollbars = function (_Component) {
	  _inherits(SpringScrollbars, _Component);
	
	  function SpringScrollbars(props) {
	    _classCallCheck(this, SpringScrollbars);
	
	    for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      rest[_key - 1] = arguments[_key];
	    }
	
	    var _this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this, props].concat(rest)));
	
	    _this.handleSpringUpdate = _this.handleSpringUpdate.bind(_this);
	    return _this;
	  }
	
	  SpringScrollbars.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
	    if (this.props.isNavigator && this.props.navigatorPosition !== "is-featured") {
	      return;
	    }
	
	    if (this.props.scrollToTop && this.props.scrollToTop !== prevProps.scrollToTop) {
	      this.scrollTop(0);
	      this.props.setScrollToTop(false);
	    }
	  };
	
	  SpringScrollbars.prototype.componentDidMount = function componentDidMount() {
	    this.springSystem = new _rebound.SpringSystem();
	    this.spring = this.springSystem.createSpring();
	    this.spring.addListener({ onSpringUpdate: this.handleSpringUpdate });
	  };
	
	  SpringScrollbars.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.springSystem.deregisterSpring(this.spring);
	    this.springSystem.removeAllListeners();
	    this.springSystem = undefined;
	    this.spring.destroy();
	    this.spring = undefined;
	  };
	
	  SpringScrollbars.prototype.getScrollTop = function getScrollTop() {
	    return this.scrollbars.getScrollTop();
	  };
	
	  SpringScrollbars.prototype.getScrollHeight = function getScrollHeight() {
	    return this.scrollbars.getScrollHeight();
	  };
	
	  SpringScrollbars.prototype.getHeight = function getHeight() {
	    return this.scrollbars.getHeight();
	  };
	
	  SpringScrollbars.prototype.scrollTop = function scrollTop(top) {
	    var scrollTop = this.scrollbars.getScrollTop();
	    var scrollHeight = this.scrollbars.getScrollHeight();
	    var val = _rebound.MathUtil.mapValueInRange(top, 0, scrollHeight, scrollHeight * 0.01, scrollHeight * 0.99);
	    this.spring.setCurrentValue(scrollTop).setAtRest();
	    this.spring.setEndValue(val);
	  };
	
	  SpringScrollbars.prototype.handleSpringUpdate = function handleSpringUpdate(spring) {
	    var _this2 = this;
	
	    window.requestAnimationFrame(function () {
	      var val = spring.getCurrentValue();
	      _this2.scrollbars.scrollTop(val);
	    });
	  };
	
	  SpringScrollbars.prototype.render = function render() {
	    var _this3 = this;
	
	    var _props = this.props,
	        children = _props.children,
	        forceCheckOnScroll = _props.forceCheckOnScroll;
	
	
	    return _react2.default.createElement(
	      _reactCustomScrollbars.Scrollbars,
	      {
	        autoHide: true,
	        universal: true,
	        onScroll: forceCheckOnScroll && _reactLazyload.forceCheck,
	        ref: function ref(comp) {
	          _this3.scrollbars = comp;
	        }
	      },
	      children
	    );
	  };
	
	  return SpringScrollbars;
	}(_react.Component);
	
	SpringScrollbars.propTypes = {
	  children: _propTypes2.default.node.isRequired,
	  scrollToTop: _propTypes2.default.bool.isRequired,
	  setScrollToTop: _propTypes2.default.func.isRequired,
	  forceCheckOnScroll: _propTypes2.default.bool,
	  navigatorPosition: _propTypes2.default.string.isRequired,
	  isNavigator: _propTypes2.default.bool
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    scrollToTop: state.scrollToTop,
	    navigatorPosition: state.navigatorPosition
	  };
	};
	
	var mapDispatchToProps = {
	  setScrollToTop: _store.setScrollToTop
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SpringScrollbars);
	module.exports = exports["default"];

/***/ }),
/* 893 */,
/* 894 */,
/* 895 */,
/* 896 */,
/* 897 */,
/* 898 */,
/* 899 */,
/* 900 */,
/* 901 */,
/* 902 */,
/* 903 */,
/* 904 */,
/* 905 */,
/* 906 */,
/* 907 */,
/* 908 */,
/* 909 */,
/* 910 */,
/* 911 */,
/* 912 */,
/* 913 */,
/* 914 */,
/* 915 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(937), __esModule: true };

/***/ }),
/* 916 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(938), __esModule: true };

/***/ }),
/* 917 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(939), __esModule: true };

/***/ }),
/* 918 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(942), __esModule: true };

/***/ }),
/* 919 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(943), __esModule: true };

/***/ }),
/* 920 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(944), __esModule: true };

/***/ }),
/* 921 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (obj, keys) {
	  var target = {};
	
	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }
	
	  return target;
	};

/***/ }),
/* 922 */
/***/ (function(module, exports) {

	'use strict'
	
	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray
	
	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array
	
	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}
	
	// Support decoding URL-safe base64 strings, as Node.js does.
	// See: https://en.wikipedia.org/wiki/Base64#URL_applications
	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63
	
	function getLens (b64) {
	  var len = b64.length
	
	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }
	
	  // Trim off extra bytes after placeholder bytes are found
	  // See: https://github.com/beatgammit/base64-js/issues/42
	  var validLen = b64.indexOf('=')
	  if (validLen === -1) validLen = len
	
	  var placeHoldersLen = validLen === len
	    ? 0
	    : 4 - (validLen % 4)
	
	  return [validLen, placeHoldersLen]
	}
	
	// base64 is 4/3 + up to two characters of the original data
	function byteLength (b64) {
	  var lens = getLens(b64)
	  var validLen = lens[0]
	  var placeHoldersLen = lens[1]
	  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
	}
	
	function _byteLength (b64, validLen, placeHoldersLen) {
	  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
	}
	
	function toByteArray (b64) {
	  var tmp
	  var lens = getLens(b64)
	  var validLen = lens[0]
	  var placeHoldersLen = lens[1]
	
	  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))
	
	  var curByte = 0
	
	  // if there are placeholders, only get up to the last complete 4 chars
	  var len = placeHoldersLen > 0
	    ? validLen - 4
	    : validLen
	
	  var i
	  for (i = 0; i < len; i += 4) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 18) |
	      (revLookup[b64.charCodeAt(i + 1)] << 12) |
	      (revLookup[b64.charCodeAt(i + 2)] << 6) |
	      revLookup[b64.charCodeAt(i + 3)]
	    arr[curByte++] = (tmp >> 16) & 0xFF
	    arr[curByte++] = (tmp >> 8) & 0xFF
	    arr[curByte++] = tmp & 0xFF
	  }
	
	  if (placeHoldersLen === 2) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 2) |
	      (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[curByte++] = tmp & 0xFF
	  }
	
	  if (placeHoldersLen === 1) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 10) |
	      (revLookup[b64.charCodeAt(i + 1)] << 4) |
	      (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[curByte++] = (tmp >> 8) & 0xFF
	    arr[curByte++] = tmp & 0xFF
	  }
	
	  return arr
	}
	
	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] +
	    lookup[num >> 12 & 0x3F] +
	    lookup[num >> 6 & 0x3F] +
	    lookup[num & 0x3F]
	}
	
	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp =
	      ((uint8[i] << 16) & 0xFF0000) +
	      ((uint8[i + 1] << 8) & 0xFF00) +
	      (uint8[i + 2] & 0xFF)
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}
	
	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3
	
	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }
	
	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    parts.push(
	      lookup[tmp >> 2] +
	      lookup[(tmp << 4) & 0x3F] +
	      '=='
	    )
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
	    parts.push(
	      lookup[tmp >> 10] +
	      lookup[(tmp >> 4) & 0x3F] +
	      lookup[(tmp << 2) & 0x3F] +
	      '='
	    )
	  }
	
	  return parts.join('')
	}


/***/ }),
/* 923 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.groupSelectors = exports.getDocumentRoot = void 0;
	var positionals_1 = __webpack_require__(407);
	function getDocumentRoot(node) {
	    while (node.parent)
	        node = node.parent;
	    return node;
	}
	exports.getDocumentRoot = getDocumentRoot;
	function groupSelectors(selectors) {
	    var filteredSelectors = [];
	    var plainSelectors = [];
	    for (var _i = 0, selectors_1 = selectors; _i < selectors_1.length; _i++) {
	        var selector = selectors_1[_i];
	        if (selector.some(positionals_1.isFilter)) {
	            filteredSelectors.push(selector);
	        }
	        else {
	            plainSelectors.push(selector);
	        }
	    }
	    return [plainSelectors, filteredSelectors];
	}
	exports.groupSelectors = groupSelectors;


/***/ }),
/* 924 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	/**
	 * Methods for getting and modifying attributes.
	 *
	 * @module cheerio/attributes
	 */
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.is = exports.toggleClass = exports.removeClass = exports.addClass = exports.hasClass = exports.removeAttr = exports.val = exports.data = exports.prop = exports.attr = void 0;
	var static_1 = __webpack_require__(139);
	var utils_1 = __webpack_require__(109);
	var hasOwn = Object.prototype.hasOwnProperty;
	var rspace = /\s+/;
	var dataAttrPrefix = 'data-';
	/*
	 * Lookup table for coercing string data-* attributes to their corresponding
	 * JavaScript primitives
	 */
	var primitives = {
	    null: null,
	    true: true,
	    false: false,
	};
	// Attributes that are booleans
	var rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;
	// Matches strings that look like JSON objects or arrays
	var rbrace = /^(?:{[\w\W]*}|\[[\w\W]*])$/;
	function getAttr(elem, name) {
	    var _a;
	    if (!elem || !utils_1.isTag(elem))
	        return undefined;
	    (_a = elem.attribs) !== null && _a !== void 0 ? _a : (elem.attribs = {});
	    // Return the entire attribs object if no attribute specified
	    if (!name) {
	        return elem.attribs;
	    }
	    if (hasOwn.call(elem.attribs, name)) {
	        // Get the (decoded) attribute
	        return rboolean.test(name) ? name : elem.attribs[name];
	    }
	    // Mimic the DOM and return text content as value for `option's`
	    if (elem.name === 'option' && name === 'value') {
	        return static_1.text(elem.children);
	    }
	    // Mimic DOM with default value for radios/checkboxes
	    if (elem.name === 'input' &&
	        (elem.attribs.type === 'radio' || elem.attribs.type === 'checkbox') &&
	        name === 'value') {
	        return 'on';
	    }
	    return undefined;
	}
	/**
	 * Sets the value of an attribute. The attribute will be deleted if the value is `null`.
	 *
	 * @private
	 * @param el - The element to set the attribute on.
	 * @param name - The attribute's name.
	 * @param value - The attribute's value.
	 */
	function setAttr(el, name, value) {
	    if (value === null) {
	        removeAttribute(el, name);
	    }
	    else {
	        el.attribs[name] = "" + value;
	    }
	}
	function attr(name, value) {
	    // Set the value (with attr map support)
	    if (typeof name === 'object' || value !== undefined) {
	        if (typeof value === 'function') {
	            if (typeof name !== 'string') {
	                {
	                    throw new Error('Bad combination of arguments.');
	                }
	            }
	            return utils_1.domEach(this, function (i, el) {
	                if (utils_1.isTag(el))
	                    setAttr(el, name, value.call(el, i, el.attribs[name]));
	            });
	        }
	        return utils_1.domEach(this, function (_, el) {
	            if (!utils_1.isTag(el))
	                return;
	            if (typeof name === 'object') {
	                Object.keys(name).forEach(function (objName) {
	                    var objValue = name[objName];
	                    setAttr(el, objName, objValue);
	                });
	            }
	            else {
	                setAttr(el, name, value);
	            }
	        });
	    }
	    return arguments.length > 1 ? this : getAttr(this[0], name);
	}
	exports.attr = attr;
	/**
	 * Gets a node's prop.
	 *
	 * @private
	 * @category Attributes
	 * @param el - Elenent to get the prop of.
	 * @param name - Name of the prop.
	 * @returns The prop's value.
	 */
	function getProp(el, name) {
	    if (!el || !utils_1.isTag(el))
	        return;
	    return name in el
	        ? // @ts-expect-error TS doesn't like us accessing the value directly here.
	            el[name]
	        : rboolean.test(name)
	            ? getAttr(el, name) !== undefined
	            : getAttr(el, name);
	}
	/**
	 * Sets the value of a prop.
	 *
	 * @private
	 * @param el - The element to set the prop on.
	 * @param name - The prop's name.
	 * @param value - The prop's value.
	 */
	function setProp(el, name, value) {
	    if (name in el) {
	        // @ts-expect-error Overriding value
	        el[name] = value;
	    }
	    else {
	        setAttr(el, name, rboolean.test(name) ? (value ? '' : null) : "" + value);
	    }
	}
	function prop(name, value) {
	    if (typeof name === 'string' && value === undefined) {
	        switch (name) {
	            case 'style': {
	                var property_1 = this.css();
	                var keys = Object.keys(property_1);
	                keys.forEach(function (p, i) {
	                    property_1[i] = p;
	                });
	                property_1.length = keys.length;
	                return property_1;
	            }
	            case 'tagName':
	            case 'nodeName': {
	                var el = this[0];
	                return utils_1.isTag(el) ? el.name.toUpperCase() : undefined;
	            }
	            case 'outerHTML':
	                return this.clone().wrap('<container />').parent().html();
	            case 'innerHTML':
	                return this.html();
	            default:
	                return getProp(this[0], name);
	        }
	    }
	    if (typeof name === 'object' || value !== undefined) {
	        if (typeof value === 'function') {
	            if (typeof name === 'object') {
	                throw new Error('Bad combination of arguments.');
	            }
	            return utils_1.domEach(this, function (j, el) {
	                if (utils_1.isTag(el))
	                    setProp(el, name, value.call(el, j, getProp(el, name)));
	            });
	        }
	        return utils_1.domEach(this, function (__, el) {
	            if (!utils_1.isTag(el))
	                return;
	            if (typeof name === 'object') {
	                Object.keys(name).forEach(function (key) {
	                    var val = name[key];
	                    setProp(el, key, val);
	                });
	            }
	            else {
	                setProp(el, name, value);
	            }
	        });
	    }
	    return undefined;
	}
	exports.prop = prop;
	/**
	 * Sets the value of a data attribute.
	 *
	 * @private
	 * @param el - The element to set the data attribute on.
	 * @param name - The data attribute's name.
	 * @param value - The data attribute's value.
	 */
	function setData(el, name, value) {
	    var _a;
	    var elem = el;
	    (_a = elem.data) !== null && _a !== void 0 ? _a : (elem.data = {});
	    if (typeof name === 'object')
	        Object.assign(elem.data, name);
	    else if (typeof name === 'string' && value !== undefined) {
	        elem.data[name] = value;
	    }
	}
	/**
	 * Read the specified attribute from the equivalent HTML5 `data-*` attribute,
	 * and (if present) cache the value in the node's internal data store. If no
	 * attribute name is specified, read *all* HTML5 `data-*` attributes in this manner.
	 *
	 * @private
	 * @category Attributes
	 * @param el - Elenent to get the data attribute of.
	 * @param name - Name of the data attribute.
	 * @returns The data attribute's value, or a map with all of the data attribute.
	 */
	function readData(el, name) {
	    var domNames;
	    var jsNames;
	    var value;
	    if (name == null) {
	        domNames = Object.keys(el.attribs).filter(function (attrName) {
	            return attrName.startsWith(dataAttrPrefix);
	        });
	        jsNames = domNames.map(function (domName) {
	            return utils_1.camelCase(domName.slice(dataAttrPrefix.length));
	        });
	    }
	    else {
	        domNames = [dataAttrPrefix + utils_1.cssCase(name)];
	        jsNames = [name];
	    }
	    for (var idx = 0; idx < domNames.length; ++idx) {
	        var domName = domNames[idx];
	        var jsName = jsNames[idx];
	        if (hasOwn.call(el.attribs, domName) &&
	            !hasOwn.call(el.data, jsName)) {
	            value = el.attribs[domName];
	            if (hasOwn.call(primitives, value)) {
	                value = primitives[value];
	            }
	            else if (value === String(Number(value))) {
	                value = Number(value);
	            }
	            else if (rbrace.test(value)) {
	                try {
	                    value = JSON.parse(value);
	                }
	                catch (e) {
	                    /* Ignore */
	                }
	            }
	            el.data[jsName] = value;
	        }
	    }
	    return name == null ? el.data : value;
	}
	function data(name, value) {
	    var _a;
	    var elem = this[0];
	    if (!elem || !utils_1.isTag(elem))
	        return;
	    var dataEl = elem;
	    (_a = dataEl.data) !== null && _a !== void 0 ? _a : (dataEl.data = {});
	    // Return the entire data object if no data specified
	    if (!name) {
	        return readData(dataEl);
	    }
	    // Set the value (with attr map support)
	    if (typeof name === 'object' || value !== undefined) {
	        utils_1.domEach(this, function (_, el) {
	            if (utils_1.isTag(el))
	                if (typeof name === 'object')
	                    setData(el, name);
	                else
	                    setData(el, name, value);
	        });
	        return this;
	    }
	    if (hasOwn.call(dataEl.data, name)) {
	        return dataEl.data[name];
	    }
	    return readData(dataEl, name);
	}
	exports.data = data;
	function val(value) {
	    var querying = arguments.length === 0;
	    var element = this[0];
	    if (!element || !utils_1.isTag(element))
	        return querying ? undefined : this;
	    switch (element.name) {
	        case 'textarea':
	            return this.text(value);
	        case 'select': {
	            var option = this.find('option:selected');
	            if (!querying) {
	                if (this.attr('multiple') == null && typeof value === 'object') {
	                    return this;
	                }
	                this.find('option').removeAttr('selected');
	                var values = typeof value !== 'object' ? [value] : value;
	                for (var i = 0; i < values.length; i++) {
	                    this.find("option[value=\"" + values[i] + "\"]").attr('selected', '');
	                }
	                return this;
	            }
	            return this.attr('multiple')
	                ? option.toArray().map(function (el) { return static_1.text(el.children); })
	                : option.attr('value');
	        }
	        case 'input':
	        case 'option':
	            return querying
	                ? this.attr('value')
	                : this.attr('value', value);
	    }
	    return undefined;
	}
	exports.val = val;
	/**
	 * Remove an attribute.
	 *
	 * @private
	 * @param elem - Node to remove attribute from.
	 * @param name - Name of the attribute to remove.
	 */
	function removeAttribute(elem, name) {
	    if (!elem.attribs || !hasOwn.call(elem.attribs, name))
	        return;
	    delete elem.attribs[name];
	}
	/**
	 * Splits a space-separated list of names to individual names.
	 *
	 * @category Attributes
	 * @param names - Names to split.
	 * @returns - Split names.
	 */
	function splitNames(names) {
	    return names ? names.trim().split(rspace) : [];
	}
	/**
	 * Method for removing attributes by `name`.
	 *
	 * @category Attributes
	 * @example
	 *
	 * ```js
	 * $('.pear').removeAttr('class').html();
	 * //=> <li>Pear</li>
	 *
	 * $('.apple').attr('id', 'favorite');
	 * $('.apple').removeAttr('id class').html();
	 * //=> <li>Apple</li>
	 * ```
	 *
	 * @param name - Name of the attribute.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/removeAttr/}
	 */
	function removeAttr(name) {
	    var attrNames = splitNames(name);
	    var _loop_1 = function (i) {
	        utils_1.domEach(this_1, function (_, elem) {
	            if (utils_1.isTag(elem))
	                removeAttribute(elem, attrNames[i]);
	        });
	    };
	    var this_1 = this;
	    for (var i = 0; i < attrNames.length; i++) {
	        _loop_1(i);
	    }
	    return this;
	}
	exports.removeAttr = removeAttr;
	/**
	 * Check to see if *any* of the matched elements have the given `className`.
	 *
	 * @category Attributes
	 * @example
	 *
	 * ```js
	 * $('.pear').hasClass('pear');
	 * //=> true
	 *
	 * $('apple').hasClass('fruit');
	 * //=> false
	 *
	 * $('li').hasClass('pear');
	 * //=> true
	 * ```
	 *
	 * @param className - Name of the class.
	 * @returns Indicates if an element has the given `className`.
	 * @see {@link https://api.jquery.com/hasClass/}
	 */
	function hasClass(className) {
	    return this.toArray().some(function (elem) {
	        var clazz = utils_1.isTag(elem) && elem.attribs.class;
	        var idx = -1;
	        if (clazz && className.length) {
	            while ((idx = clazz.indexOf(className, idx + 1)) > -1) {
	                var end = idx + className.length;
	                if ((idx === 0 || rspace.test(clazz[idx - 1])) &&
	                    (end === clazz.length || rspace.test(clazz[end]))) {
	                    return true;
	                }
	            }
	        }
	        return false;
	    });
	}
	exports.hasClass = hasClass;
	/**
	 * Adds class(es) to all of the matched elements. Also accepts a `function`.
	 *
	 * @category Attributes
	 * @example
	 *
	 * ```js
	 * $('.pear').addClass('fruit').html();
	 * //=> <li class="pear fruit">Pear</li>
	 *
	 * $('.apple').addClass('fruit red').html();
	 * //=> <li class="apple fruit red">Apple</li>
	 * ```
	 *
	 * @param value - Name of new class.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/addClass/}
	 */
	function addClass(value) {
	    // Support functions
	    if (typeof value === 'function') {
	        return utils_1.domEach(this, function (i, el) {
	            if (utils_1.isTag(el)) {
	                var className = el.attribs.class || '';
	                addClass.call([el], value.call(el, i, className));
	            }
	        });
	    }
	    // Return if no value or not a string or function
	    if (!value || typeof value !== 'string')
	        return this;
	    var classNames = value.split(rspace);
	    var numElements = this.length;
	    for (var i = 0; i < numElements; i++) {
	        var el = this[i];
	        // If selected element isn't a tag, move on
	        if (!utils_1.isTag(el))
	            continue;
	        // If we don't already have classes
	        var className = getAttr(el, 'class');
	        if (!className) {
	            setAttr(el, 'class', classNames.join(' ').trim());
	        }
	        else {
	            var setClass = " " + className + " ";
	            // Check if class already exists
	            for (var j = 0; j < classNames.length; j++) {
	                var appendClass = classNames[j] + " ";
	                if (!setClass.includes(" " + appendClass))
	                    setClass += appendClass;
	            }
	            setAttr(el, 'class', setClass.trim());
	        }
	    }
	    return this;
	}
	exports.addClass = addClass;
	/**
	 * Removes one or more space-separated classes from the selected elements. If no
	 * `className` is defined, all classes will be removed. Also accepts a `function`.
	 *
	 * @category Attributes
	 * @example
	 *
	 * ```js
	 * $('.pear').removeClass('pear').html();
	 * //=> <li class="">Pear</li>
	 *
	 * $('.apple').addClass('red').removeClass().html();
	 * //=> <li class="">Apple</li>
	 * ```
	 *
	 * @param name - Name of the class. If not specified, removes all elements.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/removeClass/}
	 */
	function removeClass(name) {
	    // Handle if value is a function
	    if (typeof name === 'function') {
	        return utils_1.domEach(this, function (i, el) {
	            if (utils_1.isTag(el))
	                removeClass.call([el], name.call(el, i, el.attribs.class || ''));
	        });
	    }
	    var classes = splitNames(name);
	    var numClasses = classes.length;
	    var removeAll = arguments.length === 0;
	    return utils_1.domEach(this, function (_, el) {
	        if (!utils_1.isTag(el))
	            return;
	        if (removeAll) {
	            // Short circuit the remove all case as this is the nice one
	            el.attribs.class = '';
	        }
	        else {
	            var elClasses = splitNames(el.attribs.class);
	            var changed = false;
	            for (var j = 0; j < numClasses; j++) {
	                var index = elClasses.indexOf(classes[j]);
	                if (index >= 0) {
	                    elClasses.splice(index, 1);
	                    changed = true;
	                    /*
	                     * We have to do another pass to ensure that there are not duplicate
	                     * classes listed
	                     */
	                    j--;
	                }
	            }
	            if (changed) {
	                el.attribs.class = elClasses.join(' ');
	            }
	        }
	    });
	}
	exports.removeClass = removeClass;
	/**
	 * Add or remove class(es) from the matched elements, depending on either the
	 * class's presence or the value of the switch argument. Also accepts a `function`.
	 *
	 * @category Attributes
	 * @example
	 *
	 * ```js
	 * $('.apple.green').toggleClass('fruit green red').html();
	 * //=> <li class="apple fruit red">Apple</li>
	 *
	 * $('.apple.green').toggleClass('fruit green red', true).html();
	 * //=> <li class="apple green fruit red">Apple</li>
	 * ```
	 *
	 * @param value - Name of the class. Can also be a function.
	 * @param stateVal - If specified the state of the class.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/toggleClass/}
	 */
	function toggleClass(value, stateVal) {
	    // Support functions
	    if (typeof value === 'function') {
	        return utils_1.domEach(this, function (i, el) {
	            if (utils_1.isTag(el)) {
	                toggleClass.call([el], value.call(el, i, el.attribs.class || '', stateVal), stateVal);
	            }
	        });
	    }
	    // Return if no value or not a string or function
	    if (!value || typeof value !== 'string')
	        return this;
	    var classNames = value.split(rspace);
	    var numClasses = classNames.length;
	    var state = typeof stateVal === 'boolean' ? (stateVal ? 1 : -1) : 0;
	    var numElements = this.length;
	    for (var i = 0; i < numElements; i++) {
	        var el = this[i];
	        // If selected element isn't a tag, move on
	        if (!utils_1.isTag(el))
	            continue;
	        var elementClasses = splitNames(el.attribs.class);
	        // Check if class already exists
	        for (var j = 0; j < numClasses; j++) {
	            // Check if the class name is currently defined
	            var index = elementClasses.indexOf(classNames[j]);
	            // Add if stateValue === true or we are toggling and there is no value
	            if (state >= 0 && index < 0) {
	                elementClasses.push(classNames[j]);
	            }
	            else if (state <= 0 && index >= 0) {
	                // Otherwise remove but only if the item exists
	                elementClasses.splice(index, 1);
	            }
	        }
	        el.attribs.class = elementClasses.join(' ');
	    }
	    return this;
	}
	exports.toggleClass = toggleClass;
	/**
	 * Checks the current list of elements and returns `true` if *any* of the
	 * elements match the selector. If using an element or Cheerio selection,
	 * returns `true` if *any* of the elements match. If using a predicate function,
	 * the function is executed in the context of the selected element, so `this`
	 * refers to the current element.
	 *
	 * @category Attributes
	 * @param selector - Selector for the selection.
	 * @returns Whether or not the selector matches an element of the instance.
	 * @see {@link https://api.jquery.com/is/}
	 */
	function is(selector) {
	    if (selector) {
	        return this.filter(selector).length > 0;
	    }
	    return false;
	}
	exports.is = is;


/***/ }),
/* 925 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.css = void 0;
	var utils_1 = __webpack_require__(109);
	function css(prop, val) {
	    if ((prop != null && val != null) ||
	        // When `prop` is a "plain" object
	        (typeof prop === 'object' && !Array.isArray(prop))) {
	        return utils_1.domEach(this, function (idx, el) {
	            if (utils_1.isTag(el)) {
	                // `prop` can't be an array here anymore.
	                setCss(el, prop, val, idx);
	            }
	        });
	    }
	    return getCss(this[0], prop);
	}
	exports.css = css;
	/**
	 * Set styles of all elements.
	 *
	 * @private
	 * @param el - Element to set style of.
	 * @param prop - Name of property.
	 * @param value - Value to set property to.
	 * @param idx - Optional index within the selection.
	 */
	function setCss(el, prop, value, idx) {
	    if (typeof prop === 'string') {
	        var styles = getCss(el);
	        var val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;
	        if (val === '') {
	            delete styles[prop];
	        }
	        else if (val != null) {
	            styles[prop] = val;
	        }
	        el.attribs.style = stringify(styles);
	    }
	    else if (typeof prop === 'object') {
	        Object.keys(prop).forEach(function (k, i) {
	            setCss(el, k, prop[k], i);
	        });
	    }
	}
	function getCss(el, prop) {
	    if (!el || !utils_1.isTag(el))
	        return;
	    var styles = parse(el.attribs.style);
	    if (typeof prop === 'string') {
	        return styles[prop];
	    }
	    if (Array.isArray(prop)) {
	        var newStyles_1 = {};
	        prop.forEach(function (item) {
	            if (styles[item] != null) {
	                newStyles_1[item] = styles[item];
	            }
	        });
	        return newStyles_1;
	    }
	    return styles;
	}
	/**
	 * Stringify `obj` to styles.
	 *
	 * @private
	 * @category CSS
	 * @param obj - Object to stringify.
	 * @returns The serialized styles.
	 */
	function stringify(obj) {
	    return Object.keys(obj).reduce(function (str, prop) { return "" + str + (str ? ' ' : '') + prop + ": " + obj[prop] + ";"; }, '');
	}
	/**
	 * Parse `styles`.
	 *
	 * @private
	 * @category CSS
	 * @param styles - Styles to be parsed.
	 * @returns The parsed styles.
	 */
	function parse(styles) {
	    styles = (styles || '').trim();
	    if (!styles)
	        return {};
	    return styles.split(';').reduce(function (obj, str) {
	        var n = str.indexOf(':');
	        // Skip if there is no :, or if it is the first/last character
	        if (n < 1 || n === str.length - 1)
	            return obj;
	        obj[str.slice(0, n).trim()] = str.slice(n + 1).trim();
	        return obj;
	    }, {});
	}


/***/ }),
/* 926 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.serializeArray = exports.serialize = void 0;
	var utils_1 = __webpack_require__(109);
	/*
	 * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js
	 * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js
	 */
	var submittableSelector = 'input,select,textarea,keygen';
	var r20 = /%20/g;
	var rCRLF = /\r?\n/g;
	/**
	 * Encode a set of form elements as a string for submission.
	 *
	 * @category Forms
	 * @returns The serialized form.
	 * @see {@link https://api.jquery.com/serialize/}
	 */
	function serialize() {
	    // Convert form elements into name/value objects
	    var arr = this.serializeArray();
	    // Serialize each element into a key/value string
	    var retArr = arr.map(function (data) {
	        return encodeURIComponent(data.name) + "=" + encodeURIComponent(data.value);
	    });
	    // Return the resulting serialization
	    return retArr.join('&').replace(r20, '+');
	}
	exports.serialize = serialize;
	/**
	 * Encode a set of form elements as an array of names and values.
	 *
	 * @category Forms
	 * @example
	 *
	 * ```js
	 * $('<form><input name="foo" value="bar" /></form>').serializeArray();
	 * //=> [ { name: 'foo', value: 'bar' } ]
	 * ```
	 *
	 * @returns The serialized form.
	 * @see {@link https://api.jquery.com/serializeArray/}
	 */
	function serializeArray() {
	    // Resolve all form elements from either forms or collections of form elements
	    var Cheerio = this.constructor;
	    return this.map(function (_, elem) {
	        var $elem = Cheerio(elem);
	        if (utils_1.isTag(elem) && elem.name === 'form') {
	            return $elem.find(submittableSelector).toArray();
	        }
	        return $elem.filter(submittableSelector).toArray();
	    })
	        .filter(
	    // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)
	    '[name!=""]:enabled' +
	        // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)
	        ':not(:submit, :button, :image, :reset, :file)' +
	        // And are either checked/don't have a checkable state
	        ':matches([checked], :not(:checkbox, :radio))'
	    // Convert each of the elements to its value(s)
	    )
	        .map(function (_, elem) {
	        var _a;
	        var $elem = Cheerio(elem);
	        var name = $elem.attr('name'); // We have filtered for elements with a name before.
	        // If there is no value set (e.g. `undefined`, `null`), then default value to empty
	        var value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : '';
	        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs
	        if (Array.isArray(value)) {
	            return value.map(function (val) {
	                /*
	                 * We trim replace any line endings (e.g. `\r` or `\r\n` with `\r\n`) to guarantee consistency across platforms
	                 * These can occur inside of `<textarea>'s`
	                 */
	                return ({ name: name, value: val.replace(rCRLF, '\r\n') });
	            });
	        }
	        // Otherwise (e.g. `<input type="text">`, return only one key/value pair
	        return { name: name, value: value.replace(rCRLF, '\r\n') };
	    })
	        .toArray();
	}
	exports.serializeArray = serializeArray;


/***/ }),
/* 927 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.clone = exports.text = exports.toString = exports.html = exports.empty = exports.replaceWith = exports.remove = exports.insertBefore = exports.before = exports.insertAfter = exports.after = exports.wrapAll = exports.unwrap = exports.wrapInner = exports.wrap = exports.prepend = exports.append = exports.prependTo = exports.appendTo = exports._makeDomArray = void 0;
	var tslib_1 = __webpack_require__(83);
	var domhandler_1 = __webpack_require__(77);
	/**
	 * Methods for modifying the DOM structure.
	 *
	 * @module cheerio/manipulation
	 */
	var domhandler_2 = __webpack_require__(77);
	var parse_1 = tslib_1.__importStar(__webpack_require__(260));
	var static_1 = __webpack_require__(139);
	var utils_1 = __webpack_require__(109);
	var htmlparser2_1 = __webpack_require__(68);
	/**
	 * Create an array of nodes, recursing into arrays and parsing strings if necessary.
	 *
	 * @private
	 * @category Manipulation
	 * @param elem - Elements to make an array of.
	 * @param clone - Optionally clone nodes.
	 * @returns The array of nodes.
	 */
	function _makeDomArray(elem, clone) {
	    var _this = this;
	    if (elem == null) {
	        return [];
	    }
	    if (utils_1.isCheerio(elem)) {
	        return clone ? utils_1.cloneDom(elem.get()) : elem.get();
	    }
	    if (Array.isArray(elem)) {
	        return elem.reduce(function (newElems, el) { return newElems.concat(_this._makeDomArray(el, clone)); }, []);
	    }
	    if (typeof elem === 'string') {
	        return parse_1.default(elem, this.options, false).children;
	    }
	    return clone ? utils_1.cloneDom([elem]) : [elem];
	}
	exports._makeDomArray = _makeDomArray;
	function _insert(concatenator) {
	    return function () {
	        var _this = this;
	        var elems = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            elems[_i] = arguments[_i];
	        }
	        var lastIdx = this.length - 1;
	        return utils_1.domEach(this, function (i, el) {
	            if (!domhandler_1.hasChildren(el))
	                return;
	            var domSrc = typeof elems[0] === 'function'
	                ? elems[0].call(el, i, static_1.html(el.children))
	                : elems;
	            var dom = _this._makeDomArray(domSrc, i < lastIdx);
	            concatenator(dom, el.children, el);
	        });
	    };
	}
	/**
	 * Modify an array in-place, removing some number of elements and adding new
	 * elements directly following them.
	 *
	 * @private
	 * @category Manipulation
	 * @param array - Target array to splice.
	 * @param spliceIdx - Index at which to begin changing the array.
	 * @param spliceCount - Number of elements to remove from the array.
	 * @param newElems - Elements to insert into the array.
	 * @param parent - The parent of the node.
	 * @returns The spliced array.
	 */
	function uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {
	    var _a, _b;
	    var spliceArgs = tslib_1.__spreadArray([
	        spliceIdx,
	        spliceCount
	    ], newElems);
	    var prev = array[spliceIdx - 1] || null;
	    var next = array[spliceIdx + spliceCount] || null;
	    /*
	     * Before splicing in new elements, ensure they do not already appear in the
	     * current array.
	     */
	    for (var idx = 0; idx < newElems.length; ++idx) {
	        var node = newElems[idx];
	        var oldParent = node.parent;
	        if (oldParent) {
	            var prevIdx = oldParent.children.indexOf(newElems[idx]);
	            if (prevIdx > -1) {
	                oldParent.children.splice(prevIdx, 1);
	                if (parent === oldParent && spliceIdx > prevIdx) {
	                    spliceArgs[0]--;
	                }
	            }
	        }
	        node.parent = parent;
	        if (node.prev) {
	            node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;
	        }
	        if (node.next) {
	            node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;
	        }
	        node.prev = newElems[idx - 1] || prev;
	        node.next = newElems[idx + 1] || next;
	    }
	    if (prev) {
	        prev.next = newElems[0];
	    }
	    if (next) {
	        next.prev = newElems[newElems.length - 1];
	    }
	    return array.splice.apply(array, spliceArgs);
	}
	/**
	 * Insert every element in the set of matched elements to the end of the target.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * $('<li class="plum">Plum</li>').appendTo('#fruits');
	 * $.html();
	 * //=>  <ul id="fruits">
	 * //      <li class="apple">Apple</li>
	 * //      <li class="orange">Orange</li>
	 * //      <li class="pear">Pear</li>
	 * //      <li class="plum">Plum</li>
	 * //    </ul>
	 * ```
	 *
	 * @param target - Element to append elements to.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/appendTo/}
	 */
	function appendTo(target) {
	    var appendTarget = utils_1.isCheerio(target)
	        ? target
	        : this._make(target, null, this._originalRoot);
	    appendTarget.append(this);
	    return this;
	}
	exports.appendTo = appendTo;
	/**
	 * Insert every element in the set of matched elements to the beginning of the target.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * $('<li class="plum">Plum</li>').prependTo('#fruits');
	 * $.html();
	 * //=>  <ul id="fruits">
	 * //      <li class="plum">Plum</li>
	 * //      <li class="apple">Apple</li>
	 * //      <li class="orange">Orange</li>
	 * //      <li class="pear">Pear</li>
	 * //    </ul>
	 * ```
	 *
	 * @param target - Element to prepend elements to.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/prependTo/}
	 */
	function prependTo(target) {
	    var prependTarget = utils_1.isCheerio(target)
	        ? target
	        : this._make(target, null, this._originalRoot);
	    prependTarget.prepend(this);
	    return this;
	}
	exports.prependTo = prependTo;
	/**
	 * Inserts content as the *last* child of each of the selected elements.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * $('ul').append('<li class="plum">Plum</li>');
	 * $.html();
	 * //=>  <ul id="fruits">
	 * //      <li class="apple">Apple</li>
	 * //      <li class="orange">Orange</li>
	 * //      <li class="pear">Pear</li>
	 * //      <li class="plum">Plum</li>
	 * //    </ul>
	 * ```
	 *
	 * @see {@link https://api.jquery.com/append/}
	 */
	exports.append = _insert(function (dom, children, parent) {
	    uniqueSplice(children, children.length, 0, dom, parent);
	});
	/**
	 * Inserts content as the *first* child of each of the selected elements.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * $('ul').prepend('<li class="plum">Plum</li>');
	 * $.html();
	 * //=>  <ul id="fruits">
	 * //      <li class="plum">Plum</li>
	 * //      <li class="apple">Apple</li>
	 * //      <li class="orange">Orange</li>
	 * //      <li class="pear">Pear</li>
	 * //    </ul>
	 * ```
	 *
	 * @see {@link https://api.jquery.com/prepend/}
	 */
	exports.prepend = _insert(function (dom, children, parent) {
	    uniqueSplice(children, 0, 0, dom, parent);
	});
	function _wrap(insert) {
	    return function (wrapper) {
	        var lastIdx = this.length - 1;
	        var lastParent = this.parents().last();
	        for (var i = 0; i < this.length; i++) {
	            var el = this[i];
	            var wrap_1 = typeof wrapper === 'function'
	                ? wrapper.call(el, i, el)
	                : typeof wrapper === 'string' && !utils_1.isHtml(wrapper)
	                    ? lastParent.find(wrapper).clone()
	                    : wrapper;
	            var wrapperDom = this._makeDomArray(wrap_1, i < lastIdx)[0];
	            if (!wrapperDom || !htmlparser2_1.DomUtils.hasChildren(wrapperDom))
	                continue;
	            var elInsertLocation = wrapperDom;
	            /*
	             * Find the deepest child. Only consider the first tag child of each node
	             * (ignore text); stop if no children are found.
	             */
	            var j = 0;
	            while (j < elInsertLocation.children.length) {
	                var child = elInsertLocation.children[j];
	                if (utils_1.isTag(child)) {
	                    elInsertLocation = child;
	                    j = 0;
	                }
	                else {
	                    j++;
	                }
	            }
	            insert(el, elInsertLocation, [wrapperDom]);
	        }
	        return this;
	    };
	}
	/**
	 * The .wrap() function can take any string or object that could be passed to
	 * the $() factory function to specify a DOM structure. This structure may be
	 * nested several levels deep, but should contain only one inmost element. A
	 * copy of this structure will be wrapped around each of the elements in the set
	 * of matched elements. This method returns the original set of elements for
	 * chaining purposes.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * const redFruit = $('<div class="red-fruit"></div>');
	 * $('.apple').wrap(redFruit);
	 *
	 * //=> <ul id="fruits">
	 * //     <div class="red-fruit">
	 * //      <li class="apple">Apple</li>
	 * //     </div>
	 * //     <li class="orange">Orange</li>
	 * //     <li class="plum">Plum</li>
	 * //   </ul>
	 *
	 * const healthy = $('<div class="healthy"></div>');
	 * $('li').wrap(healthy);
	 *
	 * //=> <ul id="fruits">
	 * //     <div class="healthy">
	 * //       <li class="apple">Apple</li>
	 * //     </div>
	 * //     <div class="healthy">
	 * //       <li class="orange">Orange</li>
	 * //     </div>
	 * //     <div class="healthy">
	 * //        <li class="plum">Plum</li>
	 * //     </div>
	 * //   </ul>
	 * ```
	 *
	 * @param wrapper - The DOM structure to wrap around each element in the selection.
	 * @see {@link https://api.jquery.com/wrap/}
	 */
	exports.wrap = _wrap(function (el, elInsertLocation, wrapperDom) {
	    var parent = el.parent;
	    if (!parent)
	        return;
	    var siblings = parent.children;
	    var index = siblings.indexOf(el);
	    parse_1.update([el], elInsertLocation);
	    /*
	     * The previous operation removed the current element from the `siblings`
	     * array, so the `dom` array can be inserted without removing any
	     * additional elements.
	     */
	    uniqueSplice(siblings, index, 0, wrapperDom, parent);
	});
	/**
	 * The .wrapInner() function can take any string or object that could be passed
	 * to the $() factory function to specify a DOM structure. This structure may be
	 * nested several levels deep, but should contain only one inmost element. The
	 * structure will be wrapped around the content of each of the elements in the
	 * set of matched elements.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * const redFruit = $('<div class="red-fruit"></div>');
	 * $('.apple').wrapInner(redFruit);
	 *
	 * //=> <ul id="fruits">
	 * //     <li class="apple">
	 * //       <div class="red-fruit">Apple</div>
	 * //     </li>
	 * //     <li class="orange">Orange</li>
	 * //     <li class="pear">Pear</li>
	 * //   </ul>
	 *
	 * const healthy = $('<div class="healthy"></div>');
	 * $('li').wrapInner(healthy);
	 *
	 * //=> <ul id="fruits">
	 * //     <li class="apple">
	 * //       <div class="healthy">Apple</div>
	 * //     </li>
	 * //     <li class="orange">
	 * //       <div class="healthy">Orange</div>
	 * //     </li>
	 * //     <li class="pear">
	 * //       <div class="healthy">Pear</div>
	 * //     </li>
	 * //   </ul>
	 * ```
	 *
	 * @param wrapper - The DOM structure to wrap around the content of each element
	 *   in the selection.
	 * @returns The instance itself, for chaining.
	 * @see {@link https://api.jquery.com/wrapInner/}
	 */
	exports.wrapInner = _wrap(function (el, elInsertLocation, wrapperDom) {
	    if (!domhandler_1.hasChildren(el))
	        return;
	    parse_1.update(el.children, elInsertLocation);
	    parse_1.update(wrapperDom, el);
	});
	/**
	 * The .unwrap() function, removes the parents of the set of matched elements
	 * from the DOM, leaving the matched elements in their place.
	 *
	 * @category Manipulation
	 * @example <caption>without selector</caption>
	 *
	 * ```js
	 * const $ = cheerio.load(
	 *   '<div id=test>\n  <div><p>Hello</p></div>\n  <div><p>World</p></div>\n</div>'
	 * );
	 * $('#test p').unwrap();
	 *
	 * //=> <div id=test>
	 * //     <p>Hello</p>
	 * //     <p>World</p>
	 * //   </div>
	 * ```
	 *
	 * @example <caption>with selector</caption>
	 *
	 * ```js
	 * const $ = cheerio.load(
	 *   '<div id=test>\n  <p>Hello</p>\n  <b><p>World</p></b>\n</div>'
	 * );
	 * $('#test p').unwrap('b');
	 *
	 * //=> <div id=test>
	 * //     <p>Hello</p>
	 * //     <p>World</p>
	 * //   </div>
	 * ```
	 *
	 * @param selector - A selector to check the parent element against. If an
	 *   element's parent does not match the selector, the element won't be unwrapped.
	 * @returns The instance itself, for chaining.
	 * @see {@link https://api.jquery.com/unwrap/}
	 */
	function unwrap(selector) {
	    var _this = this;
	    this.parent(selector)
	        .not('body')
	        .each(function (_, el) {
	        _this._make(el).replaceWith(el.children);
	    });
	    return this;
	}
	exports.unwrap = unwrap;
	/**
	 * The .wrapAll() function can take any string or object that could be passed to
	 * the $() function to specify a DOM structure. This structure may be nested
	 * several levels deep, but should contain only one inmost element. The
	 * structure will be wrapped around all of the elements in the set of matched
	 * elements, as a single group.
	 *
	 * @category Manipulation
	 * @example <caption>With markup passed to `wrapAll`</caption>
	 *
	 * ```js
	 * const $ = cheerio.load(
	 *   '<div class="container"><div class="inner">First</div><div class="inner">Second</div></div>'
	 * );
	 * $('.inner').wrapAll("<div class='new'></div>");
	 *
	 * //=> <div class="container">
	 * //     <div class='new'>
	 * //       <div class="inner">First</div>
	 * //       <div class="inner">Second</div>
	 * //     </div>
	 * //   </div>
	 * ```
	 *
	 * @example <caption>With an existing cheerio instance</caption>
	 *
	 * ```js
	 * const $ = cheerio.load(
	 *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'
	 * );
	 * const wrap = $('<div><p><em><b></b></em></p></div>');
	 * $('span').wrapAll(wrap);
	 *
	 * //=> <div>
	 * //     <p>
	 * //       <em>
	 * //         <b>
	 * //           <span>Span 1</span>
	 * //           <span>Span 2</span>
	 * //         </b>
	 * //       </em>
	 * //     </p>
	 * //   </div>
	 * //   <strong>Strong</strong>
	 * ```
	 *
	 * @param wrapper - The DOM structure to wrap around all matched elements in the
	 *   selection.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/wrapAll/}
	 */
	function wrapAll(wrapper) {
	    var el = this[0];
	    if (el) {
	        var wrap_2 = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);
	        // If html is given as wrapper, wrap may contain text elements
	        var elInsertLocation = void 0;
	        for (var i = 0; i < wrap_2.length; i++) {
	            if (wrap_2[i].type === 'tag')
	                elInsertLocation = wrap_2[i];
	        }
	        var j = 0;
	        /*
	         * Find the deepest child. Only consider the first tag child of each node
	         * (ignore text); stop if no children are found.
	         */
	        while (elInsertLocation && j < elInsertLocation.children.length) {
	            var child = elInsertLocation.children[j];
	            if (child.type === 'tag') {
	                elInsertLocation = child;
	                j = 0;
	            }
	            else {
	                j++;
	            }
	        }
	        if (elInsertLocation)
	            this._make(elInsertLocation).append(this);
	    }
	    return this;
	}
	exports.wrapAll = wrapAll;
	/* eslint-disable jsdoc/check-param-names*/
	/**
	 * Insert content next to each element in the set of matched elements.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * $('.apple').after('<li class="plum">Plum</li>');
	 * $.html();
	 * //=>  <ul id="fruits">
	 * //      <li class="apple">Apple</li>
	 * //      <li class="plum">Plum</li>
	 * //      <li class="orange">Orange</li>
	 * //      <li class="pear">Pear</li>
	 * //    </ul>
	 * ```
	 *
	 * @param content - HTML string, DOM element, array of DOM elements or Cheerio
	 *   to insert after each element in the set of matched elements.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/after/}
	 */
	function after() {
	    var _this = this;
	    var elems = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        elems[_i] = arguments[_i];
	    }
	    var lastIdx = this.length - 1;
	    return utils_1.domEach(this, function (i, el) {
	        var parent = el.parent;
	        if (!htmlparser2_1.DomUtils.hasChildren(el) || !parent) {
	            return;
	        }
	        var siblings = parent.children;
	        var index = siblings.indexOf(el);
	        // If not found, move on
	        /* istanbul ignore next */
	        if (index < 0)
	            return;
	        var domSrc = typeof elems[0] === 'function'
	            ? elems[0].call(el, i, static_1.html(el.children))
	            : elems;
	        var dom = _this._makeDomArray(domSrc, i < lastIdx);
	        // Add element after `this` element
	        uniqueSplice(siblings, index + 1, 0, dom, parent);
	    });
	}
	exports.after = after;
	/* eslint-enable jsdoc/check-param-names*/
	/**
	 * Insert every element in the set of matched elements after the target.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * $('<li class="plum">Plum</li>').insertAfter('.apple');
	 * $.html();
	 * //=>  <ul id="fruits">
	 * //      <li class="apple">Apple</li>
	 * //      <li class="plum">Plum</li>
	 * //      <li class="orange">Orange</li>
	 * //      <li class="pear">Pear</li>
	 * //    </ul>
	 * ```
	 *
	 * @param target - Element to insert elements after.
	 * @returns The set of newly inserted elements.
	 * @see {@link https://api.jquery.com/insertAfter/}
	 */
	function insertAfter(target) {
	    var _this = this;
	    if (typeof target === 'string') {
	        target = this._make(target, null, this._originalRoot);
	    }
	    this.remove();
	    var clones = [];
	    utils_1.domEach(this._makeDomArray(target), function (_, el) {
	        var clonedSelf = _this.clone().toArray();
	        var parent = el.parent;
	        if (!parent) {
	            return;
	        }
	        var siblings = parent.children;
	        var index = siblings.indexOf(el);
	        // If not found, move on
	        /* istanbul ignore next */
	        if (index < 0)
	            return;
	        // Add cloned `this` element(s) after target element
	        uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);
	        clones.push.apply(clones, clonedSelf);
	    });
	    return this._make(clones);
	}
	exports.insertAfter = insertAfter;
	/* eslint-disable jsdoc/check-param-names*/
	/**
	 * Insert content previous to each element in the set of matched elements.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * $('.apple').before('<li class="plum">Plum</li>');
	 * $.html();
	 * //=>  <ul id="fruits">
	 * //      <li class="plum">Plum</li>
	 * //      <li class="apple">Apple</li>
	 * //      <li class="orange">Orange</li>
	 * //      <li class="pear">Pear</li>
	 * //    </ul>
	 * ```
	 *
	 * @param content - HTML string, DOM element, array of DOM elements or Cheerio
	 *   to insert before each element in the set of matched elements.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/before/}
	 */
	function before() {
	    var _this = this;
	    var elems = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        elems[_i] = arguments[_i];
	    }
	    var lastIdx = this.length - 1;
	    return utils_1.domEach(this, function (i, el) {
	        var parent = el.parent;
	        if (!htmlparser2_1.DomUtils.hasChildren(el) || !parent) {
	            return;
	        }
	        var siblings = parent.children;
	        var index = siblings.indexOf(el);
	        // If not found, move on
	        /* istanbul ignore next */
	        if (index < 0)
	            return;
	        var domSrc = typeof elems[0] === 'function'
	            ? elems[0].call(el, i, static_1.html(el.children))
	            : elems;
	        var dom = _this._makeDomArray(domSrc, i < lastIdx);
	        // Add element before `el` element
	        uniqueSplice(siblings, index, 0, dom, parent);
	    });
	}
	exports.before = before;
	/* eslint-enable jsdoc/check-param-names*/
	/**
	 * Insert every element in the set of matched elements before the target.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * $('<li class="plum">Plum</li>').insertBefore('.apple');
	 * $.html();
	 * //=>  <ul id="fruits">
	 * //      <li class="plum">Plum</li>
	 * //      <li class="apple">Apple</li>
	 * //      <li class="orange">Orange</li>
	 * //      <li class="pear">Pear</li>
	 * //    </ul>
	 * ```
	 *
	 * @param target - Element to insert elements before.
	 * @returns The set of newly inserted elements.
	 * @see {@link https://api.jquery.com/insertBefore/}
	 */
	function insertBefore(target) {
	    var _this = this;
	    var targetArr = this._make(target, null, this._originalRoot);
	    this.remove();
	    var clones = [];
	    utils_1.domEach(targetArr, function (_, el) {
	        var clonedSelf = _this.clone().toArray();
	        var parent = el.parent;
	        if (!parent) {
	            return;
	        }
	        var siblings = parent.children;
	        var index = siblings.indexOf(el);
	        // If not found, move on
	        /* istanbul ignore next */
	        if (index < 0)
	            return;
	        // Add cloned `this` element(s) after target element
	        uniqueSplice(siblings, index, 0, clonedSelf, parent);
	        clones.push.apply(clones, clonedSelf);
	    });
	    return this._make(clones);
	}
	exports.insertBefore = insertBefore;
	/**
	 * Removes the set of matched elements from the DOM and all their children.
	 * `selector` filters the set of matched elements to be removed.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * $('.pear').remove();
	 * $.html();
	 * //=>  <ul id="fruits">
	 * //      <li class="apple">Apple</li>
	 * //      <li class="orange">Orange</li>
	 * //    </ul>
	 * ```
	 *
	 * @param selector - Optional selector for elements to remove.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/remove/}
	 */
	function remove(selector) {
	    // Filter if we have selector
	    var elems = selector ? this.filter(selector) : this;
	    utils_1.domEach(elems, function (_, el) {
	        htmlparser2_1.DomUtils.removeElement(el);
	        el.prev = el.next = el.parent = null;
	    });
	    return this;
	}
	exports.remove = remove;
	/**
	 * Replaces matched elements with `content`.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * const plum = $('<li class="plum">Plum</li>');
	 * $('.pear').replaceWith(plum);
	 * $.html();
	 * //=> <ul id="fruits">
	 * //     <li class="apple">Apple</li>
	 * //     <li class="orange">Orange</li>
	 * //     <li class="plum">Plum</li>
	 * //   </ul>
	 * ```
	 *
	 * @param content - Replacement for matched elements.
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/replaceWith/}
	 */
	function replaceWith(content) {
	    var _this = this;
	    return utils_1.domEach(this, function (i, el) {
	        var parent = el.parent;
	        if (!parent) {
	            return;
	        }
	        var siblings = parent.children;
	        var cont = typeof content === 'function' ? content.call(el, i, el) : content;
	        var dom = _this._makeDomArray(cont);
	        /*
	         * In the case that `dom` contains nodes that already exist in other
	         * structures, ensure those nodes are properly removed.
	         */
	        parse_1.update(dom, null);
	        var index = siblings.indexOf(el);
	        // Completely remove old element
	        uniqueSplice(siblings, index, 1, dom, parent);
	        if (!dom.includes(el)) {
	            el.parent = el.prev = el.next = null;
	        }
	    });
	}
	exports.replaceWith = replaceWith;
	/**
	 * Empties an element, removing all its children.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * $('ul').empty();
	 * $.html();
	 * //=>  <ul id="fruits"></ul>
	 * ```
	 *
	 * @returns The instance itself.
	 * @see {@link https://api.jquery.com/empty/}
	 */
	function empty() {
	    return utils_1.domEach(this, function (_, el) {
	        if (!htmlparser2_1.DomUtils.hasChildren(el))
	            return;
	        el.children.forEach(function (child) {
	            child.next = child.prev = child.parent = null;
	        });
	        el.children.length = 0;
	    });
	}
	exports.empty = empty;
	function html(str) {
	    if (str === undefined) {
	        var el = this[0];
	        if (!el || !htmlparser2_1.DomUtils.hasChildren(el))
	            return null;
	        return static_1.html(el.children, this.options);
	    }
	    // Keep main options unchanged
	    var opts = tslib_1.__assign(tslib_1.__assign({}, this.options), { context: null });
	    return utils_1.domEach(this, function (_, el) {
	        if (!htmlparser2_1.DomUtils.hasChildren(el))
	            return;
	        el.children.forEach(function (child) {
	            child.next = child.prev = child.parent = null;
	        });
	        opts.context = el;
	        var content = utils_1.isCheerio(str)
	            ? str.clone().get()
	            : parse_1.default("" + str, opts, false).children;
	        parse_1.update(content, el);
	    });
	}
	exports.html = html;
	/**
	 * Turns the collection to a string. Alias for `.html()`.
	 *
	 * @category Manipulation
	 * @returns The rendered document.
	 */
	function toString() {
	    return static_1.html(this, this.options);
	}
	exports.toString = toString;
	function text(str) {
	    var _this = this;
	    // If `str` is undefined, act as a "getter"
	    if (str === undefined) {
	        return static_1.text(this);
	    }
	    if (typeof str === 'function') {
	        // Function support
	        return utils_1.domEach(this, function (i, el) {
	            text.call(_this._make(el), str.call(el, i, static_1.text([el])));
	        });
	    }
	    // Append text node to each selected elements
	    return utils_1.domEach(this, function (_, el) {
	        if (!htmlparser2_1.DomUtils.hasChildren(el))
	            return;
	        el.children.forEach(function (child) {
	            child.next = child.prev = child.parent = null;
	        });
	        var textNode = new domhandler_2.Text(str);
	        parse_1.update(textNode, el);
	    });
	}
	exports.text = text;
	/**
	 * Clone the cheerio object.
	 *
	 * @category Manipulation
	 * @example
	 *
	 * ```js
	 * const moreFruit = $('#fruits').clone();
	 * ```
	 *
	 * @returns The cloned object.
	 * @see {@link https://api.jquery.com/clone/}
	 */
	function clone() {
	    return this._make(utils_1.cloneDom(this.get()));
	}
	exports.clone = clone;


/***/ }),
/* 928 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	/**
	 * Methods for traversing the DOM structure.
	 *
	 * @module cheerio/traversing
	 */
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.addBack = exports.add = exports.end = exports.slice = exports.index = exports.get = exports.eq = exports.last = exports.first = exports.has = exports.not = exports.filter = exports.map = exports.each = exports.contents = exports.children = exports.siblings = exports.prevUntil = exports.prevAll = exports.prev = exports.nextUntil = exports.nextAll = exports.next = exports.closest = exports.parentsUntil = exports.parents = exports.parent = exports.find = void 0;
	var tslib_1 = __webpack_require__(83);
	var domhandler_1 = __webpack_require__(77);
	var select = tslib_1.__importStar(__webpack_require__(406));
	var utils_1 = __webpack_require__(109);
	var htmlparser2_1 = __webpack_require__(68);
	var uniqueSort = htmlparser2_1.DomUtils.uniqueSort;
	var reSiblingSelector = /^\s*[~+]/;
	/**
	 * Get the descendants of each element in the current set of matched elements,
	 * filtered by a selector, jQuery object, or element.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('#fruits').find('li').length;
	 * //=> 3
	 * $('#fruits').find($('.apple')).length;
	 * //=> 1
	 * ```
	 *
	 * @param selectorOrHaystack - Element to look for.
	 * @returns The found elements.
	 * @see {@link https://api.jquery.com/find/}
	 */
	function find(selectorOrHaystack) {
	    if (!selectorOrHaystack) {
	        return this._make([]);
	    }
	    var context = this.toArray();
	    if (typeof selectorOrHaystack !== 'string') {
	        var contains_1 = this.constructor.contains;
	        var haystack = utils_1.isCheerio(selectorOrHaystack)
	            ? selectorOrHaystack.get()
	            : [selectorOrHaystack];
	        return this._make(haystack.filter(function (elem) { return context.some(function (node) { return contains_1(node, elem); }); }));
	    }
	    var elems = reSiblingSelector.test(selectorOrHaystack)
	        ? context
	        : context.reduce(function (newElems, elem) {
	            return domhandler_1.hasChildren(elem)
	                ? newElems.concat(elem.children.filter(utils_1.isTag))
	                : newElems;
	        }, []);
	    var options = { context: context, xmlMode: this.options.xmlMode };
	    return this._make(select.select(selectorOrHaystack, elems, options));
	}
	exports.find = find;
	/**
	 * Get the parent of each element in the current set of matched elements,
	 * optionally filtered by a selector.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.pear').parent().attr('id');
	 * //=> fruits
	 * ```
	 *
	 * @param selector - If specified filter for parent.
	 * @returns The parents.
	 * @see {@link https://api.jquery.com/parent/}
	 */
	function parent(selector) {
	    var set = [];
	    utils_1.domEach(this, function (_, elem) {
	        var parentElem = elem.parent;
	        if (parentElem &&
	            parentElem.type !== 'root' &&
	            !set.includes(parentElem)) {
	            set.push(parentElem);
	        }
	    });
	    return selector ? filter.call(set, selector, this) : this._make(set);
	}
	exports.parent = parent;
	/**
	 * Get a set of parents filtered by `selector` of each element in the current
	 * set of match elements.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.orange').parents().length;
	 * //=> 2
	 * $('.orange').parents('#fruits').length;
	 * //=> 1
	 * ```
	 *
	 * @param selector - If specified filter for parents.
	 * @returns The parents.
	 * @see {@link https://api.jquery.com/parents/}
	 */
	function parents(selector) {
	    var _this = this;
	    var parentNodes = [];
	    /*
	     * When multiple DOM elements are in the original set, the resulting set will
	     * be in *reverse* order of the original elements as well, with duplicates
	     * removed.
	     */
	    this.get()
	        .reverse()
	        .forEach(function (elem) {
	        return traverseParents(_this, elem.parent, selector, Infinity).forEach(function (node) {
	            // We know these must be `Element`s, as we filter out root nodes.
	            if (!parentNodes.includes(node)) {
	                parentNodes.push(node);
	            }
	        });
	    });
	    return this._make(parentNodes);
	}
	exports.parents = parents;
	/**
	 * Get the ancestors of each element in the current set of matched elements, up
	 * to but not including the element matched by the selector, DOM node, or cheerio object.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.orange').parentsUntil('#food').length;
	 * //=> 1
	 * ```
	 *
	 * @param selector - Selector for element to stop at.
	 * @param filterBy - Optional filter for parents.
	 * @returns The parents.
	 * @see {@link https://api.jquery.com/parentsUntil/}
	 */
	function parentsUntil(selector, filterBy) {
	    var parentNodes = [];
	    var untilNode;
	    var untilNodes;
	    if (typeof selector === 'string') {
	        untilNodes = this.parents(selector).toArray();
	    }
	    else if (selector && utils_1.isCheerio(selector)) {
	        untilNodes = selector.toArray();
	    }
	    else if (selector) {
	        untilNode = selector;
	    }
	    /*
	     * When multiple DOM elements are in the original set, the resulting set will
	     * be in *reverse* order of the original elements as well, with duplicates
	     * removed.
	     */
	    this.toArray()
	        .reverse()
	        .forEach(function (elem) {
	        while (elem.parent) {
	            elem = elem.parent;
	            if ((untilNode && elem !== untilNode) ||
	                (untilNodes && !untilNodes.includes(elem)) ||
	                (!untilNode && !untilNodes)) {
	                if (utils_1.isTag(elem) && !parentNodes.includes(elem)) {
	                    parentNodes.push(elem);
	                }
	            }
	            else {
	                break;
	            }
	        }
	    }, this);
	    return filterBy
	        ? filter.call(parentNodes, filterBy, this)
	        : this._make(parentNodes);
	}
	exports.parentsUntil = parentsUntil;
	/**
	 * For each element in the set, get the first element that matches the selector
	 * by testing the element itself and traversing up through its ancestors in the DOM tree.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.orange').closest();
	 * //=> []
	 *
	 * $('.orange').closest('.apple');
	 * // => []
	 *
	 * $('.orange').closest('li');
	 * //=> [<li class="orange">Orange</li>]
	 *
	 * $('.orange').closest('#fruits');
	 * //=> [<ul id="fruits"> ... </ul>]
	 * ```
	 *
	 * @param selector - Selector for the element to find.
	 * @returns The closest nodes.
	 * @see {@link https://api.jquery.com/closest/}
	 */
	function closest(selector) {
	    var _this = this;
	    var set = [];
	    if (!selector) {
	        return this._make(set);
	    }
	    utils_1.domEach(this, function (_, elem) {
	        var closestElem = traverseParents(_this, elem, selector, 1)[0];
	        // Do not add duplicate elements to the set
	        if (closestElem && !set.includes(closestElem)) {
	            set.push(closestElem);
	        }
	    });
	    return this._make(set);
	}
	exports.closest = closest;
	/**
	 * Gets the next sibling of the first selected element, optionally filtered by a selector.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.apple').next().hasClass('orange');
	 * //=> true
	 * ```
	 *
	 * @param selector - If specified filter for sibling.
	 * @returns The next nodes.
	 * @see {@link https://api.jquery.com/next/}
	 */
	function next(selector) {
	    var elems = [];
	    utils_1.domEach(this, function (_, elem) {
	        while (elem.next) {
	            elem = elem.next;
	            if (utils_1.isTag(elem)) {
	                elems.push(elem);
	                return;
	            }
	        }
	    });
	    return selector ? filter.call(elems, selector, this) : this._make(elems);
	}
	exports.next = next;
	/**
	 * Gets all the following siblings of the first selected element, optionally
	 * filtered by a selector.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.apple').nextAll();
	 * //=> [<li class="orange">Orange</li>, <li class="pear">Pear</li>]
	 * $('.apple').nextAll('.orange');
	 * //=> [<li class="orange">Orange</li>]
	 * ```
	 *
	 * @param selector - If specified filter for siblings.
	 * @returns The next nodes.
	 * @see {@link https://api.jquery.com/nextAll/}
	 */
	function nextAll(selector) {
	    var elems = [];
	    utils_1.domEach(this, function (_, elem) {
	        while (elem.next) {
	            elem = elem.next;
	            if (utils_1.isTag(elem) && !elems.includes(elem)) {
	                elems.push(elem);
	            }
	        }
	    });
	    return selector ? filter.call(elems, selector, this) : this._make(elems);
	}
	exports.nextAll = nextAll;
	/**
	 * Gets all the following siblings up to but not including the element matched
	 * by the selector, optionally filtered by another selector.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.apple').nextUntil('.pear');
	 * //=> [<li class="orange">Orange</li>]
	 * ```
	 *
	 * @param selector - Selector for element to stop at.
	 * @param filterSelector - If specified filter for siblings.
	 * @returns The next nodes.
	 * @see {@link https://api.jquery.com/nextUntil/}
	 */
	function nextUntil(selector, filterSelector) {
	    var elems = [];
	    var untilNode;
	    var untilNodes;
	    if (typeof selector === 'string') {
	        untilNodes = this.nextAll(selector).toArray();
	    }
	    else if (selector && utils_1.isCheerio(selector)) {
	        untilNodes = selector.get();
	    }
	    else if (selector) {
	        untilNode = selector;
	    }
	    utils_1.domEach(this, function (_, elem) {
	        while (elem.next) {
	            elem = elem.next;
	            if ((untilNode && elem !== untilNode) ||
	                (untilNodes && !untilNodes.includes(elem)) ||
	                (!untilNode && !untilNodes)) {
	                if (utils_1.isTag(elem) && !elems.includes(elem)) {
	                    elems.push(elem);
	                }
	            }
	            else {
	                break;
	            }
	        }
	    });
	    return filterSelector
	        ? filter.call(elems, filterSelector, this)
	        : this._make(elems);
	}
	exports.nextUntil = nextUntil;
	/**
	 * Gets the previous sibling of the first selected element optionally filtered
	 * by a selector.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.orange').prev().hasClass('apple');
	 * //=> true
	 * ```
	 *
	 * @param selector - If specified filter for siblings.
	 * @returns The previous nodes.
	 * @see {@link https://api.jquery.com/prev/}
	 */
	function prev(selector) {
	    var elems = [];
	    utils_1.domEach(this, function (_, elem) {
	        while (elem.prev) {
	            elem = elem.prev;
	            if (utils_1.isTag(elem)) {
	                elems.push(elem);
	                return;
	            }
	        }
	    });
	    return selector ? filter.call(elems, selector, this) : this._make(elems);
	}
	exports.prev = prev;
	/**
	 * Gets all the preceding siblings of the first selected element, optionally
	 * filtered by a selector.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.pear').prevAll();
	 * //=> [<li class="orange">Orange</li>, <li class="apple">Apple</li>]
	 *
	 * $('.pear').prevAll('.orange');
	 * //=> [<li class="orange">Orange</li>]
	 * ```
	 *
	 * @param selector - If specified filter for siblings.
	 * @returns The previous nodes.
	 * @see {@link https://api.jquery.com/prevAll/}
	 */
	function prevAll(selector) {
	    var elems = [];
	    utils_1.domEach(this, function (_, elem) {
	        while (elem.prev) {
	            elem = elem.prev;
	            if (utils_1.isTag(elem) && !elems.includes(elem)) {
	                elems.push(elem);
	            }
	        }
	    });
	    return selector ? filter.call(elems, selector, this) : this._make(elems);
	}
	exports.prevAll = prevAll;
	/**
	 * Gets all the preceding siblings up to but not including the element matched
	 * by the selector, optionally filtered by another selector.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.pear').prevUntil('.apple');
	 * //=> [<li class="orange">Orange</li>]
	 * ```
	 *
	 * @param selector - Selector for element to stop at.
	 * @param filterSelector - If specified filter for siblings.
	 * @returns The previous nodes.
	 * @see {@link https://api.jquery.com/prevUntil/}
	 */
	function prevUntil(selector, filterSelector) {
	    var elems = [];
	    var untilNode;
	    var untilNodes;
	    if (typeof selector === 'string') {
	        untilNodes = this.prevAll(selector).toArray();
	    }
	    else if (selector && utils_1.isCheerio(selector)) {
	        untilNodes = selector.get();
	    }
	    else if (selector) {
	        untilNode = selector;
	    }
	    utils_1.domEach(this, function (_, elem) {
	        while (elem.prev) {
	            elem = elem.prev;
	            if ((untilNode && elem !== untilNode) ||
	                (untilNodes && !untilNodes.includes(elem)) ||
	                (!untilNode && !untilNodes)) {
	                if (utils_1.isTag(elem) && !elems.includes(elem)) {
	                    elems.push(elem);
	                }
	            }
	            else {
	                break;
	            }
	        }
	    });
	    return filterSelector
	        ? filter.call(elems, filterSelector, this)
	        : this._make(elems);
	}
	exports.prevUntil = prevUntil;
	/**
	 * Get the siblings of each element (excluding the element) in the set of
	 * matched elements, optionally filtered by a selector.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.pear').siblings().length;
	 * //=> 2
	 *
	 * $('.pear').siblings('.orange').length;
	 * //=> 1
	 * ```
	 *
	 * @param selector - If specified filter for siblings.
	 * @returns The siblings.
	 * @see {@link https://api.jquery.com/siblings/}
	 */
	function siblings(selector) {
	    var _this = this;
	    // TODO Still get siblings if `parent` is null; see DomUtils' `getSiblings`.
	    var parent = this.parent();
	    var elems = parent
	        .children()
	        .toArray()
	        // TODO: This removes all elements in the selection. Note that they could be added here, if siblings are part of the selection.
	        .filter(function (elem) { return !_this.is(elem); });
	    return selector ? filter.call(elems, selector, this) : this._make(elems);
	}
	exports.siblings = siblings;
	/**
	 * Gets the children of the first selected element.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('#fruits').children().length;
	 * //=> 3
	 *
	 * $('#fruits').children('.pear').text();
	 * //=> Pear
	 * ```
	 *
	 * @param selector - If specified filter for children.
	 * @returns The children.
	 * @see {@link https://api.jquery.com/children/}
	 */
	function children(selector) {
	    var elems = this.toArray().reduce(function (newElems, elem) {
	        return domhandler_1.hasChildren(elem)
	            ? newElems.concat(elem.children.filter(utils_1.isTag))
	            : newElems;
	    }, []);
	    return selector ? filter.call(elems, selector, this) : this._make(elems);
	}
	exports.children = children;
	/**
	 * Gets the children of each element in the set of matched elements, including
	 * text and comment nodes.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('#fruits').contents().length;
	 * //=> 3
	 * ```
	 *
	 * @returns The children.
	 * @see {@link https://api.jquery.com/contents/}
	 */
	function contents() {
	    var elems = this.toArray().reduce(function (newElems, elem) {
	        return domhandler_1.hasChildren(elem) ? newElems.concat(elem.children) : newElems;
	    }, []);
	    return this._make(elems);
	}
	exports.contents = contents;
	/**
	 * Iterates over a cheerio object, executing a function for each matched
	 * element. When the callback is fired, the function is fired in the context of
	 * the DOM element, so `this` refers to the current element, which is equivalent
	 * to the function parameter `element`. To break out of the `each` loop early,
	 * return with `false`.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * const fruits = [];
	 *
	 * $('li').each(function (i, elem) {
	 *   fruits[i] = $(this).text();
	 * });
	 *
	 * fruits.join(', ');
	 * //=> Apple, Orange, Pear
	 * ```
	 *
	 * @param fn - Function to execute.
	 * @returns The instance itself, useful for chaining.
	 * @see {@link https://api.jquery.com/each/}
	 */
	function each(fn) {
	    var i = 0;
	    var len = this.length;
	    while (i < len && fn.call(this[i], i, this[i]) !== false)
	        ++i;
	    return this;
	}
	exports.each = each;
	/**
	 * Pass each element in the current matched set through a function, producing a
	 * new Cheerio object containing the return values. The function can return an
	 * individual data item or an array of data items to be inserted into the
	 * resulting set. If an array is returned, the elements inside the array are
	 * inserted into the set. If the function returns null or undefined, no element
	 * will be inserted.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('li')
	 *   .map(function (i, el) {
	 *     // this === el
	 *     return $(this).text();
	 *   })
	 *   .toArray()
	 *   .join(' ');
	 * //=> "apple orange pear"
	 * ```
	 *
	 * @param fn - Function to execute.
	 * @returns The mapped elements, wrapped in a Cheerio collection.
	 * @see {@link https://api.jquery.com/map/}
	 */
	function map(fn) {
	    var elems = [];
	    for (var i = 0; i < this.length; i++) {
	        var el = this[i];
	        var val = fn.call(el, i, el);
	        if (val != null) {
	            elems = elems.concat(val);
	        }
	    }
	    return this._make(elems);
	}
	exports.map = map;
	function getFilterFn(match) {
	    if (typeof match === 'function') {
	        return function (el, i) {
	            return match.call(el, i, el);
	        };
	    }
	    if (utils_1.isCheerio(match)) {
	        return match.is.bind(match);
	    }
	    return function (el) {
	        return match === el;
	    };
	}
	/**
	 * Iterates over a cheerio object, reducing the set of selector elements to
	 * those that match the selector or pass the function's test. When a Cheerio
	 * selection is specified, return only the elements contained in that selection.
	 * When an element is specified, return only that element (if it is contained in
	 * the original selection). If using the function method, the function is
	 * executed in the context of the selected element, so `this` refers to the
	 * current element.
	 *
	 * @category Traversing
	 * @example <caption>Selector</caption>
	 *
	 * ```js
	 * $('li').filter('.orange').attr('class');
	 * //=> orange
	 * ```
	 *
	 * @example <caption>Function</caption>
	 *
	 * ```js
	 * $('li')
	 *   .filter(function (i, el) {
	 *     // this === el
	 *     return $(this).attr('class') === 'orange';
	 *   })
	 *   .attr('class'); //=> orange
	 * ```
	 *
	 * @param match - Value to look for, following the rules above.
	 * @param container - Optional node to filter instead.
	 * @returns The filtered collection.
	 * @see {@link https://api.jquery.com/filter/}
	 */
	function filter(match, container) {
	    if (container === void 0) { container = this; }
	    if (!utils_1.isCheerio(container)) {
	        throw new Error('Not able to create a Cheerio instance.');
	    }
	    var nodes = utils_1.isCheerio(this) ? this.toArray() : this;
	    var elements = nodes.filter(utils_1.isTag);
	    elements =
	        typeof match === 'string'
	            ? select.filter(match, elements, container.options)
	            : elements.filter(getFilterFn(match));
	    return container._make(elements);
	}
	exports.filter = filter;
	/**
	 * Remove elements from the set of matched elements. Given a Cheerio object that
	 * represents a set of DOM elements, the `.not()` method constructs a new
	 * Cheerio object from a subset of the matching elements. The supplied selector
	 * is tested against each element; the elements that don't match the selector
	 * will be included in the result.
	 *
	 * The `.not()` method can take a function as its argument in the same way that
	 * `.filter()` does. Elements for which the function returns `true` are excluded
	 * from the filtered set; all other elements are included.
	 *
	 * @category Traversing
	 * @example <caption>Selector</caption>
	 *
	 * ```js
	 * $('li').not('.apple').length;
	 * //=> 2
	 * ```
	 *
	 * @example <caption>Function</caption>
	 *
	 * ```js
	 * $('li').not(function (i, el) {
	 *   // this === el
	 *   return $(this).attr('class') === 'orange';
	 * }).length; //=> 2
	 * ```
	 *
	 * @param match - Value to look for, following the rules above.
	 * @param container - Optional node to filter instead.
	 * @returns The filtered collection.
	 * @see {@link https://api.jquery.com/not/}
	 */
	function not(match, container) {
	    if (container === void 0) { container = this; }
	    if (!utils_1.isCheerio(container)) {
	        throw new Error('Not able to create a Cheerio instance.');
	    }
	    var nodes = utils_1.isCheerio(this) ? this.toArray() : this;
	    if (typeof match === 'string') {
	        var elements = nodes.filter(utils_1.isTag);
	        var matches_1 = new Set(select.filter(match, elements, container.options));
	        nodes = nodes.filter(function (el) { return !matches_1.has(el); });
	    }
	    else {
	        var filterFn_1 = getFilterFn(match);
	        nodes = nodes.filter(function (el, i) { return !filterFn_1(el, i); });
	    }
	    return container._make(nodes);
	}
	exports.not = not;
	/**
	 * Filters the set of matched elements to only those which have the given DOM
	 * element as a descendant or which have a descendant that matches the given
	 * selector. Equivalent to `.filter(':has(selector)')`.
	 *
	 * @category Traversing
	 * @example <caption>Selector</caption>
	 *
	 * ```js
	 * $('ul').has('.pear').attr('id');
	 * //=> fruits
	 * ```
	 *
	 * @example <caption>Element</caption>
	 *
	 * ```js
	 * $('ul').has($('.pear')[0]).attr('id');
	 * //=> fruits
	 * ```
	 *
	 * @param selectorOrHaystack - Element to look for.
	 * @returns The filtered collection.
	 * @see {@link https://api.jquery.com/has/}
	 */
	function has(selectorOrHaystack) {
	    var _this = this;
	    return filter.call(this, typeof selectorOrHaystack === 'string'
	        ? // Using the `:has` selector here short-circuits searches.
	            ":has(" + selectorOrHaystack + ")"
	        : function (_, el) { return _this._make(el).find(selectorOrHaystack).length > 0; });
	}
	exports.has = has;
	/**
	 * Will select the first element of a cheerio object.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('#fruits').children().first().text();
	 * //=> Apple
	 * ```
	 *
	 * @returns The first element.
	 * @see {@link https://api.jquery.com/first/}
	 */
	function first() {
	    return this.length > 1 ? this._make(this[0]) : this;
	}
	exports.first = first;
	/**
	 * Will select the last element of a cheerio object.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('#fruits').children().last().text();
	 * //=> Pear
	 * ```
	 *
	 * @returns The last element.
	 * @see {@link https://api.jquery.com/last/}
	 */
	function last() {
	    return this.length > 0 ? this._make(this[this.length - 1]) : this;
	}
	exports.last = last;
	/**
	 * Reduce the set of matched elements to the one at the specified index. Use
	 * `.eq(-i)` to count backwards from the last selected element.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('li').eq(0).text();
	 * //=> Apple
	 *
	 * $('li').eq(-1).text();
	 * //=> Pear
	 * ```
	 *
	 * @param i - Index of the element to select.
	 * @returns The element at the `i`th position.
	 * @see {@link https://api.jquery.com/eq/}
	 */
	function eq(i) {
	    var _a;
	    i = +i;
	    // Use the first identity optimization if possible
	    if (i === 0 && this.length <= 1)
	        return this;
	    if (i < 0)
	        i = this.length + i;
	    return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);
	}
	exports.eq = eq;
	function get(i) {
	    if (i == null) {
	        return Array.prototype.slice.call(this);
	    }
	    return this[i < 0 ? this.length + i : i];
	}
	exports.get = get;
	/**
	 * Search for a given element from among the matched elements.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.pear').index();
	 * //=> 2 $('.orange').index('li');
	 * //=> 1
	 * $('.apple').index($('#fruit, li'));
	 * //=> 1
	 * ```
	 *
	 * @param selectorOrNeedle - Element to look for.
	 * @returns The index of the element.
	 * @see {@link https://api.jquery.com/index/}
	 */
	function index(selectorOrNeedle) {
	    var $haystack;
	    var needle;
	    if (selectorOrNeedle == null) {
	        $haystack = this.parent().children();
	        needle = this[0];
	    }
	    else if (typeof selectorOrNeedle === 'string') {
	        $haystack = this._make(selectorOrNeedle);
	        needle = this[0];
	    }
	    else {
	        $haystack = this;
	        needle = utils_1.isCheerio(selectorOrNeedle)
	            ? selectorOrNeedle[0]
	            : selectorOrNeedle;
	    }
	    return $haystack.get().indexOf(needle);
	}
	exports.index = index;
	/**
	 * Gets the elements matching the specified range (0-based position).
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('li').slice(1).eq(0).text();
	 * //=> 'Orange'
	 *
	 * $('li').slice(1, 2).length;
	 * //=> 1
	 * ```
	 *
	 * @param start - An position at which the elements begin to be selected. If
	 *   negative, it indicates an offset from the end of the set.
	 * @param end - An position at which the elements stop being selected. If
	 *   negative, it indicates an offset from the end of the set. If omitted, the
	 *   range continues until the end of the set.
	 * @returns The elements matching the specified range.
	 * @see {@link https://api.jquery.com/slice/}
	 */
	function slice(start, end) {
	    return this._make(Array.prototype.slice.call(this, start, end));
	}
	exports.slice = slice;
	function traverseParents(self, elem, selector, limit) {
	    var elems = [];
	    while (elem && elems.length < limit && elem.type !== 'root') {
	        if (!selector || filter.call([elem], selector, self).length) {
	            elems.push(elem);
	        }
	        elem = elem.parent;
	    }
	    return elems;
	}
	/**
	 * End the most recent filtering operation in the current chain and return the
	 * set of matched elements to its previous state.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('li').eq(0).end().length;
	 * //=> 3
	 * ```
	 *
	 * @returns The previous state of the set of matched elements.
	 * @see {@link https://api.jquery.com/end/}
	 */
	function end() {
	    var _a;
	    return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);
	}
	exports.end = end;
	/**
	 * Add elements to the set of matched elements.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('.apple').add('.orange').length;
	 * //=> 2
	 * ```
	 *
	 * @param other - Elements to add.
	 * @param context - Optionally the context of the new selection.
	 * @returns The combined set.
	 * @see {@link https://api.jquery.com/add/}
	 */
	function add(other, context) {
	    var selection = this._make(other, context);
	    var contents = uniqueSort(tslib_1.__spreadArray(tslib_1.__spreadArray([], this.get()), selection.get()));
	    return this._make(contents);
	}
	exports.add = add;
	/**
	 * Add the previous set of elements on the stack to the current set, optionally
	 * filtered by a selector.
	 *
	 * @category Traversing
	 * @example
	 *
	 * ```js
	 * $('li').eq(0).addBack('.orange').length;
	 * //=> 2
	 * ```
	 *
	 * @param selector - Selector for the elements to add.
	 * @returns The combined set.
	 * @see {@link https://api.jquery.com/addBack/}
	 */
	function addBack(selector) {
	    return this.prevObject
	        ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject)
	        : this;
	}
	exports.addBack = addBack;


/***/ }),
/* 929 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.root = exports.parseHTML = exports.merge = exports.contains = void 0;
	var tslib_1 = __webpack_require__(83);
	var cheerio_1 = tslib_1.__importDefault(__webpack_require__(408));
	/**
	 * The default cheerio instance.
	 *
	 * @deprecated Use the function returned by `load` instead.
	 */
	exports.default = cheerio_1.default;
	/**
	 * Types used in signatures of Cheerio methods.
	 *
	 * @category Cheerio
	 */
	tslib_1.__exportStar(__webpack_require__(930), exports);
	tslib_1.__exportStar(__webpack_require__(409), exports);
	var load_1 = __webpack_require__(409);
	// We add this here, to avoid a cyclic depenency
	cheerio_1.default.load = load_1.load;
	var staticMethods = tslib_1.__importStar(__webpack_require__(139));
	/**
	 * In order to promote consistency with the jQuery library, users are encouraged
	 * to instead use the static method of the same name.
	 *
	 * @deprecated
	 * @example
	 *
	 * ```js
	 * const $ = cheerio.load('<div><p></p></div>');
	 *
	 * $.contains($('div').get(0), $('p').get(0));
	 * //=> true
	 *
	 * $.contains($('p').get(0), $('div').get(0));
	 * //=> false
	 * ```
	 *
	 * @returns {boolean}
	 */
	exports.contains = staticMethods.contains;
	/**
	 * In order to promote consistency with the jQuery library, users are encouraged
	 * to instead use the static method of the same name.
	 *
	 * @deprecated
	 * @example
	 *
	 * ```js
	 * const $ = cheerio.load('');
	 *
	 * $.merge([1, 2], [3, 4]);
	 * //=> [1, 2, 3, 4]
	 * ```
	 */
	exports.merge = staticMethods.merge;
	/**
	 * In order to promote consistency with the jQuery library, users are encouraged
	 * to instead use the static method of the same name as it is defined on the
	 * "loaded" Cheerio factory function.
	 *
	 * @deprecated See {@link static/parseHTML}.
	 * @example
	 *
	 * ```js
	 * const $ = cheerio.load('');
	 * $.parseHTML('<b>markup</b>');
	 * ```
	 */
	exports.parseHTML = staticMethods.parseHTML;
	/**
	 * Users seeking to access the top-level element of a parsed document should
	 * instead use the `root` static method of a "loaded" Cheerio function.
	 *
	 * @deprecated
	 * @example
	 *
	 * ```js
	 * const $ = cheerio.load('');
	 * $.root();
	 * ```
	 */
	exports.root = staticMethods.root;


/***/ }),
/* 930 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 931 */
/***/ (function(module, exports, __webpack_require__) {

	var conversions = __webpack_require__(412);
	var route = __webpack_require__(932);
	
	var convert = {};
	
	var models = Object.keys(conversions);
	
	function wrapRaw(fn) {
		var wrappedFn = function (args) {
			if (args === undefined || args === null) {
				return args;
			}
	
			if (arguments.length > 1) {
				args = Array.prototype.slice.call(arguments);
			}
	
			return fn(args);
		};
	
		// preserve .conversion property if there is one
		if ('conversion' in fn) {
			wrappedFn.conversion = fn.conversion;
		}
	
		return wrappedFn;
	}
	
	function wrapRounded(fn) {
		var wrappedFn = function (args) {
			if (args === undefined || args === null) {
				return args;
			}
	
			if (arguments.length > 1) {
				args = Array.prototype.slice.call(arguments);
			}
	
			var result = fn(args);
	
			// we're assuming the result is an array here.
			// see notice in conversions.js; don't use box types
			// in conversion functions.
			if (typeof result === 'object') {
				for (var len = result.length, i = 0; i < len; i++) {
					result[i] = Math.round(result[i]);
				}
			}
	
			return result;
		};
	
		// preserve .conversion property if there is one
		if ('conversion' in fn) {
			wrappedFn.conversion = fn.conversion;
		}
	
		return wrappedFn;
	}
	
	models.forEach(function (fromModel) {
		convert[fromModel] = {};
	
		Object.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});
		Object.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});
	
		var routes = route(fromModel);
		var routeModels = Object.keys(routes);
	
		routeModels.forEach(function (toModel) {
			var fn = routes[toModel];
	
			convert[fromModel][toModel] = wrapRounded(fn);
			convert[fromModel][toModel].raw = wrapRaw(fn);
		});
	});
	
	module.exports = convert;


/***/ }),
/* 932 */
/***/ (function(module, exports, __webpack_require__) {

	var conversions = __webpack_require__(412);
	
	/*
		this function routes a model to all other models.
	
		all functions that are routed have a property `.conversion` attached
		to the returned synthetic function. This property is an array
		of strings, each with the steps in between the 'from' and 'to'
		color models (inclusive).
	
		conversions that are not possible simply are not included.
	*/
	
	function buildGraph() {
		var graph = {};
		// https://jsperf.com/object-keys-vs-for-in-with-closure/3
		var models = Object.keys(conversions);
	
		for (var len = models.length, i = 0; i < len; i++) {
			graph[models[i]] = {
				// http://jsperf.com/1-vs-infinity
				// micro-opt, but this is simple.
				distance: -1,
				parent: null
			};
		}
	
		return graph;
	}
	
	// https://en.wikipedia.org/wiki/Breadth-first_search
	function deriveBFS(fromModel) {
		var graph = buildGraph();
		var queue = [fromModel]; // unshift -> queue -> pop
	
		graph[fromModel].distance = 0;
	
		while (queue.length) {
			var current = queue.pop();
			var adjacents = Object.keys(conversions[current]);
	
			for (var len = adjacents.length, i = 0; i < len; i++) {
				var adjacent = adjacents[i];
				var node = graph[adjacent];
	
				if (node.distance === -1) {
					node.distance = graph[current].distance + 1;
					node.parent = current;
					queue.unshift(adjacent);
				}
			}
		}
	
		return graph;
	}
	
	function link(from, to) {
		return function (args) {
			return to(from(args));
		};
	}
	
	function wrapConversion(toModel, graph) {
		var path = [graph[toModel].parent, toModel];
		var fn = conversions[graph[toModel].parent][toModel];
	
		var cur = graph[toModel].parent;
		while (graph[cur].parent) {
			path.unshift(graph[cur].parent);
			fn = link(conversions[graph[cur].parent][cur], fn);
			cur = graph[cur].parent;
		}
	
		fn.conversion = path;
		return fn;
	}
	
	module.exports = function (fromModel) {
		var graph = deriveBFS(fromModel);
		var conversion = {};
	
		var models = Object.keys(graph);
		for (var len = models.length, i = 0; i < len; i++) {
			var toModel = models[i];
			var node = graph[toModel];
	
			if (node.parent === null) {
				// no possible conversion, or this node is the source model.
				continue;
			}
	
			conversion[toModel] = wrapConversion(toModel, graph);
		}
	
		return conversion;
	};
	


/***/ }),
/* 933 */
/***/ (function(module, exports, __webpack_require__) {

	/* MIT license */
	var colorNames = __webpack_require__(413);
	var swizzle = __webpack_require__(1764);
	
	var reverseNames = {};
	
	// create a list of reverse color names
	for (var name in colorNames) {
		if (colorNames.hasOwnProperty(name)) {
			reverseNames[colorNames[name]] = name;
		}
	}
	
	var cs = module.exports = {
		to: {},
		get: {}
	};
	
	cs.get = function (string) {
		var prefix = string.substring(0, 3).toLowerCase();
		var val;
		var model;
		switch (prefix) {
			case 'hsl':
				val = cs.get.hsl(string);
				model = 'hsl';
				break;
			case 'hwb':
				val = cs.get.hwb(string);
				model = 'hwb';
				break;
			default:
				val = cs.get.rgb(string);
				model = 'rgb';
				break;
		}
	
		if (!val) {
			return null;
		}
	
		return {model: model, value: val};
	};
	
	cs.get.rgb = function (string) {
		if (!string) {
			return null;
		}
	
		var abbr = /^#([a-f0-9]{3,4})$/i;
		var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
		var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
		var per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
		var keyword = /(\D+)/;
	
		var rgb = [0, 0, 0, 1];
		var match;
		var i;
		var hexAlpha;
	
		if (match = string.match(hex)) {
			hexAlpha = match[2];
			match = match[1];
	
			for (i = 0; i < 3; i++) {
				// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19
				var i2 = i * 2;
				rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);
			}
	
			if (hexAlpha) {
				rgb[3] = parseInt(hexAlpha, 16) / 255;
			}
		} else if (match = string.match(abbr)) {
			match = match[1];
			hexAlpha = match[3];
	
			for (i = 0; i < 3; i++) {
				rgb[i] = parseInt(match[i] + match[i], 16);
			}
	
			if (hexAlpha) {
				rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;
			}
		} else if (match = string.match(rgba)) {
			for (i = 0; i < 3; i++) {
				rgb[i] = parseInt(match[i + 1], 0);
			}
	
			if (match[4]) {
				rgb[3] = parseFloat(match[4]);
			}
		} else if (match = string.match(per)) {
			for (i = 0; i < 3; i++) {
				rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
			}
	
			if (match[4]) {
				rgb[3] = parseFloat(match[4]);
			}
		} else if (match = string.match(keyword)) {
			if (match[1] === 'transparent') {
				return [0, 0, 0, 0];
			}
	
			rgb = colorNames[match[1]];
	
			if (!rgb) {
				return null;
			}
	
			rgb[3] = 1;
	
			return rgb;
		} else {
			return null;
		}
	
		for (i = 0; i < 3; i++) {
			rgb[i] = clamp(rgb[i], 0, 255);
		}
		rgb[3] = clamp(rgb[3], 0, 1);
	
		return rgb;
	};
	
	cs.get.hsl = function (string) {
		if (!string) {
			return null;
		}
	
		var hsl = /^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
		var match = string.match(hsl);
	
		if (match) {
			var alpha = parseFloat(match[4]);
			var h = (parseFloat(match[1]) + 360) % 360;
			var s = clamp(parseFloat(match[2]), 0, 100);
			var l = clamp(parseFloat(match[3]), 0, 100);
			var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
	
			return [h, s, l, a];
		}
	
		return null;
	};
	
	cs.get.hwb = function (string) {
		if (!string) {
			return null;
		}
	
		var hwb = /^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
		var match = string.match(hwb);
	
		if (match) {
			var alpha = parseFloat(match[4]);
			var h = ((parseFloat(match[1]) % 360) + 360) % 360;
			var w = clamp(parseFloat(match[2]), 0, 100);
			var b = clamp(parseFloat(match[3]), 0, 100);
			var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
			return [h, w, b, a];
		}
	
		return null;
	};
	
	cs.to.hex = function () {
		var rgba = swizzle(arguments);
	
		return (
			'#' +
			hexDouble(rgba[0]) +
			hexDouble(rgba[1]) +
			hexDouble(rgba[2]) +
			(rgba[3] < 1
				? (hexDouble(Math.round(rgba[3] * 255)))
				: '')
		);
	};
	
	cs.to.rgb = function () {
		var rgba = swizzle(arguments);
	
		return rgba.length < 4 || rgba[3] === 1
			? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'
			: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';
	};
	
	cs.to.rgb.percent = function () {
		var rgba = swizzle(arguments);
	
		var r = Math.round(rgba[0] / 255 * 100);
		var g = Math.round(rgba[1] / 255 * 100);
		var b = Math.round(rgba[2] / 255 * 100);
	
		return rgba.length < 4 || rgba[3] === 1
			? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'
			: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';
	};
	
	cs.to.hsl = function () {
		var hsla = swizzle(arguments);
		return hsla.length < 4 || hsla[3] === 1
			? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'
			: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';
	};
	
	// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
	// (hwb have alpha optional & 1 is default value)
	cs.to.hwb = function () {
		var hwba = swizzle(arguments);
	
		var a = '';
		if (hwba.length >= 4 && hwba[3] !== 1) {
			a = ', ' + hwba[3];
		}
	
		return 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';
	};
	
	cs.to.keyword = function (rgb) {
		return reverseNames[rgb.slice(0, 3)];
	};
	
	// helpers
	function clamp(num, min, max) {
		return Math.min(Math.max(min, num), max);
	}
	
	function hexDouble(num) {
		var str = num.toString(16).toUpperCase();
		return (str.length < 2) ? '0' + str : str;
	}


/***/ }),
/* 934 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var colorString = __webpack_require__(933);
	var convert = __webpack_require__(931);
	
	var _slice = [].slice;
	
	var skippedModels = [
		// to be honest, I don't really feel like keyword belongs in color convert, but eh.
		'keyword',
	
		// gray conflicts with some method names, and has its own method defined.
		'gray',
	
		// shouldn't really be in color-convert either...
		'hex'
	];
	
	var hashedModelKeys = {};
	Object.keys(convert).forEach(function (model) {
		hashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;
	});
	
	var limiters = {};
	
	function Color(obj, model) {
		if (!(this instanceof Color)) {
			return new Color(obj, model);
		}
	
		if (model && model in skippedModels) {
			model = null;
		}
	
		if (model && !(model in convert)) {
			throw new Error('Unknown model: ' + model);
		}
	
		var i;
		var channels;
	
		if (obj == null) { // eslint-disable-line no-eq-null,eqeqeq
			this.model = 'rgb';
			this.color = [0, 0, 0];
			this.valpha = 1;
		} else if (obj instanceof Color) {
			this.model = obj.model;
			this.color = obj.color.slice();
			this.valpha = obj.valpha;
		} else if (typeof obj === 'string') {
			var result = colorString.get(obj);
			if (result === null) {
				throw new Error('Unable to parse color from string: ' + obj);
			}
	
			this.model = result.model;
			channels = convert[this.model].channels;
			this.color = result.value.slice(0, channels);
			this.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;
		} else if (obj.length) {
			this.model = model || 'rgb';
			channels = convert[this.model].channels;
			var newArr = _slice.call(obj, 0, channels);
			this.color = zeroArray(newArr, channels);
			this.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;
		} else if (typeof obj === 'number') {
			// this is always RGB - can be converted later on.
			obj &= 0xFFFFFF;
			this.model = 'rgb';
			this.color = [
				(obj >> 16) & 0xFF,
				(obj >> 8) & 0xFF,
				obj & 0xFF
			];
			this.valpha = 1;
		} else {
			this.valpha = 1;
	
			var keys = Object.keys(obj);
			if ('alpha' in obj) {
				keys.splice(keys.indexOf('alpha'), 1);
				this.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;
			}
	
			var hashedKeys = keys.sort().join('');
			if (!(hashedKeys in hashedModelKeys)) {
				throw new Error('Unable to parse color from object: ' + JSON.stringify(obj));
			}
	
			this.model = hashedModelKeys[hashedKeys];
	
			var labels = convert[this.model].labels;
			var color = [];
			for (i = 0; i < labels.length; i++) {
				color.push(obj[labels[i]]);
			}
	
			this.color = zeroArray(color);
		}
	
		// perform limitations (clamping, etc.)
		if (limiters[this.model]) {
			channels = convert[this.model].channels;
			for (i = 0; i < channels; i++) {
				var limit = limiters[this.model][i];
				if (limit) {
					this.color[i] = limit(this.color[i]);
				}
			}
		}
	
		this.valpha = Math.max(0, Math.min(1, this.valpha));
	
		if (Object.freeze) {
			Object.freeze(this);
		}
	}
	
	Color.prototype = {
		toString: function () {
			return this.string();
		},
	
		toJSON: function () {
			return this[this.model]();
		},
	
		string: function (places) {
			var self = this.model in colorString.to ? this : this.rgb();
			self = self.round(typeof places === 'number' ? places : 1);
			var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
			return colorString.to[self.model](args);
		},
	
		percentString: function (places) {
			var self = this.rgb().round(typeof places === 'number' ? places : 1);
			var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
			return colorString.to.rgb.percent(args);
		},
	
		array: function () {
			return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);
		},
	
		object: function () {
			var result = {};
			var channels = convert[this.model].channels;
			var labels = convert[this.model].labels;
	
			for (var i = 0; i < channels; i++) {
				result[labels[i]] = this.color[i];
			}
	
			if (this.valpha !== 1) {
				result.alpha = this.valpha;
			}
	
			return result;
		},
	
		unitArray: function () {
			var rgb = this.rgb().color;
			rgb[0] /= 255;
			rgb[1] /= 255;
			rgb[2] /= 255;
	
			if (this.valpha !== 1) {
				rgb.push(this.valpha);
			}
	
			return rgb;
		},
	
		unitObject: function () {
			var rgb = this.rgb().object();
			rgb.r /= 255;
			rgb.g /= 255;
			rgb.b /= 255;
	
			if (this.valpha !== 1) {
				rgb.alpha = this.valpha;
			}
	
			return rgb;
		},
	
		round: function (places) {
			places = Math.max(places || 0, 0);
			return new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);
		},
	
		alpha: function (val) {
			if (arguments.length) {
				return new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);
			}
	
			return this.valpha;
		},
	
		// rgb
		red: getset('rgb', 0, maxfn(255)),
		green: getset('rgb', 1, maxfn(255)),
		blue: getset('rgb', 2, maxfn(255)),
	
		hue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style
	
		saturationl: getset('hsl', 1, maxfn(100)),
		lightness: getset('hsl', 2, maxfn(100)),
	
		saturationv: getset('hsv', 1, maxfn(100)),
		value: getset('hsv', 2, maxfn(100)),
	
		chroma: getset('hcg', 1, maxfn(100)),
		gray: getset('hcg', 2, maxfn(100)),
	
		white: getset('hwb', 1, maxfn(100)),
		wblack: getset('hwb', 2, maxfn(100)),
	
		cyan: getset('cmyk', 0, maxfn(100)),
		magenta: getset('cmyk', 1, maxfn(100)),
		yellow: getset('cmyk', 2, maxfn(100)),
		black: getset('cmyk', 3, maxfn(100)),
	
		x: getset('xyz', 0, maxfn(100)),
		y: getset('xyz', 1, maxfn(100)),
		z: getset('xyz', 2, maxfn(100)),
	
		l: getset('lab', 0, maxfn(100)),
		a: getset('lab', 1),
		b: getset('lab', 2),
	
		keyword: function (val) {
			if (arguments.length) {
				return new Color(val);
			}
	
			return convert[this.model].keyword(this.color);
		},
	
		hex: function (val) {
			if (arguments.length) {
				return new Color(val);
			}
	
			return colorString.to.hex(this.rgb().round().color);
		},
	
		rgbNumber: function () {
			var rgb = this.rgb().color;
			return ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);
		},
	
		luminosity: function () {
			// http://www.w3.org/TR/WCAG20/#relativeluminancedef
			var rgb = this.rgb().color;
	
			var lum = [];
			for (var i = 0; i < rgb.length; i++) {
				var chan = rgb[i] / 255;
				lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);
			}
	
			return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
		},
	
		contrast: function (color2) {
			// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
			var lum1 = this.luminosity();
			var lum2 = color2.luminosity();
	
			if (lum1 > lum2) {
				return (lum1 + 0.05) / (lum2 + 0.05);
			}
	
			return (lum2 + 0.05) / (lum1 + 0.05);
		},
	
		level: function (color2) {
			var contrastRatio = this.contrast(color2);
			if (contrastRatio >= 7.1) {
				return 'AAA';
			}
	
			return (contrastRatio >= 4.5) ? 'AA' : '';
		},
	
		isDark: function () {
			// YIQ equation from http://24ways.org/2010/calculating-color-contrast
			var rgb = this.rgb().color;
			var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
			return yiq < 128;
		},
	
		isLight: function () {
			return !this.isDark();
		},
	
		negate: function () {
			var rgb = this.rgb();
			for (var i = 0; i < 3; i++) {
				rgb.color[i] = 255 - rgb.color[i];
			}
			return rgb;
		},
	
		lighten: function (ratio) {
			var hsl = this.hsl();
			hsl.color[2] += hsl.color[2] * ratio;
			return hsl;
		},
	
		darken: function (ratio) {
			var hsl = this.hsl();
			hsl.color[2] -= hsl.color[2] * ratio;
			return hsl;
		},
	
		saturate: function (ratio) {
			var hsl = this.hsl();
			hsl.color[1] += hsl.color[1] * ratio;
			return hsl;
		},
	
		desaturate: function (ratio) {
			var hsl = this.hsl();
			hsl.color[1] -= hsl.color[1] * ratio;
			return hsl;
		},
	
		whiten: function (ratio) {
			var hwb = this.hwb();
			hwb.color[1] += hwb.color[1] * ratio;
			return hwb;
		},
	
		blacken: function (ratio) {
			var hwb = this.hwb();
			hwb.color[2] += hwb.color[2] * ratio;
			return hwb;
		},
	
		grayscale: function () {
			// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
			var rgb = this.rgb().color;
			var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
			return Color.rgb(val, val, val);
		},
	
		fade: function (ratio) {
			return this.alpha(this.valpha - (this.valpha * ratio));
		},
	
		opaquer: function (ratio) {
			return this.alpha(this.valpha + (this.valpha * ratio));
		},
	
		rotate: function (degrees) {
			var hsl = this.hsl();
			var hue = hsl.color[0];
			hue = (hue + degrees) % 360;
			hue = hue < 0 ? 360 + hue : hue;
			hsl.color[0] = hue;
			return hsl;
		},
	
		mix: function (mixinColor, weight) {
			// ported from sass implementation in C
			// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
			if (!mixinColor || !mixinColor.rgb) {
				throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof mixinColor);
			}
			var color1 = mixinColor.rgb();
			var color2 = this.rgb();
			var p = weight === undefined ? 0.5 : weight;
	
			var w = 2 * p - 1;
			var a = color1.alpha() - color2.alpha();
	
			var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
			var w2 = 1 - w1;
	
			return Color.rgb(
					w1 * color1.red() + w2 * color2.red(),
					w1 * color1.green() + w2 * color2.green(),
					w1 * color1.blue() + w2 * color2.blue(),
					color1.alpha() * p + color2.alpha() * (1 - p));
		}
	};
	
	// model conversion methods and static constructors
	Object.keys(convert).forEach(function (model) {
		if (skippedModels.indexOf(model) !== -1) {
			return;
		}
	
		var channels = convert[model].channels;
	
		// conversion methods
		Color.prototype[model] = function () {
			if (this.model === model) {
				return new Color(this);
			}
	
			if (arguments.length) {
				return new Color(arguments, model);
			}
	
			var newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;
			return new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);
		};
	
		// 'static' construction methods
		Color[model] = function (color) {
			if (typeof color === 'number') {
				color = zeroArray(_slice.call(arguments), channels);
			}
			return new Color(color, model);
		};
	});
	
	function roundTo(num, places) {
		return Number(num.toFixed(places));
	}
	
	function roundToPlace(places) {
		return function (num) {
			return roundTo(num, places);
		};
	}
	
	function getset(model, channel, modifier) {
		model = Array.isArray(model) ? model : [model];
	
		model.forEach(function (m) {
			(limiters[m] || (limiters[m] = []))[channel] = modifier;
		});
	
		model = model[0];
	
		return function (val) {
			var result;
	
			if (arguments.length) {
				if (modifier) {
					val = modifier(val);
				}
	
				result = this[model]();
				result.color[channel] = val;
				return result;
			}
	
			result = this[model]().color[channel];
			if (modifier) {
				result = modifier(result);
			}
	
			return result;
		};
	}
	
	function maxfn(max) {
		return function (v) {
			return Math.max(0, Math.min(max, v));
		};
	}
	
	function assertArray(val) {
		return Array.isArray(val) ? val : [val];
	}
	
	function zeroArray(arr, length) {
		for (var i = 0; i < length; i++) {
			if (typeof arr[i] !== 'number') {
				arr[i] = 0;
			}
		}
	
		return arr;
	}
	
	module.exports = Color;


/***/ }),
/* 935 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(992);
	__webpack_require__(994);
	__webpack_require__(995);
	__webpack_require__(993);
	module.exports = __webpack_require__(143).Promise;

/***/ }),
/* 936 */
/***/ (function(module, exports, __webpack_require__) {

	var core = __webpack_require__(76);
	module.exports = function stringify(it){ // eslint-disable-line no-unused-vars
	  return (core.JSON && core.JSON.stringify || JSON.stringify).apply(JSON, arguments);
	};

/***/ }),
/* 937 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(958);
	module.exports = __webpack_require__(76).Object.assign;

/***/ }),
/* 938 */
/***/ (function(module, exports, __webpack_require__) {

	var $ = __webpack_require__(46);
	module.exports = function create(P, D){
	  return $.create(P, D);
	};

/***/ }),
/* 939 */
/***/ (function(module, exports, __webpack_require__) {

	var $ = __webpack_require__(46);
	module.exports = function defineProperty(it, key, desc){
	  return $.setDesc(it, key, desc);
	};

/***/ }),
/* 940 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(959);
	module.exports = __webpack_require__(76).Object.getPrototypeOf;

/***/ }),
/* 941 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(960);
	module.exports = __webpack_require__(76).Object.keys;

/***/ }),
/* 942 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(961);
	module.exports = __webpack_require__(76).Object.setPrototypeOf;

/***/ }),
/* 943 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(964);
	__webpack_require__(962);
	module.exports = __webpack_require__(76).Symbol;

/***/ }),
/* 944 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(963);
	__webpack_require__(965);
	module.exports = __webpack_require__(141)('iterator');

/***/ }),
/* 945 */
/***/ (function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ }),
/* 946 */
/***/ (function(module, exports) {

	module.exports = function(){ /* empty */ };

/***/ }),
/* 947 */
/***/ (function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var $ = __webpack_require__(46);
	module.exports = function(it){
	  var keys       = $.getKeys(it)
	    , getSymbols = $.getSymbols;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = $.isEnum
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))keys.push(key);
	  }
	  return keys;
	};

/***/ }),
/* 948 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(189)
	  , getNames  = __webpack_require__(46).getNames
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return getNames(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.get = function getOwnPropertyNames(it){
	  if(windowNames && toString.call(it) == '[object Window]')return getWindowNames(it);
	  return getNames(toIObject(it));
	};

/***/ }),
/* 949 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(415);
	module.exports = Array.isArray || function(arg){
	  return cof(arg) == 'Array';
	};

/***/ }),
/* 950 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $              = __webpack_require__(46)
	  , descriptor     = __webpack_require__(265)
	  , setToStringTag = __webpack_require__(266)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(263)(IteratorPrototype, __webpack_require__(141)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ }),
/* 951 */
/***/ (function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ }),
/* 952 */
/***/ (function(module, exports, __webpack_require__) {

	var $         = __webpack_require__(46)
	  , toIObject = __webpack_require__(189);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = $.getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ }),
/* 953 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.1 Object.assign(target, source, ...)
	var $        = __webpack_require__(46)
	  , toObject = __webpack_require__(267)
	  , IObject  = __webpack_require__(418);
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = __webpack_require__(187)(function(){
	  var a = Object.assign
	    , A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , $$    = arguments
	    , $$len = $$.length
	    , index = 1
	    , getKeys    = $.getKeys
	    , getSymbols = $.getSymbols
	    , isEnum     = $.isEnum;
	  while($$len > index){
	    var S      = IObject($$[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  }
	  return T;
	} : Object.assign;

/***/ }),
/* 954 */
/***/ (function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var getDesc  = __webpack_require__(46).getDesc
	  , isObject = __webpack_require__(419)
	  , anObject = __webpack_require__(414);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(416)(Function.call, getDesc(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ }),
/* 955 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(956)
	  , defined   = __webpack_require__(261);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ }),
/* 956 */
/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ }),
/* 957 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(946)
	  , step             = __webpack_require__(951)
	  , Iterators        = __webpack_require__(264)
	  , toIObject        = __webpack_require__(189);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(420)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ }),
/* 958 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(140);
	
	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(953)});

/***/ }),
/* 959 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject = __webpack_require__(267);
	
	__webpack_require__(422)('getPrototypeOf', function($getPrototypeOf){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ }),
/* 960 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(267);
	
	__webpack_require__(422)('keys', function($keys){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ }),
/* 961 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(140);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(954).set});

/***/ }),
/* 962 */
/***/ (function(module, exports) {



/***/ }),
/* 963 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(955)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(420)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ }),
/* 964 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var $              = __webpack_require__(46)
	  , global         = __webpack_require__(188)
	  , has            = __webpack_require__(262)
	  , DESCRIPTORS    = __webpack_require__(417)
	  , $export        = __webpack_require__(140)
	  , redefine       = __webpack_require__(423)
	  , $fails         = __webpack_require__(187)
	  , shared         = __webpack_require__(424)
	  , setToStringTag = __webpack_require__(266)
	  , uid            = __webpack_require__(425)
	  , wks            = __webpack_require__(141)
	  , keyOf          = __webpack_require__(952)
	  , $names         = __webpack_require__(948)
	  , enumKeys       = __webpack_require__(947)
	  , isArray        = __webpack_require__(949)
	  , anObject       = __webpack_require__(414)
	  , toIObject      = __webpack_require__(189)
	  , createDesc     = __webpack_require__(265)
	  , getDesc        = $.getDesc
	  , setDesc        = $.setDesc
	  , _create        = $.create
	  , getNames       = $names.get
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , setter         = false
	  , HIDDEN         = wks('_hidden')
	  , isEnum         = $.isEnum
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , useNative      = typeof $Symbol == 'function'
	  , ObjectProto    = Object.prototype;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(setDesc({}, 'a', {
	    get: function(){ return setDesc(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = getDesc(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  setDesc(it, key, D);
	  if(protoDesc && it !== ObjectProto)setDesc(ObjectProto, key, protoDesc);
	} : setDesc;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol.prototype);
	  sym._k = tag;
	  DESCRIPTORS && setter && setSymbolDesc(ObjectProto, tag, {
	    configurable: true,
	    set: function(value){
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    }
	  });
	  return sym;
	};
	
	var isSymbol = function(it){
	  return typeof it == 'symbol';
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(D && has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))setDesc(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return setDesc(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key);
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key]
	    ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  var D = getDesc(it = toIObject(it), key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = getNames(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i)if(!has(AllSymbols, key = names[i++]) && key != HIDDEN)result.push(key);
	  return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var names  = getNames(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i)if(has(AllSymbols, key = names[i++]))result.push(AllSymbols[key]);
	  return result;
	};
	var $stringify = function stringify(it){
	  if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	  var args = [it]
	    , i    = 1
	    , $$   = arguments
	    , replacer, $replacer;
	  while($$.length > i)args.push($$[i++]);
	  replacer = args[1];
	  if(typeof replacer == 'function')$replacer = replacer;
	  if($replacer || !isArray(replacer))replacer = function(key, value){
	    if($replacer)value = $replacer.call(this, key, value);
	    if(!isSymbol(value))return value;
	  };
	  args[1] = replacer;
	  return _stringify.apply($JSON, args);
	};
	var buggyJSON = $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	});
	
	// 19.4.1.1 Symbol([description])
	if(!useNative){
	  $Symbol = function Symbol(){
	    if(isSymbol(this))throw TypeError('Symbol is not a constructor');
	    return wrap(uid(arguments.length > 0 ? arguments[0] : undefined));
	  };
	  redefine($Symbol.prototype, 'toString', function toString(){
	    return this._k;
	  });
	
	  isSymbol = function(it){
	    return it instanceof $Symbol;
	  };
	
	  $.create     = $create;
	  $.isEnum     = $propertyIsEnumerable;
	  $.getDesc    = $getOwnPropertyDescriptor;
	  $.setDesc    = $defineProperty;
	  $.setDescs   = $defineProperties;
	  $.getNames   = $names.get = $getOwnPropertyNames;
	  $.getSymbols = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(421)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	}
	
	var symbolStatics = {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    return keyOf(SymbolRegistry, key);
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	};
	// 19.4.2.2 Symbol.hasInstance
	// 19.4.2.3 Symbol.isConcatSpreadable
	// 19.4.2.4 Symbol.iterator
	// 19.4.2.6 Symbol.match
	// 19.4.2.8 Symbol.replace
	// 19.4.2.9 Symbol.search
	// 19.4.2.10 Symbol.species
	// 19.4.2.11 Symbol.split
	// 19.4.2.12 Symbol.toPrimitive
	// 19.4.2.13 Symbol.toStringTag
	// 19.4.2.14 Symbol.unscopables
	$.each.call((
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,' +
	  'species,split,toPrimitive,toStringTag,unscopables'
	).split(','), function(it){
	  var sym = wks(it);
	  symbolStatics[it] = useNative ? sym : wrap(sym);
	});
	
	setter = true;
	
	$export($export.G + $export.W, {Symbol: $Symbol});
	
	$export($export.S, 'Symbol', symbolStatics);
	
	$export($export.S + $export.F * !useNative, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!useNative || buggyJSON), 'JSON', {stringify: $stringify});
	
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ }),
/* 965 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(957);
	var Iterators = __webpack_require__(264);
	Iterators.NodeList = Iterators.HTMLCollection = Iterators.Array;

/***/ }),
/* 966 */
/***/ (function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(41)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(110)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ }),
/* 967 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(191)
	  , document = __webpack_require__(52).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ }),
/* 968 */
/***/ (function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ }),
/* 969 */
/***/ (function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(144)
	  , call        = __webpack_require__(974)
	  , isArrayIter = __webpack_require__(973)
	  , anObject    = __webpack_require__(142)
	  , toLength    = __webpack_require__(989)
	  , getIterFn   = __webpack_require__(990);
	module.exports = function(iterable, entries, fn, that){
	  var iterFn = getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    call(iterator, f, step.value, entries);
	  }
	};

/***/ }),
/* 970 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(52).document && document.documentElement;

/***/ }),
/* 971 */
/***/ (function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ }),
/* 972 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(190);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ }),
/* 973 */
/***/ (function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(145)
	  , ITERATOR   = __webpack_require__(41)('iterator')
	  , ArrayProto = Array.prototype;
	
	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ }),
/* 974 */
/***/ (function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(142);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ }),
/* 975 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $              = __webpack_require__(88)
	  , descriptor     = __webpack_require__(431)
	  , setToStringTag = __webpack_require__(271)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(110)(IteratorPrototype, __webpack_require__(41)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ }),
/* 976 */
/***/ (function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(41)('iterator')
	  , SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }
	
	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ }),
/* 977 */
/***/ (function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ }),
/* 978 */
/***/ (function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(52)
	  , macrotask = __webpack_require__(987).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(190)(process) == 'process'
	  , head, last, notify;
	
	var flush = function(){
	  var parent, domain, fn;
	  if(isNode && (parent = process.domain)){
	    process.domain = null;
	    parent.exit();
	  }
	  while(head){
	    domain = head.domain;
	    fn     = head.fn;
	    if(domain)domain.enter();
	    fn(); // <- currently we use it only for Promise - try / catch not required
	    if(domain)domain.exit();
	    head = head.next;
	  } last = undefined;
	  if(parent)parent.enter();
	};
	
	// Node.js
	if(isNode){
	  notify = function(){
	    process.nextTick(flush);
	  };
	// browsers with MutationObserver
	} else if(Observer){
	  var toggle = 1
	    , node   = document.createTextNode('');
	  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	  notify = function(){
	    node.data = toggle = -toggle;
	  };
	// environments with maybe non-completely correct, but existent Promise
	} else if(Promise && Promise.resolve){
	  notify = function(){
	    Promise.resolve().then(flush);
	  };
	// for other environments - macrotask based on:
	// - setImmediate
	// - MessageChannel
	// - window.postMessag
	// - onreadystatechange
	// - setTimeout
	} else {
	  notify = function(){
	    // strange IE + webpack dev server bug - use .call(global)
	    macrotask.call(global, flush);
	  };
	}
	
	module.exports = function asap(fn){
	  var task = {fn: fn, next: undefined, domain: isNode && process.domain};
	  if(last)last.next = task;
	  if(!head){
	    head = task;
	    notify();
	  } last = task;
	};

/***/ }),
/* 979 */
/***/ (function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(192);
	module.exports = function(target, src){
	  for(var key in src)redefine(target, key, src[key]);
	  return target;
	};

/***/ }),
/* 980 */
/***/ (function(module, exports) {

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y){
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ }),
/* 981 */
/***/ (function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var getDesc  = __webpack_require__(88).getDesc
	  , isObject = __webpack_require__(191)
	  , anObject = __webpack_require__(142);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(144)(Function.call, getDesc(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ }),
/* 982 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(52)
	  , $           = __webpack_require__(88)
	  , DESCRIPTORS = __webpack_require__(270)
	  , SPECIES     = __webpack_require__(41)('species');
	
	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ }),
/* 983 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(52)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ }),
/* 984 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(142)
	  , aFunction = __webpack_require__(268)
	  , SPECIES   = __webpack_require__(41)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ }),
/* 985 */
/***/ (function(module, exports) {

	module.exports = function(it, Constructor, name){
	  if(!(it instanceof Constructor))throw TypeError(name + ": use the 'new' operator!");
	  return it;
	};

/***/ }),
/* 986 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(432)
	  , defined   = __webpack_require__(426);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ }),
/* 987 */
/***/ (function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(144)
	  , invoke             = __webpack_require__(971)
	  , html               = __webpack_require__(970)
	  , cel                = __webpack_require__(967)
	  , global             = __webpack_require__(52)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listner = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(190)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listner;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listner, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ }),
/* 988 */
/***/ (function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(972)
	  , defined = __webpack_require__(426);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ }),
/* 989 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(432)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ }),
/* 990 */
/***/ (function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(269)
	  , ITERATOR  = __webpack_require__(41)('iterator')
	  , Iterators = __webpack_require__(145);
	module.exports = __webpack_require__(143).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ }),
/* 991 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(966)
	  , step             = __webpack_require__(977)
	  , Iterators        = __webpack_require__(145)
	  , toIObject        = __webpack_require__(988);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(429)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ }),
/* 992 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(269)
	  , test    = {};
	test[__webpack_require__(41)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(192)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ }),
/* 993 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $          = __webpack_require__(88)
	  , LIBRARY    = __webpack_require__(430)
	  , global     = __webpack_require__(52)
	  , ctx        = __webpack_require__(144)
	  , classof    = __webpack_require__(269)
	  , $export    = __webpack_require__(427)
	  , isObject   = __webpack_require__(191)
	  , anObject   = __webpack_require__(142)
	  , aFunction  = __webpack_require__(268)
	  , strictNew  = __webpack_require__(985)
	  , forOf      = __webpack_require__(969)
	  , setProto   = __webpack_require__(981).set
	  , same       = __webpack_require__(980)
	  , SPECIES    = __webpack_require__(41)('species')
	  , speciesConstructor = __webpack_require__(984)
	  , asap       = __webpack_require__(978)
	  , PROMISE    = 'Promise'
	  , process    = global.process
	  , isNode     = classof(process) == 'process'
	  , P          = global[PROMISE]
	  , empty      = function(){ /* empty */ }
	  , Wrapper;
	
	var testResolve = function(sub){
	  var test = new P(empty), promise;
	  if(sub)test.constructor = function(exec){
	    exec(empty, empty);
	  };
	  (promise = P.resolve(test))['catch'](empty);
	  return promise === test;
	};
	
	var USE_NATIVE = function(){
	  var works = false;
	  function P2(x){
	    var self = new P(x);
	    setProto(self, P2.prototype);
	    return self;
	  }
	  try {
	    works = P && P.resolve && testResolve();
	    setProto(P2, P);
	    P2.prototype = $.create(P.prototype, {constructor: {value: P2}});
	    // actual Firefox has broken subclass support, test that
	    if(!(P2.resolve(5).then(function(){}) instanceof P2)){
	      works = false;
	    }
	    // actual V8 bug, https://code.google.com/p/v8/issues/detail?id=4162
	    if(works && __webpack_require__(270)){
	      var thenableThenGotten = false;
	      P.resolve($.setDesc({}, 'then', {
	        get: function(){ thenableThenGotten = true; }
	      }));
	      works = thenableThenGotten;
	    }
	  } catch(e){ works = false; }
	  return works;
	}();
	
	// helpers
	var sameConstructor = function(a, b){
	  // library wrapper special case
	  if(LIBRARY && a === P && b === Wrapper)return true;
	  return same(a, b);
	};
	var getConstructor = function(C){
	  var S = anObject(C)[SPECIES];
	  return S != undefined ? S : C;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var PromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve),
	  this.reject  = aFunction(reject)
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(record, isReject){
	  if(record.n)return;
	  record.n = true;
	  var chain = record.c;
	  asap(function(){
	    var value = record.v
	      , ok    = record.s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , result, then;
	      try {
	        if(handler){
	          if(!ok)record.h = true;
	          result = handler === true ? value : handler(value);
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    chain.length = 0;
	    record.n = false;
	    if(isReject)setTimeout(function(){
	      var promise = record.p
	        , handler, console;
	      if(isUnhandled(promise)){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      } record.a = undefined;
	    }, 1);
	  });
	};
	var isUnhandled = function(promise){
	  var record = promise._d
	    , chain  = record.a || record.c
	    , i      = 0
	    , reaction;
	  if(record.h)return false;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var $reject = function(value){
	  var record = this;
	  if(record.d)return;
	  record.d = true;
	  record = record.r || record; // unwrap
	  record.v = value;
	  record.s = 2;
	  record.a = record.c.slice();
	  notify(record, true);
	};
	var $resolve = function(value){
	  var record = this
	    , then;
	  if(record.d)return;
	  record.d = true;
	  record = record.r || record; // unwrap
	  try {
	    if(record.p === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      asap(function(){
	        var wrapper = {r: record, d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      record.v = value;
	      record.s = 1;
	      notify(record, false);
	    }
	  } catch(e){
	    $reject.call({r: record, d: false}, e); // wrap
	  }
	};
	
	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  P = function Promise(executor){
	    aFunction(executor);
	    var record = this._d = {
	      p: strictNew(this, P, PROMISE),         // <- promise
	      c: [],                                  // <- awaiting reactions
	      a: undefined,                           // <- checked in isUnhandled reactions
	      s: 0,                                   // <- state
	      d: false,                               // <- done
	      v: undefined,                           // <- value
	      h: false,                               // <- handled rejection
	      n: false                                // <- notify
	    };
	    try {
	      executor(ctx($resolve, record, 1), ctx($reject, record, 1));
	    } catch(err){
	      $reject.call(record, err);
	    }
	  };
	  __webpack_require__(979)(P.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction = new PromiseCapability(speciesConstructor(this, P))
	        , promise  = reaction.promise
	        , record   = this._d;
	      reaction.ok   = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail = typeof onRejected == 'function' && onRejected;
	      record.c.push(reaction);
	      if(record.a)record.a.push(reaction);
	      if(record.s)notify(record, false);
	      return promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: P});
	__webpack_require__(271)(P, PROMISE);
	__webpack_require__(982)(PROMISE);
	Wrapper = __webpack_require__(143)[PROMISE];
	
	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = new PromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (!USE_NATIVE || testResolve(true)), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof P && sameConstructor(x.constructor, this))return x;
	    var capability = new PromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(976)(function(iter){
	  P.all(iter)['catch'](function(){});
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = getConstructor(this)
	      , capability = new PromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject
	      , values     = [];
	    var abrupt = perform(function(){
	      forOf(iterable, false, values.push, values);
	      var remaining = values.length
	        , results   = Array(remaining);
	      if(remaining)$.each.call(values, function(promise, index){
	        var alreadyCalled = false;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled = true;
	          results[index] = value;
	          --remaining || resolve(results);
	        }, reject);
	      });
	      else resolve(results);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = getConstructor(this)
	      , capability = new PromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ }),
/* 994 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(986)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(429)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ }),
/* 995 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(991);
	var global      = __webpack_require__(52)
	  , hide        = __webpack_require__(110)
	  , Iterators   = __webpack_require__(145)
	  , ITERATOR    = __webpack_require__(41)('iterator')
	  , NL          = global.NodeList
	  , HTC         = global.HTMLCollection
	  , NLProto     = NL && NL.prototype
	  , HTCProto    = HTC && HTC.prototype
	  , ArrayValues = Iterators.NodeList = Iterators.HTMLCollection = Iterators.Array;
	if(NLProto && !NLProto[ITERATOR])hide(NLProto, ITERATOR, ArrayValues);
	if(HTCProto && !HTCProto[ITERATOR])hide(HTCProto, ITERATOR, ArrayValues);

/***/ }),
/* 996 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		compiles a selector to an executable function
	*/
	
	module.exports = compile;
	module.exports.compileUnsafe = compileUnsafe;
	module.exports.compileToken = compileToken;
	
	var parse       = __webpack_require__(436),
	    DomUtils    = __webpack_require__(78),
	    isTag       = DomUtils.isTag,
	    Rules       = __webpack_require__(997),
	    sortRules   = __webpack_require__(998),
	    BaseFuncs   = __webpack_require__(138),
	    trueFunc    = BaseFuncs.trueFunc,
	    falseFunc   = BaseFuncs.falseFunc,
	    procedure   = __webpack_require__(452);
	
	function compile(selector, options, context){
		var next = compileUnsafe(selector, options, context);
		return wrap(next);
	}
	
	function wrap(next){
		return function base(elem){
			return isTag(elem) && next(elem);
		};
	}
	
	function compileUnsafe(selector, options, context){
		var token = parse(selector, options);
		return compileToken(token, options, context);
	}
	
	function includesScopePseudo(t){
	    return t.type === "pseudo" && (
	        t.name === "scope" || (
	            Array.isArray(t.data) &&
	            t.data.some(function(data){
	                return data.some(includesScopePseudo);
	            })
	        )
	    );
	}
	
	var DESCENDANT_TOKEN = {type: "descendant"},
	    SCOPE_TOKEN = {type: "pseudo", name: "scope"},
	    PLACEHOLDER_ELEMENT = {},
	    getParent = DomUtils.getParent;
	
	//CSS 4 Spec (Draft): 3.3.1. Absolutizing a Scope-relative Selector
	//http://www.w3.org/TR/selectors4/#absolutizing
	function absolutize(token, context){
	    //TODO better check if context is document
	    var hasContext = !!context && !!context.length && context.every(function(e){
	        return e === PLACEHOLDER_ELEMENT || !!getParent(e);
	    });
	
	
	    token.forEach(function(t){
	        if(t.length > 0 && isTraversal(t[0]) && t[0].type !== "descendant"){
	            //don't return in else branch
	        } else if(hasContext && !includesScopePseudo(t)){
	            t.unshift(DESCENDANT_TOKEN);
	        } else {
	            return;
	        }
	
	        t.unshift(SCOPE_TOKEN);
	    });
	}
	
	function compileToken(token, options, context){
	    token = token.filter(function(t){ return t.length > 0; });
	
		token.forEach(sortRules);
	
		var isArrayContext = Array.isArray(context);
	
	    context = (options && options.context) || context;
	
	    if(context && !isArrayContext) context = [context];
	
	    absolutize(token, context);
	
		return token
			.map(function(rules){ return compileRules(rules, options, context, isArrayContext); })
			.reduce(reduceRules, falseFunc);
	}
	
	function isTraversal(t){
		return procedure[t.type] < 0;
	}
	
	function compileRules(rules, options, context, isArrayContext){
		var acceptSelf = (isArrayContext && rules[0].name === "scope" && rules[1].type === "descendant");
		return rules.reduce(function(func, rule, index){
			if(func === falseFunc) return func;
			return Rules[rule.type](func, rule, options, context, acceptSelf && index === 1);
		}, options && options.rootFunc || trueFunc);
	}
	
	function reduceRules(a, b){
		if(b === falseFunc || a === trueFunc){
			return a;
		}
		if(a === falseFunc || b === trueFunc){
			return b;
		}
	
		return function combine(elem){
			return a(elem) || b(elem);
		};
	}
	
	//:not, :has and :matches have to compile selectors
	//doing this in lib/pseudos.js would lead to circular dependencies,
	//so we add them here
	
	var Pseudos     = __webpack_require__(272),
	    filters     = Pseudos.filters,
	    existsOne   = DomUtils.existsOne,
	    isTag       = DomUtils.isTag,
	    getChildren = DomUtils.getChildren;
	
	
	function containsTraversal(t){
		return t.some(isTraversal);
	}
	
	filters.not = function(next, token, options, context){
		var opts = {
		    	xmlMode: !!(options && options.xmlMode),
		    	strict: !!(options && options.strict)
		    };
	
		if(opts.strict){
			if(token.length > 1 || token.some(containsTraversal)){
				throw new SyntaxError("complex selectors in :not aren't allowed in strict mode");
			}
		}
	
	    var func = compileToken(token, opts, context);
	
		if(func === falseFunc) return next;
		if(func === trueFunc)  return falseFunc;
	
		return function(elem){
			return !func(elem) && next(elem);
		};
	};
	
	filters.has = function(next, token, options){
		var opts = {
			xmlMode: !!(options && options.xmlMode),
			strict: !!(options && options.strict)
		};
	
	    //FIXME: Uses an array as a pointer to the current element (side effects)
	    var context = token.some(containsTraversal) ? [PLACEHOLDER_ELEMENT] : null;
	
		var func = compileToken(token, opts, context);
	
		if(func === falseFunc) return falseFunc;
		if(func === trueFunc)  return function(elem){
				return getChildren(elem).some(isTag) && next(elem);
			};
	
		func = wrap(func);
	
	    if(context){
	        return function has(elem){
			return next(elem) && (
	                (context[0] = elem), existsOne(func, getChildren(elem))
	            );
		};
	    }
	
	    return function has(elem){
			return next(elem) && existsOne(func, getChildren(elem));
		};
	};
	
	filters.matches = function(next, token, options, context){
		var opts = {
			xmlMode: !!(options && options.xmlMode),
			strict: !!(options && options.strict),
			rootFunc: next
		};
	
		return compileToken(token, opts, context);
	};


/***/ }),
/* 997 */
/***/ (function(module, exports, __webpack_require__) {

	var DomUtils    = __webpack_require__(78),
	    isTag       = DomUtils.isTag,
	    getParent   = DomUtils.getParent,
	    getChildren = DomUtils.getChildren,
	    getSiblings = DomUtils.getSiblings,
	    getName     = DomUtils.getName;
	
	/*
		all available rules
	*/
	module.exports = {
		__proto__: null,
	
		attribute: __webpack_require__(435).compile,
		pseudo: __webpack_require__(272).compile,
	
		//tags
		tag: function(next, data){
			var name = data.name;
			return function tag(elem){
				return getName(elem) === name && next(elem);
			};
		},
	
		//traversal
		descendant: function(next, rule, options, context, acceptSelf){
			return function descendant(elem){
	
				if (acceptSelf && next(elem)) return true;
	
				var found = false;
	
				while(!found && (elem = getParent(elem))){
					found = next(elem);
				}
	
				return found;
			};
		},
		parent: function(next, data, options){
			if(options && options.strict) throw SyntaxError("Parent selector isn't part of CSS3");
	
			return function parent(elem){
				return getChildren(elem).some(test);
			};
	
			function test(elem){
				return isTag(elem) && next(elem);
			}
		},
		child: function(next){
			return function child(elem){
				var parent = getParent(elem);
				return !!parent && next(parent);
			};
		},
		sibling: function(next){
			return function sibling(elem){
				var siblings = getSiblings(elem);
	
				for(var i = 0; i < siblings.length; i++){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						if(next(siblings[i])) return true;
					}
				}
	
				return false;
			};
		},
		adjacent: function(next){
			return function adjacent(elem){
				var siblings = getSiblings(elem),
				    lastElement;
	
				for(var i = 0; i < siblings.length; i++){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						lastElement = siblings[i];
					}
				}
	
				return !!lastElement && next(lastElement);
			};
		},
		universal: function(next){
			return next;
		}
	};

/***/ }),
/* 998 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = sortByProcedure;
	
	/*
		sort the parts of the passed selector,
		as there is potential for optimization
		(some types of selectors are faster than others)
	*/
	
	var procedure = __webpack_require__(452);
	
	var attributes = {
		__proto__: null,
		exists: 10,
		equals: 8,
		not: 7,
		start: 6,
		end: 6,
		any: 5,
		hyphen: 4,
		element: 4
	};
	
	function sortByProcedure(arr){
		var procs = arr.map(getProcedure);
		for(var i = 1; i < arr.length; i++){
			var procNew = procs[i];
	
			if(procNew < 0) continue;
	
			for(var j = i - 1; j >= 0 && procNew < procs[j]; j--){
				var token = arr[j + 1];
				arr[j + 1] = arr[j];
				arr[j] = token;
				procs[j + 1] = procs[j];
				procs[j] = procNew;
			}
		}
	}
	
	function getProcedure(token){
		var proc = procedure[token.type];
	
		if(proc === procedure.attribute){
			proc = attributes[token.action];
	
			if(proc === attributes.equals && token.name === "id"){
				//prefer ID selectors (eg. #ID)
				proc = 9;
			}
	
			if(token.ignoreCase){
				//ignoreCase adds some overhead, prefer "normal" token
				//this is a binary operation, to ensure it's still an int
				proc >>= 1;
			}
		} else if(proc === procedure.pseudo){
			if(!token.data){
				proc = 3;
			} else if(token.name === "has" || token.name === "contains"){
				proc = 0; //expensive in any case
			} else if(token.name === "matches" || token.name === "not"){
				proc = 0;
				for(var i = 0; i < token.data.length; i++){
					//TODO better handling of complex selectors
					if(token.data[i].length !== 1) continue;
					var cur = getProcedure(token.data[i][0]);
					//avoid executing :has or :contains
					if(cur === 0){
						proc = 0;
						break;
					}
					if(cur > proc) proc = cur;
				}
				if(token.data.length > 1 && proc > 0) proc -= 1;
			} else {
				proc = 1;
			}
		}
		return proc;
	}


/***/ }),
/* 999 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = camelize;
	var regExp = /[-\s]+(.)?/g;
	
	/**
	 * Convert dash separated strings to camel cased.
	 *
	 * @param {String} str
	 * @return {String}
	 */
	function camelize(str) {
	  return str.replace(regExp, toUpper);
	}
	
	function toUpper(match, c) {
	  return c ? c.toUpperCase() : '';
	}

/***/ }),
/* 1000 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.supportedValue = exports.supportedProperty = exports.prefix = undefined;
	
	var _prefix = __webpack_require__(273);
	
	var _prefix2 = _interopRequireDefault(_prefix);
	
	var _supportedProperty = __webpack_require__(1001);
	
	var _supportedProperty2 = _interopRequireDefault(_supportedProperty);
	
	var _supportedValue = __webpack_require__(1002);
	
	var _supportedValue2 = _interopRequireDefault(_supportedValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = {
	  prefix: _prefix2['default'],
	  supportedProperty: _supportedProperty2['default'],
	  supportedValue: _supportedValue2['default']
	}; /**
	    * CSS Vendor prefix detection and property feature testing.
	    *
	    * @copyright Oleg Slobodskoi 2015
	    * @website https://github.com/jsstyles/css-vendor
	    * @license MIT
	    */
	
	exports.prefix = _prefix2['default'];
	exports.supportedProperty = _supportedProperty2['default'];
	exports.supportedValue = _supportedValue2['default'];

/***/ }),
/* 1001 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = supportedProperty;
	
	var _isInBrowser = __webpack_require__(194);
	
	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);
	
	var _prefix = __webpack_require__(273);
	
	var _prefix2 = _interopRequireDefault(_prefix);
	
	var _camelize = __webpack_require__(999);
	
	var _camelize2 = _interopRequireDefault(_camelize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var el = void 0;
	var cache = {};
	
	if (_isInBrowser2['default']) {
	  el = document.createElement('p');
	
	  /**
	   * We test every property on vendor prefix requirement.
	   * Once tested, result is cached. It gives us up to 70% perf boost.
	   * http://jsperf.com/element-style-object-access-vs-plain-object
	   *
	   * Prefill cache with known css properties to reduce amount of
	   * properties we need to feature test at runtime.
	   * http://davidwalsh.name/vendor-prefix
	   */
	  var computed = window.getComputedStyle(document.documentElement, '');
	  for (var key in computed) {
	    if (!isNaN(key)) cache[computed[key]] = computed[key];
	  }
	}
	
	/**
	 * Test if a property is supported, returns supported property with vendor
	 * prefix if required. Returns `false` if not supported.
	 *
	 * @param {String} prop dash separated
	 * @return {String|Boolean}
	 * @api public
	 */
	function supportedProperty(prop) {
	  // For server-side rendering.
	  if (!el) return prop;
	
	  // We have not tested this prop yet, lets do the test.
	  if (cache[prop] != null) return cache[prop];
	
	  // Camelization is required because we can't test using
	  // css syntax for e.g. in FF.
	  // Test if property is supported as it is.
	  if ((0, _camelize2['default'])(prop) in el.style) {
	    cache[prop] = prop;
	  }
	  // Test if property is supported with vendor prefix.
	  else if (_prefix2['default'].js + (0, _camelize2['default'])('-' + prop) in el.style) {
	      cache[prop] = _prefix2['default'].css + prop;
	    } else {
	      cache[prop] = false;
	    }
	
	  return cache[prop];
	}

/***/ }),
/* 1002 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = supportedValue;
	
	var _isInBrowser = __webpack_require__(194);
	
	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);
	
	var _prefix = __webpack_require__(273);
	
	var _prefix2 = _interopRequireDefault(_prefix);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var cache = {};
	var el = void 0;
	
	if (_isInBrowser2['default']) el = document.createElement('p');
	
	/**
	 * Returns prefixed value if needed. Returns `false` if value is not supported.
	 *
	 * @param {String} property
	 * @param {String} value
	 * @return {String|Boolean}
	 * @api public
	 */
	function supportedValue(property, value) {
	  // For server-side rendering.
	  if (!el) return value;
	
	  // It is a string or a number as a string like '1'.
	  // We want only prefixable values here.
	  if (typeof value !== 'string' || !isNaN(parseInt(value, 10))) return value;
	
	  var cacheKey = property + value;
	
	  if (cache[cacheKey] != null) return cache[cacheKey];
	
	  // IE can even throw an error in some cases, for e.g. style.content = 'bar'
	  try {
	    // Test value as it is.
	    el.style[property] = value;
	  } catch (err) {
	    cache[cacheKey] = false;
	    return false;
	  }
	
	  // Value is supported as it is.
	  if (el.style[property] !== '') {
	    cache[cacheKey] = value;
	  } else {
	    // Test value with vendor prefix.
	    value = _prefix2['default'].css + value;
	
	    // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.
	    if (value === '-ms-flex') value = '-ms-flexbox';
	
	    el.style[property] = value;
	
	    // Value is supported with vendor prefix.
	    if (el.style[property] !== '') cache[cacheKey] = value;
	  }
	
	  if (!cache[cacheKey]) cache[cacheKey] = false;
	
	  // Reset style value.
	  el.style[property] = '';
	
	  return cache[cacheKey];
	}

/***/ }),
/* 1003 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = assign;
	
	function assign(target, dirtyObject) {
	  if (target == null) {
	    throw new TypeError('assign requires that input parameter not be null or undefined');
	  }
	
	  dirtyObject = dirtyObject || {};
	
	  for (var property in dirtyObject) {
	    if (dirtyObject.hasOwnProperty(property)) {
	      target[property] = dirtyObject[property];
	    }
	  }
	
	  return target;
	}
	
	module.exports = exports.default;

/***/ }),
/* 1004 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = cloneObject;
	
	var _index = _interopRequireDefault(__webpack_require__(1003));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function cloneObject(dirtyObject) {
	  return (0, _index.default)({}, dirtyObject);
	}
	
	module.exports = exports.default;

/***/ }),
/* 1005 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = differenceInCalendarMonths;
	
	var _index = _interopRequireDefault(__webpack_require__(23));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @name differenceInCalendarMonths
	 * @category Month Helpers
	 * @summary Get the number of calendar months between the given dates.
	 *
	 * @description
	 * Get the number of calendar months between the given dates.
	 *
	 * ### v2.0.0 breaking changes:
	 *
	 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
	 *
	 * @param {Date|Number} dateLeft - the later date
	 * @param {Date|Number} dateRight - the earlier date
	 * @returns {Number} the number of calendar months
	 * @throws {TypeError} 2 arguments required
	 *
	 * @example
	 * // How many calendar months are between 31 January 2014 and 1 September 2014?
	 * var result = differenceInCalendarMonths(
	 *   new Date(2014, 8, 1),
	 *   new Date(2014, 0, 31)
	 * )
	 * //=> 8
	 */
	function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
	  if (arguments.length < 2) {
	    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
	  }
	
	  var dateLeft = (0, _index.default)(dirtyDateLeft);
	  var dateRight = (0, _index.default)(dirtyDateRight);
	  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
	  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
	  return yearDiff * 12 + monthDiff;
	}
	
	module.exports = exports.default;

/***/ }),
/* 1006 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = differenceInMilliseconds;
	
	var _index = _interopRequireDefault(__webpack_require__(23));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @name differenceInMilliseconds
	 * @category Millisecond Helpers
	 * @summary Get the number of milliseconds between the given dates.
	 *
	 * @description
	 * Get the number of milliseconds between the given dates.
	 *
	 * ### v2.0.0 breaking changes:
	 *
	 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
	 *
	 * @param {Date|Number} dateLeft - the later date
	 * @param {Date|Number} dateRight - the earlier date
	 * @returns {Number} the number of milliseconds
	 * @throws {TypeError} 2 arguments required
	 *
	 * @example
	 * // How many milliseconds are between
	 * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?
	 * var result = differenceInMilliseconds(
	 *   new Date(2014, 6, 2, 12, 30, 21, 700),
	 *   new Date(2014, 6, 2, 12, 30, 20, 600)
	 * )
	 * //=> 1100
	 */
	function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {
	  if (arguments.length < 2) {
	    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
	  }
	
	  var dateLeft = (0, _index.default)(dirtyDateLeft);
	  var dateRight = (0, _index.default)(dirtyDateRight);
	  return dateLeft.getTime() - dateRight.getTime();
	}
	
	module.exports = exports.default;

/***/ }),
/* 1007 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = differenceInMonths;
	
	var _index = _interopRequireDefault(__webpack_require__(23));
	
	var _index2 = _interopRequireDefault(__webpack_require__(1005));
	
	var _index3 = _interopRequireDefault(__webpack_require__(437));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @name differenceInMonths
	 * @category Month Helpers
	 * @summary Get the number of full months between the given dates.
	 *
	 * @description
	 * Get the number of full months between the given dates.
	 *
	 * ### v2.0.0 breaking changes:
	 *
	 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
	 *
	 * @param {Date|Number} dateLeft - the later date
	 * @param {Date|Number} dateRight - the earlier date
	 * @returns {Number} the number of full months
	 * @throws {TypeError} 2 arguments required
	 *
	 * @example
	 * // How many full months are between 31 January 2014 and 1 September 2014?
	 * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))
	 * //=> 7
	 */
	function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
	  if (arguments.length < 2) {
	    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
	  }
	
	  var dateLeft = (0, _index.default)(dirtyDateLeft);
	  var dateRight = (0, _index.default)(dirtyDateRight);
	  var sign = (0, _index3.default)(dateLeft, dateRight);
	  var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
	  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full
	  // If so, result must be decreased by 1 in absolute value
	
	  var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;
	  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero
	
	  return result === 0 ? 0 : result;
	}
	
	module.exports = exports.default;

/***/ }),
/* 1008 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = differenceInSeconds;
	
	var _index = _interopRequireDefault(__webpack_require__(1006));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @name differenceInSeconds
	 * @category Second Helpers
	 * @summary Get the number of seconds between the given dates.
	 *
	 * @description
	 * Get the number of seconds between the given dates.
	 *
	 * ### v2.0.0 breaking changes:
	 *
	 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
	 *
	 * @param {Date|Number} dateLeft - the later date
	 * @param {Date|Number} dateRight - the earlier date
	 * @returns {Number} the number of seconds
	 * @throws {TypeError} 2 arguments required
	 *
	 * @example
	 * // How many seconds are between
	 * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?
	 * var result = differenceInSeconds(
	 *   new Date(2014, 6, 2, 12, 30, 20, 0),
	 *   new Date(2014, 6, 2, 12, 30, 7, 999)
	 * )
	 * //=> 12
	 */
	function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {
	  if (arguments.length < 2) {
	    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
	  }
	
	  var diff = (0, _index.default)(dirtyDateLeft, dirtyDateRight) / 1000;
	  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
	}
	
	module.exports = exports.default;

/***/ }),
/* 1009 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = buildFormatLongFn;
	
	function buildFormatLongFn(args) {
	  return function (dirtyOptions) {
	    var options = dirtyOptions || {};
	    var width = options.width ? String(options.width) : args.defaultWidth;
	    var format = args.formats[width] || args.formats[args.defaultWidth];
	    return format;
	  };
	}
	
	module.exports = exports.default;

/***/ }),
/* 1010 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = buildLocalizeFn;
	
	function buildLocalizeFn(args) {
	  return function (dirtyIndex, dirtyOptions) {
	    var options = dirtyOptions || {};
	    var context = options.context ? String(options.context) : 'standalone';
	    var valuesArray;
	
	    if (context === 'formatting' && args.formattingValues) {
	      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
	      var width = options.width ? String(options.width) : defaultWidth;
	      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
	    } else {
	      var _defaultWidth = args.defaultWidth;
	
	      var _width = options.width ? String(options.width) : args.defaultWidth;
	
	      valuesArray = args.values[_width] || args.values[_defaultWidth];
	    }
	
	    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
	    return valuesArray[index];
	  };
	}
	
	module.exports = exports.default;

/***/ }),
/* 1011 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = buildMatchFn;
	
	function buildMatchFn(args) {
	  return function (dirtyString, dirtyOptions) {
	    var string = String(dirtyString);
	    var options = dirtyOptions || {};
	    var width = options.width;
	    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
	    var matchResult = string.match(matchPattern);
	
	    if (!matchResult) {
	      return null;
	    }
	
	    var matchedString = matchResult[0];
	    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
	    var value;
	
	    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {
	      value = findIndex(parsePatterns, function (pattern) {
	        return pattern.test(string);
	      });
	    } else {
	      value = findKey(parsePatterns, function (pattern) {
	        return pattern.test(string);
	      });
	    }
	
	    value = args.valueCallback ? args.valueCallback(value) : value;
	    value = options.valueCallback ? options.valueCallback(value) : value;
	    return {
	      value: value,
	      rest: string.slice(matchedString.length)
	    };
	  };
	}
	
	function findKey(object, predicate) {
	  for (var key in object) {
	    if (object.hasOwnProperty(key) && predicate(object[key])) {
	      return key;
	    }
	  }
	}
	
	function findIndex(array, predicate) {
	  for (var key = 0; key < array.length; key++) {
	    if (predicate(array[key])) {
	      return key;
	    }
	  }
	}
	
	module.exports = exports.default;

/***/ }),
/* 1012 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = buildMatchPatternFn;
	
	function buildMatchPatternFn(args) {
	  return function (dirtyString, dirtyOptions) {
	    var string = String(dirtyString);
	    var options = dirtyOptions || {};
	    var matchResult = string.match(args.matchPattern);
	
	    if (!matchResult) {
	      return null;
	    }
	
	    var matchedString = matchResult[0];
	    var parseResult = string.match(args.parsePattern);
	
	    if (!parseResult) {
	      return null;
	    }
	
	    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
	    value = options.valueCallback ? options.valueCallback(value) : value;
	    return {
	      value: value,
	      rest: string.slice(matchedString.length)
	    };
	  };
	}
	
	module.exports = exports.default;

/***/ }),
/* 1013 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = formatDistance;
	var formatDistanceLocale = {
	  lessThanXSeconds: {
	    one: 'less than a second',
	    other: 'less than {{count}} seconds'
	  },
	  xSeconds: {
	    one: '1 second',
	    other: '{{count}} seconds'
	  },
	  halfAMinute: 'half a minute',
	  lessThanXMinutes: {
	    one: 'less than a minute',
	    other: 'less than {{count}} minutes'
	  },
	  xMinutes: {
	    one: '1 minute',
	    other: '{{count}} minutes'
	  },
	  aboutXHours: {
	    one: 'about 1 hour',
	    other: 'about {{count}} hours'
	  },
	  xHours: {
	    one: '1 hour',
	    other: '{{count}} hours'
	  },
	  xDays: {
	    one: '1 day',
	    other: '{{count}} days'
	  },
	  aboutXMonths: {
	    one: 'about 1 month',
	    other: 'about {{count}} months'
	  },
	  xMonths: {
	    one: '1 month',
	    other: '{{count}} months'
	  },
	  aboutXYears: {
	    one: 'about 1 year',
	    other: 'about {{count}} years'
	  },
	  xYears: {
	    one: '1 year',
	    other: '{{count}} years'
	  },
	  overXYears: {
	    one: 'over 1 year',
	    other: 'over {{count}} years'
	  },
	  almostXYears: {
	    one: 'almost 1 year',
	    other: 'almost {{count}} years'
	  }
	};
	
	function formatDistance(token, count, options) {
	  options = options || {};
	  var result;
	
	  if (typeof formatDistanceLocale[token] === 'string') {
	    result = formatDistanceLocale[token];
	  } else if (count === 1) {
	    result = formatDistanceLocale[token].one;
	  } else {
	    result = formatDistanceLocale[token].other.replace('{{count}}', count);
	  }
	
	  if (options.addSuffix) {
	    if (options.comparison > 0) {
	      return 'in ' + result;
	    } else {
	      return result + ' ago';
	    }
	  }
	
	  return result;
	}
	
	module.exports = exports.default;

/***/ }),
/* 1014 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _index = _interopRequireDefault(__webpack_require__(1009));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateFormats = {
	  full: 'EEEE, MMMM do, y',
	  long: 'MMMM do, y',
	  medium: 'MMM d, y',
	  short: 'MM/dd/yyyy'
	};
	var timeFormats = {
	  full: 'h:mm:ss a zzzz',
	  long: 'h:mm:ss a z',
	  medium: 'h:mm:ss a',
	  short: 'h:mm a'
	};
	var dateTimeFormats = {
	  full: "{{date}} 'at' {{time}}",
	  long: "{{date}} 'at' {{time}}",
	  medium: '{{date}}, {{time}}',
	  short: '{{date}}, {{time}}'
	};
	var formatLong = {
	  date: (0, _index.default)({
	    formats: dateFormats,
	    defaultWidth: 'full'
	  }),
	  time: (0, _index.default)({
	    formats: timeFormats,
	    defaultWidth: 'full'
	  }),
	  dateTime: (0, _index.default)({
	    formats: dateTimeFormats,
	    defaultWidth: 'full'
	  })
	};
	var _default = formatLong;
	exports.default = _default;
	module.exports = exports.default;

/***/ }),
/* 1015 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = formatRelative;
	var formatRelativeLocale = {
	  lastWeek: "'last' eeee 'at' p",
	  yesterday: "'yesterday at' p",
	  today: "'today at' p",
	  tomorrow: "'tomorrow at' p",
	  nextWeek: "eeee 'at' p",
	  other: 'P'
	};
	
	function formatRelative(token, _date, _baseDate, _options) {
	  return formatRelativeLocale[token];
	}
	
	module.exports = exports.default;

/***/ }),
/* 1016 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _index = _interopRequireDefault(__webpack_require__(1010));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var eraValues = {
	  narrow: ['B', 'A'],
	  abbreviated: ['BC', 'AD'],
	  wide: ['Before Christ', 'Anno Domini']
	};
	var quarterValues = {
	  narrow: ['1', '2', '3', '4'],
	  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
	  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.
	  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
	  // Generally, formatted dates should look like they are in the middle of a sentence,
	  // e.g. in Spanish language the weekdays and months should be in the lowercase.
	
	};
	var monthValues = {
	  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
	  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
	  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
	};
	var dayValues = {
	  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
	  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
	  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
	  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
	};
	var dayPeriodValues = {
	  narrow: {
	    am: 'a',
	    pm: 'p',
	    midnight: 'mi',
	    noon: 'n',
	    morning: 'morning',
	    afternoon: 'afternoon',
	    evening: 'evening',
	    night: 'night'
	  },
	  abbreviated: {
	    am: 'AM',
	    pm: 'PM',
	    midnight: 'midnight',
	    noon: 'noon',
	    morning: 'morning',
	    afternoon: 'afternoon',
	    evening: 'evening',
	    night: 'night'
	  },
	  wide: {
	    am: 'a.m.',
	    pm: 'p.m.',
	    midnight: 'midnight',
	    noon: 'noon',
	    morning: 'morning',
	    afternoon: 'afternoon',
	    evening: 'evening',
	    night: 'night'
	  }
	};
	var formattingDayPeriodValues = {
	  narrow: {
	    am: 'a',
	    pm: 'p',
	    midnight: 'mi',
	    noon: 'n',
	    morning: 'in the morning',
	    afternoon: 'in the afternoon',
	    evening: 'in the evening',
	    night: 'at night'
	  },
	  abbreviated: {
	    am: 'AM',
	    pm: 'PM',
	    midnight: 'midnight',
	    noon: 'noon',
	    morning: 'in the morning',
	    afternoon: 'in the afternoon',
	    evening: 'in the evening',
	    night: 'at night'
	  },
	  wide: {
	    am: 'a.m.',
	    pm: 'p.m.',
	    midnight: 'midnight',
	    noon: 'noon',
	    morning: 'in the morning',
	    afternoon: 'in the afternoon',
	    evening: 'in the evening',
	    night: 'at night'
	  }
	};
	
	function ordinalNumber(dirtyNumber, _dirtyOptions) {
	  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
	  // if they are different for different grammatical genders,
	  // use `options.unit`:
	  //
	  //   var options = dirtyOptions || {}
	  //   var unit = String(options.unit)
	  //
	  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
	  // 'day', 'hour', 'minute', 'second'
	
	  var rem100 = number % 100;
	
	  if (rem100 > 20 || rem100 < 10) {
	    switch (rem100 % 10) {
	      case 1:
	        return number + 'st';
	
	      case 2:
	        return number + 'nd';
	
	      case 3:
	        return number + 'rd';
	    }
	  }
	
	  return number + 'th';
	}
	
	var localize = {
	  ordinalNumber: ordinalNumber,
	  era: (0, _index.default)({
	    values: eraValues,
	    defaultWidth: 'wide'
	  }),
	  quarter: (0, _index.default)({
	    values: quarterValues,
	    defaultWidth: 'wide',
	    argumentCallback: function (quarter) {
	      return Number(quarter) - 1;
	    }
	  }),
	  month: (0, _index.default)({
	    values: monthValues,
	    defaultWidth: 'wide'
	  }),
	  day: (0, _index.default)({
	    values: dayValues,
	    defaultWidth: 'wide'
	  }),
	  dayPeriod: (0, _index.default)({
	    values: dayPeriodValues,
	    defaultWidth: 'wide',
	    formattingValues: formattingDayPeriodValues,
	    defaultFormattingWidth: 'wide'
	  })
	};
	var _default = localize;
	exports.default = _default;
	module.exports = exports.default;

/***/ }),
/* 1017 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _index = _interopRequireDefault(__webpack_require__(1012));
	
	var _index2 = _interopRequireDefault(__webpack_require__(1011));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
	var parseOrdinalNumberPattern = /\d+/i;
	var matchEraPatterns = {
	  narrow: /^(b|a)/i,
	  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
	  wide: /^(before christ|before common era|anno domini|common era)/i
	};
	var parseEraPatterns = {
	  any: [/^b/i, /^(a|c)/i]
	};
	var matchQuarterPatterns = {
	  narrow: /^[1234]/i,
	  abbreviated: /^q[1234]/i,
	  wide: /^[1234](th|st|nd|rd)? quarter/i
	};
	var parseQuarterPatterns = {
	  any: [/1/i, /2/i, /3/i, /4/i]
	};
	var matchMonthPatterns = {
	  narrow: /^[jfmasond]/i,
	  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
	  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
	};
	var parseMonthPatterns = {
	  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
	  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
	};
	var matchDayPatterns = {
	  narrow: /^[smtwf]/i,
	  short: /^(su|mo|tu|we|th|fr|sa)/i,
	  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
	  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
	};
	var parseDayPatterns = {
	  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
	  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
	};
	var matchDayPeriodPatterns = {
	  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
	  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
	};
	var parseDayPeriodPatterns = {
	  any: {
	    am: /^a/i,
	    pm: /^p/i,
	    midnight: /^mi/i,
	    noon: /^no/i,
	    morning: /morning/i,
	    afternoon: /afternoon/i,
	    evening: /evening/i,
	    night: /night/i
	  }
	};
	var match = {
	  ordinalNumber: (0, _index.default)({
	    matchPattern: matchOrdinalNumberPattern,
	    parsePattern: parseOrdinalNumberPattern,
	    valueCallback: function (value) {
	      return parseInt(value, 10);
	    }
	  }),
	  era: (0, _index2.default)({
	    matchPatterns: matchEraPatterns,
	    defaultMatchWidth: 'wide',
	    parsePatterns: parseEraPatterns,
	    defaultParseWidth: 'any'
	  }),
	  quarter: (0, _index2.default)({
	    matchPatterns: matchQuarterPatterns,
	    defaultMatchWidth: 'wide',
	    parsePatterns: parseQuarterPatterns,
	    defaultParseWidth: 'any',
	    valueCallback: function (index) {
	      return index + 1;
	    }
	  }),
	  month: (0, _index2.default)({
	    matchPatterns: matchMonthPatterns,
	    defaultMatchWidth: 'wide',
	    parsePatterns: parseMonthPatterns,
	    defaultParseWidth: 'any'
	  }),
	  day: (0, _index2.default)({
	    matchPatterns: matchDayPatterns,
	    defaultMatchWidth: 'wide',
	    parsePatterns: parseDayPatterns,
	    defaultParseWidth: 'any'
	  }),
	  dayPeriod: (0, _index2.default)({
	    matchPatterns: matchDayPeriodPatterns,
	    defaultMatchWidth: 'any',
	    parsePatterns: parseDayPeriodPatterns,
	    defaultParseWidth: 'any'
	  })
	};
	var _default = match;
	exports.default = _default;
	module.exports = exports.default;

/***/ }),
/* 1018 */
/***/ (function(module, exports, __webpack_require__) {

	
	/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */
	
	exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
	exports.coerce = coerce;
	exports.disable = disable;
	exports.enable = enable;
	exports.enabled = enabled;
	exports.humanize = __webpack_require__(1519);
	
	/**
	 * The currently active debug mode names, and names to skip.
	 */
	
	exports.names = [];
	exports.skips = [];
	
	/**
	 * Map of special "%n" handling functions, for the debug "format" argument.
	 *
	 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	 */
	
	exports.formatters = {};
	
	/**
	 * Previous log timestamp.
	 */
	
	var prevTime;
	
	/**
	 * Select a color.
	 * @param {String} namespace
	 * @return {Number}
	 * @api private
	 */
	
	function selectColor(namespace) {
	  var hash = 0, i;
	
	  for (i in namespace) {
	    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
	    hash |= 0; // Convert to 32bit integer
	  }
	
	  return exports.colors[Math.abs(hash) % exports.colors.length];
	}
	
	/**
	 * Create a debugger with the given `namespace`.
	 *
	 * @param {String} namespace
	 * @return {Function}
	 * @api public
	 */
	
	function createDebug(namespace) {
	
	  function debug() {
	    // disabled?
	    if (!debug.enabled) return;
	
	    var self = debug;
	
	    // set `diff` timestamp
	    var curr = +new Date();
	    var ms = curr - (prevTime || curr);
	    self.diff = ms;
	    self.prev = prevTime;
	    self.curr = curr;
	    prevTime = curr;
	
	    // turn the `arguments` into a proper Array
	    var args = new Array(arguments.length);
	    for (var i = 0; i < args.length; i++) {
	      args[i] = arguments[i];
	    }
	
	    args[0] = exports.coerce(args[0]);
	
	    if ('string' !== typeof args[0]) {
	      // anything else let's inspect with %O
	      args.unshift('%O');
	    }
	
	    // apply any `formatters` transformations
	    var index = 0;
	    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
	      // if we encounter an escaped % then don't increase the array index
	      if (match === '%%') return match;
	      index++;
	      var formatter = exports.formatters[format];
	      if ('function' === typeof formatter) {
	        var val = args[index];
	        match = formatter.call(self, val);
	
	        // now we need to remove `args[index]` since it's inlined in the `format`
	        args.splice(index, 1);
	        index--;
	      }
	      return match;
	    });
	
	    // apply env-specific formatting (colors, etc.)
	    exports.formatArgs.call(self, args);
	
	    var logFn = debug.log || exports.log || console.log.bind(console);
	    logFn.apply(self, args);
	  }
	
	  debug.namespace = namespace;
	  debug.enabled = exports.enabled(namespace);
	  debug.useColors = exports.useColors();
	  debug.color = selectColor(namespace);
	
	  // env-specific initialization logic for debug instances
	  if ('function' === typeof exports.init) {
	    exports.init(debug);
	  }
	
	  return debug;
	}
	
	/**
	 * Enables a debug mode by namespaces. This can include modes
	 * separated by a colon and wildcards.
	 *
	 * @param {String} namespaces
	 * @api public
	 */
	
	function enable(namespaces) {
	  exports.save(namespaces);
	
	  exports.names = [];
	  exports.skips = [];
	
	  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
	  var len = split.length;
	
	  for (var i = 0; i < len; i++) {
	    if (!split[i]) continue; // ignore empty strings
	    namespaces = split[i].replace(/\*/g, '.*?');
	    if (namespaces[0] === '-') {
	      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
	    } else {
	      exports.names.push(new RegExp('^' + namespaces + '$'));
	    }
	  }
	}
	
	/**
	 * Disable debug output.
	 *
	 * @api public
	 */
	
	function disable() {
	  exports.enable('');
	}
	
	/**
	 * Returns true if the given mode name is enabled, false otherwise.
	 *
	 * @param {String} name
	 * @return {Boolean}
	 * @api public
	 */
	
	function enabled(name) {
	  var i, len;
	  for (i = 0, len = exports.skips.length; i < len; i++) {
	    if (exports.skips[i].test(name)) {
	      return false;
	    }
	  }
	  for (i = 0, len = exports.names.length; i < len; i++) {
	    if (exports.names[i].test(name)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	/**
	 * Coerce `val`.
	 *
	 * @param {Mixed} val
	 * @return {Mixed}
	 * @api private
	 */
	
	function coerce(val) {
	  if (val instanceof Error) return val.stack || val.message;
	  return val;
	}


/***/ }),
/* 1019 */
/***/ (function(module, exports, __webpack_require__) {

	var objectKeys = __webpack_require__(326);
	var isArguments = __webpack_require__(1209);
	var is = __webpack_require__(1524);
	var isRegex = __webpack_require__(1213);
	var flags = __webpack_require__(1752);
	var isDate = __webpack_require__(1211);
	
	var getTime = Date.prototype.getTime;
	
	function deepEqual(actual, expected, options) {
	  var opts = options || {};
	
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (opts.strict ? is(actual, expected) : actual === expected) {
	    return true;
	  }
	
	  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.
	  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {
	    return opts.strict ? is(actual, expected) : actual == expected;
	  }
	
	  /*
	   * 7.4. For all other Object pairs, including Array objects, equivalence is
	   * determined by having the same number of owned properties (as verified
	   * with Object.prototype.hasOwnProperty.call), the same set of keys
	   * (although not necessarily the same order), equivalent values for every
	   * corresponding key, and an identical 'prototype' property. Note: this
	   * accounts for both named and indexed properties on Arrays.
	   */
	  // eslint-disable-next-line no-use-before-define
	  return objEquiv(actual, expected, opts);
	}
	
	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}
	
	function isBuffer(x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {
	    return false;
	  }
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') {
	    return false;
	  }
	  return true;
	}
	
	function objEquiv(a, b, opts) {
	  /* eslint max-statements: [2, 50] */
	  var i, key;
	  if (typeof a !== typeof b) { return false; }
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) { return false; }
	
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) { return false; }
	
	  if (isArguments(a) !== isArguments(b)) { return false; }
	
	  var aIsRegex = isRegex(a);
	  var bIsRegex = isRegex(b);
	  if (aIsRegex !== bIsRegex) { return false; }
	  if (aIsRegex || bIsRegex) {
	    return a.source === b.source && flags(a) === flags(b);
	  }
	
	  if (isDate(a) && isDate(b)) {
	    return getTime.call(a) === getTime.call(b);
	  }
	
	  var aIsBuffer = isBuffer(a);
	  var bIsBuffer = isBuffer(b);
	  if (aIsBuffer !== bIsBuffer) { return false; }
	  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here
	    if (a.length !== b.length) { return false; }
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) { return false; }
	    }
	    return true;
	  }
	
	  if (typeof a !== typeof b) { return false; }
	
	  try {
	    var ka = objectKeys(a);
	    var kb = objectKeys(b);
	  } catch (e) { // happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates hasOwnProperty)
	  if (ka.length !== kb.length) { return false; }
	
	  // the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  // ~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i]) { return false; }
	  }
	  // equivalent values for every corresponding key, and ~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) { return false; }
	  }
	
	  return true;
	}
	
	module.exports = deepEqual;


/***/ }),
/* 1020 */,
/* 1021 */,
/* 1022 */,
/* 1023 */,
/* 1024 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var _inDOM = _interopRequireDefault(__webpack_require__(152));
	
	var off = function off() {};
	
	if (_inDOM.default) {
	  off = function () {
	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.removeEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.detachEvent('on' + eventName, handler);
	    };
	  }();
	}
	
	var _default = off;
	exports.default = _default;
	module.exports = exports["default"];

/***/ }),
/* 1025 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var _inDOM = _interopRequireDefault(__webpack_require__(152));
	
	var on = function on() {};
	
	if (_inDOM.default) {
	  on = function () {
	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.addEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.attachEvent('on' + eventName, function (e) {
	        e = e || window.event;
	        e.target = e.target || e.srcElement;
	        e.currentTarget = node;
	        handler.call(node, e);
	      });
	    };
	  }();
	}
	
	var _default = on;
	exports.default = _default;
	module.exports = exports["default"];

/***/ }),
/* 1026 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = scrollTop;
	
	var _isWindow = _interopRequireDefault(__webpack_require__(290));
	
	function scrollTop(node, val) {
	  var win = (0, _isWindow.default)(node);
	  if (val === undefined) return win ? 'pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft : node.scrollLeft;
	  if (win) win.scrollTo(val, 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop);else node.scrollLeft = val;
	}
	
	module.exports = exports["default"];

/***/ }),
/* 1027 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = scrollTop;
	
	var _isWindow = _interopRequireDefault(__webpack_require__(290));
	
	function scrollTop(node, val) {
	  var win = (0, _isWindow.default)(node);
	  if (val === undefined) return win ? 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop : node.scrollTop;
	  if (win) win.scrollTo('pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft, val);else node.scrollTop = val;
	}
	
	module.exports = exports["default"];

/***/ }),
/* 1028 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = _getComputedStyle;
	
	var _camelizeStyle = _interopRequireDefault(__webpack_require__(440));
	
	var rposition = /^(top|right|bottom|left)$/;
	var rnumnonpx = /^([+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|))(?!px)[a-z%]+$/i;
	
	function _getComputedStyle(node) {
	  if (!node) throw new TypeError('No Element passed to `getComputedStyle()`');
	  var doc = node.ownerDocument;
	  return 'defaultView' in doc ? doc.defaultView.opener ? node.ownerDocument.defaultView.getComputedStyle(node, null) : window.getComputedStyle(node, null) : {
	    //ie 8 "magic" from: https://github.com/jquery/jquery/blob/1.11-stable/src/css/curCSS.js#L72
	    getPropertyValue: function getPropertyValue(prop) {
	      var style = node.style;
	      prop = (0, _camelizeStyle.default)(prop);
	      if (prop == 'float') prop = 'styleFloat';
	      var current = node.currentStyle[prop] || null;
	      if (current == null && style && style[prop]) current = style[prop];
	
	      if (rnumnonpx.test(current) && !rposition.test(prop)) {
	        // Remember the original values
	        var left = style.left;
	        var runStyle = node.runtimeStyle;
	        var rsLeft = runStyle && runStyle.left; // Put in the new values to get a computed value out
	
	        if (rsLeft) runStyle.left = node.currentStyle.left;
	        style.left = prop === 'fontSize' ? '1em' : current;
	        current = style.pixelLeft + 'px'; // Revert the changed values
	
	        style.left = left;
	        if (rsLeft) runStyle.left = rsLeft;
	      }
	
	      return current;
	    }
	  };
	}
	
	module.exports = exports["default"];

/***/ }),
/* 1029 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = style;
	
	var _camelizeStyle = _interopRequireDefault(__webpack_require__(440));
	
	var _hyphenateStyle = _interopRequireDefault(__webpack_require__(1035));
	
	var _getComputedStyle2 = _interopRequireDefault(__webpack_require__(1028));
	
	var _removeStyle = _interopRequireDefault(__webpack_require__(1030));
	
	var _properties = __webpack_require__(1032);
	
	var _isTransform = _interopRequireDefault(__webpack_require__(1031));
	
	function style(node, property, value) {
	  var css = '';
	  var transforms = '';
	  var props = property;
	
	  if (typeof property === 'string') {
	    if (value === undefined) {
	      return node.style[(0, _camelizeStyle.default)(property)] || (0, _getComputedStyle2.default)(node).getPropertyValue((0, _hyphenateStyle.default)(property));
	    } else {
	      (props = {})[property] = value;
	    }
	  }
	
	  Object.keys(props).forEach(function (key) {
	    var value = props[key];
	
	    if (!value && value !== 0) {
	      (0, _removeStyle.default)(node, (0, _hyphenateStyle.default)(key));
	    } else if ((0, _isTransform.default)(key)) {
	      transforms += key + "(" + value + ") ";
	    } else {
	      css += (0, _hyphenateStyle.default)(key) + ": " + value + ";";
	    }
	  });
	
	  if (transforms) {
	    css += _properties.transform + ": " + transforms + ";";
	  }
	
	  node.style.cssText += ';' + css;
	}
	
	module.exports = exports["default"];

/***/ }),
/* 1030 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = removeStyle;
	
	function removeStyle(node, key) {
	  return 'removeProperty' in node.style ? node.style.removeProperty(key) : node.style.removeAttribute(key);
	}
	
	module.exports = exports["default"];

/***/ }),
/* 1031 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = isTransform;
	var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;
	
	function isTransform(property) {
	  return !!(property && supportedTransforms.test(property));
	}
	
	module.exports = exports["default"];

/***/ }),
/* 1032 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = void 0;
	
	var _inDOM = _interopRequireDefault(__webpack_require__(152));
	
	var transform = 'transform';
	exports.transform = transform;
	var prefix, transitionEnd, animationEnd;
	exports.animationEnd = animationEnd;
	exports.transitionEnd = transitionEnd;
	var transitionProperty, transitionDuration, transitionTiming, transitionDelay;
	exports.transitionDelay = transitionDelay;
	exports.transitionTiming = transitionTiming;
	exports.transitionDuration = transitionDuration;
	exports.transitionProperty = transitionProperty;
	var animationName, animationDuration, animationTiming, animationDelay;
	exports.animationDelay = animationDelay;
	exports.animationTiming = animationTiming;
	exports.animationDuration = animationDuration;
	exports.animationName = animationName;
	
	if (_inDOM.default) {
	  var _getTransitionPropert = getTransitionProperties();
	
	  prefix = _getTransitionPropert.prefix;
	  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;
	  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;
	  exports.transform = transform = prefix + "-" + transform;
	  exports.transitionProperty = transitionProperty = prefix + "-transition-property";
	  exports.transitionDuration = transitionDuration = prefix + "-transition-duration";
	  exports.transitionDelay = transitionDelay = prefix + "-transition-delay";
	  exports.transitionTiming = transitionTiming = prefix + "-transition-timing-function";
	  exports.animationName = animationName = prefix + "-animation-name";
	  exports.animationDuration = animationDuration = prefix + "-animation-duration";
	  exports.animationTiming = animationTiming = prefix + "-animation-delay";
	  exports.animationDelay = animationDelay = prefix + "-animation-timing-function";
	}
	
	var _default = {
	  transform: transform,
	  end: transitionEnd,
	  property: transitionProperty,
	  timing: transitionTiming,
	  delay: transitionDelay,
	  duration: transitionDuration
	};
	exports.default = _default;
	
	function getTransitionProperties() {
	  var style = document.createElement('div').style;
	  var vendorMap = {
	    O: function O(e) {
	      return "o" + e.toLowerCase();
	    },
	    Moz: function Moz(e) {
	      return e.toLowerCase();
	    },
	    Webkit: function Webkit(e) {
	      return "webkit" + e;
	    },
	    ms: function ms(e) {
	      return "MS" + e;
	    }
	  };
	  var vendors = Object.keys(vendorMap);
	  var transitionEnd, animationEnd;
	  var prefix = '';
	
	  for (var i = 0; i < vendors.length; i++) {
	    var vendor = vendors[i];
	
	    if (vendor + "TransitionProperty" in style) {
	      prefix = "-" + vendor.toLowerCase();
	      transitionEnd = vendorMap[vendor]('TransitionEnd');
	      animationEnd = vendorMap[vendor]('AnimationEnd');
	      break;
	    }
	  }
	
	  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';
	  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';
	  style = null;
	  return {
	    animationEnd: animationEnd,
	    transitionEnd: transitionEnd,
	    prefix: prefix
	  };
	}

/***/ }),
/* 1033 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = camelize;
	var rHyphen = /-(.)/g;
	
	function camelize(string) {
	  return string.replace(rHyphen, function (_, chr) {
	    return chr.toUpperCase();
	  });
	}
	
	module.exports = exports["default"];

/***/ }),
/* 1034 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = hyphenate;
	var rUpper = /([A-Z])/g;
	
	function hyphenate(string) {
	  return string.replace(rUpper, '-$1').toLowerCase();
	}
	
	module.exports = exports["default"];

/***/ }),
/* 1035 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = hyphenateStyleName;
	
	var _hyphenate = _interopRequireDefault(__webpack_require__(1034));
	
	/**
	 * Copyright 2013-2014, Facebook, Inc.
	 * All rights reserved.
	 * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js
	 */
	var msPattern = /^ms-/;
	
	function hyphenateStyleName(string) {
	  return (0, _hyphenate.default)(string).replace(msPattern, '-ms-');
	}
	
	module.exports = exports["default"];

/***/ }),
/* 1036 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var _inDOM = _interopRequireDefault(__webpack_require__(152));
	
	var vendors = ['', 'webkit', 'moz', 'o', 'ms'];
	var cancel = 'clearTimeout';
	var raf = fallback;
	var compatRaf;
	
	var getKey = function getKey(vendor, k) {
	  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';
	};
	
	if (_inDOM.default) {
	  vendors.some(function (vendor) {
	    var rafKey = getKey(vendor, 'request');
	
	    if (rafKey in window) {
	      cancel = getKey(vendor, 'cancel');
	      return raf = function raf(cb) {
	        return window[rafKey](cb);
	      };
	    }
	  });
	}
	/* https://github.com/component/raf */
	
	
	var prev = new Date().getTime();
	
	function fallback(fn) {
	  var curr = new Date().getTime(),
	      ms = Math.max(0, 16 - (curr - prev)),
	      req = setTimeout(fn, ms);
	  prev = curr;
	  return req;
	}
	
	compatRaf = function compatRaf(cb) {
	  return raf(cb);
	};
	
	compatRaf.cancel = function (id) {
	  window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);
	};
	
	var _default = compatRaf;
	exports.default = _default;
	module.exports = exports["default"];

/***/ }),
/* 1037 */
/***/ (function(module, exports, __webpack_require__) {

	// DOM-Level-1-compliant structure
	var NodePrototype = __webpack_require__(443);
	var ElementPrototype = module.exports = Object.create(NodePrototype);
	
	var domLvl1 = {
		tagName: "name"
	};
	
	Object.keys(domLvl1).forEach(function(key) {
		var shorthand = domLvl1[key];
		Object.defineProperty(ElementPrototype, key, {
			get: function() {
				return this[shorthand] || null;
			},
			set: function(val) {
				this[shorthand] = val;
				return val;
			}
		});
	});


/***/ }),
/* 1038 */,
/* 1039 */
/***/ (function(module, exports) {

	// removeSubsets
	// Given an array of nodes, remove any member that is contained by another.
	exports.removeSubsets = function(nodes) {
		var idx = nodes.length, node, ancestor, replace;
	
		// Check if each node (or one of its ancestors) is already contained in the
		// array.
		while (--idx > -1) {
			node = ancestor = nodes[idx];
	
			// Temporarily remove the node under consideration
			nodes[idx] = null;
			replace = true;
	
			while (ancestor) {
				if (nodes.indexOf(ancestor) > -1) {
					replace = false;
					nodes.splice(idx, 1);
					break;
				}
				ancestor = ancestor.parent;
			}
	
			// If the node has been found to be unique, re-insert it.
			if (replace) {
				nodes[idx] = node;
			}
		}
	
		return nodes;
	};
	
	// Source: http://dom.spec.whatwg.org/#dom-node-comparedocumentposition
	var POSITION = {
		DISCONNECTED: 1,
		PRECEDING: 2,
		FOLLOWING: 4,
		CONTAINS: 8,
		CONTAINED_BY: 16
	};
	
	// Compare the position of one node against another node in any other document.
	// The return value is a bitmask with the following values:
	//
	// document order:
	// > There is an ordering, document order, defined on all the nodes in the
	// > document corresponding to the order in which the first character of the
	// > XML representation of each node occurs in the XML representation of the
	// > document after expansion of general entities. Thus, the document element
	// > node will be the first node. Element nodes occur before their children.
	// > Thus, document order orders element nodes in order of the occurrence of
	// > their start-tag in the XML (after expansion of entities). The attribute
	// > nodes of an element occur after the element and before its children. The
	// > relative order of attribute nodes is implementation-dependent./
	// Source:
	// http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
	//
	// @argument {Node} nodaA The first node to use in the comparison
	// @argument {Node} nodeB The second node to use in the comparison
	//
	// @return {Number} A bitmask describing the input nodes' relative position.
	//         See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
	//         a description of these values.
	var comparePos = exports.compareDocumentPosition = function(nodeA, nodeB) {
		var aParents = [];
		var bParents = [];
		var current, sharedParent, siblings, aSibling, bSibling, idx;
	
		if (nodeA === nodeB) {
			return 0;
		}
	
		current = nodeA;
		while (current) {
			aParents.unshift(current);
			current = current.parent;
		}
		current = nodeB;
		while (current) {
			bParents.unshift(current);
			current = current.parent;
		}
	
		idx = 0;
		while (aParents[idx] === bParents[idx]) {
			idx++;
		}
	
		if (idx === 0) {
			return POSITION.DISCONNECTED;
		}
	
		sharedParent = aParents[idx - 1];
		siblings = sharedParent.children;
		aSibling = aParents[idx];
		bSibling = bParents[idx];
	
		if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
			if (sharedParent === nodeB) {
				return POSITION.FOLLOWING | POSITION.CONTAINED_BY;
			}
			return POSITION.FOLLOWING;
		} else {
			if (sharedParent === nodeA) {
				return POSITION.PRECEDING | POSITION.CONTAINS;
			}
			return POSITION.PRECEDING;
		}
	};
	
	// Sort an array of nodes based on their relative position in the document and
	// remove any duplicate nodes. If the array contains nodes that do not belong
	// to the same document, sort order is unspecified.
	//
	// @argument {Array} nodes Array of DOM nodes
	//
	// @returns {Array} collection of unique nodes, sorted in document order
	exports.uniqueSort = function(nodes) {
		var idx = nodes.length, node, position;
	
		nodes = nodes.slice();
	
		while (--idx > -1) {
			node = nodes[idx];
			position = nodes.indexOf(node);
			if (position > -1 && position < idx) {
				nodes.splice(idx, 1);
			}
		}
		nodes.sort(function(a, b) {
			var relative = comparePos(a, b);
			if (relative & POSITION.PRECEDING) {
				return -1;
			} else if (relative & POSITION.FOLLOWING) {
				return 1;
			}
			return 0;
		});
	
		return nodes;
	};


/***/ }),
/* 1040 */
/***/ (function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(111);
	var isTag = exports.isTag = ElementType.isTag;
	
	exports.testElement = function(options, element){
		for(var key in options){
			if(!options.hasOwnProperty(key));
			else if(key === "tag_name"){
				if(!isTag(element) || !options.tag_name(element.name)){
					return false;
				}
			} else if(key === "tag_type"){
				if(!options.tag_type(element.type)) return false;
			} else if(key === "tag_contains"){
				if(isTag(element) || !options.tag_contains(element.data)){
					return false;
				}
			} else if(!element.attribs || !options[key](element.attribs[key])){
				return false;
			}
		}
		return true;
	};
	
	var Checks = {
		tag_name: function(name){
			if(typeof name === "function"){
				return function(elem){ return isTag(elem) && name(elem.name); };
			} else if(name === "*"){
				return isTag;
			} else {
				return function(elem){ return isTag(elem) && elem.name === name; };
			}
		},
		tag_type: function(type){
			if(typeof type === "function"){
				return function(elem){ return type(elem.type); };
			} else {
				return function(elem){ return elem.type === type; };
			}
		},
		tag_contains: function(data){
			if(typeof data === "function"){
				return function(elem){ return !isTag(elem) && data(elem.data); };
			} else {
				return function(elem){ return !isTag(elem) && elem.data === data; };
			}
		}
	};
	
	function getAttribCheck(attrib, value){
		if(typeof value === "function"){
			return function(elem){ return elem.attribs && value(elem.attribs[attrib]); };
		} else {
			return function(elem){ return elem.attribs && elem.attribs[attrib] === value; };
		}
	}
	
	function combineFuncs(a, b){
		return function(elem){
			return a(elem) || b(elem);
		};
	}
	
	exports.getElements = function(options, element, recurse, limit){
		var funcs = Object.keys(options).map(function(key){
			var value = options[key];
			return key in Checks ? Checks[key](value) : getAttribCheck(key, value);
		});
	
		return funcs.length === 0 ? [] : this.filter(
			funcs.reduce(combineFuncs),
			element, recurse, limit
		);
	};
	
	exports.getElementById = function(id, element, recurse){
		if(!Array.isArray(element)) element = [element];
		return this.findOne(getAttribCheck("id", id), element, recurse !== false);
	};
	
	exports.getElementsByTagName = function(name, element, recurse, limit){
		return this.filter(Checks.tag_name(name), element, recurse, limit);
	};
	
	exports.getElementsByTagType = function(type, element, recurse, limit){
		return this.filter(Checks.tag_type(type), element, recurse, limit);
	};


/***/ }),
/* 1041 */
/***/ (function(module, exports) {

	exports.removeElement = function(elem){
		if(elem.prev) elem.prev.next = elem.next;
		if(elem.next) elem.next.prev = elem.prev;
	
		if(elem.parent){
			var childs = elem.parent.children;
			childs.splice(childs.lastIndexOf(elem), 1);
		}
	};
	
	exports.replaceElement = function(elem, replacement){
		var prev = replacement.prev = elem.prev;
		if(prev){
			prev.next = replacement;
		}
	
		var next = replacement.next = elem.next;
		if(next){
			next.prev = replacement;
		}
	
		var parent = replacement.parent = elem.parent;
		if(parent){
			var childs = parent.children;
			childs[childs.lastIndexOf(elem)] = replacement;
		}
	};
	
	exports.appendChild = function(elem, child){
		child.parent = elem;
	
		if(elem.children.push(child) !== 1){
			var sibling = elem.children[elem.children.length - 2];
			sibling.next = child;
			child.prev = sibling;
			child.next = null;
		}
	};
	
	exports.append = function(elem, next){
		var parent = elem.parent,
			currNext = elem.next;
	
		next.next = currNext;
		next.prev = elem;
		elem.next = next;
		next.parent = parent;
	
		if(currNext){
			currNext.prev = next;
			if(parent){
				var childs = parent.children;
				childs.splice(childs.lastIndexOf(currNext), 0, next);
			}
		} else if(parent){
			parent.children.push(next);
		}
	};
	
	exports.prepend = function(elem, prev){
		var parent = elem.parent;
		if(parent){
			var childs = parent.children;
			childs.splice(childs.lastIndexOf(elem), 0, prev);
		}
	
		if(elem.prev){
			elem.prev.next = prev;
		}
		
		prev.parent = parent;
		prev.prev = elem.prev;
		prev.next = elem;
		elem.prev = prev;
	};
	
	


/***/ }),
/* 1042 */
/***/ (function(module, exports, __webpack_require__) {

	var isTag = __webpack_require__(111).isTag;
	
	module.exports = {
		filter: filter,
		find: find,
		findOneChild: findOneChild,
		findOne: findOne,
		existsOne: existsOne,
		findAll: findAll
	};
	
	function filter(test, element, recurse, limit){
		if(!Array.isArray(element)) element = [element];
	
		if(typeof limit !== "number" || !isFinite(limit)){
			limit = Infinity;
		}
		return find(test, element, recurse !== false, limit);
	}
	
	function find(test, elems, recurse, limit){
		var result = [], childs;
	
		for(var i = 0, j = elems.length; i < j; i++){
			if(test(elems[i])){
				result.push(elems[i]);
				if(--limit <= 0) break;
			}
	
			childs = elems[i].children;
			if(recurse && childs && childs.length > 0){
				childs = find(test, childs, recurse, limit);
				result = result.concat(childs);
				limit -= childs.length;
				if(limit <= 0) break;
			}
		}
	
		return result;
	}
	
	function findOneChild(test, elems){
		for(var i = 0, l = elems.length; i < l; i++){
			if(test(elems[i])) return elems[i];
		}
	
		return null;
	}
	
	function findOne(test, elems){
		var elem = null;
	
		for(var i = 0, l = elems.length; i < l && !elem; i++){
			if(!isTag(elems[i])){
				continue;
			} else if(test(elems[i])){
				elem = elems[i];
			} else if(elems[i].children.length > 0){
				elem = findOne(test, elems[i].children);
			}
		}
	
		return elem;
	}
	
	function existsOne(test, elems){
		for(var i = 0, l = elems.length; i < l; i++){
			if(
				isTag(elems[i]) && (
					test(elems[i]) || (
						elems[i].children.length > 0 &&
						existsOne(test, elems[i].children)
					)
				)
			){
				return true;
			}
		}
	
		return false;
	}
	
	function findAll(test, elems){
		var result = [];
		for(var i = 0, j = elems.length; i < j; i++){
			if(!isTag(elems[i])) continue;
			if(test(elems[i])) result.push(elems[i]);
	
			if(elems[i].children.length > 0){
				result = result.concat(findAll(test, elems[i].children));
			}
		}
		return result;
	}


/***/ }),
/* 1043 */
/***/ (function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(111),
	    getOuterHTML = __webpack_require__(442),
	    isTag = ElementType.isTag;
	
	module.exports = {
		getInnerHTML: getInnerHTML,
		getOuterHTML: getOuterHTML,
		getText: getText
	};
	
	function getInnerHTML(elem, opts){
		return elem.children ? elem.children.map(function(elem){
			return getOuterHTML(elem, opts);
		}).join("") : "";
	}
	
	function getText(elem){
		if(Array.isArray(elem)) return elem.map(getText).join("");
		if(isTag(elem) || elem.type === ElementType.CDATA) return getText(elem.children);
		if(elem.type === ElementType.Text) return elem.data;
		return "";
	}


/***/ }),
/* 1044 */
/***/ (function(module, exports) {

	var getChildren = exports.getChildren = function(elem){
		return elem.children;
	};
	
	var getParent = exports.getParent = function(elem){
		return elem.parent;
	};
	
	exports.getSiblings = function(elem){
		var parent = getParent(elem);
		return parent ? getChildren(parent) : [elem];
	};
	
	exports.getAttributeValue = function(elem, name){
		return elem.attribs && elem.attribs[name];
	};
	
	exports.hasAttrib = function(elem, name){
		return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);
	};
	
	exports.getName = function(elem){
		return elem.name;
	};


/***/ }),
/* 1045 */
/***/ (function(module, exports, __webpack_require__) {

	var encode = __webpack_require__(1047),
	    decode = __webpack_require__(1046);
	
	exports.decode = function(data, level) {
	    return (!level || level <= 0 ? decode.XML : decode.HTML)(data);
	};
	
	exports.decodeStrict = function(data, level) {
	    return (!level || level <= 0 ? decode.XML : decode.HTMLStrict)(data);
	};
	
	exports.encode = function(data, level) {
	    return (!level || level <= 0 ? encode.XML : encode.HTML)(data);
	};
	
	exports.encodeXML = encode.XML;
	
	exports.encodeHTML4 = exports.encodeHTML5 = exports.encodeHTML = encode.HTML;
	
	exports.decodeXML = exports.decodeXMLStrict = decode.XML;
	
	exports.decodeHTML4 = exports.decodeHTML5 = exports.decodeHTML = decode.HTML;
	
	exports.decodeHTML4Strict = exports.decodeHTML5Strict = exports.decodeHTMLStrict = decode.HTMLStrict;
	
	exports.escape = encode.escape;


/***/ }),
/* 1046 */
/***/ (function(module, exports, __webpack_require__) {

	var entityMap = __webpack_require__(293),
	    legacyMap = __webpack_require__(453),
	    xmlMap = __webpack_require__(294),
	    decodeCodePoint = __webpack_require__(444);
	
	var decodeXMLStrict = getStrictDecoder(xmlMap),
	    decodeHTMLStrict = getStrictDecoder(entityMap);
	
	function getStrictDecoder(map) {
	    var keys = Object.keys(map).join("|"),
	        replace = getReplacer(map);
	
	    keys += "|#[xX][\\da-fA-F]+|#\\d+";
	
	    var re = new RegExp("&(?:" + keys + ");", "g");
	
	    return function(str) {
	        return String(str).replace(re, replace);
	    };
	}
	
	var decodeHTML = (function() {
	    var legacy = Object.keys(legacyMap).sort(sorter);
	
	    var keys = Object.keys(entityMap).sort(sorter);
	
	    for (var i = 0, j = 0; i < keys.length; i++) {
	        if (legacy[j] === keys[i]) {
	            keys[i] += ";?";
	            j++;
	        } else {
	            keys[i] += ";";
	        }
	    }
	
	    var re = new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g"),
	        replace = getReplacer(entityMap);
	
	    function replacer(str) {
	        if (str.substr(-1) !== ";") str += ";";
	        return replace(str);
	    }
	
	    //TODO consider creating a merged map
	    return function(str) {
	        return String(str).replace(re, replacer);
	    };
	})();
	
	function sorter(a, b) {
	    return a < b ? 1 : -1;
	}
	
	function getReplacer(map) {
	    return function replace(str) {
	        if (str.charAt(1) === "#") {
	            if (str.charAt(2) === "X" || str.charAt(2) === "x") {
	                return decodeCodePoint(parseInt(str.substr(3), 16));
	            }
	            return decodeCodePoint(parseInt(str.substr(2), 10));
	        }
	        return map[str.slice(1, -1)];
	    };
	}
	
	module.exports = {
	    XML: decodeXMLStrict,
	    HTML: decodeHTML,
	    HTMLStrict: decodeHTMLStrict
	};


/***/ }),
/* 1047 */
/***/ (function(module, exports, __webpack_require__) {

	var inverseXML = getInverseObj(__webpack_require__(294)),
	    xmlReplacer = getInverseReplacer(inverseXML);
	
	exports.XML = getInverse(inverseXML, xmlReplacer);
	
	var inverseHTML = getInverseObj(__webpack_require__(293)),
	    htmlReplacer = getInverseReplacer(inverseHTML);
	
	exports.HTML = getInverse(inverseHTML, htmlReplacer);
	
	function getInverseObj(obj) {
	    return Object.keys(obj)
	        .sort()
	        .reduce(function(inverse, name) {
	            inverse[obj[name]] = "&" + name + ";";
	            return inverse;
	        }, {});
	}
	
	function getInverseReplacer(inverse) {
	    var single = [],
	        multiple = [];
	
	    Object.keys(inverse).forEach(function(k) {
	        if (k.length === 1) {
	            single.push("\\" + k);
	        } else {
	            multiple.push(k);
	        }
	    });
	
	    //TODO add ranges
	    multiple.unshift("[" + single.join("") + "]");
	
	    return new RegExp(multiple.join("|"), "g");
	}
	
	var re_nonASCII = /[^\0-\x7F]/g,
	    re_astralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
	
	function singleCharReplacer(c) {
	    return (
	        "&#x" +
	        c
	            .charCodeAt(0)
	            .toString(16)
	            .toUpperCase() +
	        ";"
	    );
	}
	
	function astralReplacer(c) {
	    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
	    var high = c.charCodeAt(0);
	    var low = c.charCodeAt(1);
	    var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;
	    return "&#x" + codePoint.toString(16).toUpperCase() + ";";
	}
	
	function getInverse(inverse, re) {
	    function func(name) {
	        return inverse[name];
	    }
	
	    return function(data) {
	        return data
	            .replace(re, func)
	            .replace(re_astralSymbols, astralReplacer)
	            .replace(re_nonASCII, singleCharReplacer);
	    };
	}
	
	var re_xmlChars = getInverseReplacer(inverseXML);
	
	function escapeXML(data) {
	    return data
	        .replace(re_xmlChars, singleCharReplacer)
	        .replace(re_astralSymbols, astralReplacer)
	        .replace(re_nonASCII, singleCharReplacer);
	}
	
	exports.escape = escapeXML;


/***/ }),
/* 1048 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, global) {/*!
	 * @overview es6-promise - a tiny implementation of Promises/A+.
	 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
	 * @license   Licensed under MIT license
	 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
	 * @version   v4.2.8+1e68dce6
	 */
	
	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.ES6Promise = factory());
	}(this, (function () { 'use strict';
	
	function objectOrFunction(x) {
	  var type = typeof x;
	  return x !== null && (type === 'object' || type === 'function');
	}
	
	function isFunction(x) {
	  return typeof x === 'function';
	}
	
	
	
	var _isArray = void 0;
	if (Array.isArray) {
	  _isArray = Array.isArray;
	} else {
	  _isArray = function (x) {
	    return Object.prototype.toString.call(x) === '[object Array]';
	  };
	}
	
	var isArray = _isArray;
	
	var len = 0;
	var vertxNext = void 0;
	var customSchedulerFn = void 0;
	
	var asap = function asap(callback, arg) {
	  queue[len] = callback;
	  queue[len + 1] = arg;
	  len += 2;
	  if (len === 2) {
	    // If len is 2, that means that we need to schedule an async flush.
	    // If additional callbacks are queued before the queue is flushed, they
	    // will be processed by this flush that we are scheduling.
	    if (customSchedulerFn) {
	      customSchedulerFn(flush);
	    } else {
	      scheduleFlush();
	    }
	  }
	};
	
	function setScheduler(scheduleFn) {
	  customSchedulerFn = scheduleFn;
	}
	
	function setAsap(asapFn) {
	  asap = asapFn;
	}
	
	var browserWindow = typeof window !== 'undefined' ? window : undefined;
	var browserGlobal = browserWindow || {};
	var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
	var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';
	
	// test for web worker but not in IE10
	var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';
	
	// node
	function useNextTick() {
	  // node version 0.10.x displays a deprecation warning when nextTick is used recursively
	  // see https://github.com/cujojs/when/issues/410 for details
	  return function () {
	    return process.nextTick(flush);
	  };
	}
	
	// vertx
	function useVertxTimer() {
	  if (typeof vertxNext !== 'undefined') {
	    return function () {
	      vertxNext(flush);
	    };
	  }
	
	  return useSetTimeout();
	}
	
	function useMutationObserver() {
	  var iterations = 0;
	  var observer = new BrowserMutationObserver(flush);
	  var node = document.createTextNode('');
	  observer.observe(node, { characterData: true });
	
	  return function () {
	    node.data = iterations = ++iterations % 2;
	  };
	}
	
	// web worker
	function useMessageChannel() {
	  var channel = new MessageChannel();
	  channel.port1.onmessage = flush;
	  return function () {
	    return channel.port2.postMessage(0);
	  };
	}
	
	function useSetTimeout() {
	  // Store setTimeout reference so es6-promise will be unaffected by
	  // other code modifying setTimeout (like sinon.useFakeTimers())
	  var globalSetTimeout = setTimeout;
	  return function () {
	    return globalSetTimeout(flush, 1);
	  };
	}
	
	var queue = new Array(1000);
	function flush() {
	  for (var i = 0; i < len; i += 2) {
	    var callback = queue[i];
	    var arg = queue[i + 1];
	
	    callback(arg);
	
	    queue[i] = undefined;
	    queue[i + 1] = undefined;
	  }
	
	  len = 0;
	}
	
	function attemptVertx() {
	  try {
	    var vertx = Function('return this')().require('vertx');
	    vertxNext = vertx.runOnLoop || vertx.runOnContext;
	    return useVertxTimer();
	  } catch (e) {
	    return useSetTimeout();
	  }
	}
	
	var scheduleFlush = void 0;
	// Decide what async method to use to triggering processing of queued callbacks:
	if (isNode) {
	  scheduleFlush = useNextTick();
	} else if (BrowserMutationObserver) {
	  scheduleFlush = useMutationObserver();
	} else if (isWorker) {
	  scheduleFlush = useMessageChannel();
	} else if (browserWindow === undefined && "function" === 'function') {
	  scheduleFlush = attemptVertx();
	} else {
	  scheduleFlush = useSetTimeout();
	}
	
	function then(onFulfillment, onRejection) {
	  var parent = this;
	
	  var child = new this.constructor(noop);
	
	  if (child[PROMISE_ID] === undefined) {
	    makePromise(child);
	  }
	
	  var _state = parent._state;
	
	
	  if (_state) {
	    var callback = arguments[_state - 1];
	    asap(function () {
	      return invokeCallback(_state, child, callback, parent._result);
	    });
	  } else {
	    subscribe(parent, child, onFulfillment, onRejection);
	  }
	
	  return child;
	}
	
	/**
	  `Promise.resolve` returns a promise that will become resolved with the
	  passed `value`. It is shorthand for the following:
	
	  ```javascript
	  let promise = new Promise(function(resolve, reject){
	    resolve(1);
	  });
	
	  promise.then(function(value){
	    // value === 1
	  });
	  ```
	
	  Instead of writing the above, your code now simply becomes the following:
	
	  ```javascript
	  let promise = Promise.resolve(1);
	
	  promise.then(function(value){
	    // value === 1
	  });
	  ```
	
	  @method resolve
	  @static
	  @param {Any} value value that the returned promise will be resolved with
	  Useful for tooling.
	  @return {Promise} a promise that will become fulfilled with the given
	  `value`
	*/
	function resolve$1(object) {
	  /*jshint validthis:true */
	  var Constructor = this;
	
	  if (object && typeof object === 'object' && object.constructor === Constructor) {
	    return object;
	  }
	
	  var promise = new Constructor(noop);
	  resolve(promise, object);
	  return promise;
	}
	
	var PROMISE_ID = Math.random().toString(36).substring(2);
	
	function noop() {}
	
	var PENDING = void 0;
	var FULFILLED = 1;
	var REJECTED = 2;
	
	function selfFulfillment() {
	  return new TypeError("You cannot resolve a promise with itself");
	}
	
	function cannotReturnOwn() {
	  return new TypeError('A promises callback cannot return that same promise.');
	}
	
	function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {
	  try {
	    then$$1.call(value, fulfillmentHandler, rejectionHandler);
	  } catch (e) {
	    return e;
	  }
	}
	
	function handleForeignThenable(promise, thenable, then$$1) {
	  asap(function (promise) {
	    var sealed = false;
	    var error = tryThen(then$$1, thenable, function (value) {
	      if (sealed) {
	        return;
	      }
	      sealed = true;
	      if (thenable !== value) {
	        resolve(promise, value);
	      } else {
	        fulfill(promise, value);
	      }
	    }, function (reason) {
	      if (sealed) {
	        return;
	      }
	      sealed = true;
	
	      reject(promise, reason);
	    }, 'Settle: ' + (promise._label || ' unknown promise'));
	
	    if (!sealed && error) {
	      sealed = true;
	      reject(promise, error);
	    }
	  }, promise);
	}
	
	function handleOwnThenable(promise, thenable) {
	  if (thenable._state === FULFILLED) {
	    fulfill(promise, thenable._result);
	  } else if (thenable._state === REJECTED) {
	    reject(promise, thenable._result);
	  } else {
	    subscribe(thenable, undefined, function (value) {
	      return resolve(promise, value);
	    }, function (reason) {
	      return reject(promise, reason);
	    });
	  }
	}
	
	function handleMaybeThenable(promise, maybeThenable, then$$1) {
	  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {
	    handleOwnThenable(promise, maybeThenable);
	  } else {
	    if (then$$1 === undefined) {
	      fulfill(promise, maybeThenable);
	    } else if (isFunction(then$$1)) {
	      handleForeignThenable(promise, maybeThenable, then$$1);
	    } else {
	      fulfill(promise, maybeThenable);
	    }
	  }
	}
	
	function resolve(promise, value) {
	  if (promise === value) {
	    reject(promise, selfFulfillment());
	  } else if (objectOrFunction(value)) {
	    var then$$1 = void 0;
	    try {
	      then$$1 = value.then;
	    } catch (error) {
	      reject(promise, error);
	      return;
	    }
	    handleMaybeThenable(promise, value, then$$1);
	  } else {
	    fulfill(promise, value);
	  }
	}
	
	function publishRejection(promise) {
	  if (promise._onerror) {
	    promise._onerror(promise._result);
	  }
	
	  publish(promise);
	}
	
	function fulfill(promise, value) {
	  if (promise._state !== PENDING) {
	    return;
	  }
	
	  promise._result = value;
	  promise._state = FULFILLED;
	
	  if (promise._subscribers.length !== 0) {
	    asap(publish, promise);
	  }
	}
	
	function reject(promise, reason) {
	  if (promise._state !== PENDING) {
	    return;
	  }
	  promise._state = REJECTED;
	  promise._result = reason;
	
	  asap(publishRejection, promise);
	}
	
	function subscribe(parent, child, onFulfillment, onRejection) {
	  var _subscribers = parent._subscribers;
	  var length = _subscribers.length;
	
	
	  parent._onerror = null;
	
	  _subscribers[length] = child;
	  _subscribers[length + FULFILLED] = onFulfillment;
	  _subscribers[length + REJECTED] = onRejection;
	
	  if (length === 0 && parent._state) {
	    asap(publish, parent);
	  }
	}
	
	function publish(promise) {
	  var subscribers = promise._subscribers;
	  var settled = promise._state;
	
	  if (subscribers.length === 0) {
	    return;
	  }
	
	  var child = void 0,
	      callback = void 0,
	      detail = promise._result;
	
	  for (var i = 0; i < subscribers.length; i += 3) {
	    child = subscribers[i];
	    callback = subscribers[i + settled];
	
	    if (child) {
	      invokeCallback(settled, child, callback, detail);
	    } else {
	      callback(detail);
	    }
	  }
	
	  promise._subscribers.length = 0;
	}
	
	function invokeCallback(settled, promise, callback, detail) {
	  var hasCallback = isFunction(callback),
	      value = void 0,
	      error = void 0,
	      succeeded = true;
	
	  if (hasCallback) {
	    try {
	      value = callback(detail);
	    } catch (e) {
	      succeeded = false;
	      error = e;
	    }
	
	    if (promise === value) {
	      reject(promise, cannotReturnOwn());
	      return;
	    }
	  } else {
	    value = detail;
	  }
	
	  if (promise._state !== PENDING) {
	    // noop
	  } else if (hasCallback && succeeded) {
	    resolve(promise, value);
	  } else if (succeeded === false) {
	    reject(promise, error);
	  } else if (settled === FULFILLED) {
	    fulfill(promise, value);
	  } else if (settled === REJECTED) {
	    reject(promise, value);
	  }
	}
	
	function initializePromise(promise, resolver) {
	  try {
	    resolver(function resolvePromise(value) {
	      resolve(promise, value);
	    }, function rejectPromise(reason) {
	      reject(promise, reason);
	    });
	  } catch (e) {
	    reject(promise, e);
	  }
	}
	
	var id = 0;
	function nextId() {
	  return id++;
	}
	
	function makePromise(promise) {
	  promise[PROMISE_ID] = id++;
	  promise._state = undefined;
	  promise._result = undefined;
	  promise._subscribers = [];
	}
	
	function validationError() {
	  return new Error('Array Methods must be provided an Array');
	}
	
	var Enumerator = function () {
	  function Enumerator(Constructor, input) {
	    this._instanceConstructor = Constructor;
	    this.promise = new Constructor(noop);
	
	    if (!this.promise[PROMISE_ID]) {
	      makePromise(this.promise);
	    }
	
	    if (isArray(input)) {
	      this.length = input.length;
	      this._remaining = input.length;
	
	      this._result = new Array(this.length);
	
	      if (this.length === 0) {
	        fulfill(this.promise, this._result);
	      } else {
	        this.length = this.length || 0;
	        this._enumerate(input);
	        if (this._remaining === 0) {
	          fulfill(this.promise, this._result);
	        }
	      }
	    } else {
	      reject(this.promise, validationError());
	    }
	  }
	
	  Enumerator.prototype._enumerate = function _enumerate(input) {
	    for (var i = 0; this._state === PENDING && i < input.length; i++) {
	      this._eachEntry(input[i], i);
	    }
	  };
	
	  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {
	    var c = this._instanceConstructor;
	    var resolve$$1 = c.resolve;
	
	
	    if (resolve$$1 === resolve$1) {
	      var _then = void 0;
	      var error = void 0;
	      var didError = false;
	      try {
	        _then = entry.then;
	      } catch (e) {
	        didError = true;
	        error = e;
	      }
	
	      if (_then === then && entry._state !== PENDING) {
	        this._settledAt(entry._state, i, entry._result);
	      } else if (typeof _then !== 'function') {
	        this._remaining--;
	        this._result[i] = entry;
	      } else if (c === Promise$1) {
	        var promise = new c(noop);
	        if (didError) {
	          reject(promise, error);
	        } else {
	          handleMaybeThenable(promise, entry, _then);
	        }
	        this._willSettleAt(promise, i);
	      } else {
	        this._willSettleAt(new c(function (resolve$$1) {
	          return resolve$$1(entry);
	        }), i);
	      }
	    } else {
	      this._willSettleAt(resolve$$1(entry), i);
	    }
	  };
	
	  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {
	    var promise = this.promise;
	
	
	    if (promise._state === PENDING) {
	      this._remaining--;
	
	      if (state === REJECTED) {
	        reject(promise, value);
	      } else {
	        this._result[i] = value;
	      }
	    }
	
	    if (this._remaining === 0) {
	      fulfill(promise, this._result);
	    }
	  };
	
	  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {
	    var enumerator = this;
	
	    subscribe(promise, undefined, function (value) {
	      return enumerator._settledAt(FULFILLED, i, value);
	    }, function (reason) {
	      return enumerator._settledAt(REJECTED, i, reason);
	    });
	  };
	
	  return Enumerator;
	}();
	
	/**
	  `Promise.all` accepts an array of promises, and returns a new promise which
	  is fulfilled with an array of fulfillment values for the passed promises, or
	  rejected with the reason of the first passed promise to be rejected. It casts all
	  elements of the passed iterable to promises as it runs this algorithm.
	
	  Example:
	
	  ```javascript
	  let promise1 = resolve(1);
	  let promise2 = resolve(2);
	  let promise3 = resolve(3);
	  let promises = [ promise1, promise2, promise3 ];
	
	  Promise.all(promises).then(function(array){
	    // The array here would be [ 1, 2, 3 ];
	  });
	  ```
	
	  If any of the `promises` given to `all` are rejected, the first promise
	  that is rejected will be given as an argument to the returned promises's
	  rejection handler. For example:
	
	  Example:
	
	  ```javascript
	  let promise1 = resolve(1);
	  let promise2 = reject(new Error("2"));
	  let promise3 = reject(new Error("3"));
	  let promises = [ promise1, promise2, promise3 ];
	
	  Promise.all(promises).then(function(array){
	    // Code here never runs because there are rejected promises!
	  }, function(error) {
	    // error.message === "2"
	  });
	  ```
	
	  @method all
	  @static
	  @param {Array} entries array of promises
	  @param {String} label optional string for labeling the promise.
	  Useful for tooling.
	  @return {Promise} promise that is fulfilled when all `promises` have been
	  fulfilled, or rejected if any of them become rejected.
	  @static
	*/
	function all(entries) {
	  return new Enumerator(this, entries).promise;
	}
	
	/**
	  `Promise.race` returns a new promise which is settled in the same way as the
	  first passed promise to settle.
	
	  Example:
	
	  ```javascript
	  let promise1 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 1');
	    }, 200);
	  });
	
	  let promise2 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 2');
	    }, 100);
	  });
	
	  Promise.race([promise1, promise2]).then(function(result){
	    // result === 'promise 2' because it was resolved before promise1
	    // was resolved.
	  });
	  ```
	
	  `Promise.race` is deterministic in that only the state of the first
	  settled promise matters. For example, even if other promises given to the
	  `promises` array argument are resolved, but the first settled promise has
	  become rejected before the other promises became fulfilled, the returned
	  promise will become rejected:
	
	  ```javascript
	  let promise1 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 1');
	    }, 200);
	  });
	
	  let promise2 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      reject(new Error('promise 2'));
	    }, 100);
	  });
	
	  Promise.race([promise1, promise2]).then(function(result){
	    // Code here never runs
	  }, function(reason){
	    // reason.message === 'promise 2' because promise 2 became rejected before
	    // promise 1 became fulfilled
	  });
	  ```
	
	  An example real-world use case is implementing timeouts:
	
	  ```javascript
	  Promise.race([ajax('foo.json'), timeout(5000)])
	  ```
	
	  @method race
	  @static
	  @param {Array} promises array of promises to observe
	  Useful for tooling.
	  @return {Promise} a promise which settles in the same way as the first passed
	  promise to settle.
	*/
	function race(entries) {
	  /*jshint validthis:true */
	  var Constructor = this;
	
	  if (!isArray(entries)) {
	    return new Constructor(function (_, reject) {
	      return reject(new TypeError('You must pass an array to race.'));
	    });
	  } else {
	    return new Constructor(function (resolve, reject) {
	      var length = entries.length;
	      for (var i = 0; i < length; i++) {
	        Constructor.resolve(entries[i]).then(resolve, reject);
	      }
	    });
	  }
	}
	
	/**
	  `Promise.reject` returns a promise rejected with the passed `reason`.
	  It is shorthand for the following:
	
	  ```javascript
	  let promise = new Promise(function(resolve, reject){
	    reject(new Error('WHOOPS'));
	  });
	
	  promise.then(function(value){
	    // Code here doesn't run because the promise is rejected!
	  }, function(reason){
	    // reason.message === 'WHOOPS'
	  });
	  ```
	
	  Instead of writing the above, your code now simply becomes the following:
	
	  ```javascript
	  let promise = Promise.reject(new Error('WHOOPS'));
	
	  promise.then(function(value){
	    // Code here doesn't run because the promise is rejected!
	  }, function(reason){
	    // reason.message === 'WHOOPS'
	  });
	  ```
	
	  @method reject
	  @static
	  @param {Any} reason value that the returned promise will be rejected with.
	  Useful for tooling.
	  @return {Promise} a promise rejected with the given `reason`.
	*/
	function reject$1(reason) {
	  /*jshint validthis:true */
	  var Constructor = this;
	  var promise = new Constructor(noop);
	  reject(promise, reason);
	  return promise;
	}
	
	function needsResolver() {
	  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
	}
	
	function needsNew() {
	  throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
	}
	
	/**
	  Promise objects represent the eventual result of an asynchronous operation. The
	  primary way of interacting with a promise is through its `then` method, which
	  registers callbacks to receive either a promise's eventual value or the reason
	  why the promise cannot be fulfilled.
	
	  Terminology
	  -----------
	
	  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
	  - `thenable` is an object or function that defines a `then` method.
	  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
	  - `exception` is a value that is thrown using the throw statement.
	  - `reason` is a value that indicates why a promise was rejected.
	  - `settled` the final resting state of a promise, fulfilled or rejected.
	
	  A promise can be in one of three states: pending, fulfilled, or rejected.
	
	  Promises that are fulfilled have a fulfillment value and are in the fulfilled
	  state.  Promises that are rejected have a rejection reason and are in the
	  rejected state.  A fulfillment value is never a thenable.
	
	  Promises can also be said to *resolve* a value.  If this value is also a
	  promise, then the original promise's settled state will match the value's
	  settled state.  So a promise that *resolves* a promise that rejects will
	  itself reject, and a promise that *resolves* a promise that fulfills will
	  itself fulfill.
	
	
	  Basic Usage:
	  ------------
	
	  ```js
	  let promise = new Promise(function(resolve, reject) {
	    // on success
	    resolve(value);
	
	    // on failure
	    reject(reason);
	  });
	
	  promise.then(function(value) {
	    // on fulfillment
	  }, function(reason) {
	    // on rejection
	  });
	  ```
	
	  Advanced Usage:
	  ---------------
	
	  Promises shine when abstracting away asynchronous interactions such as
	  `XMLHttpRequest`s.
	
	  ```js
	  function getJSON(url) {
	    return new Promise(function(resolve, reject){
	      let xhr = new XMLHttpRequest();
	
	      xhr.open('GET', url);
	      xhr.onreadystatechange = handler;
	      xhr.responseType = 'json';
	      xhr.setRequestHeader('Accept', 'application/json');
	      xhr.send();
	
	      function handler() {
	        if (this.readyState === this.DONE) {
	          if (this.status === 200) {
	            resolve(this.response);
	          } else {
	            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
	          }
	        }
	      };
	    });
	  }
	
	  getJSON('/posts.json').then(function(json) {
	    // on fulfillment
	  }, function(reason) {
	    // on rejection
	  });
	  ```
	
	  Unlike callbacks, promises are great composable primitives.
	
	  ```js
	  Promise.all([
	    getJSON('/posts'),
	    getJSON('/comments')
	  ]).then(function(values){
	    values[0] // => postsJSON
	    values[1] // => commentsJSON
	
	    return values;
	  });
	  ```
	
	  @class Promise
	  @param {Function} resolver
	  Useful for tooling.
	  @constructor
	*/
	
	var Promise$1 = function () {
	  function Promise(resolver) {
	    this[PROMISE_ID] = nextId();
	    this._result = this._state = undefined;
	    this._subscribers = [];
	
	    if (noop !== resolver) {
	      typeof resolver !== 'function' && needsResolver();
	      this instanceof Promise ? initializePromise(this, resolver) : needsNew();
	    }
	  }
	
	  /**
	  The primary way of interacting with a promise is through its `then` method,
	  which registers callbacks to receive either a promise's eventual value or the
	  reason why the promise cannot be fulfilled.
	   ```js
	  findUser().then(function(user){
	    // user is available
	  }, function(reason){
	    // user is unavailable, and you are given the reason why
	  });
	  ```
	   Chaining
	  --------
	   The return value of `then` is itself a promise.  This second, 'downstream'
	  promise is resolved with the return value of the first promise's fulfillment
	  or rejection handler, or rejected if the handler throws an exception.
	   ```js
	  findUser().then(function (user) {
	    return user.name;
	  }, function (reason) {
	    return 'default name';
	  }).then(function (userName) {
	    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
	    // will be `'default name'`
	  });
	   findUser().then(function (user) {
	    throw new Error('Found user, but still unhappy');
	  }, function (reason) {
	    throw new Error('`findUser` rejected and we're unhappy');
	  }).then(function (value) {
	    // never reached
	  }, function (reason) {
	    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
	    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
	  });
	  ```
	  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
	   ```js
	  findUser().then(function (user) {
	    throw new PedagogicalException('Upstream error');
	  }).then(function (value) {
	    // never reached
	  }).then(function (value) {
	    // never reached
	  }, function (reason) {
	    // The `PedgagocialException` is propagated all the way down to here
	  });
	  ```
	   Assimilation
	  ------------
	   Sometimes the value you want to propagate to a downstream promise can only be
	  retrieved asynchronously. This can be achieved by returning a promise in the
	  fulfillment or rejection handler. The downstream promise will then be pending
	  until the returned promise is settled. This is called *assimilation*.
	   ```js
	  findUser().then(function (user) {
	    return findCommentsByAuthor(user);
	  }).then(function (comments) {
	    // The user's comments are now available
	  });
	  ```
	   If the assimliated promise rejects, then the downstream promise will also reject.
	   ```js
	  findUser().then(function (user) {
	    return findCommentsByAuthor(user);
	  }).then(function (comments) {
	    // If `findCommentsByAuthor` fulfills, we'll have the value here
	  }, function (reason) {
	    // If `findCommentsByAuthor` rejects, we'll have the reason here
	  });
	  ```
	   Simple Example
	  --------------
	   Synchronous Example
	   ```javascript
	  let result;
	   try {
	    result = findResult();
	    // success
	  } catch(reason) {
	    // failure
	  }
	  ```
	   Errback Example
	   ```js
	  findResult(function(result, err){
	    if (err) {
	      // failure
	    } else {
	      // success
	    }
	  });
	  ```
	   Promise Example;
	   ```javascript
	  findResult().then(function(result){
	    // success
	  }, function(reason){
	    // failure
	  });
	  ```
	   Advanced Example
	  --------------
	   Synchronous Example
	   ```javascript
	  let author, books;
	   try {
	    author = findAuthor();
	    books  = findBooksByAuthor(author);
	    // success
	  } catch(reason) {
	    // failure
	  }
	  ```
	   Errback Example
	   ```js
	   function foundBooks(books) {
	   }
	   function failure(reason) {
	   }
	   findAuthor(function(author, err){
	    if (err) {
	      failure(err);
	      // failure
	    } else {
	      try {
	        findBoooksByAuthor(author, function(books, err) {
	          if (err) {
	            failure(err);
	          } else {
	            try {
	              foundBooks(books);
	            } catch(reason) {
	              failure(reason);
	            }
	          }
	        });
	      } catch(error) {
	        failure(err);
	      }
	      // success
	    }
	  });
	  ```
	   Promise Example;
	   ```javascript
	  findAuthor().
	    then(findBooksByAuthor).
	    then(function(books){
	      // found books
	  }).catch(function(reason){
	    // something went wrong
	  });
	  ```
	   @method then
	  @param {Function} onFulfilled
	  @param {Function} onRejected
	  Useful for tooling.
	  @return {Promise}
	  */
	
	  /**
	  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
	  as the catch block of a try/catch statement.
	  ```js
	  function findAuthor(){
	  throw new Error('couldn't find that author');
	  }
	  // synchronous
	  try {
	  findAuthor();
	  } catch(reason) {
	  // something went wrong
	  }
	  // async with promises
	  findAuthor().catch(function(reason){
	  // something went wrong
	  });
	  ```
	  @method catch
	  @param {Function} onRejection
	  Useful for tooling.
	  @return {Promise}
	  */
	
	
	  Promise.prototype.catch = function _catch(onRejection) {
	    return this.then(null, onRejection);
	  };
	
	  /**
	    `finally` will be invoked regardless of the promise's fate just as native
	    try/catch/finally behaves
	  
	    Synchronous example:
	  
	    ```js
	    findAuthor() {
	      if (Math.random() > 0.5) {
	        throw new Error();
	      }
	      return new Author();
	    }
	  
	    try {
	      return findAuthor(); // succeed or fail
	    } catch(error) {
	      return findOtherAuther();
	    } finally {
	      // always runs
	      // doesn't affect the return value
	    }
	    ```
	  
	    Asynchronous example:
	  
	    ```js
	    findAuthor().catch(function(reason){
	      return findOtherAuther();
	    }).finally(function(){
	      // author was either found, or not
	    });
	    ```
	  
	    @method finally
	    @param {Function} callback
	    @return {Promise}
	  */
	
	
	  Promise.prototype.finally = function _finally(callback) {
	    var promise = this;
	    var constructor = promise.constructor;
	
	    if (isFunction(callback)) {
	      return promise.then(function (value) {
	        return constructor.resolve(callback()).then(function () {
	          return value;
	        });
	      }, function (reason) {
	        return constructor.resolve(callback()).then(function () {
	          throw reason;
	        });
	      });
	    }
	
	    return promise.then(callback, callback);
	  };
	
	  return Promise;
	}();
	
	Promise$1.prototype.then = then;
	Promise$1.all = all;
	Promise$1.race = race;
	Promise$1.resolve = resolve$1;
	Promise$1.reject = reject$1;
	Promise$1._setScheduler = setScheduler;
	Promise$1._setAsap = setAsap;
	Promise$1._asap = asap;
	
	/*global self*/
	function polyfill() {
	  var local = void 0;
	
	  if (typeof global !== 'undefined') {
	    local = global;
	  } else if (typeof self !== 'undefined') {
	    local = self;
	  } else {
	    try {
	      local = Function('return this')();
	    } catch (e) {
	      throw new Error('polyfill failed because global object is unavailable in this environment');
	    }
	  }
	
	  var P = local.Promise;
	
	  if (P) {
	    var promiseToString = null;
	    try {
	      promiseToString = Object.prototype.toString.call(P.resolve());
	    } catch (e) {
	      // silently ignored
	    }
	
	    if (promiseToString === '[object Promise]' && !P.cast) {
	      return;
	    }
	  }
	
	  local.Promise = Promise$1;
	}
	
	// Strange compat..
	Promise$1.polyfill = polyfill;
	Promise$1.Promise = Promise$1;
	
	return Promise$1;
	
	})));
	
	
	
	//# sourceMappingURL=es6-promise.map
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44), (function() { return this; }())))

/***/ }),
/* 1049 */,
/* 1050 */,
/* 1051 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ }),
/* 1052 */
/***/ (function(module, exports) {

	'use strict';
	
	/* eslint no-invalid-this: 1 */
	
	var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
	var slice = Array.prototype.slice;
	var toStr = Object.prototype.toString;
	var funcType = '[object Function]';
	
	module.exports = function bind(that) {
	    var target = this;
	    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
	        throw new TypeError(ERROR_MESSAGE + target);
	    }
	    var args = slice.call(arguments, 1);
	
	    var bound;
	    var binder = function () {
	        if (this instanceof bound) {
	            var result = target.apply(
	                this,
	                args.concat(slice.call(arguments))
	            );
	            if (Object(result) === result) {
	                return result;
	            }
	            return this;
	        } else {
	            return target.apply(
	                that,
	                args.concat(slice.call(arguments))
	            );
	        }
	    };
	
	    var boundLength = Math.max(0, target.length - args.length);
	    var boundArgs = [];
	    for (var i = 0; i < boundLength; i++) {
	        boundArgs.push('$' + i);
	    }
	
	    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);
	
	    if (target.prototype) {
	        var Empty = function Empty() {};
	        Empty.prototype = target.prototype;
	        bound.prototype = new Empty();
	        Empty.prototype = null;
	    }
	
	    return bound;
	};


/***/ }),
/* 1053 */,
/* 1054 */,
/* 1055 */,
/* 1056 */,
/* 1057 */,
/* 1058 */,
/* 1059 */,
/* 1060 */,
/* 1061 */,
/* 1062 */,
/* 1063 */,
/* 1064 */,
/* 1065 */,
/* 1066 */,
/* 1067 */,
/* 1068 */,
/* 1069 */,
/* 1070 */,
/* 1071 */,
/* 1072 */,
/* 1073 */,
/* 1074 */,
/* 1075 */,
/* 1076 */,
/* 1077 */,
/* 1078 */,
/* 1079 */,
/* 1080 */,
/* 1081 */,
/* 1082 */,
/* 1083 */,
/* 1084 */,
/* 1085 */,
/* 1086 */,
/* 1087 */,
/* 1088 */,
/* 1089 */,
/* 1090 */,
/* 1091 */,
/* 1092 */,
/* 1093 */,
/* 1094 */,
/* 1095 */,
/* 1096 */,
/* 1097 */,
/* 1098 */,
/* 1099 */,
/* 1100 */,
/* 1101 */,
/* 1102 */,
/* 1103 */,
/* 1104 */,
/* 1105 */,
/* 1106 */,
/* 1107 */,
/* 1108 */,
/* 1109 */,
/* 1110 */,
/* 1111 */,
/* 1112 */,
/* 1113 */,
/* 1114 */,
/* 1115 */,
/* 1116 */,
/* 1117 */,
/* 1118 */,
/* 1119 */,
/* 1120 */,
/* 1121 */,
/* 1122 */,
/* 1123 */,
/* 1124 */,
/* 1125 */,
/* 1126 */,
/* 1127 */,
/* 1128 */,
/* 1129 */,
/* 1130 */,
/* 1131 */,
/* 1132 */,
/* 1133 */,
/* 1134 */,
/* 1135 */,
/* 1136 */,
/* 1137 */,
/* 1138 */,
/* 1139 */,
/* 1140 */,
/* 1141 */,
/* 1142 */,
/* 1143 */,
/* 1144 */,
/* 1145 */,
/* 1146 */,
/* 1147 */,
/* 1148 */,
/* 1149 */,
/* 1150 */,
/* 1151 */,
/* 1152 */,
/* 1153 */,
/* 1154 */,
/* 1155 */,
/* 1156 */,
/* 1157 */,
/* 1158 */,
/* 1159 */,
/* 1160 */,
/* 1161 */,
/* 1162 */,
/* 1163 */,
/* 1164 */,
/* 1165 */,
/* 1166 */,
/* 1167 */,
/* 1168 */,
/* 1169 */,
/* 1170 */,
/* 1171 */,
/* 1172 */,
/* 1173 */,
/* 1174 */,
/* 1175 */,
/* 1176 */,
/* 1177 */,
/* 1178 */,
/* 1179 */,
/* 1180 */,
/* 1181 */,
/* 1182 */,
/* 1183 */,
/* 1184 */,
/* 1185 */,
/* 1186 */,
/* 1187 */,
/* 1188 */,
/* 1189 */
/***/ (function(module, exports, __webpack_require__) {

	/** @license React v16.14.0
	 * react-dom.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	/*
	 Modernizr 3.0.0pre (Custom Build) | MIT
	*/
	'use strict';var aa=__webpack_require__(2),n=__webpack_require__(213),r=__webpack_require__(1757);function u(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(u(227));
	function ba(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,k){da=!1;ea=null;ba.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,k){ja.apply(this,arguments);if(da){if(da){var l=ea;da=!1;ea=null}else throw Error(u(198));fa||(fa=!0,ha=l)}}var la=null,ma=null,na=null;
	function oa(a,b,c){var d=a.type||"unknown-event";a.currentTarget=na(c);ka(d,b,void 0,a);a.currentTarget=null}var pa=null,qa={};
	function ra(){if(pa)for(var a in qa){var b=qa[a],c=pa.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!sa[c]){if(!b.extractEvents)throw Error(u(97,a));sa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(ta.hasOwnProperty(h))throw Error(u(99,h));ta[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ua(k[e],g,h);e=!0}else f.registrationName?(ua(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}
	function ua(a,b,c){if(va[a])throw Error(u(100,a));va[a]=b;wa[a]=b.eventTypes[c].dependencies}var sa=[],ta={},va={},wa={};function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!qa.hasOwnProperty(c)||qa[c]!==d){if(qa[c])throw Error(u(102,c));qa[c]=d;b=!0}}b&&ra()}var ya=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),za=null,Aa=null,Ba=null;
	function Ca(a){if(a=ma(a)){if("function"!==typeof za)throw Error(u(280));var b=a.stateNode;b&&(b=la(b),za(a.stateNode,a.type,b))}}function Da(a){Aa?Ba?Ba.push(a):Ba=[a]:Aa=a}function Ea(){if(Aa){var a=Aa,b=Ba;Ba=Aa=null;Ca(a);if(b)for(a=0;a<b.length;a++)Ca(b[a])}}function Fa(a,b){return a(b)}function Ga(a,b,c,d,e){return a(b,c,d,e)}function Ha(){}var Ia=Fa,Ja=!1,Ka=!1;function La(){if(null!==Aa||null!==Ba)Ha(),Ea()}
	function Ma(a,b,c){if(Ka)return a(b,c);Ka=!0;try{return Ia(a,b,c)}finally{Ka=!1,La()}}var Na=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Oa=Object.prototype.hasOwnProperty,Pa={},Qa={};
	function Ra(a){if(Oa.call(Qa,a))return!0;if(Oa.call(Pa,a))return!1;if(Na.test(a))return Qa[a]=!0;Pa[a]=!0;return!1}function Sa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
	function Ta(a,b,c,d){if(null===b||"undefined"===typeof b||Sa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var C={};
	"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){C[a]=new v(a,0,!1,a,null,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];C[b]=new v(b,1,!1,a[1],null,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){C[a]=new v(a,2,!1,a.toLowerCase(),null,!1)});
	["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){C[a]=new v(a,2,!1,a,null,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){C[a]=new v(a,3,!1,a.toLowerCase(),null,!1)});
	["checked","multiple","muted","selected"].forEach(function(a){C[a]=new v(a,3,!0,a,null,!1)});["capture","download"].forEach(function(a){C[a]=new v(a,4,!1,a,null,!1)});["cols","rows","size","span"].forEach(function(a){C[a]=new v(a,6,!1,a,null,!1)});["rowSpan","start"].forEach(function(a){C[a]=new v(a,5,!1,a.toLowerCase(),null,!1)});var Ua=/[\-:]([a-z])/g;function Va(a){return a[1].toUpperCase()}
	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Ua,
	Va);C[b]=new v(b,1,!1,a,null,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1)});["tabIndex","crossOrigin"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!1)});
	C.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0);["src","href","action","formAction"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!0)});var Wa=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Wa.hasOwnProperty("ReactCurrentDispatcher")||(Wa.ReactCurrentDispatcher={current:null});Wa.hasOwnProperty("ReactCurrentBatchConfig")||(Wa.ReactCurrentBatchConfig={suspense:null});
	function Xa(a,b,c,d){var e=C.hasOwnProperty(b)?C[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Ta(b,c,e,d)&&(c=null),d||null===e?Ra(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
	var Ya=/^(.*)[\\\/]/,E="function"===typeof Symbol&&Symbol.for,Za=E?Symbol.for("react.element"):60103,$a=E?Symbol.for("react.portal"):60106,ab=E?Symbol.for("react.fragment"):60107,bb=E?Symbol.for("react.strict_mode"):60108,cb=E?Symbol.for("react.profiler"):60114,db=E?Symbol.for("react.provider"):60109,eb=E?Symbol.for("react.context"):60110,fb=E?Symbol.for("react.concurrent_mode"):60111,gb=E?Symbol.for("react.forward_ref"):60112,hb=E?Symbol.for("react.suspense"):60113,ib=E?Symbol.for("react.suspense_list"):
	60120,jb=E?Symbol.for("react.memo"):60115,kb=E?Symbol.for("react.lazy"):60116,lb=E?Symbol.for("react.block"):60121,mb="function"===typeof Symbol&&Symbol.iterator;function nb(a){if(null===a||"object"!==typeof a)return null;a=mb&&a[mb]||a["@@iterator"];return"function"===typeof a?a:null}function ob(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}
	function pb(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ab:return"Fragment";case $a:return"Portal";case cb:return"Profiler";case bb:return"StrictMode";case hb:return"Suspense";case ib:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case eb:return"Context.Consumer";case db:return"Context.Provider";case gb:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+")":
	"ForwardRef");case jb:return pb(a.type);case lb:return pb(a.render);case kb:if(a=1===a._status?a._result:null)return pb(a)}return null}function qb(a){var b="";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c="";break a;default:var d=a._debugOwner,e=a._debugSource,f=pb(a.type);c=null;d&&(c=pb(d.type));d=f;f="";e?f=" (at "+e.fileName.replace(Ya,"")+":"+e.lineNumber+")":c&&(f=" (created by "+c+")");c="\n    in "+(d||"Unknown")+f}b+=c;a=a.return}while(a);return b}
	function rb(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function sb(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
	function tb(a){var b=sb(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
	null;delete a[b]}}}}function xb(a){a._valueTracker||(a._valueTracker=tb(a))}function yb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=sb(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function zb(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}
	function Ab(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=rb(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Bb(a,b){b=b.checked;null!=b&&Xa(a,"checked",b,!1)}
	function Cb(a,b){Bb(a,b);var c=rb(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?Db(a,b.type,c):b.hasOwnProperty("defaultValue")&&Db(a,b.type,rb(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
	function Eb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
	function Db(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function Fb(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Gb(a,b){a=n({children:void 0},b);if(b=Fb(b.children))a.children=b;return a}
	function Hb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+rb(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
	function Ib(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Jb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(u(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(u(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:rb(c)}}
	function Kb(a,b){var c=rb(b.value),d=rb(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function Lb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var Mb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
	function Nb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ob(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Nb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
	var Pb,Qb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Mb.svg||"innerHTML"in a)a.innerHTML=b;else{Pb=Pb||document.createElement("div");Pb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=Pb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
	function Rb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Sb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Tb={animationend:Sb("Animation","AnimationEnd"),animationiteration:Sb("Animation","AnimationIteration"),animationstart:Sb("Animation","AnimationStart"),transitionend:Sb("Transition","TransitionEnd")},Ub={},Vb={};
	ya&&(Vb=document.createElement("div").style,"AnimationEvent"in window||(delete Tb.animationend.animation,delete Tb.animationiteration.animation,delete Tb.animationstart.animation),"TransitionEvent"in window||delete Tb.transitionend.transition);function Wb(a){if(Ub[a])return Ub[a];if(!Tb[a])return a;var b=Tb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Vb)return Ub[a]=b[c];return a}
	var Xb=Wb("animationend"),Yb=Wb("animationiteration"),Zb=Wb("animationstart"),$b=Wb("transitionend"),ac="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),bc=new ("function"===typeof WeakMap?WeakMap:Map);function cc(a){var b=bc.get(a);void 0===b&&(b=new Map,bc.set(a,b));return b}
	function dc(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ec(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function fc(a){if(dc(a)!==a)throw Error(u(188));}
	function gc(a){var b=a.alternate;if(!b){b=dc(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return fc(e),a;if(f===d)return fc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
	c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function hc(a){a=gc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
	function ic(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function jc(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var kc=null;
	function lc(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)oa(a,b[d],c[d]);else b&&oa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function mc(a){null!==a&&(kc=ic(kc,a));a=kc;kc=null;if(a){jc(a,lc);if(kc)throw Error(u(95));if(fa)throw a=ha,fa=!1,ha=null,a;}}
	function nc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function oc(a){if(!ya)return!1;a="on"+a;var b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}var pc=[];function qc(a){a.topLevelType=null;a.nativeEvent=null;a.targetInst=null;a.ancestors.length=0;10>pc.length&&pc.push(a)}
	function rc(a,b,c,d){if(pc.length){var e=pc.pop();e.topLevelType=a;e.eventSystemFlags=d;e.nativeEvent=b;e.targetInst=c;return e}return{topLevelType:a,eventSystemFlags:d,nativeEvent:b,targetInst:c,ancestors:[]}}
	function sc(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=tc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=nc(a.nativeEvent);d=a.topLevelType;var f=a.nativeEvent,g=a.eventSystemFlags;0===c&&(g|=64);for(var h=null,k=0;k<sa.length;k++){var l=sa[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=
	ic(h,l))}mc(h)}}function uc(a,b,c){if(!c.has(a)){switch(a){case "scroll":vc(b,"scroll",!0);break;case "focus":case "blur":vc(b,"focus",!0);vc(b,"blur",!0);c.set("blur",null);c.set("focus",null);break;case "cancel":case "close":oc(a)&&vc(b,a,!0);break;case "invalid":case "submit":case "reset":break;default:-1===ac.indexOf(a)&&F(a,b)}c.set(a,null)}}
	var wc,xc,yc,zc=!1,Ac=[],Bc=null,Cc=null,Dc=null,Ec=new Map,Fc=new Map,Gc=[],Hc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ic="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
	function Jc(a,b){var c=cc(b);Hc.forEach(function(a){uc(a,b,c)});Ic.forEach(function(a){uc(a,b,c)})}function Kc(a,b,c,d,e){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:e,container:d}}
	function Lc(a,b){switch(a){case "focus":case "blur":Bc=null;break;case "dragenter":case "dragleave":Cc=null;break;case "mouseover":case "mouseout":Dc=null;break;case "pointerover":case "pointerout":Ec.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Fc.delete(b.pointerId)}}function Mc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=Kc(b,c,d,e,f),null!==b&&(b=Nc(b),null!==b&&xc(b)),a;a.eventSystemFlags|=d;return a}
	function Oc(a,b,c,d,e){switch(b){case "focus":return Bc=Mc(Bc,a,b,c,d,e),!0;case "dragenter":return Cc=Mc(Cc,a,b,c,d,e),!0;case "mouseover":return Dc=Mc(Dc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Ec.set(f,Mc(Ec.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Fc.set(f,Mc(Fc.get(f)||null,a,b,c,d,e)),!0}return!1}
	function Pc(a){var b=tc(a.target);if(null!==b){var c=dc(b);if(null!==c)if(b=c.tag,13===b){if(b=ec(c),null!==b){a.blockedOn=b;r.unstable_runWithPriority(a.priority,function(){yc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Qc(a){if(null!==a.blockedOn)return!1;var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);if(null!==b){var c=Nc(b);null!==c&&xc(c);a.blockedOn=b;return!1}return!0}
	function Sc(a,b,c){Qc(a)&&c.delete(b)}function Tc(){for(zc=!1;0<Ac.length;){var a=Ac[0];if(null!==a.blockedOn){a=Nc(a.blockedOn);null!==a&&wc(a);break}var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);null!==b?a.blockedOn=b:Ac.shift()}null!==Bc&&Qc(Bc)&&(Bc=null);null!==Cc&&Qc(Cc)&&(Cc=null);null!==Dc&&Qc(Dc)&&(Dc=null);Ec.forEach(Sc);Fc.forEach(Sc)}function Uc(a,b){a.blockedOn===b&&(a.blockedOn=null,zc||(zc=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Tc)))}
	function Vc(a){function b(b){return Uc(b,a)}if(0<Ac.length){Uc(Ac[0],a);for(var c=1;c<Ac.length;c++){var d=Ac[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Bc&&Uc(Bc,a);null!==Cc&&Uc(Cc,a);null!==Dc&&Uc(Dc,a);Ec.forEach(b);Fc.forEach(b);for(c=0;c<Gc.length;c++)d=Gc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Gc.length&&(c=Gc[0],null===c.blockedOn);)Pc(c),null===c.blockedOn&&Gc.shift()}
	var Wc={},Yc=new Map,Zc=new Map,$c=["abort","abort",Xb,"animationEnd",Yb,"animationIteration",Zb,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking",
	"seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",$b,"transitionEnd","waiting","waiting"];function ad(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1],f="on"+(e[0].toUpperCase()+e.slice(1));f={phasedRegistrationNames:{bubbled:f,captured:f+"Capture"},dependencies:[d],eventPriority:b};Zc.set(d,b);Yc.set(d,f);Wc[e]=f}}
	ad("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0);
	ad("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);ad($c,2);for(var bd="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),cd=0;cd<bd.length;cd++)Zc.set(bd[cd],0);
	var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function F(a,b){vc(b,a,!1)}function vc(a,b,c){var d=Zc.get(b);switch(void 0===d?2:d){case 0:d=gd.bind(null,b,1,a);break;case 1:d=hd.bind(null,b,1,a);break;default:d=id.bind(null,b,1,a)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function gd(a,b,c,d){Ja||Ha();var e=id,f=Ja;Ja=!0;try{Ga(e,a,b,c,d)}finally{(Ja=f)||La()}}function hd(a,b,c,d){ed(dd,id.bind(null,a,b,c,d))}
	function id(a,b,c,d){if(fd)if(0<Ac.length&&-1<Hc.indexOf(a))a=Kc(null,a,b,c,d),Ac.push(a);else{var e=Rc(a,b,c,d);if(null===e)Lc(a,d);else if(-1<Hc.indexOf(a))a=Kc(e,a,b,c,d),Ac.push(a);else if(!Oc(e,a,b,c,d)){Lc(a,d);a=rc(a,d,null,b);try{Ma(sc,a)}finally{qc(a)}}}}
	function Rc(a,b,c,d){c=nc(d);c=tc(c);if(null!==c){var e=dc(c);if(null===e)c=null;else{var f=e.tag;if(13===f){c=ec(e);if(null!==c)return c;c=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;c=null}else e!==c&&(c=null)}}a=rc(a,d,c,b);try{Ma(sc,a)}finally{qc(a)}return null}
	var jd={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
	floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kd=["Webkit","ms","Moz","O"];Object.keys(jd).forEach(function(a){kd.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);jd[b]=jd[a]})});function ld(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||jd.hasOwnProperty(a)&&jd[a]?(""+b).trim():b+"px"}
	function md(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=ld(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var nd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
	function od(a,b){if(b){if(nd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,""));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(u(62,""));}}
	function pd(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var qd=Mb.html;function rd(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=cc(a);b=wa[b];for(var d=0;d<b.length;d++)uc(b[d],a,c)}function sd(){}
	function td(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ud(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function vd(a,b){var c=ud(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ud(c)}}
	function wd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wd(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xd(){for(var a=window,b=td();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=td(a.document)}return b}
	function yd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}var zd="$",Ad="/$",Bd="$?",Cd="$!",Dd=null,Ed=null;function Fd(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
	function Gd(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Hd="function"===typeof setTimeout?setTimeout:void 0,Id="function"===typeof clearTimeout?clearTimeout:void 0;function Jd(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}
	function Kd(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===zd||c===Cd||c===Bd){if(0===b)return a;b--}else c===Ad&&b++}a=a.previousSibling}return null}var Ld=Math.random().toString(36).slice(2),Md="__reactInternalInstance$"+Ld,Nd="__reactEventHandlers$"+Ld,Od="__reactContainere$"+Ld;
	function tc(a){var b=a[Md];if(b)return b;for(var c=a.parentNode;c;){if(b=c[Od]||c[Md]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Kd(a);null!==a;){if(c=a[Md])return c;a=Kd(a)}return b}a=c;c=a.parentNode}return null}function Nc(a){a=a[Md]||a[Od];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function Pd(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function Qd(a){return a[Nd]||null}
	function Rd(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}
	function Sd(a,b){var c=a.stateNode;if(!c)return null;var d=la(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==typeof c)throw Error(u(231,
	b,typeof c));return c}function Td(a,b,c){if(b=Sd(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a)}function Ud(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Rd(b);for(b=c.length;0<b--;)Td(c[b],"captured",a);for(b=0;b<c.length;b++)Td(c[b],"bubbled",a)}}
	function Vd(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Sd(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a))}function Wd(a){a&&a.dispatchConfig.registrationName&&Vd(a._targetInst,null,a)}function Xd(a){jc(a,Ud)}var Yd=null,Zd=null,$d=null;
	function ae(){if($d)return $d;var a,b=Zd,c=b.length,d,e="value"in Yd?Yd.value:Yd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return $d=e.slice(a,1<d?1-d:void 0)}function be(){return!0}function ce(){return!1}
	function G(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?be:ce;this.isPropagationStopped=ce;return this}
	n(G.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=be)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=be)},persist:function(){this.isPersistent=be},isPersistent:ce,destructor:function(){var a=this.constructor.Interface,
	b;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ce;this._dispatchInstances=this._dispatchListeners=null}});G.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
	G.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;de(c);return c};de(G);function ee(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
	function fe(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function de(a){a.eventPool=[];a.getPooled=ee;a.release=fe}var ge=G.extend({data:null}),he=G.extend({data:null}),ie=[9,13,27,32],je=ya&&"CompositionEvent"in window,ke=null;ya&&"documentMode"in document&&(ke=document.documentMode);
	var le=ya&&"TextEvent"in window&&!ke,me=ya&&(!je||ke&&8<ke&&11>=ke),ne=String.fromCharCode(32),oe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
	captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},pe=!1;
	function qe(a,b){switch(a){case "keyup":return-1!==ie.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function re(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var se=!1;function te(a,b){switch(a){case "compositionend":return re(b);case "keypress":if(32!==b.which)return null;pe=!0;return ne;case "textInput":return a=b.data,a===ne&&pe?null:a;default:return null}}
	function ue(a,b){if(se)return"compositionend"===a||!je&&qe(a,b)?(a=ae(),$d=Zd=Yd=null,se=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return me&&"ko"!==b.locale?null:b.data;default:return null}}
	var ve={eventTypes:oe,extractEvents:function(a,b,c,d){var e;if(je)b:{switch(a){case "compositionstart":var f=oe.compositionStart;break b;case "compositionend":f=oe.compositionEnd;break b;case "compositionupdate":f=oe.compositionUpdate;break b}f=void 0}else se?qe(a,c)&&(f=oe.compositionEnd):"keydown"===a&&229===c.keyCode&&(f=oe.compositionStart);f?(me&&"ko"!==c.locale&&(se||f!==oe.compositionStart?f===oe.compositionEnd&&se&&(e=ae()):(Yd=d,Zd="value"in Yd?Yd.value:Yd.textContent,se=!0)),f=ge.getPooled(f,
	b,c,d),e?f.data=e:(e=re(c),null!==e&&(f.data=e)),Xd(f),e=f):e=null;(a=le?te(a,c):ue(a,c))?(b=he.getPooled(oe.beforeInput,b,c,d),b.data=a,Xd(b)):b=null;return null===e?b:null===b?e:[e,b]}},we={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!we[a.type]:"textarea"===b?!0:!1}
	var ye={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function ze(a,b,c){a=G.getPooled(ye.change,a,b,c);a.type="change";Da(c);Xd(a);return a}var Ae=null,Be=null;function Ce(a){mc(a)}function De(a){var b=Pd(a);if(yb(b))return a}function Ee(a,b){if("change"===a)return b}var Fe=!1;ya&&(Fe=oc("input")&&(!document.documentMode||9<document.documentMode));
	function Ge(){Ae&&(Ae.detachEvent("onpropertychange",He),Be=Ae=null)}function He(a){if("value"===a.propertyName&&De(Be))if(a=ze(Be,a,nc(a)),Ja)mc(a);else{Ja=!0;try{Fa(Ce,a)}finally{Ja=!1,La()}}}function Ie(a,b,c){"focus"===a?(Ge(),Ae=b,Be=c,Ae.attachEvent("onpropertychange",He)):"blur"===a&&Ge()}function Je(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return De(Be)}function Ke(a,b){if("click"===a)return De(b)}function Le(a,b){if("input"===a||"change"===a)return De(b)}
	var Me={eventTypes:ye,_isInputEventSupported:Fe,extractEvents:function(a,b,c,d){var e=b?Pd(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Ee;else if(xe(e))if(Fe)g=Le;else{g=Je;var h=Ie}else(f=e.nodeName)&&"input"===f.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(g=Ke);if(g&&(g=g(a,b)))return ze(g,c,d);h&&h(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Db(e,"number",e.value)}},Ne=G.extend({view:null,detail:null}),
	Oe={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pe(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Oe[a])?!!b[a]:!1}function Qe(){return Pe}
	var Re=0,Se=0,Te=!1,Ue=!1,Ve=Ne.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=Re;Re=a.screenX;return Te?"mousemove"===a.type?a.screenX-b:0:(Te=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;
	var b=Se;Se=a.screenY;return Ue?"mousemove"===a.type?a.screenY-b:0:(Ue=!0,0)}}),We=Ve.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xe={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",
	dependencies:["pointerout","pointerover"]}},Ye={eventTypes:Xe,extractEvents:function(a,b,c,d,e){var f="mouseover"===a||"pointerover"===a,g="mouseout"===a||"pointerout"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;f=d.window===d?d:(f=d.ownerDocument)?f.defaultView||f.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?tc(b):null,null!==b){var h=dc(b);if(b!==h||5!==b.tag&&6!==b.tag)b=null}}else g=null;if(g===b)return null;if("mouseout"===a||"mouseover"===
	a){var k=Ve;var l=Xe.mouseLeave;var m=Xe.mouseEnter;var p="mouse"}else if("pointerout"===a||"pointerover"===a)k=We,l=Xe.pointerLeave,m=Xe.pointerEnter,p="pointer";a=null==g?f:Pd(g);f=null==b?f:Pd(b);l=k.getPooled(l,g,c,d);l.type=p+"leave";l.target=a;l.relatedTarget=f;c=k.getPooled(m,b,c,d);c.type=p+"enter";c.target=f;c.relatedTarget=a;d=g;p=b;if(d&&p)a:{k=d;m=p;g=0;for(a=k;a;a=Rd(a))g++;a=0;for(b=m;b;b=Rd(b))a++;for(;0<g-a;)k=Rd(k),g--;for(;0<a-g;)m=Rd(m),a--;for(;g--;){if(k===m||k===m.alternate)break a;
	k=Rd(k);m=Rd(m)}k=null}else k=null;m=k;for(k=[];d&&d!==m;){g=d.alternate;if(null!==g&&g===m)break;k.push(d);d=Rd(d)}for(d=[];p&&p!==m;){g=p.alternate;if(null!==g&&g===m)break;d.push(p);p=Rd(p)}for(p=0;p<k.length;p++)Vd(k[p],"bubbled",l);for(p=d.length;0<p--;)Vd(d[p],"captured",c);return 0===(e&64)?[l]:[l,c]}};function Ze(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var $e="function"===typeof Object.is?Object.is:Ze,af=Object.prototype.hasOwnProperty;
	function bf(a,b){if($e(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!af.call(b,c[d])||!$e(a[c[d]],b[c[d]]))return!1;return!0}
	var cf=ya&&"documentMode"in document&&11>=document.documentMode,df={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},ef=null,ff=null,gf=null,hf=!1;
	function jf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(hf||null==ef||ef!==td(c))return null;c=ef;"selectionStart"in c&&yd(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return gf&&bf(gf,c)?null:(gf=c,a=G.getPooled(df.select,ff,a,b),a.type="select",a.target=ef,Xd(a),a)}
	var kf={eventTypes:df,extractEvents:function(a,b,c,d,e,f){e=f||(d.window===d?d.document:9===d.nodeType?d:d.ownerDocument);if(!(f=!e)){a:{e=cc(e);f=wa.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?Pd(b):window;switch(a){case "focus":if(xe(e)||"true"===e.contentEditable)ef=e,ff=b,gf=null;break;case "blur":gf=ff=ef=null;break;case "mousedown":hf=!0;break;case "contextmenu":case "mouseup":case "dragend":return hf=!1,jf(c,d);case "selectionchange":if(cf)break;
	case "keydown":case "keyup":return jf(c,d)}return null}},lf=G.extend({animationName:null,elapsedTime:null,pseudoElement:null}),mf=G.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),nf=Ne.extend({relatedTarget:null});function of(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
	var pf={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qf={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
	116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},rf=Ne.extend({key:function(a){if(a.key){var b=pf[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=of(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?qf[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(a){return"keypress"===
	a.type?of(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?of(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),sf=Ve.extend({dataTransfer:null}),tf=Ne.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),uf=G.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vf=Ve.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
	a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),wf={eventTypes:Wc,extractEvents:function(a,b,c,d){var e=Yc.get(a);if(!e)return null;switch(a){case "keypress":if(0===of(c))return null;case "keydown":case "keyup":a=rf;break;case "blur":case "focus":a=nf;break;case "click":if(2===c.button)return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=
	Ve;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=sf;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=tf;break;case Xb:case Yb:case Zb:a=lf;break;case $b:a=uf;break;case "scroll":a=Ne;break;case "wheel":a=vf;break;case "copy":case "cut":case "paste":a=mf;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=
	We;break;default:a=G}b=a.getPooled(e,b,c,d);Xd(b);return b}};if(pa)throw Error(u(101));pa=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));ra();var xf=Nc;la=Qd;ma=xf;na=Pd;xa({SimpleEventPlugin:wf,EnterLeaveEventPlugin:Ye,ChangeEventPlugin:Me,SelectEventPlugin:kf,BeforeInputEventPlugin:ve});var yf=[],zf=-1;function H(a){0>zf||(a.current=yf[zf],yf[zf]=null,zf--)}
	function I(a,b){zf++;yf[zf]=a.current;a.current=b}var Af={},J={current:Af},K={current:!1},Bf=Af;function Cf(a,b){var c=a.type.contextTypes;if(!c)return Af;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}
	function Df(){H(K);H(J)}function Ef(a,b,c){if(J.current!==Af)throw Error(u(168));I(J,b);I(K,c)}function Ff(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,pb(b)||"Unknown",e));return n({},c,{},d)}function Gf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Af;Bf=J.current;I(J,a);I(K,K.current);return!0}
	function Hf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(a=Ff(a,b,Bf),d.__reactInternalMemoizedMergedChildContext=a,H(K),H(J),I(J,a)):H(K);I(K,c)}
	var If=r.unstable_runWithPriority,Jf=r.unstable_scheduleCallback,Kf=r.unstable_cancelCallback,Lf=r.unstable_requestPaint,Mf=r.unstable_now,Nf=r.unstable_getCurrentPriorityLevel,Of=r.unstable_ImmediatePriority,Pf=r.unstable_UserBlockingPriority,Qf=r.unstable_NormalPriority,Rf=r.unstable_LowPriority,Sf=r.unstable_IdlePriority,Tf={},Uf=r.unstable_shouldYield,Vf=void 0!==Lf?Lf:function(){},Wf=null,Xf=null,Yf=!1,Zf=Mf(),$f=1E4>Zf?Mf:function(){return Mf()-Zf};
	function ag(){switch(Nf()){case Of:return 99;case Pf:return 98;case Qf:return 97;case Rf:return 96;case Sf:return 95;default:throw Error(u(332));}}function bg(a){switch(a){case 99:return Of;case 98:return Pf;case 97:return Qf;case 96:return Rf;case 95:return Sf;default:throw Error(u(332));}}function cg(a,b){a=bg(a);return If(a,b)}function dg(a,b,c){a=bg(a);return Jf(a,b,c)}function eg(a){null===Wf?(Wf=[a],Xf=Jf(Of,fg)):Wf.push(a);return Tf}function gg(){if(null!==Xf){var a=Xf;Xf=null;Kf(a)}fg()}
	function fg(){if(!Yf&&null!==Wf){Yf=!0;var a=0;try{var b=Wf;cg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Wf=null}catch(c){throw null!==Wf&&(Wf=Wf.slice(a+1)),Jf(Of,gg),c;}finally{Yf=!1}}}function hg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function ig(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var jg={current:null},kg=null,lg=null,mg=null;function ng(){mg=lg=kg=null}
	function og(a){var b=jg.current;H(jg);a.type._context._currentValue=b}function pg(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}function qg(a,b){kg=a;mg=lg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(rg=!0),a.firstContext=null)}
	function sg(a,b){if(mg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)mg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===lg){if(null===kg)throw Error(u(308));lg=b;kg.dependencies={expirationTime:0,firstContext:b,responders:null}}else lg=lg.next=b}return a._currentValue}var tg=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}
	function vg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,baseQueue:a.baseQueue,shared:a.shared,effects:a.effects})}function wg(a,b){a={expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null};return a.next=a}function xg(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}
	function yg(a,b){var c=a.alternate;null!==c&&vg(c,a);a=a.updateQueue;c=a.baseQueue;null===c?(a.baseQueue=b.next=b,b.next=b):(b.next=c.next,c.next=b)}
	function zg(a,b,c,d){var e=a.updateQueue;tg=!1;var f=e.baseQueue,g=e.shared.pending;if(null!==g){if(null!==f){var h=f.next;f.next=g.next;g.next=h}f=g;e.shared.pending=null;h=a.alternate;null!==h&&(h=h.updateQueue,null!==h&&(h.baseQueue=g))}if(null!==f){h=f.next;var k=e.baseState,l=0,m=null,p=null,x=null;if(null!==h){var z=h;do{g=z.expirationTime;if(g<d){var ca={expirationTime:z.expirationTime,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null};null===x?(p=x=
	ca,m=k):x=x.next=ca;g>l&&(l=g)}else{null!==x&&(x=x.next={expirationTime:1073741823,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null});Ag(g,z.suspenseConfig);a:{var D=a,t=z;g=b;ca=c;switch(t.tag){case 1:D=t.payload;if("function"===typeof D){k=D.call(ca,k,g);break a}k=D;break a;case 3:D.effectTag=D.effectTag&-4097|64;case 0:D=t.payload;g="function"===typeof D?D.call(ca,k,g):D;if(null===g||void 0===g)break a;k=n({},k,g);break a;case 2:tg=!0}}null!==z.callback&&
	(a.effectTag|=32,g=e.effects,null===g?e.effects=[z]:g.push(z))}z=z.next;if(null===z||z===h)if(g=e.shared.pending,null===g)break;else z=f.next=g.next,g.next=h,e.baseQueue=f=g,e.shared.pending=null}while(1)}null===x?m=k:x.next=p;e.baseState=m;e.baseQueue=x;Bg(l);a.expirationTime=l;a.memoizedState=k}}
	function Cg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=e;e=c;if("function"!==typeof d)throw Error(u(191,d));d.call(e)}}}var Dg=Wa.ReactCurrentBatchConfig,Eg=(new aa.Component).refs;function Fg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;0===a.expirationTime&&(a.updateQueue.baseState=c)}
	var Jg={isMounted:function(a){return(a=a._reactInternalFiber)?dc(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gg(),d=Dg.suspense;
	c=Hg(c,a,d);d=wg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);xg(a,d);Ig(a,c)}};function Kg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!bf(c,d)||!bf(e,f):!0}
	function Lg(a,b,c){var d=!1,e=Af;var f=b.contextType;"object"===typeof f&&null!==f?f=sg(f):(e=L(b)?Bf:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Cf(a,e):Af);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Jg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
	function Mg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jg.enqueueReplaceState(b,b.state,null)}
	function Ng(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Eg;ug(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=sg(f):(f=L(b)?Bf:J.current,e.context=Cf(a,f));zg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Fg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||
	(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jg.enqueueReplaceState(e,e.state,null),zg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.effectTag|=4)}var Og=Array.isArray;
	function Pg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Eg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}
	function Qg(a,b){if("textarea"!==a.type)throw Error(u(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,""));}
	function Rg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Sg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
	2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Tg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Pg(a,b,c),d.return=a,d;d=Ug(c.type,c.key,c.props,null,a.mode,d);d.ref=Pg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==
	c.implementation)return b=Vg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Wg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function p(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Tg(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Za:return c=Ug(b.type,b.key,b.props,null,a.mode,c),c.ref=Pg(a,null,b),c.return=a,c;case $a:return b=Vg(b,a.mode,c),b.return=a,b}if(Og(b)||
	nb(b))return b=Wg(b,a.mode,c,null),b.return=a,b;Qg(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Za:return c.key===e?c.type===ab?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $a:return c.key===e?l(a,b,c,d):null}if(Og(c)||nb(c))return null!==e?null:m(a,b,c,d,null);Qg(a,c)}return null}function z(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=
	a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Za:return a=a.get(null===d.key?c:d.key)||null,d.type===ab?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $a:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Og(d)||nb(d))return a=a.get(c)||null,m(b,a,d,e,null);Qg(b,d)}return null}function ca(e,g,h,k){for(var l=null,t=null,m=g,y=g=0,A=null;null!==m&&y<h.length;y++){m.index>y?(A=m,m=null):A=m.sibling;var q=x(e,m,h[y],k);if(null===q){null===m&&(m=A);break}a&&
	m&&null===q.alternate&&b(e,m);g=f(q,g,y);null===t?l=q:t.sibling=q;t=q;m=A}if(y===h.length)return c(e,m),l;if(null===m){for(;y<h.length;y++)m=p(e,h[y],k),null!==m&&(g=f(m,g,y),null===t?l=m:t.sibling=m,t=m);return l}for(m=d(e,m);y<h.length;y++)A=z(m,e,y,h[y],k),null!==A&&(a&&null!==A.alternate&&m.delete(null===A.key?y:A.key),g=f(A,g,y),null===t?l=A:t.sibling=A,t=A);a&&m.forEach(function(a){return b(e,a)});return l}function D(e,g,h,l){var k=nb(h);if("function"!==typeof k)throw Error(u(150));h=k.call(h);
	if(null==h)throw Error(u(151));for(var m=k=null,t=g,y=g=0,A=null,q=h.next();null!==t&&!q.done;y++,q=h.next()){t.index>y?(A=t,t=null):A=t.sibling;var D=x(e,t,q.value,l);if(null===D){null===t&&(t=A);break}a&&t&&null===D.alternate&&b(e,t);g=f(D,g,y);null===m?k=D:m.sibling=D;m=D;t=A}if(q.done)return c(e,t),k;if(null===t){for(;!q.done;y++,q=h.next())q=p(e,q.value,l),null!==q&&(g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);return k}for(t=d(e,t);!q.done;y++,q=h.next())q=z(t,e,y,q.value,l),null!==q&&(a&&null!==
	q.alternate&&t.delete(null===q.key?y:q.key),g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);a&&t.forEach(function(a){return b(e,a)});return k}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ab&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Za:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ab){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,
	k.sibling);d=e(k,f.props);d.ref=Pg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ab?(d=Wg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ug(f.type,f.key,f.props,null,a.mode,h),h.ref=Pg(a,d,f),h.return=a,a=h)}return g(a);case $a:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=
	d.sibling}d=Vg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Tg(f,a.mode,h),d.return=a,a=d),g(a);if(Og(f))return ca(a,d,f,h);if(nb(f))return D(a,d,f,h);l&&Qg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||"Component"));}return c(a,d)}}var Xg=Rg(!0),Yg=Rg(!1),Zg={},$g={current:Zg},ah={current:Zg},bh={current:Zg};
	function ch(a){if(a===Zg)throw Error(u(174));return a}function dh(a,b){I(bh,b);I(ah,a);I($g,Zg);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ob(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Ob(b,a)}H($g);I($g,b)}function eh(){H($g);H(ah);H(bh)}function fh(a){ch(bh.current);var b=ch($g.current);var c=Ob(b,a.type);b!==c&&(I(ah,a),I($g,c))}function gh(a){ah.current===a&&(H($g),H(ah))}var M={current:0};
	function hh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===Bd||c.data===Cd))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function ih(a,b){return{responder:a,props:b}}
	var jh=Wa.ReactCurrentDispatcher,kh=Wa.ReactCurrentBatchConfig,lh=0,N=null,O=null,P=null,mh=!1;function Q(){throw Error(u(321));}function nh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!$e(a[c],b[c]))return!1;return!0}
	function oh(a,b,c,d,e,f){lh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.expirationTime=0;jh.current=null===a||null===a.memoizedState?ph:qh;a=c(d,e);if(b.expirationTime===lh){f=0;do{b.expirationTime=0;if(!(25>f))throw Error(u(301));f+=1;P=O=null;b.updateQueue=null;jh.current=rh;a=c(d,e)}while(b.expirationTime===lh)}jh.current=sh;b=null!==O&&null!==O.next;lh=0;P=O=N=null;mh=!1;if(b)throw Error(u(300));return a}
	function th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function uh(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(u(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}
	function vh(a,b){return"function"===typeof b?b(a):b}
	function wh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.expirationTime;if(l<lh){var m={expirationTime:k.expirationTime,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=m,f=d):h=h.next=m;l>N.expirationTime&&
	(N.expirationTime=l,Bg(l))}else null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),Ag(l,k.suspenseConfig),d=k.eagerReducer===a?k.eagerState:a(d,k.action);k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;$e(d,b.memoizedState)||(rg=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}
	function xh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);$e(f,b.memoizedState)||(rg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}
	function yh(a){var b=th();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:vh,lastRenderedState:a};a=a.dispatch=zh.bind(null,N,a);return[b.memoizedState,a]}function Ah(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}
	function Bh(){return uh().memoizedState}function Ch(a,b,c,d){var e=th();N.effectTag|=a;e.memoizedState=Ah(1|b,c,void 0,void 0===d?null:d)}function Dh(a,b,c,d){var e=uh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&nh(d,g.deps)){Ah(b,c,f,d);return}}N.effectTag|=a;e.memoizedState=Ah(1|b,c,f,d)}function Eh(a,b){return Ch(516,4,a,b)}function Fh(a,b){return Dh(516,4,a,b)}function Gh(a,b){return Dh(4,2,a,b)}
	function Hh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function Ih(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Dh(4,2,Hh.bind(null,b,a),c)}function Jh(){}function Kh(a,b){th().memoizedState=[a,void 0===b?null:b];return a}function Lh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}
	function Mh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Nh(a,b,c){var d=ag();cg(98>d?98:d,function(){a(!0)});cg(97<d?97:d,function(){var d=kh.suspense;kh.suspense=void 0===b?null:b;try{a(!1),c()}finally{kh.suspense=d}})}
	function zh(a,b,c){var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e={expirationTime:d,suspenseConfig:e,action:c,eagerReducer:null,eagerState:null,next:null};var f=b.pending;null===f?e.next=e:(e.next=f.next,f.next=e);b.pending=e;f=a.alternate;if(a===N||null!==f&&f===N)mh=!0,e.expirationTime=lh,N.expirationTime=lh;else{if(0===a.expirationTime&&(null===f||0===f.expirationTime)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.eagerReducer=f;e.eagerState=h;if($e(h,g))return}catch(k){}finally{}Ig(a,
	d)}}
	var sh={readContext:sg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},ph={readContext:sg,useCallback:Kh,useContext:sg,useEffect:Eh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ch(4,2,Hh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ch(4,2,a,b)},useMemo:function(a,b){var c=th();b=void 0===b?null:b;a=a();c.memoizedState=[a,
	b];return a},useReducer:function(a,b,c){var d=th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=zh.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=th();a={current:a};return b.memoizedState=a},useState:yh,useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=yh(a),d=c[0],e=c[1];Eh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=
	c}},[a,b]);return d},useTransition:function(a){var b=yh(!1),c=b[0];b=b[1];return[Kh(Nh.bind(null,b,a),[b,a]),c]}},qh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:wh,useRef:Bh,useState:function(){return wh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=wh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=
	wh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,b,a),[b,a]),c]}},rh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:xh,useRef:Bh,useState:function(){return xh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=xh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=xh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,
	b,a),[b,a]),c]}},Oh=null,Ph=null,Qh=!1;function Rh(a,b){var c=Sh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
	function Th(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
	function Uh(a){if(Qh){var b=Ph;if(b){var c=b;if(!Th(a,b)){b=Jd(c.nextSibling);if(!b||!Th(a,b)){a.effectTag=a.effectTag&-1025|2;Qh=!1;Oh=a;return}Rh(Oh,c)}Oh=a;Ph=Jd(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,Qh=!1,Oh=a}}function Vh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Oh=a}
	function Wh(a){if(a!==Oh)return!1;if(!Qh)return Vh(a),Qh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!Gd(b,a.memoizedProps))for(b=Ph;b;)Rh(a,b),b=Jd(b.nextSibling);Vh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===Ad){if(0===b){Ph=Jd(a.nextSibling);break a}b--}else c!==zd&&c!==Cd&&c!==Bd||b++}a=a.nextSibling}Ph=null}}else Ph=Oh?Jd(a.stateNode.nextSibling):null;return!0}
	function Xh(){Ph=Oh=null;Qh=!1}var Yh=Wa.ReactCurrentOwner,rg=!1;function R(a,b,c,d){b.child=null===a?Yg(b,null,c,d):Xg(b,a.child,c,d)}function Zh(a,b,c,d,e){c=c.render;var f=b.ref;qg(b,e);d=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}
	function ai(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!bi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ci(a,b,g,d,e,f);a=Ug(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:bf,c(e,d)&&a.ref===b.ref))return $h(a,b,f);b.effectTag|=1;a=Sg(g,d);a.ref=b.ref;a.return=b;return b.child=a}
	function ci(a,b,c,d,e,f){return null!==a&&bf(a.memoizedProps,d)&&a.ref===b.ref&&(rg=!1,e<f)?(b.expirationTime=a.expirationTime,$h(a,b,f)):di(a,b,c,d,f)}function ei(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function di(a,b,c,d,e){var f=L(c)?Bf:J.current;f=Cf(b,f);qg(b,e);c=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}
	function fi(a,b,c,d,e){if(L(c)){var f=!0;Gf(b)}else f=!1;qg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Lg(b,c,d),Ng(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l));var m=c.getDerivedStateFromProps,p="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;p||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
	"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l);tg=!1;var x=b.memoizedState;g.state=x;zg(b,d,g,e);k=b.memoizedState;h!==d||x!==k||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),k=b.memoizedState),(h=tg||Kg(b,c,h,d,x,k,l))?(p||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===
	typeof g.componentDidMount&&(b.effectTag|=4)):("function"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,vg(a,b),h=b.memoizedProps,g.props=b.type===b.elementType?h:ig(b.type,h),k=g.context,l=c.contextType,"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l)),m=c.getDerivedStateFromProps,(p="function"===typeof m||"function"===
	typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l),tg=!1,k=b.memoizedState,g.state=k,zg(b,d,g,e),x=b.memoizedState,h!==d||k!==x||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),x=b.memoizedState),(m=tg||Kg(b,c,h,d,k,x,l))?(p||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,
	x,l),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):
	("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return gi(a,b,c,d,f,e)}
	function gi(a,b,c,d,e,f){ei(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Hf(b,c,!1),$h(a,b,f);d=b.stateNode;Yh.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Xg(b,a.child,null,f),b.child=Xg(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Hf(b,c,!0);return b.child}function hi(a){var b=a.stateNode;b.pendingContext?Ef(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ef(a,b.context,!1);dh(a,b.containerInfo)}
	var ii={dehydrated:null,retryTime:0};
	function ji(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1);if(null===a){void 0!==e.fallback&&Uh(b);if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=
	b;e.sibling=c;b.memoizedState=ii;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=Yg(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=Sg(a,a.pendingProps);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=Sg(d,e);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=ii;b.child=c;return d}c=Xg(b,a.child,e.children,c);b.memoizedState=null;return b.child=
	c}a=a.child;if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=ii;b.child=e;return c}b.memoizedState=null;return b.child=Xg(b,a,e.children,c)}
	function ki(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);pg(a.return,b)}function li(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}
	function mi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&ki(a,c);else if(19===a.tag)ki(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d);if(0===(b.mode&2))b.memoizedState=
	null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===hh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);li(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}li(b,!0,c,null,f,b.lastEffect);break;case "together":li(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}
	function $h(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Bg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=Sg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Sg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}var ni,oi,pi,qi;
	ni=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};oi=function(){};
	pi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;ch($g.current);a=null;switch(c){case "input":f=zb(g,f);d=zb(g,d);a=[];break;case "option":f=Gb(g,f);d=Gb(g,d);a=[];break;case "select":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case "textarea":f=Ib(g,f);d=Ib(g,d);a=[];break;default:"function"!==typeof f.onClick&&"function"===typeof d.onClick&&(g.onclick=sd)}od(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if("style"===
	h)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]="");else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(va.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if("style"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]="");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),
	c[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else"dangerouslySetInnerHTML"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,l)):"children"===h?g===l||"string"!==typeof l&&"number"!==typeof l||(a=a||[]).push(h,""+l):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(va.hasOwnProperty(h)?(null!=l&&rd(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push("style",c);e=a;if(b.updateQueue=e)b.effectTag|=4}};
	qi=function(a,b,c,d){c!==d&&(b.effectTag|=4)};function ri(a,b){switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
	function si(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return L(b.type)&&Df(),null;case 3:return eh(),H(K),H(J),c=b.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==a&&null!==a.child||!Wh(b)||(b.effectTag|=4),oi(b),null;case 5:gh(b);c=ch(bh.current);var e=b.type;if(null!==a&&null!=b.stateNode)pi(a,b,e,d,c),a.ref!==b.ref&&(b.effectTag|=128);else{if(!d){if(null===b.stateNode)throw Error(u(166));
	return null}a=ch($g.current);if(Wh(b)){d=b.stateNode;e=b.type;var f=b.memoizedProps;d[Md]=b;d[Nd]=f;switch(e){case "iframe":case "object":case "embed":F("load",d);break;case "video":case "audio":for(a=0;a<ac.length;a++)F(ac[a],d);break;case "source":F("error",d);break;case "img":case "image":case "link":F("error",d);F("load",d);break;case "form":F("reset",d);F("submit",d);break;case "details":F("toggle",d);break;case "input":Ab(d,f);F("invalid",d);rd(c,"onChange");break;case "select":d._wrapperState=
	{wasMultiple:!!f.multiple};F("invalid",d);rd(c,"onChange");break;case "textarea":Jb(d,f),F("invalid",d),rd(c,"onChange")}od(e,f);a=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(a=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(a=["children",""+h]):va.hasOwnProperty(g)&&null!=h&&rd(c,g)}switch(e){case "input":xb(d);Eb(d,f,!0);break;case "textarea":xb(d);Lb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&
	(d.onclick=sd)}c=a;b.updateQueue=c;null!==c&&(b.effectTag|=4)}else{g=9===c.nodeType?c:c.ownerDocument;a===qd&&(a=Nb(e));a===qd?"script"===e?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(e,{is:d.is}):(a=g.createElement(e),"select"===e&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,e);a[Md]=b;a[Nd]=d;ni(a,b,!1,!1);b.stateNode=a;g=pd(e,d);switch(e){case "iframe":case "object":case "embed":F("load",
	a);h=d;break;case "video":case "audio":for(h=0;h<ac.length;h++)F(ac[h],a);h=d;break;case "source":F("error",a);h=d;break;case "img":case "image":case "link":F("error",a);F("load",a);h=d;break;case "form":F("reset",a);F("submit",a);h=d;break;case "details":F("toggle",a);h=d;break;case "input":Ab(a,d);h=zb(a,d);F("invalid",a);rd(c,"onChange");break;case "option":h=Gb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};h=n({},d,{value:void 0});F("invalid",a);rd(c,"onChange");break;case "textarea":Jb(a,
	d);h=Ib(a,d);F("invalid",a);rd(c,"onChange");break;default:h=d}od(e,h);var k=h;for(f in k)if(k.hasOwnProperty(f)){var l=k[f];"style"===f?md(a,l):"dangerouslySetInnerHTML"===f?(l=l?l.__html:void 0,null!=l&&Qb(a,l)):"children"===f?"string"===typeof l?("textarea"!==e||""!==l)&&Rb(a,l):"number"===typeof l&&Rb(a,""+l):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(va.hasOwnProperty(f)?null!=l&&rd(c,f):null!=l&&Xa(a,f,l,g))}switch(e){case "input":xb(a);Eb(a,d,!1);
	break;case "textarea":xb(a);Lb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+rb(d.value));break;case "select":a.multiple=!!d.multiple;c=d.value;null!=c?Hb(a,!!d.multiple,c,!1):null!=d.defaultValue&&Hb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof h.onClick&&(a.onclick=sd)}Fd(e,d)&&(b.effectTag|=4)}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)qi(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(u(166));
	c=ch(bh.current);ch($g.current);Wh(b)?(c=b.stateNode,d=b.memoizedProps,c[Md]=b,c.nodeValue!==d&&(b.effectTag|=4)):(c=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),c[Md]=b,b.stateNode=c)}return null;case 13:H(M);d=b.memoizedState;if(0!==(b.effectTag&64))return b.expirationTime=c,b;c=null!==d;d=!1;null===a?void 0!==b.memoizedProps.fallback&&Wh(b):(e=a.memoizedState,d=null!==e,c||null===e||(e=a.child.sibling,null!==e&&(f=b.firstEffect,null!==f?(b.firstEffect=e,e.nextEffect=f):(b.firstEffect=b.lastEffect=
	e,e.nextEffect=null),e.effectTag=8)));if(c&&!d&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))S===ti&&(S=ui);else{if(S===ti||S===ui)S=vi;0!==wi&&null!==T&&(xi(T,U),yi(T,wi))}if(c||d)b.effectTag|=4;return null;case 4:return eh(),oi(b),null;case 10:return og(b),null;case 17:return L(b.type)&&Df(),null;case 19:H(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.effectTag&64);f=d.rendering;if(null===f)if(e)ri(d,!1);else{if(S!==ti||null!==a&&0!==(a.effectTag&
	64))for(f=b.child;null!==f;){a=hh(f);if(null!==a){b.effectTag|=64;ri(d,!1);e=a.updateQueue;null!==e&&(b.updateQueue=e,b.effectTag|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;for(d=b.child;null!==d;)e=d,f=c,e.effectTag&=2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,a=e.alternate,null===a?(e.childExpirationTime=0,e.expirationTime=f,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null):(e.childExpirationTime=a.childExpirationTime,
	e.expirationTime=a.expirationTime,e.child=a.child,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,f=a.dependencies,e.dependencies=null===f?null:{expirationTime:f.expirationTime,firstContext:f.firstContext,responders:f.responders}),d=d.sibling;I(M,M.current&1|2);return b.child}f=f.sibling}}else{if(!e)if(a=hh(f),null!==a){if(b.effectTag|=64,e=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.effectTag|=4),ri(d,!0),null===d.tail&&"hidden"===d.tailMode&&!f.alternate)return b=
	b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*$f()-d.renderingStartTime>d.tailExpiration&&1<c&&(b.effectTag|=64,e=!0,ri(d,!1),b.expirationTime=b.childExpirationTime=c-1);d.isBackwards?(f.sibling=b.child,b.child=f):(c=d.last,null!==c?c.sibling=f:b.child=f,d.last=f)}return null!==d.tail?(0===d.tailExpiration&&(d.tailExpiration=$f()+500),c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=$f(),c.sibling=null,b=M.current,I(M,e?b&1|2:b&1),c):null}throw Error(u(156,
	b.tag));}function zi(a){switch(a.tag){case 1:L(a.type)&&Df();var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:eh();H(K);H(J);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return gh(a),null;case 13:return H(M),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return H(M),null;case 4:return eh(),null;case 10:return og(a),null;default:return null}}function Ai(a,b){return{value:a,source:b,stack:qb(b)}}
	var Bi="function"===typeof WeakSet?WeakSet:Set;function Ci(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=qb(c));null!==c&&pb(c.type);b=b.value;null!==a&&1===a.tag&&pb(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Di(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ei(a,c)}}function Fi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Ei(a,c)}else b.current=null}
	function Gi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ig(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163));}
	function Hi(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}function Ii(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}
	function Ji(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:Ii(3,c);return;case 1:a=c.stateNode;if(c.effectTag&4)if(null===b)a.componentDidMount();else{var d=c.elementType===c.type?b.memoizedProps:ig(c.type,b.memoizedProps);a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}b=c.updateQueue;null!==b&&Cg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Cg(c,b,a)}return;
	case 5:a=c.stateNode;null===b&&c.effectTag&4&&Fd(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Vc(c))));return;case 19:case 17:case 20:case 21:return}throw Error(u(163));}
	function Ki(a,b,c){"function"===typeof Li&&Li(b);switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;cg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ei(g,h)}}a=a.next}while(a!==d)})}break;case 1:Fi(b);c=b.stateNode;"function"===typeof c.componentWillUnmount&&Di(b,c);break;case 5:Fi(b);break;case 4:Mi(a,b,c)}}
	function Ni(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;a.stateNode=null;null!==b&&Ni(b)}function Oi(a){return 5===a.tag||3===a.tag||4===a.tag}
	function Pi(a){a:{for(var b=a.return;null!==b;){if(Oi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Rb(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Oi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;
	if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}d?Qi(a,c,b):Ri(a,c,b)}
	function Qi(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=sd));else if(4!==d&&(a=a.child,null!==a))for(Qi(a,b,c),a=a.sibling;null!==a;)Qi(a,b,c),a=a.sibling}
	function Ri(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Ri(a,b,c),a=a.sibling;null!==a;)Ri(a,b,c),a=a.sibling}
	function Mi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Ki(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break a;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=
	f,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Ki(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}
	function Si(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Hi(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Nd]=d;"input"===a&&"radio"===d.type&&null!=d.name&&Bb(c,d);pd(a,e);b=pd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];"style"===g?md(c,h):"dangerouslySetInnerHTML"===g?Qb(c,h):"children"===g?Rb(c,h):Xa(c,g,h,b)}switch(a){case "input":Cb(c,d);break;
	case "textarea":Kb(c,d);break;case "select":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Hb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Hb(c,!!d.multiple,d.defaultValue,!0):Hb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;return;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Vc(b.containerInfo));return;case 12:return;case 13:c=b;null===b.memoizedState?
	d=!1:(d=!0,c=b.child,Ti=$f());if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null,f.style.display=ld("display",e));else if(6===a.tag)a.stateNode.nodeValue=d?"":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=
	f;continue}else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===c)break;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}Ui(b);return;case 19:Ui(b);return;case 17:return}throw Error(u(163));}function Ui(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Bi);b.forEach(function(b){var d=Vi.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
	var Wi="function"===typeof WeakMap?WeakMap:Map;function Xi(a,b,c){c=wg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Yi||(Yi=!0,Zi=d);Ci(a,b)};return c}
	function $i(a,b,c){c=wg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ci(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===aj?aj=new Set([this]):aj.add(this),Ci(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}
	var bj=Math.ceil,cj=Wa.ReactCurrentDispatcher,dj=Wa.ReactCurrentOwner,V=0,ej=8,fj=16,gj=32,ti=0,hj=1,ij=2,ui=3,vi=4,jj=5,W=V,T=null,X=null,U=0,S=ti,kj=null,lj=1073741823,mj=1073741823,nj=null,wi=0,oj=!1,Ti=0,pj=500,Y=null,Yi=!1,Zi=null,aj=null,qj=!1,rj=null,sj=90,tj=null,uj=0,vj=null,wj=0;function Gg(){return(W&(fj|gj))!==V?1073741821-($f()/10|0):0!==wj?wj:wj=1073741821-($f()/10|0)}
	function Hg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=ag();if(0===(b&4))return 99===d?1073741823:1073741822;if((W&fj)!==V)return U;if(null!==c)a=hg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=hg(a,150,100);break;case 97:case 96:a=hg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==T&&a===U&&--a;return a}
	function Ig(a,b){if(50<uj)throw uj=0,vj=null,Error(u(185));a=xj(a,b);if(null!==a){var c=ag();1073741823===b?(W&ej)!==V&&(W&(fj|gj))===V?yj(a):(Z(a),W===V&&gg()):Z(a);(W&4)===V||98!==c&&99!==c||(null===tj?tj=new Map([[a,b]]):(c=tj.get(a),(void 0===c||c>b)&&tj.set(a,b)))}}
	function xj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(T===e&&(Bg(b),S===vi&&xi(e,U)),yi(e,b));return e}
	function zj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Aj(a,b))return b;var c=a.lastPingedTime;a=a.nextKnownPendingLevel;a=c>a?c:a;return 2>=a&&b!==a?0:a}
	function Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=eg(yj.bind(null,a));else{var b=zj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Gg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Tf&&Kf(c)}a.callbackExpirationTime=
	b;a.callbackPriority=d;b=1073741823===b?eg(yj.bind(null,a)):dg(d,Bj.bind(null,a),{timeout:10*(1073741821-b)-$f()});a.callbackNode=b}}}
	function Bj(a,b){wj=0;if(b)return b=Gg(),Cj(a,b),Z(a),null;var c=zj(a);if(0!==c){b=a.callbackNode;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&c===U||Ej(a,c);if(null!==X){var d=W;W|=fj;var e=Fj();do try{Gj();break}catch(h){Hj(a,h)}while(1);ng();W=d;cj.current=e;if(S===hj)throw b=kj,Ej(a,c),xi(a,c),Z(a),b;if(null===X)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=S,T=null,d){case ti:case hj:throw Error(u(345));case ij:Cj(a,2<c?2:c);break;case ui:xi(a,c);d=a.lastSuspendedTime;
	c===d&&(a.nextKnownPendingLevel=Ij(e));if(1073741823===lj&&(e=Ti+pj-$f(),10<e)){if(oj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Ej(a,c);break}}f=zj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=Hd(Jj.bind(null,a),e);break}Jj(a);break;case vi:xi(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Ij(e));if(oj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Ej(a,c);break}e=zj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=
	d;break}1073741823!==mj?d=10*(1073741821-mj)-$f():1073741823===lj?d=0:(d=10*(1073741821-lj)-5E3,e=$f(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*bj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=Hd(Jj.bind(null,a),d);break}Jj(a);break;case jj:if(1073741823!==lj&&null!==nj){f=lj;var g=nj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=$f()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){xi(a,c);a.timeoutHandle=
	Hd(Jj.bind(null,a),d);break}}Jj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Bj.bind(null,a)}}return null}
	function yj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&b===U||Ej(a,b);if(null!==X){var c=W;W|=fj;var d=Fj();do try{Kj();break}catch(e){Hj(a,e)}while(1);ng();W=c;cj.current=d;if(S===hj)throw c=kj,Ej(a,b),xi(a,b),Z(a),c;if(null!==X)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;T=null;Jj(a);Z(a)}return null}function Lj(){if(null!==tj){var a=tj;tj=null;a.forEach(function(a,c){Cj(c,a);Z(c)});gg()}}
	function Mj(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,W===V&&gg()}}function Nj(a,b){var c=W;W&=-2;W|=ej;try{return a(b)}finally{W=c,W===V&&gg()}}
	function Ej(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Id(c));if(null!==X)for(c=X.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Df();break;case 3:eh();H(K);H(J);break;case 5:gh(d);break;case 4:eh();break;case 13:H(M);break;case 19:H(M);break;case 10:og(d)}c=c.return}T=a;X=Sg(a.current,null);U=b;S=ti;kj=null;mj=lj=1073741823;nj=null;wi=0;oj=!1}
	function Hj(a,b){do{try{ng();jh.current=sh;if(mh)for(var c=N.memoizedState;null!==c;){var d=c.queue;null!==d&&(d.pending=null);c=c.next}lh=0;P=O=N=null;mh=!1;if(null===X||null===X.return)return S=hj,kj=b,X=null;a:{var e=a,f=X.return,g=X,h=b;b=U;g.effectTag|=2048;g.firstEffect=g.lastEffect=null;if(null!==h&&"object"===typeof h&&"function"===typeof h.then){var k=h;if(0===(g.mode&2)){var l=g.alternate;l?(g.updateQueue=l.updateQueue,g.memoizedState=l.memoizedState,g.expirationTime=l.expirationTime):(g.updateQueue=
	null,g.memoizedState=null)}var m=0!==(M.current&1),p=f;do{var x;if(x=13===p.tag){var z=p.memoizedState;if(null!==z)x=null!==z.dehydrated?!0:!1;else{var ca=p.memoizedProps;x=void 0===ca.fallback?!1:!0!==ca.unstable_avoidThisFallback?!0:m?!1:!0}}if(x){var D=p.updateQueue;if(null===D){var t=new Set;t.add(k);p.updateQueue=t}else D.add(k);if(0===(p.mode&2)){p.effectTag|=64;g.effectTag&=-2981;if(1===g.tag)if(null===g.alternate)g.tag=17;else{var y=wg(1073741823,null);y.tag=2;xg(g,y)}g.expirationTime=1073741823;
	break a}h=void 0;g=b;var A=e.pingCache;null===A?(A=e.pingCache=new Wi,h=new Set,A.set(k,h)):(h=A.get(k),void 0===h&&(h=new Set,A.set(k,h)));if(!h.has(g)){h.add(g);var q=Oj.bind(null,e,k,g);k.then(q,q)}p.effectTag|=4096;p.expirationTime=b;break a}p=p.return}while(null!==p);h=Error((pb(g.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+qb(g))}S!==
	jj&&(S=ij);h=Ai(h,g);p=f;do{switch(p.tag){case 3:k=h;p.effectTag|=4096;p.expirationTime=b;var B=Xi(p,k,b);yg(p,B);break a;case 1:k=h;var w=p.type,ub=p.stateNode;if(0===(p.effectTag&64)&&("function"===typeof w.getDerivedStateFromError||null!==ub&&"function"===typeof ub.componentDidCatch&&(null===aj||!aj.has(ub)))){p.effectTag|=4096;p.expirationTime=b;var vb=$i(p,k,b);yg(p,vb);break a}}p=p.return}while(null!==p)}X=Pj(X)}catch(Xc){b=Xc;continue}break}while(1)}
	function Fj(){var a=cj.current;cj.current=sh;return null===a?sh:a}function Ag(a,b){a<lj&&2<a&&(lj=a);null!==b&&a<mj&&2<a&&(mj=a,nj=b)}function Bg(a){a>wi&&(wi=a)}function Kj(){for(;null!==X;)X=Qj(X)}function Gj(){for(;null!==X&&!Uf();)X=Qj(X)}function Qj(a){var b=Rj(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=Pj(a));dj.current=null;return b}
	function Pj(a){X=a;do{var b=X.alternate;a=X.return;if(0===(X.effectTag&2048)){b=si(b,X,U);if(1===U||1!==X.childExpirationTime){for(var c=0,d=X.child;null!==d;){var e=d.expirationTime,f=d.childExpirationTime;e>c&&(c=e);f>c&&(c=f);d=d.sibling}X.childExpirationTime=c}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=X.firstEffect),null!==X.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=X.firstEffect),a.lastEffect=X.lastEffect),1<X.effectTag&&(null!==
	a.lastEffect?a.lastEffect.nextEffect=X:a.firstEffect=X,a.lastEffect=X))}else{b=zi(X);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=X.sibling;if(null!==b)return b;X=a}while(null!==X);S===ti&&(S=jj);return null}function Ij(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Jj(a){var b=ag();cg(99,Sj.bind(null,a,b));return null}
	function Sj(a,b){do Dj();while(null!==rj);if((W&(fj|gj))!==V)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Ij(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=
	d-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===T&&(X=T=null,U=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=W;W|=gj;dj.current=null;Dd=fd;var g=xd();if(yd(g)){if("selectionStart"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,
	m=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(wb){h=null;break a}var p=0,x=-1,z=-1,ca=0,D=0,t=g,y=null;b:for(;;){for(var A;;){t!==h||0!==l&&3!==t.nodeType||(x=p+l);t!==m||0!==k&&3!==t.nodeType||(z=p+k);3===t.nodeType&&(p+=t.nodeValue.length);if(null===(A=t.firstChild))break;y=t;t=A}for(;;){if(t===g)break b;y===h&&++ca===l&&(x=p);y===m&&++D===k&&(z=p);if(null!==(A=t.nextSibling))break;t=y;y=t.parentNode}t=A}h=-1===x||-1===z?null:{start:x,end:z}}else h=null}h=h||{start:0,end:0}}else h=
	null;Ed={activeElementDetached:null,focusedElem:g,selectionRange:h};fd=!1;Y=e;do try{Tj()}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var q=Y.effectTag;q&16&&Rb(Y.stateNode,"");if(q&128){var B=Y.alternate;if(null!==B){var w=B.ref;null!==w&&("function"===typeof w?w(null):w.current=null)}}switch(q&1038){case 2:Pi(Y);Y.effectTag&=-3;break;case 6:Pi(Y);Y.effectTag&=-3;Si(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=
	-1025;Si(Y.alternate,Y);break;case 4:Si(Y.alternate,Y);break;case 8:l=Y,Mi(g,l,h),Ni(l)}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);w=Ed;B=xd();q=w.focusedElem;h=w.selectionRange;if(B!==q&&q&&q.ownerDocument&&wd(q.ownerDocument.documentElement,q)){null!==h&&yd(q)&&(B=h.start,w=h.end,void 0===w&&(w=B),"selectionStart"in q?(q.selectionStart=B,q.selectionEnd=Math.min(w,q.value.length)):(w=(B=q.ownerDocument||document)&&B.defaultView||window,w.getSelection&&
	(w=w.getSelection(),l=q.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!w.extend&&g>h&&(l=h,h=g,g=l),l=vd(q,g),m=vd(q,h),l&&m&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(B=B.createRange(),B.setStart(l.node,l.offset),w.removeAllRanges(),g>h?(w.addRange(B),w.extend(m.node,m.offset)):(B.setEnd(m.node,m.offset),w.addRange(B))))));B=[];for(w=q;w=w.parentNode;)1===w.nodeType&&B.push({element:w,left:w.scrollLeft,
	top:w.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<B.length;q++)w=B[q],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}fd=!!Dd;Ed=Dd=null;a.current=c;Y=e;do try{for(q=a;null!==Y;){var ub=Y.effectTag;ub&36&&Ji(q,Y.alternate,Y);if(ub&128){B=void 0;var vb=Y.ref;if(null!==vb){var Xc=Y.stateNode;switch(Y.tag){case 5:B=Xc;break;default:B=Xc}"function"===typeof vb?vb(B):vb.current=B}}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=
	null;Vf();W=f}else a.current=c;if(qj)qj=!1,rj=a,sj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(aj=null);1073741823===b?a===vj?uj++:(uj=0,vj=a):uj=0;"function"===typeof Uj&&Uj(c.stateNode,d);Z(a);if(Yi)throw Yi=!1,a=Zi,Zi=null,a;if((W&ej)!==V)return null;gg();return null}function Tj(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Gi(Y.alternate,Y);0===(a&512)||qj||(qj=!0,dg(97,function(){Dj();return null}));Y=Y.nextEffect}}
	function Dj(){if(90!==sj){var a=97<sj?97:sj;sj=90;return cg(a,Vj)}}function Vj(){if(null===rj)return!1;var a=rj;rj=null;if((W&(fj|gj))!==V)throw Error(u(331));var b=W;W|=gj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:case 22:Hi(5,c),Ii(5,c)}}catch(d){if(null===a)throw Error(u(330));Ei(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}W=b;gg();return!0}
	function Wj(a,b,c){b=Ai(c,b);b=Xi(a,b,1073741823);xg(a,b);a=xj(a,1073741823);null!==a&&Z(a)}function Ei(a,b){if(3===a.tag)Wj(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){Wj(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===aj||!aj.has(d))){a=Ai(b,a);a=$i(c,a,1073741823);xg(c,a);c=xj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}
	function Oj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);T===a&&U===c?S===vi||S===ui&&1073741823===lj&&$f()-Ti<pj?Ej(a,U):oj=!0:Aj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,Z(a)))}function Vi(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Gg(),b=Hg(b,a,null));a=xj(a,b);null!==a&&Z(a)}var Rj;
	Rj=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)rg=!0;else{if(d<c){rg=!1;switch(b.tag){case 3:hi(b);Xh();break;case 5:fh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Gf(b);break;case 4:dh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;e=b.type._context;I(jg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;
	if(0!==d&&d>=c)return ji(a,b,c);I(M,M.current&1);b=$h(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return mi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current);if(!d)return null}return $h(a,b,c)}rg=!1}}else rg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Cf(b,J.current);qg(b,c);e=oh(null,
	b,d,a,e,c);b.effectTag|=1;if("object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(L(d)){var f=!0;Gf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;ug(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Fg(b,d,g,a);e.updater=Jg;b.stateNode=e;e._reactInternalFiber=b;Ng(b,d,a,c);b=gi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:a:{e=b.elementType;null!==a&&(a.alternate=
	null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;ob(e);if(1!==e._status)throw e._result;e=e._result;b.type=e;f=b.tag=Xj(e);a=ig(e,a);switch(f){case 0:b=di(null,b,e,a,c);break a;case 1:b=fi(null,b,e,a,c);break a;case 11:b=Zh(null,b,e,a,c);break a;case 14:b=ai(null,b,e,ig(e.type,a),d,c);break a}throw Error(u(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),di(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),fi(a,b,d,e,c);
	case 3:hi(b);d=b.updateQueue;if(null===a||null===d)throw Error(u(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;vg(a,b);zg(b,d,null,c);d=b.memoizedState.element;if(d===e)Xh(),b=$h(a,b,c);else{if(e=b.stateNode.hydrate)Ph=Jd(b.stateNode.containerInfo.firstChild),Oh=b,e=Qh=!0;if(e)for(c=Yg(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),Xh();b=b.child}return b;case 5:return fh(b),null===a&&Uh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:
	null,g=e.children,Gd(d,e)?g=null:null!==f&&Gd(d,f)&&(b.effectTag|=16),ei(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&Uh(b),null;case 13:return ji(a,b,c);case 4:return dh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Xg(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),Zh(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,
	b,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(jg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=$e(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!K.current){b=$h(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==
	k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=wg(c,null),l.tag=2,xg(h,l));h.expirationTime<c&&(h.expirationTime=c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);pg(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=
	g}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,qg(b,c),e=sg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;case 14:return e=b.type,f=ig(e,b.pendingProps),f=ig(e.type,f),ai(a,b,e,f,d,c);case 15:return ci(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Gf(b)):a=!1,qg(b,c),Lg(b,d,e),Ng(b,d,e,c),gi(null,
	b,d,!0,a,c);case 19:return mi(a,b,c)}throw Error(u(156,b.tag));};var Uj=null,Li=null;function Yj(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Uj=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Li=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}
	function Zj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Sh(a,b,c,d){return new Zj(a,b,c,d)}
	function bi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Xj(a){if("function"===typeof a)return bi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gb)return 11;if(a===jb)return 14}return 2}
	function Sg(a,b){var c=a.alternate;null===c?(c=Sh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,
	firstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
	function Ug(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bi(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ab:return Wg(c.children,e,f,b);case fb:g=8;e|=7;break;case bb:g=8;e|=1;break;case cb:return a=Sh(12,c,b,e|8),a.elementType=cb,a.type=cb,a.expirationTime=f,a;case hb:return a=Sh(13,c,b,e),a.type=hb,a.elementType=hb,a.expirationTime=f,a;case ib:return a=Sh(19,c,b,e),a.elementType=ib,a.expirationTime=f,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case db:g=
	10;break a;case eb:g=9;break a;case gb:g=11;break a;case jb:g=14;break a;case kb:g=16;d=null;break a;case lb:g=22;break a}throw Error(u(130,null==a?a:typeof a,""));}b=Sh(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Wg(a,b,c,d){a=Sh(7,a,d,b);a.expirationTime=c;return a}function Tg(a,b,c){a=Sh(6,a,null,b);a.expirationTime=c;return a}
	function Vg(a,b,c){b=Sh(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
	function ak(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}
	function Aj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function xi(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}
	function yi(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Cj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}
	function bk(a,b,c,d){var e=b.current,f=Gg(),g=Dg.suspense;f=Hg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(dc(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=Ff(c,k,h);break a}}c=h}else c=Af;null===b.context?b.context=c:b.pendingContext=c;b=wg(f,g);b.payload={element:a};d=void 0===
	d?null:d;null!==d&&(b.callback=d);xg(e,b);Ig(e,f);return f}function ck(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function dk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function ek(a,b){dk(a,b);(a=a.alternate)&&dk(a,b)}
	function fk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new ak(a,b,c),e=Sh(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;ug(e);a[Od]=d.current;c&&0!==b&&Jc(a,9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}fk.prototype.render=function(a){bk(a,this._internalRoot,null,null)};fk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;bk(null,a,null,function(){b[Od]=null})};
	function gk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function hk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new fk(a,0,b?{hydrate:!0}:void 0)}
	function ik(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=ck(g);h.call(a)}}bk(b,g,a,e)}else{f=c._reactRootContainer=hk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=ck(g);k.call(a)}}Nj(function(){bk(b,g,a,e)})}return ck(g)}function jk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$a,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
	wc=function(a){if(13===a.tag){var b=hg(Gg(),150,100);Ig(a,b);ek(a,b)}};xc=function(a){13===a.tag&&(Ig(a,3),ek(a,3))};yc=function(a){if(13===a.tag){var b=Gg();b=Hg(b,a,null);Ig(a,b);ek(a,b)}};
	za=function(a,b,c){switch(b){case "input":Cb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Qd(d);if(!e)throw Error(u(90));yb(d);Cb(d,e)}}}break;case "textarea":Kb(a,c);break;case "select":b=c.value,null!=b&&Hb(a,!!c.multiple,b,!1)}};Fa=Mj;
	Ga=function(a,b,c,d,e){var f=W;W|=4;try{return cg(98,a.bind(null,b,c,d,e))}finally{W=f,W===V&&gg()}};Ha=function(){(W&(1|fj|gj))===V&&(Lj(),Dj())};Ia=function(a,b){var c=W;W|=2;try{return a(b)}finally{W=c,W===V&&gg()}};function kk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gk(b))throw Error(u(200));return jk(a,b,null,c)}var lk={Events:[Nc,Pd,Qd,xa,ta,Xd,function(a){jc(a,Wd)},Da,Ea,id,mc,Dj,{current:!1}]};
	(function(a){var b=a.findFiberByHostInstance;return Yj(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Wa.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hc(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:tc,bundleType:0,version:"16.14.0",
	rendererPackageName:"react-dom"});exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lk;exports.createPortal=kk;exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if("function"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=hc(b);a=null===a?null:a.stateNode;return a};
	exports.flushSync=function(a,b){if((W&(fj|gj))!==V)throw Error(u(187));var c=W;W|=1;try{return cg(99,a.bind(null,b))}finally{W=c,gg()}};exports.hydrate=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!0,c)};exports.render=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!1,c)};
	exports.unmountComponentAtNode=function(a){if(!gk(a))throw Error(u(40));return a._reactRootContainer?(Nj(function(){ik(null,null,a,!1,function(){a._reactRootContainer=null;a[Od]=null})}),!0):!1};exports.unstable_batchedUpdates=Mj;exports.unstable_createPortal=function(a,b){return kk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};
	exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!gk(c))throw Error(u(200));if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return ik(a,b,c,!1,d)};exports.version="16.14.0";


/***/ }),
/* 1190 */
/***/ (function(module, exports, __webpack_require__) {

	/** @license React v16.14.0
	 * react.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';var l=__webpack_require__(213),n="function"===typeof Symbol&&Symbol.for,p=n?Symbol.for("react.element"):60103,q=n?Symbol.for("react.portal"):60106,r=n?Symbol.for("react.fragment"):60107,t=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,v=n?Symbol.for("react.provider"):60109,w=n?Symbol.for("react.context"):60110,x=n?Symbol.for("react.forward_ref"):60112,y=n?Symbol.for("react.suspense"):60113,z=n?Symbol.for("react.memo"):60115,A=n?Symbol.for("react.lazy"):
	60116,B="function"===typeof Symbol&&Symbol.iterator;function C(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}
	var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,"setState")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};
	function G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
	function M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}
	function N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}
	function S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}
	function T(a,b,c,e){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,""===b?"."+U(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||"object"!==typeof a?f=null:(f=B&&a[B]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),k=
	0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if("object"===d)throw c=""+a,Error(C(31,"[object Object]"===c?"object with keys {"+Object.keys(a).join(", ")+"}":c,""));return g}function V(a,b,c){return null==a?0:T(a,"",b,c)}function U(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}
	function aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(P,"$&/")+"/")+c)),e.push(a))}function X(a,b,c,e,d){var g="";null!=c&&(g=(""+c).replace(P,"$&/")+"/");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}
	var ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};
	exports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;
	exports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=""+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,
	key:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;
	exports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};
	exports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version="16.14.0";


/***/ }),
/* 1191 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _classCallCheck2 = __webpack_require__(87);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(108);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(107);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(171);
	
	var _scrollBehavior = __webpack_require__(1759);
	
	var _scrollBehavior2 = _interopRequireDefault(_scrollBehavior);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _StateStorage = __webpack_require__(1193);
	
	var _StateStorage2 = _interopRequireDefault(_StateStorage);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  shouldUpdateScroll: _propTypes2.default.func,
	  children: _propTypes2.default.element.isRequired,
	  location: _propTypes2.default.object.isRequired,
	  history: _propTypes2.default.object.isRequired
	};
	
	var childContextTypes = {
	  scrollBehavior: _propTypes2.default.object.isRequired
	};
	
	var ScrollContext = function (_React$Component) {
	  (0, _inherits3.default)(ScrollContext, _React$Component);
	
	  function ScrollContext(props, context) {
	    (0, _classCallCheck3.default)(this, ScrollContext);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));
	
	    _this.shouldUpdateScroll = function (prevRouterProps, routerProps) {
	      var shouldUpdateScroll = _this.props.shouldUpdateScroll;
	
	      if (!shouldUpdateScroll) {
	        return true;
	      }
	
	      // Hack to allow accessing scrollBehavior._stateStorage.
	      return shouldUpdateScroll.call(_this.scrollBehavior, prevRouterProps, routerProps);
	    };
	
	    _this.registerElement = function (key, element, shouldUpdateScroll) {
	      _this.scrollBehavior.registerElement(key, element, shouldUpdateScroll, _this.getRouterProps());
	    };
	
	    _this.unregisterElement = function (key) {
	      _this.scrollBehavior.unregisterElement(key);
	    };
	
	    var history = props.history;
	
	
	    _this.scrollBehavior = new _scrollBehavior2.default({
	      addTransitionHook: history.listen,
	      stateStorage: new _StateStorage2.default(),
	      getCurrentLocation: function getCurrentLocation() {
	        return _this.props.location;
	      },
	      shouldUpdateScroll: _this.shouldUpdateScroll
	    });
	
	    _this.scrollBehavior.updateScroll(null, _this.getRouterProps());
	    return _this;
	  }
	
	  ScrollContext.prototype.getChildContext = function getChildContext() {
	    return {
	      scrollBehavior: this
	    };
	  };
	
	  ScrollContext.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var _props = this.props,
	        location = _props.location,
	        history = _props.history;
	
	    var prevLocation = prevProps.location;
	
	    if (location === prevLocation) {
	      return;
	    }
	
	    var prevRouterProps = {
	      history: prevProps.history,
	      location: prevProps.location
	
	      // The "scroll-behavior" package expects the "action" to be on the location
	      // object so let's copy it over.
	    };location.action = history.action;
	    this.scrollBehavior.updateScroll(prevRouterProps, { history: history, location: location });
	  };
	
	  ScrollContext.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.scrollBehavior.stop();
	  };
	
	  ScrollContext.prototype.getRouterProps = function getRouterProps() {
	    var _props2 = this.props,
	        history = _props2.history,
	        location = _props2.location;
	
	    return { history: history, location: location };
	  };
	
	  ScrollContext.prototype.render = function render() {
	    return _react2.default.Children.only(this.props.children);
	  };
	
	  return ScrollContext;
	}(_react2.default.Component);
	
	ScrollContext.propTypes = propTypes;
	ScrollContext.childContextTypes = childContextTypes;
	
	exports.default = (0, _reactRouterDom.withRouter)(ScrollContext);

/***/ }),
/* 1192 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _classCallCheck2 = __webpack_require__(87);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(108);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(107);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(29);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _warning = __webpack_require__(1195);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  scrollKey: _propTypes2.default.string.isRequired,
	  shouldUpdateScroll: _propTypes2.default.func,
	  children: _propTypes2.default.element.isRequired
	};
	
	var contextTypes = {
	  // This is necessary when rendering on the client. However, when rendering on
	  // the server, this container will do nothing, and thus does not require the
	  // scroll behavior context.
	  scrollBehavior: _propTypes2.default.object
	
	  /* eslint-disable react/no-deprecated */
	};
	var ScrollContainer = function (_React$Component) {
	  (0, _inherits3.default)(ScrollContainer, _React$Component);
	
	  function ScrollContainer(props, context) {
	    (0, _classCallCheck3.default)(this, ScrollContainer);
	
	    // We don't re-register if the scroll key changes, so make sure we
	    // unregister with the initial scroll key just in case the user changes it.
	    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));
	
	    _this.shouldUpdateScroll = function (prevRouterProps, routerProps) {
	      var shouldUpdateScroll = _this.props.shouldUpdateScroll;
	
	      if (!shouldUpdateScroll) {
	        return true;
	      }
	
	      // Hack to allow accessing scrollBehavior._stateStorage.
	      return shouldUpdateScroll.call(_this.context.scrollBehavior.scrollBehavior, prevRouterProps, routerProps);
	    };
	
	    _this.scrollKey = props.scrollKey;
	    return _this;
	  }
	
	  ScrollContainer.prototype.componentDidMount = function componentDidMount() {
	    this.context.scrollBehavior.registerElement(this.props.scrollKey, _reactDom2.default.findDOMNode(this), // eslint-disable-line react/no-find-dom-node
	    this.shouldUpdateScroll);
	
	    // Only keep around the current DOM node in development, as this is only
	    // for emitting the appropriate warning.
	    if (false) {
	      this.domNode = _reactDom2.default.findDOMNode(this); // eslint-disable-line react/no-find-dom-node
	    }
	  };
	
	  ScrollContainer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	     false ? (0, _warning2.default)(nextProps.scrollKey === this.props.scrollKey, "<ScrollContainer> does not support changing scrollKey.") : void 0;
	  };
	
	  ScrollContainer.prototype.componentDidUpdate = function componentDidUpdate() {
	    if (false) {
	      var prevDomNode = this.domNode;
	      this.domNode = _reactDom2.default.findDOMNode(this); // eslint-disable-line react/no-find-dom-node
	
	      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(this.domNode === prevDomNode, "<ScrollContainer> does not support changing DOM node.") : void 0;
	    }
	  };
	
	  ScrollContainer.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.context.scrollBehavior.unregisterElement(this.scrollKey);
	  };
	
	  ScrollContainer.prototype.render = function render() {
	    return this.props.children;
	  };
	
	  return ScrollContainer;
	}(_react2.default.Component);
	/* eslint-enable */
	
	ScrollContainer.propTypes = propTypes;
	ScrollContainer.contextTypes = contextTypes;
	
	exports.default = ScrollContainer;

/***/ }),
/* 1193 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _stringify = __webpack_require__(401);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _classCallCheck2 = __webpack_require__(87);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var STATE_KEY_PREFIX = "@@scroll|";
	var GATSBY_ROUTER_SCROLL_STATE = "___GATSBY_REACT_ROUTER_SCROLL";
	
	var SessionStorage = function () {
	  function SessionStorage() {
	    (0, _classCallCheck3.default)(this, SessionStorage);
	  }
	
	  SessionStorage.prototype.read = function read(location, key) {
	    var stateKey = this.getStateKey(location, key);
	
	    try {
	      var value = window.sessionStorage.getItem(stateKey);
	      return JSON.parse(value);
	    } catch (e) {
	      console.warn("[gatsby-react-router-scroll] Unable to access sessionStorage; sessionStorage is not available.");
	
	      if (window && window[GATSBY_ROUTER_SCROLL_STATE] && window[GATSBY_ROUTER_SCROLL_STATE][stateKey]) {
	        return window[GATSBY_ROUTER_SCROLL_STATE][stateKey];
	      }
	
	      return {};
	    }
	  };
	
	  SessionStorage.prototype.save = function save(location, key, value) {
	    var stateKey = this.getStateKey(location, key);
	    var storedValue = (0, _stringify2.default)(value);
	
	    try {
	      window.sessionStorage.setItem(stateKey, storedValue);
	    } catch (e) {
	      if (window && window[GATSBY_ROUTER_SCROLL_STATE]) {
	        window[GATSBY_ROUTER_SCROLL_STATE][stateKey] = JSON.parse(storedValue);
	      } else {
	        window[GATSBY_ROUTER_SCROLL_STATE] = {};
	        window[GATSBY_ROUTER_SCROLL_STATE][stateKey] = JSON.parse(storedValue);
	      }
	
	      console.warn("[gatsby-react-router-scroll] Unable to save state in sessionStorage; sessionStorage is not available.");
	    }
	  };
	
	  SessionStorage.prototype.getStateKey = function getStateKey(location, key) {
	    var stateKeyBase = "" + STATE_KEY_PREFIX + location.pathname;
	    return key === null || typeof key === "undefined" ? stateKeyBase : stateKeyBase + "|" + key;
	  };
	
	  return SessionStorage;
	}();
	
	exports.default = SessionStorage;

/***/ }),
/* 1194 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _ScrollBehaviorContext = __webpack_require__(1191);
	
	var _ScrollBehaviorContext2 = _interopRequireDefault(_ScrollBehaviorContext);
	
	var _ScrollContainer = __webpack_require__(1192);
	
	var _ScrollContainer2 = _interopRequireDefault(_ScrollContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.ScrollContainer = _ScrollContainer2.default;
	exports.ScrollContext = _ScrollBehaviorContext2.default;

/***/ }),
/* 1195 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = function() {};
	
	if (false) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }
	
	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}
	
	module.exports = warning;


/***/ }),
/* 1196 */,
/* 1197 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {var win;
	
	if (typeof window !== "undefined") {
	    win = window;
	} else if (typeof global !== "undefined") {
	    win = global;
	} else if (typeof self !== "undefined"){
	    win = self;
	} else {
	    win = {};
	}
	
	module.exports = win;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 1198 */
/***/ (function(module, exports) {

	'use strict';
	
	/* eslint complexity: [2, 18], max-statements: [2, 33] */
	module.exports = function hasSymbols() {
		if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
		if (typeof Symbol.iterator === 'symbol') { return true; }
	
		var obj = {};
		var sym = Symbol('test');
		var symObj = Object(sym);
		if (typeof sym === 'string') { return false; }
	
		if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
		if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }
	
		// temp disabled per https://github.com/ljharb/object.assign/issues/17
		// if (sym instanceof Symbol) { return false; }
		// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
		// if (!(symObj instanceof Symbol)) { return false; }
	
		// if (typeof Symbol.prototype.toString !== 'function') { return false; }
		// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }
	
		var symVal = 42;
		obj[sym] = symVal;
		for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
		if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }
	
		if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }
	
		var syms = Object.getOwnPropertySymbols(obj);
		if (syms.length !== 1 || syms[0] !== sym) { return false; }
	
		if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }
	
		if (typeof Object.getOwnPropertyDescriptor === 'function') {
			var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
			if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
		}
	
		return true;
	};


/***/ }),
/* 1199 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var bind = __webpack_require__(291);
	
	module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);


/***/ }),
/* 1200 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";function _interopDefault(t){return t&&"object"==typeof t&&"default"in t?t.default:t}Object.defineProperty(exports,"__esModule",{value:!0});var resolvePathname=_interopDefault(__webpack_require__(1755)),valueEqual=_interopDefault(__webpack_require__(1787));__webpack_require__(1779);var invariant=_interopDefault(__webpack_require__(1778));function _extends(){return(_extends=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a])}return t}).apply(this,arguments)}function addLeadingSlash(t){return"/"===t.charAt(0)?t:"/"+t}function stripLeadingSlash(t){return"/"===t.charAt(0)?t.substr(1):t}function hasBasename(t,n){return 0===t.toLowerCase().indexOf(n.toLowerCase())&&-1!=="/?#".indexOf(t.charAt(n.length))}function stripBasename(t,n){return hasBasename(t,n)?t.substr(n.length):t}function stripTrailingSlash(t){return"/"===t.charAt(t.length-1)?t.slice(0,-1):t}function parsePath(t){var n=t||"/",e="",a="",r=n.indexOf("#");-1!==r&&(a=n.substr(r),n=n.substr(0,r));var o=n.indexOf("?");return-1!==o&&(e=n.substr(o),n=n.substr(0,o)),{pathname:n,search:"?"===e?"":e,hash:"#"===a?"":a}}function createPath(t){var n=t.pathname,e=t.search,a=t.hash,r=n||"/";return e&&"?"!==e&&(r+="?"===e.charAt(0)?e:"?"+e),a&&"#"!==a&&(r+="#"===a.charAt(0)?a:"#"+a),r}function createLocation(t,n,e,a){var r;"string"==typeof t?(r=parsePath(t)).state=n:(void 0===(r=_extends({},t)).pathname&&(r.pathname=""),r.search?"?"!==r.search.charAt(0)&&(r.search="?"+r.search):r.search="",r.hash?"#"!==r.hash.charAt(0)&&(r.hash="#"+r.hash):r.hash="",void 0!==n&&void 0===r.state&&(r.state=n));try{r.pathname=decodeURI(r.pathname)}catch(t){throw t instanceof URIError?new URIError('Pathname "'+r.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):t}return e&&(r.key=e),a?r.pathname?"/"!==r.pathname.charAt(0)&&(r.pathname=resolvePathname(r.pathname,a.pathname)):r.pathname=a.pathname:r.pathname||(r.pathname="/"),r}function locationsAreEqual(t,n){return t.pathname===n.pathname&&t.search===n.search&&t.hash===n.hash&&t.key===n.key&&valueEqual(t.state,n.state)}function createTransitionManager(){var o=null;var a=[];return{setPrompt:function(t){return o=t,function(){o===t&&(o=null)}},confirmTransitionTo:function(t,n,e,a){if(null!=o){var r="function"==typeof o?o(t,n):o;"string"==typeof r?"function"==typeof e?e(r,a):a(!0):a(!1!==r)}else a(!0)},appendListener:function(t){var n=!0;function e(){n&&t.apply(void 0,arguments)}return a.push(e),function(){n=!1,a=a.filter(function(t){return t!==e})}},notifyListeners:function(){for(var t=arguments.length,n=new Array(t),e=0;e<t;e++)n[e]=arguments[e];a.forEach(function(t){return t.apply(void 0,n)})}}}var canUseDOM=!("undefined"==typeof window||!window.document||!window.document.createElement);function getConfirmation(t,n){n(window.confirm(t))}function supportsHistory(){var t=window.navigator.userAgent;return(-1===t.indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&(window.history&&"pushState"in window.history)}function supportsPopStateOnHashChange(){return-1===window.navigator.userAgent.indexOf("Trident")}function supportsGoWithoutReloadUsingHash(){return-1===window.navigator.userAgent.indexOf("Firefox")}function isExtraneousPopstateEvent(t){return void 0===t.state&&-1===navigator.userAgent.indexOf("CriOS")}var PopStateEvent="popstate",HashChangeEvent="hashchange";function getHistoryState(){try{return window.history.state||{}}catch(t){return{}}}function createBrowserHistory(t){void 0===t&&(t={}),canUseDOM||invariant(!1);var s=window.history,c=supportsHistory(),n=!supportsPopStateOnHashChange(),e=t,a=e.forceRefresh,h=void 0!==a&&a,r=e.getUserConfirmation,u=void 0===r?getConfirmation:r,o=e.keyLength,i=void 0===o?6:o,f=t.basename?stripTrailingSlash(addLeadingSlash(t.basename)):"";function l(t){var n=t||{},e=n.key,a=n.state,r=window.location,o=r.pathname+r.search+r.hash;return f&&(o=stripBasename(o,f)),createLocation(o,a,e)}function d(){return Math.random().toString(36).substr(2,i)}var v=createTransitionManager();function p(t){_extends(T,t),T.length=s.length,v.notifyListeners(T.location,T.action)}function g(t){isExtraneousPopstateEvent(t)||w(l(t.state))}function P(){w(l(getHistoryState()))}var m=!1;function w(n){if(m)m=!1,p();else{v.confirmTransitionTo(n,"POP",u,function(t){t?p({action:"POP",location:n}):function(t){var n=T.location,e=H.indexOf(n.key);-1===e&&(e=0);var a=H.indexOf(t.key);-1===a&&(a=0);var r=e-a;r&&(m=!0,L(r))}(n)})}}var y=l(getHistoryState()),H=[y.key];function x(t){return f+createPath(t)}function L(t){s.go(t)}var O=0;function E(t){1===(O+=t)&&1===t?(window.addEventListener(PopStateEvent,g),n&&window.addEventListener(HashChangeEvent,P)):0===O&&(window.removeEventListener(PopStateEvent,g),n&&window.removeEventListener(HashChangeEvent,P))}var S=!1;var T={length:s.length,action:"POP",location:y,createHref:x,push:function(t,n){var i=createLocation(t,n,d(),T.location);v.confirmTransitionTo(i,"PUSH",u,function(t){if(t){var n=x(i),e=i.key,a=i.state;if(c)if(s.pushState({key:e,state:a},null,n),h)window.location.href=n;else{var r=H.indexOf(T.location.key),o=H.slice(0,r+1);o.push(i.key),H=o,p({action:"PUSH",location:i})}else window.location.href=n}})},replace:function(t,n){var o="REPLACE",i=createLocation(t,n,d(),T.location);v.confirmTransitionTo(i,o,u,function(t){if(t){var n=x(i),e=i.key,a=i.state;if(c)if(s.replaceState({key:e,state:a},null,n),h)window.location.replace(n);else{var r=H.indexOf(T.location.key);-1!==r&&(H[r]=i.key),p({action:o,location:i})}else window.location.replace(n)}})},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(t){void 0===t&&(t=!1);var n=v.setPrompt(t);return S||(E(1),S=!0),function(){return S&&(S=!1,E(-1)),n()}},listen:function(t){var n=v.appendListener(t);return E(1),function(){E(-1),n()}}};return T}var HashChangeEvent$1="hashchange",HashPathCoders={hashbang:{encodePath:function(t){return"!"===t.charAt(0)?t:"!/"+stripLeadingSlash(t)},decodePath:function(t){return"!"===t.charAt(0)?t.substr(1):t}},noslash:{encodePath:stripLeadingSlash,decodePath:addLeadingSlash},slash:{encodePath:addLeadingSlash,decodePath:addLeadingSlash}};function stripHash(t){var n=t.indexOf("#");return-1===n?t:t.slice(0,n)}function getHashPath(){var t=window.location.href,n=t.indexOf("#");return-1===n?"":t.substring(n+1)}function pushHashPath(t){window.location.hash=t}function replaceHashPath(t){window.location.replace(stripHash(window.location.href)+"#"+t)}function createHashHistory(t){void 0===t&&(t={}),canUseDOM||invariant(!1);var n=window.history,e=(supportsGoWithoutReloadUsingHash(),t),a=e.getUserConfirmation,i=void 0===a?getConfirmation:a,r=e.hashType,o=void 0===r?"slash":r,s=t.basename?stripTrailingSlash(addLeadingSlash(t.basename)):"",c=HashPathCoders[o],h=c.encodePath,u=c.decodePath;function f(){var t=u(getHashPath());return s&&(t=stripBasename(t,s)),createLocation(t)}var l=createTransitionManager();function d(t){_extends(E,t),E.length=n.length,l.notifyListeners(E.location,E.action)}var v=!1,p=null;function g(){var t=getHashPath(),n=h(t);if(t!==n)replaceHashPath(n);else{var e=f(),a=E.location;if(!v&&function(t,n){return t.pathname===n.pathname&&t.search===n.search&&t.hash===n.hash}(a,e))return;if(p===createPath(e))return;p=null,function(n){if(v)v=!1,d();else{l.confirmTransitionTo(n,"POP",i,function(t){t?d({action:"POP",location:n}):function(t){var n=E.location,e=y.lastIndexOf(createPath(n));-1===e&&(e=0);var a=y.lastIndexOf(createPath(t));-1===a&&(a=0);var r=e-a;r&&(v=!0,H(r))}(n)})}}(e)}}var P=getHashPath(),m=h(P);P!==m&&replaceHashPath(m);var w=f(),y=[createPath(w)];function H(t){n.go(t)}var x=0;function L(t){1===(x+=t)&&1===t?window.addEventListener(HashChangeEvent$1,g):0===x&&window.removeEventListener(HashChangeEvent$1,g)}var O=!1;var E={length:n.length,action:"POP",location:w,createHref:function(t){var n=document.querySelector("base"),e="";return n&&n.getAttribute("href")&&(e=stripHash(window.location.href)),e+"#"+h(s+createPath(t))},push:function(t,n){var o=createLocation(t,void 0,void 0,E.location);l.confirmTransitionTo(o,"PUSH",i,function(t){if(t){var n=createPath(o),e=h(s+n);if(getHashPath()!==e){p=n,pushHashPath(e);var a=y.lastIndexOf(createPath(E.location)),r=y.slice(0,a+1);r.push(n),y=r,d({action:"PUSH",location:o})}else d()}})},replace:function(t,n){var r="REPLACE",o=createLocation(t,void 0,void 0,E.location);l.confirmTransitionTo(o,r,i,function(t){if(t){var n=createPath(o),e=h(s+n);getHashPath()!==e&&(p=n,replaceHashPath(e));var a=y.indexOf(createPath(E.location));-1!==a&&(y[a]=n),d({action:r,location:o})}})},go:H,goBack:function(){H(-1)},goForward:function(){H(1)},block:function(t){void 0===t&&(t=!1);var n=l.setPrompt(t);return O||(L(1),O=!0),function(){return O&&(O=!1,L(-1)),n()}},listen:function(t){var n=l.appendListener(t);return L(1),function(){L(-1),n()}}};return E}function clamp(t,n,e){return Math.min(Math.max(t,n),e)}function createMemoryHistory(t){void 0===t&&(t={});var n=t,r=n.getUserConfirmation,e=n.initialEntries,a=void 0===e?["/"]:e,o=n.initialIndex,i=void 0===o?0:o,s=n.keyLength,c=void 0===s?6:s,h=createTransitionManager();function u(t){_extends(g,t),g.length=g.entries.length,h.notifyListeners(g.location,g.action)}function f(){return Math.random().toString(36).substr(2,c)}var l=clamp(i,0,a.length-1),d=a.map(function(t){return createLocation(t,void 0,"string"==typeof t?f():t.key||f())}),v=createPath;function p(t){var n=clamp(g.index+t,0,g.entries.length-1),e=g.entries[n];h.confirmTransitionTo(e,"POP",r,function(t){t?u({action:"POP",location:e,index:n}):u()})}var g={length:d.length,action:"POP",location:d[l],index:l,entries:d,createHref:v,push:function(t,n){var a=createLocation(t,n,f(),g.location);h.confirmTransitionTo(a,"PUSH",r,function(t){if(t){var n=g.index+1,e=g.entries.slice(0);e.length>n?e.splice(n,e.length-n,a):e.push(a),u({action:"PUSH",location:a,index:n,entries:e})}})},replace:function(t,n){var e="REPLACE",a=createLocation(t,n,f(),g.location);h.confirmTransitionTo(a,e,r,function(t){t&&(g.entries[g.index]=a,u({action:e,location:a}))})},go:p,goBack:function(){p(-1)},goForward:function(){p(1)},canGo:function(t){var n=g.index+t;return 0<=n&&n<g.entries.length},block:function(t){return void 0===t&&(t=!1),h.setPrompt(t)},listen:function(t){return h.appendListener(t)}};return g}exports.createBrowserHistory=createBrowserHistory,exports.createHashHistory=createHashHistory,exports.createMemoryHistory=createMemoryHistory,exports.createLocation=createLocation,exports.locationsAreEqual=locationsAreEqual,exports.parsePath=parsePath,exports.createPath=createPath;


/***/ }),
/* 1201 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(1202)('createBrowserHistory');
	module.exports = __webpack_require__(67).createBrowserHistory;


/***/ }),
/* 1202 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var printWarning = function() {};
	
	if (false) {
	  printWarning = function(format, subs) {
	    var index = 0;
	    var message =
	      'Warning: ' +
	      (subs.length > 0
	        ? format.replace(/%s/g, function() {
	            return subs[index++];
	          })
	        : format);
	
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	
	    try {
	      // --- Welcome to debugging history ---
	      // This error was thrown as a convenience so that you can use the
	      // stack trace to find the callsite that triggered this warning.
	      throw new Error(message);
	    } catch (e) {}
	  };
	}
	
	module.exports = function(member) {
	  printWarning(
	    'Please use `require("history").%s` instead of `require("history/%s")`. ' +
	      'Support for the latter will be removed in the next major release.',
	    [member, member]
	  );
	};


/***/ }),
/* 1203 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = CollectingHandler;
	
	function CollectingHandler(cbs) {
	    this._cbs = cbs || {};
	    this.events = [];
	}
	
	var EVENTS = __webpack_require__(68).EVENTS;
	Object.keys(EVENTS).forEach(function(name) {
	    if (EVENTS[name] === 0) {
	        name = "on" + name;
	        CollectingHandler.prototype[name] = function() {
	            this.events.push([name]);
	            if (this._cbs[name]) this._cbs[name]();
	        };
	    } else if (EVENTS[name] === 1) {
	        name = "on" + name;
	        CollectingHandler.prototype[name] = function(a) {
	            this.events.push([name, a]);
	            if (this._cbs[name]) this._cbs[name](a);
	        };
	    } else if (EVENTS[name] === 2) {
	        name = "on" + name;
	        CollectingHandler.prototype[name] = function(a, b) {
	            this.events.push([name, a, b]);
	            if (this._cbs[name]) this._cbs[name](a, b);
	        };
	    } else {
	        throw Error("wrong number of arguments");
	    }
	});
	
	CollectingHandler.prototype.onreset = function() {
	    this.events = [];
	    if (this._cbs.onreset) this._cbs.onreset();
	};
	
	CollectingHandler.prototype.restart = function() {
	    if (this._cbs.onreset) this._cbs.onreset();
	
	    for (var i = 0, len = this.events.length; i < len; i++) {
	        if (this._cbs[this.events[i][0]]) {
	            var num = this.events[i].length;
	
	            if (num === 1) {
	                this._cbs[this.events[i][0]]();
	            } else if (num === 2) {
	                this._cbs[this.events[i][0]](this.events[i][1]);
	            } else {
	                this._cbs[this.events[i][0]](
	                    this.events[i][1],
	                    this.events[i][2]
	                );
	            }
	        }
	    }
	};


/***/ }),
/* 1204 */
/***/ (function(module, exports, __webpack_require__) {

	var DomHandler = __webpack_require__(77);
	var DomUtils = __webpack_require__(78);
	
	//TODO: make this a streamable handler
	function FeedHandler(callback, options) {
	    this.init(callback, options);
	}
	
	__webpack_require__(43)(FeedHandler, DomHandler);
	
	FeedHandler.prototype.init = DomHandler;
	
	function getElements(what, where) {
	    return DomUtils.getElementsByTagName(what, where, true);
	}
	function getOneElement(what, where) {
	    return DomUtils.getElementsByTagName(what, where, true, 1)[0];
	}
	function fetch(what, where, recurse) {
	    return DomUtils.getText(
	        DomUtils.getElementsByTagName(what, where, recurse, 1)
	    ).trim();
	}
	
	function addConditionally(obj, prop, what, where, recurse) {
	    var tmp = fetch(what, where, recurse);
	    if (tmp) obj[prop] = tmp;
	}
	
	var isValidFeed = function(value) {
	    return value === "rss" || value === "feed" || value === "rdf:RDF";
	};
	
	FeedHandler.prototype.onend = function() {
	    var feed = {},
	        feedRoot = getOneElement(isValidFeed, this.dom),
	        tmp,
	        childs;
	
	    if (feedRoot) {
	        if (feedRoot.name === "feed") {
	            childs = feedRoot.children;
	
	            feed.type = "atom";
	            addConditionally(feed, "id", "id", childs);
	            addConditionally(feed, "title", "title", childs);
	            if (
	                (tmp = getOneElement("link", childs)) &&
	                (tmp = tmp.attribs) &&
	                (tmp = tmp.href)
	            )
	                feed.link = tmp;
	            addConditionally(feed, "description", "subtitle", childs);
	            if ((tmp = fetch("updated", childs))) feed.updated = new Date(tmp);
	            addConditionally(feed, "author", "email", childs, true);
	
	            feed.items = getElements("entry", childs).map(function(item) {
	                var entry = {},
	                    tmp;
	
	                item = item.children;
	
	                addConditionally(entry, "id", "id", item);
	                addConditionally(entry, "title", "title", item);
	                if (
	                    (tmp = getOneElement("link", item)) &&
	                    (tmp = tmp.attribs) &&
	                    (tmp = tmp.href)
	                )
	                    entry.link = tmp;
	                if ((tmp = fetch("summary", item) || fetch("content", item)))
	                    entry.description = tmp;
	                if ((tmp = fetch("updated", item)))
	                    entry.pubDate = new Date(tmp);
	                return entry;
	            });
	        } else {
	            childs = getOneElement("channel", feedRoot.children).children;
	
	            feed.type = feedRoot.name.substr(0, 3);
	            feed.id = "";
	            addConditionally(feed, "title", "title", childs);
	            addConditionally(feed, "link", "link", childs);
	            addConditionally(feed, "description", "description", childs);
	            if ((tmp = fetch("lastBuildDate", childs)))
	                feed.updated = new Date(tmp);
	            addConditionally(feed, "author", "managingEditor", childs, true);
	
	            feed.items = getElements("item", feedRoot.children).map(function(
	                item
	            ) {
	                var entry = {},
	                    tmp;
	
	                item = item.children;
	
	                addConditionally(entry, "id", "guid", item);
	                addConditionally(entry, "title", "title", item);
	                addConditionally(entry, "link", "link", item);
	                addConditionally(entry, "description", "description", item);
	                if ((tmp = fetch("pubDate", item)))
	                    entry.pubDate = new Date(tmp);
	                return entry;
	            });
	        }
	    }
	    this.dom = feed;
	    DomHandler.prototype._handleCallback.call(
	        this,
	        feedRoot ? null : Error("couldn't find root of feed")
	    );
	};
	
	module.exports = FeedHandler;


/***/ }),
/* 1205 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = ProxyHandler;
	
	function ProxyHandler(cbs) {
	    this._cbs = cbs || {};
	}
	
	var EVENTS = __webpack_require__(68).EVENTS;
	Object.keys(EVENTS).forEach(function(name) {
	    if (EVENTS[name] === 0) {
	        name = "on" + name;
	        ProxyHandler.prototype[name] = function() {
	            if (this._cbs[name]) this._cbs[name]();
	        };
	    } else if (EVENTS[name] === 1) {
	        name = "on" + name;
	        ProxyHandler.prototype[name] = function(a) {
	            if (this._cbs[name]) this._cbs[name](a);
	        };
	    } else if (EVENTS[name] === 2) {
	        name = "on" + name;
	        ProxyHandler.prototype[name] = function(a, b) {
	            if (this._cbs[name]) this._cbs[name](a, b);
	        };
	    } else {
	        throw Error("wrong number of arguments");
	    }
	});


/***/ }),
/* 1206 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = Stream;
	
	var Parser = __webpack_require__(450);
	
	function Stream(options) {
	    Parser.call(this, new Cbs(this), options);
	}
	
	__webpack_require__(43)(Stream, Parser);
	
	Stream.prototype.readable = true;
	
	function Cbs(scope) {
	    this.scope = scope;
	}
	
	var EVENTS = __webpack_require__(68).EVENTS;
	
	Object.keys(EVENTS).forEach(function(name) {
	    if (EVENTS[name] === 0) {
	        Cbs.prototype["on" + name] = function() {
	            this.scope.emit(name);
	        };
	    } else if (EVENTS[name] === 1) {
	        Cbs.prototype["on" + name] = function(a) {
	            this.scope.emit(name, a);
	        };
	    } else if (EVENTS[name] === 2) {
	        Cbs.prototype["on" + name] = function(a, b) {
	            this.scope.emit(name, a, b);
	        };
	    } else {
	        throw Error("wrong number of arguments!");
	    }
	});


/***/ }),
/* 1207 */
/***/ (function(module, exports) {

	'use strict';
	
	/* eslint-disable no-var, prefer-template */
	var uppercasePattern = /[A-Z]/g;
	var msPattern = /^ms-/;
	var cache = {};
	
	function toHyphenLower(match) {
	  return '-' + match.toLowerCase()
	}
	
	function hyphenateStyleName(name) {
	  if (cache.hasOwnProperty(name)) {
	    return cache[name]
	  }
	
	  var hName = name.replace(uppercasePattern, toHyphenLower);
	  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)
	}
	
	module.exports = hyphenateStyleName;


/***/ }),
/* 1208 */
/***/ (function(module, exports) {

	/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = (nBytes * 8) - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]
	
	  i += d
	
	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}
	
	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}
	
	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}
	
	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = (nBytes * 8) - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
	
	  value = Math.abs(value)
	
	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }
	
	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = ((value * c) - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }
	
	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
	
	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
	
	  buffer[offset + i - d] |= s * 128
	}


/***/ }),
/* 1209 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';
	var callBound = __webpack_require__(405);
	
	var $toString = callBound('Object.prototype.toString');
	
	var isStandardArguments = function isArguments(value) {
		if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
			return false;
		}
		return $toString(value) === '[object Arguments]';
	};
	
	var isLegacyArguments = function isArguments(value) {
		if (isStandardArguments(value)) {
			return true;
		}
		return value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			$toString(value) !== '[object Array]' &&
			$toString(value.callee) === '[object Function]';
	};
	
	var supportsStandardArguments = (function () {
		return isStandardArguments(arguments);
	}());
	
	isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests
	
	module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;


/***/ }),
/* 1210 */
/***/ (function(module, exports) {

	module.exports = function isArrayish(obj) {
		if (!obj || typeof obj === 'string') {
			return false;
		}
	
		return obj instanceof Array || Array.isArray(obj) ||
			(obj.length >= 0 && (obj.splice instanceof Function ||
				(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));
	};


/***/ }),
/* 1211 */
/***/ (function(module, exports) {

	'use strict';
	
	var getDay = Date.prototype.getDay;
	var tryDateObject = function tryDateGetDayCall(value) {
		try {
			getDay.call(value);
			return true;
		} catch (e) {
			return false;
		}
	};
	
	var toStr = Object.prototype.toString;
	var dateClass = '[object Date]';
	var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';
	
	module.exports = function isDateObject(value) {
		if (typeof value !== 'object' || value === null) {
			return false;
		}
		return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
	};


/***/ }),
/* 1212 */
/***/ (function(module, exports) {

	module.exports = isFunction
	
	var toString = Object.prototype.toString
	
	function isFunction (fn) {
	  if (!fn) {
	    return false
	  }
	  var string = toString.call(fn)
	  return string === '[object Function]' ||
	    (typeof fn === 'function' && string !== '[object RegExp]') ||
	    (typeof window !== 'undefined' &&
	     // IE8 and below
	     (fn === window.setTimeout ||
	      fn === window.alert ||
	      fn === window.confirm ||
	      fn === window.prompt))
	};


/***/ }),
/* 1213 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var callBound = __webpack_require__(405);
	var hasSymbols = __webpack_require__(447)();
	var hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';
	var has;
	var $exec;
	var isRegexMarker;
	var badStringifier;
	
	if (hasToStringTag) {
		has = callBound('Object.prototype.hasOwnProperty');
		$exec = callBound('RegExp.prototype.exec');
		isRegexMarker = {};
	
		var throwRegexMarker = function () {
			throw isRegexMarker;
		};
		badStringifier = {
			toString: throwRegexMarker,
			valueOf: throwRegexMarker
		};
	
		if (typeof Symbol.toPrimitive === 'symbol') {
			badStringifier[Symbol.toPrimitive] = throwRegexMarker;
		}
	}
	
	var $toString = callBound('Object.prototype.toString');
	var gOPD = Object.getOwnPropertyDescriptor;
	var regexClass = '[object RegExp]';
	
	module.exports = hasToStringTag
		// eslint-disable-next-line consistent-return
		? function isRegex(value) {
			if (!value || typeof value !== 'object') {
				return false;
			}
	
			var descriptor = gOPD(value, 'lastIndex');
			var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
			if (!hasLastIndexDataProperty) {
				return false;
			}
	
			try {
				$exec(value, badStringifier);
			} catch (e) {
				return e === isRegexMarker;
			}
		}
		: function isRegex(value) {
			// In older browsers, typeof regex incorrectly returns 'function'
			if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
				return false;
			}
	
			return $toString(value) === regexClass;
		};


/***/ }),
/* 1214 */
/***/ (function(module, exports) {

	/*!
	 * isobject <https://github.com/jonschlinkert/isobject>
	 *
	 * Copyright (c) 2014-2017, Jon Schlinkert.
	 * Released under the MIT License.
	 */
	
	'use strict';
	
	module.exports = function isObject(val) {
	  return val != null && typeof val === 'object' && Array.isArray(val) === false;
	};


/***/ }),
/* 1215 */,
/* 1216 */,
/* 1217 */,
/* 1218 */,
/* 1219 */,
/* 1220 */,
/* 1221 */,
/* 1222 */,
/* 1223 */,
/* 1224 */,
/* 1225 */,
/* 1226 */,
/* 1227 */,
/* 1228 */,
/* 1229 */,
/* 1230 */,
/* 1231 */,
/* 1232 */,
/* 1233 */,
/* 1234 */,
/* 1235 */,
/* 1236 */,
/* 1237 */,
/* 1238 */,
/* 1239 */,
/* 1240 */,
/* 1241 */,
/* 1242 */,
/* 1243 */,
/* 1244 */,
/* 1245 */,
/* 1246 */,
/* 1247 */,
/* 1248 */,
/* 1249 */,
/* 1250 */,
/* 1251 */,
/* 1252 */,
/* 1253 */,
/* 1254 */,
/* 1255 */,
/* 1256 */,
/* 1257 */,
/* 1258 */,
/* 1259 */,
/* 1260 */,
/* 1261 */,
/* 1262 */,
/* 1263 */,
/* 1264 */,
/* 1265 */,
/* 1266 */,
/* 1267 */,
/* 1268 */,
/* 1269 */,
/* 1270 */,
/* 1271 */,
/* 1272 */,
/* 1273 */,
/* 1274 */,
/* 1275 */,
/* 1276 */,
/* 1277 */,
/* 1278 */,
/* 1279 */,
/* 1280 */,
/* 1281 */,
/* 1282 */,
/* 1283 */,
/* 1284 */,
/* 1285 */,
/* 1286 */,
/* 1287 */,
/* 1288 */,
/* 1289 */,
/* 1290 */,
/* 1291 */,
/* 1292 */,
/* 1293 */,
/* 1294 */,
/* 1295 */,
/* 1296 */,
/* 1297 */,
/* 1298 */,
/* 1299 */,
/* 1300 */,
/* 1301 */,
/* 1302 */,
/* 1303 */,
/* 1304 */,
/* 1305 */,
/* 1306 */,
/* 1307 */,
/* 1308 */,
/* 1309 */,
/* 1310 */,
/* 1311 */,
/* 1312 */,
/* 1313 */,
/* 1314 */,
/* 1315 */,
/* 1316 */,
/* 1317 */,
/* 1318 */,
/* 1319 */,
/* 1320 */,
/* 1321 */,
/* 1322 */,
/* 1323 */,
/* 1324 */,
/* 1325 */,
/* 1326 */,
/* 1327 */,
/* 1328 */,
/* 1329 */,
/* 1330 */,
/* 1331 */,
/* 1332 */,
/* 1333 */,
/* 1334 */,
/* 1335 */
/***/ (function(module, exports) {

	module.exports = {"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376}

/***/ }),
/* 1336 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = jssCompose;
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Set selector.
	 *
	 * @param {Object} original rule
	 * @param {String} className class string
	 * @return {Boolean} flag, indicating function was successfull or not
	 */
	function registerClass(rule, className) {
	  // Skip falsy values
	  if (!className) return true;
	
	  // Support array of class names `{composes: ['foo', 'bar']}`
	  if (Array.isArray(className)) {
	    for (var index = 0; index < className.length; index++) {
	      var isSetted = registerClass(rule, className[index]);
	      if (!isSetted) return false;
	    }
	
	    return true;
	  }
	
	  // Support space separated class names `{composes: 'foo bar'}`
	  if (className.indexOf(' ') > -1) {
	    return registerClass(rule, className.split(' '));
	  }
	
	  var parent = rule.options.parent;
	
	  // It is a ref to a local rule.
	
	  if (className[0] === '$') {
	    var refRule = parent.getRule(className.substr(1));
	
	    if (!refRule) {
	      (0, _warning2.default)(false, '[JSS] Referenced rule is not defined. \r\n%s', rule);
	      return false;
	    }
	
	    if (refRule === rule) {
	      (0, _warning2.default)(false, '[JSS] Cyclic composition detected. \r\n%s', rule);
	      return false;
	    }
	
	    parent.classes[rule.key] += ' ' + parent.classes[refRule.key];
	
	    return true;
	  }
	
	  rule.options.parent.classes[rule.key] += ' ' + className;
	
	  return true;
	}
	
	/**
	 * Convert compose property to additional class, remove property from original styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssCompose() {
	  function onProcessStyle(style, rule) {
	    if (!style.composes) return style;
	    registerClass(rule, style.composes);
	    // Remove composes property to prevent infinite loop.
	    delete style.composes;
	    return style;
	  }
	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 1337 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Generated jss-default-unit CSS property units
	 *
	 * @type object
	 */
	exports['default'] = {
	  'animation-delay': 'ms',
	  'animation-duration': 'ms',
	  'background-position': 'px',
	  'background-position-x': 'px',
	  'background-position-y': 'px',
	  'background-size': 'px',
	  border: 'px',
	  'border-bottom': 'px',
	  'border-bottom-left-radius': 'px',
	  'border-bottom-right-radius': 'px',
	  'border-bottom-width': 'px',
	  'border-left': 'px',
	  'border-left-width': 'px',
	  'border-radius': 'px',
	  'border-right': 'px',
	  'border-right-width': 'px',
	  'border-spacing': 'px',
	  'border-top': 'px',
	  'border-top-left-radius': 'px',
	  'border-top-right-radius': 'px',
	  'border-top-width': 'px',
	  'border-width': 'px',
	  'border-after-width': 'px',
	  'border-before-width': 'px',
	  'border-end-width': 'px',
	  'border-horizontal-spacing': 'px',
	  'border-start-width': 'px',
	  'border-vertical-spacing': 'px',
	  bottom: 'px',
	  'box-shadow': 'px',
	  'column-gap': 'px',
	  'column-rule': 'px',
	  'column-rule-width': 'px',
	  'column-width': 'px',
	  'flex-basis': 'px',
	  'font-size': 'px',
	  'font-size-delta': 'px',
	  height: 'px',
	  left: 'px',
	  'letter-spacing': 'px',
	  'logical-height': 'px',
	  'logical-width': 'px',
	  margin: 'px',
	  'margin-after': 'px',
	  'margin-before': 'px',
	  'margin-bottom': 'px',
	  'margin-left': 'px',
	  'margin-right': 'px',
	  'margin-top': 'px',
	  'max-height': 'px',
	  'max-width': 'px',
	  'margin-end': 'px',
	  'margin-start': 'px',
	  'mask-position-x': 'px',
	  'mask-position-y': 'px',
	  'mask-size': 'px',
	  'max-logical-height': 'px',
	  'max-logical-width': 'px',
	  'min-height': 'px',
	  'min-width': 'px',
	  'min-logical-height': 'px',
	  'min-logical-width': 'px',
	  motion: 'px',
	  'motion-offset': 'px',
	  outline: 'px',
	  'outline-offset': 'px',
	  'outline-width': 'px',
	  padding: 'px',
	  'padding-bottom': 'px',
	  'padding-left': 'px',
	  'padding-right': 'px',
	  'padding-top': 'px',
	  'padding-after': 'px',
	  'padding-before': 'px',
	  'padding-end': 'px',
	  'padding-start': 'px',
	  'perspective-origin-x': '%',
	  'perspective-origin-y': '%',
	  perspective: 'px',
	  right: 'px',
	  'shape-margin': 'px',
	  size: 'px',
	  'text-indent': 'px',
	  'text-stroke': 'px',
	  'text-stroke-width': 'px',
	  top: 'px',
	  'transform-origin': '%',
	  'transform-origin-x': '%',
	  'transform-origin-y': '%',
	  'transform-origin-z': '%',
	  'transition-delay': 'ms',
	  'transition-duration': 'ms',
	  'vertical-align': 'px',
	  width: 'px',
	  'word-spacing': 'px',
	  // Not existing properties.
	  // Used to avoid issues with jss-expand intergration.
	  'box-shadow-x': 'px',
	  'box-shadow-y': 'px',
	  'box-shadow-blur': 'px',
	  'box-shadow-spread': 'px',
	  'font-line-height': 'px',
	  'text-shadow-x': 'px',
	  'text-shadow-y': 'px',
	  'text-shadow-blur': 'px'
	};

/***/ }),
/* 1338 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = jssExpand;
	
	var _props = __webpack_require__(1339);
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/**
	 * Map values by given prop.
	 *
	 * @param {Array} array of values
	 * @param {String} original property
	 * @param {String} original rule
	 * @return {String} mapped values
	 */
	function mapValuesByProp(value, prop, rule) {
	  return value.map(function (item) {
	    return objectToString(item, prop, rule);
	  });
	}
	
	/**
	 * Convert array to string.
	 *
	 * @param {Array} array of values
	 * @param {String} original property
	 * @param {Object} sheme, for converting arrays in strings
	 * @param {Object} original rule
	 * @return {String} converted string
	 */
	function arrayToString(value, prop, scheme, rule) {
	  if (scheme[prop] == null) return value.join(',');
	  if (value.length === 0) return '';
	  if (Array.isArray(value[0])) return arrayToString(value[0], prop, scheme);
	  if (_typeof(value[0]) === 'object') return mapValuesByProp(value, prop, rule);
	  return value.join(' ');
	}
	
	/**
	 * Convert object to string.
	 *
	 * @param {Object} object of values
	 * @param {String} original property
	 * @param {Object} original rule
	 * @param {Boolean} is fallback prop
	 * @return {String} converted string
	 */
	function objectToString(value, prop, rule, isFallback) {
	  if (!(_props.propObj[prop] || _props.customPropObj[prop])) return '';
	
	  var result = [];
	
	  // Check if exists any non-standart property
	  if (_props.customPropObj[prop]) {
	    value = customPropsToStyle(value, rule, _props.customPropObj[prop], isFallback);
	  }
	
	  // Pass throught all standart props
	  if (Object.keys(value).length) {
	    for (var baseProp in _props.propObj[prop]) {
	      if (value[baseProp]) {
	        if (Array.isArray(value[baseProp])) {
	          result.push(arrayToString(value[baseProp], baseProp, _props.propArrayInObj));
	        } else result.push(value[baseProp]);
	        continue;
	      }
	
	      // Add default value from props config.
	      if (_props.propObj[prop][baseProp] != null) {
	        result.push(_props.propObj[prop][baseProp]);
	      }
	    }
	  }
	
	  return result.join(' ');
	}
	
	/**
	 * Convert custom properties values to styles adding them to rule directly
	 *
	 * @param {Object} object of values
	 * @param {Object} original rule
	 * @param {String} property, that contain partial custom properties
	 * @param {Boolean} is fallback prop
	 * @return {Object} value without custom properties, that was already added to rule
	 */
	function customPropsToStyle(value, rule, customProps, isFallback) {
	  for (var prop in customProps) {
	    var propName = customProps[prop];
	
	    // If current property doesn't exist already in rule - add new one
	    if (typeof value[prop] !== 'undefined' && (isFallback || !rule.prop(propName))) {
	      var appendedValue = styleDetector(_defineProperty({}, propName, value[prop]), rule)[propName];
	
	      // Add style directly in rule
	      if (isFallback) rule.style.fallbacks[propName] = appendedValue;else rule.style[propName] = appendedValue;
	    }
	    // Delete converted property to avoid double converting
	    delete value[prop];
	  }
	
	  return value;
	}
	
	/**
	 * Detect if a style needs to be converted.
	 *
	 * @param {Object} style
	 * @param {Object} rule
	 * @param {Boolean} is fallback prop
	 * @return {Object} convertedStyle
	 */
	function styleDetector(style, rule, isFallback) {
	  for (var prop in style) {
	    var value = style[prop];
	
	    if (Array.isArray(value)) {
	      // Check double arrays to avoid recursion.
	      if (!Array.isArray(value[0])) {
	        if (prop === 'fallbacks') {
	          for (var index = 0; index < style.fallbacks.length; index++) {
	            style.fallbacks[index] = styleDetector(style.fallbacks[index], rule, true);
	          }
	          continue;
	        }
	
	        style[prop] = arrayToString(value, prop, _props.propArray);
	        // Avoid creating properties with empty values
	        if (!style[prop]) delete style[prop];
	      }
	    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
	      if (prop === 'fallbacks') {
	        style.fallbacks = styleDetector(style.fallbacks, rule, true);
	        continue;
	      }
	
	      style[prop] = objectToString(value, prop, rule, isFallback);
	      // Avoid creating properties with empty values
	      if (!style[prop]) delete style[prop];
	    }
	
	    // Maybe a computed value resulting in an empty string
	    else if (style[prop] === '') delete style[prop];
	  }
	
	  return style;
	}
	
	/**
	 * Adds possibility to write expanded styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssExpand() {
	  function onProcessStyle(style, rule) {
	    if (!style || rule.type !== 'style') return style;
	
	    if (Array.isArray(style)) {
	      // Pass rules one by one and reformat them
	      for (var index = 0; index < style.length; index++) {
	        style[index] = styleDetector(style[index], rule);
	      }
	      return style;
	    }
	
	    return styleDetector(style, rule);
	  }
	
	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 1339 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * A scheme for converting properties from array to regular style.
	 * All properties listed below will be transformed to a string separated by space.
	 */
	var propArray = exports.propArray = {
	  'background-size': true,
	  'background-position': true,
	  border: true,
	  'border-bottom': true,
	  'border-left': true,
	  'border-top': true,
	  'border-right': true,
	  'border-radius': true,
	  'box-shadow': true,
	  flex: true,
	  margin: true,
	  padding: true,
	  outline: true,
	  'transform-origin': true,
	  transform: true,
	  transition: true
	};
	
	/**
	 * A scheme for converting arrays to regular styles inside of objects.
	 * For e.g.: "{position: [0, 0]}" => "background-position: 0 0;".
	 */
	var propArrayInObj = exports.propArrayInObj = {
	  position: true, // background-position
	  size: true // background-size
	};
	
	/**
	 * A scheme for parsing and building correct styles from passed objects.
	 */
	var propObj = exports.propObj = {
	  padding: {
	    top: 0,
	    right: 0,
	    bottom: 0,
	    left: 0
	  },
	  margin: {
	    top: 0,
	    right: 0,
	    bottom: 0,
	    left: 0
	  },
	  background: {
	    attachment: null,
	    color: null,
	    image: null,
	    position: null,
	    repeat: null
	  },
	  border: {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-top': {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-right': {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-bottom': {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-left': {
	    width: null,
	    style: null,
	    color: null
	  },
	  outline: {
	    width: null,
	    style: null,
	    color: null
	  },
	  'list-style': {
	    type: null,
	    position: null,
	    image: null
	  },
	  transition: {
	    property: null,
	    duration: null,
	    'timing-function': null,
	    timingFunction: null, // Needed for avoiding comilation issues with jss-camel-case
	    delay: null
	  },
	  animation: {
	    name: null,
	    duration: null,
	    'timing-function': null,
	    timingFunction: null, // Needed to avoid compilation issues with jss-camel-case
	    delay: null,
	    'iteration-count': null,
	    iterationCount: null, // Needed to avoid compilation issues with jss-camel-case
	    direction: null,
	    'fill-mode': null,
	    fillMode: null, // Needed to avoid compilation issues with jss-camel-case
	    'play-state': null,
	    playState: null // Needed to avoid compilation issues with jss-camel-case
	  },
	  'box-shadow': {
	    x: 0,
	    y: 0,
	    blur: 0,
	    spread: 0,
	    color: null,
	    inset: null
	  },
	  'text-shadow': {
	    x: 0,
	    y: 0,
	    blur: null,
	    color: null
	  }
	};
	
	/**
	 * A scheme for converting non-standart properties inside object.
	 * For e.g.: include 'border-radius' property inside 'border' object.
	 */
	var customPropObj = exports.customPropObj = {
	  border: {
	    radius: 'border-radius'
	  },
	  background: {
	    size: 'background-size',
	    image: 'background-image'
	  },
	  font: {
	    style: 'font-style',
	    variant: 'font-variant',
	    weight: 'font-weight',
	    stretch: 'font-stretch',
	    size: 'font-size',
	    family: 'font-family',
	    lineHeight: 'line-height', // Needed to avoid compilation issues with jss-camel-case
	    'line-height': 'line-height'
	  },
	  flex: {
	    grow: 'flex-grow',
	    basis: 'flex-basis',
	    direction: 'flex-direction',
	    wrap: 'flex-wrap',
	    flow: 'flex-flow',
	    shrink: 'flex-shrink'
	  },
	  align: {
	    self: 'align-self',
	    items: 'align-items',
	    content: 'align-content'
	  }
	};

/***/ }),
/* 1340 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports['default'] = jssExtend;
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var isObject = function isObject(obj) {
	  return obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !Array.isArray(obj);
	};
	
	/**
	 * Recursively extend styles.
	 */
	function extend(style, rule, sheet) {
	  var newStyle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
	
	  if (typeof style.extend === 'string') {
	    if (sheet) {
	      var refRule = sheet.getRule(style.extend);
	      if (refRule) {
	        if (refRule === rule) (0, _warning2['default'])(false, '[JSS] A rule tries to extend itself \r\n%s', rule);else if (refRule.options.parent) {
	          var originalStyle = refRule.options.parent.rules.raw[style.extend];
	          extend(originalStyle, rule, sheet, newStyle);
	        }
	      }
	    }
	  } else if (Array.isArray(style.extend)) {
	    for (var index = 0; index < style.extend.length; index++) {
	      extend(style.extend[index], rule, sheet, newStyle);
	    }
	  } else {
	    for (var prop in style.extend) {
	      if (prop === 'extend') {
	        extend(style.extend.extend, rule, sheet, newStyle);
	      } else if (isObject(style.extend[prop])) {
	        if (!newStyle[prop]) newStyle[prop] = {};
	        extend(style.extend[prop], rule, sheet, newStyle[prop]);
	      } else {
	        newStyle[prop] = style.extend[prop];
	      }
	    }
	  }
	  // Copy base style.
	  for (var _prop in style) {
	    if (_prop === 'extend') continue;
	    if (isObject(newStyle[_prop]) && isObject(style[_prop])) {
	      extend(style[_prop], rule, sheet, newStyle[_prop]);
	    } else if (isObject(style[_prop])) {
	      newStyle[_prop] = extend(style[_prop], rule, sheet);
	    } else {
	      newStyle[_prop] = style[_prop];
	    }
	  }
	
	  return newStyle;
	}
	
	/**
	 * Handle `extend` property.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssExtend() {
	  function onProcessStyle(style, rule, sheet) {
	    return style.extend ? extend(style, rule, sheet) : style;
	  }
	
	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 1341 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jssExtend = __webpack_require__(1340);
	
	var _jssExtend2 = _interopRequireDefault(_jssExtend);
	
	var _jssNested = __webpack_require__(457);
	
	var _jssNested2 = _interopRequireDefault(_jssNested);
	
	var _jssCamelCase = __webpack_require__(454);
	
	var _jssCamelCase2 = _interopRequireDefault(_jssCamelCase);
	
	var _jssDefaultUnit = __webpack_require__(455);
	
	var _jssDefaultUnit2 = _interopRequireDefault(_jssDefaultUnit);
	
	var _jssVendorPrefixer = __webpack_require__(459);
	
	var _jssVendorPrefixer2 = _interopRequireDefault(_jssVendorPrefixer);
	
	var _jssPropsSort = __webpack_require__(458);
	
	var _jssPropsSort2 = _interopRequireDefault(_jssPropsSort);
	
	var _jssCompose = __webpack_require__(1336);
	
	var _jssCompose2 = _interopRequireDefault(_jssCompose);
	
	var _jssExpand = __webpack_require__(1338);
	
	var _jssExpand2 = _interopRequireDefault(_jssExpand);
	
	var _jssGlobal = __webpack_require__(456);
	
	var _jssGlobal2 = _interopRequireDefault(_jssGlobal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  return {
	    plugins: [(0, _jssGlobal2.default)(options.global), (0, _jssExtend2.default)(options.extend), (0, _jssNested2.default)(options.nested), (0, _jssCompose2.default)(options.compose), (0, _jssCamelCase2.default)(options.camelCase), (0, _jssDefaultUnit2.default)(options.defaultUnit), (0, _jssExpand2.default)(options.expand), (0, _jssVendorPrefixer2.default)(options.vendorPrefixer), (0, _jssPropsSort2.default)(options.propsSort)]
	  };
	};

/***/ }),
/* 1342 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _isInBrowser = __webpack_require__(194);
	
	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);
	
	var _StyleSheet = __webpack_require__(461);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	var _PluginsRegistry = __webpack_require__(1343);
	
	var _PluginsRegistry2 = _interopRequireDefault(_PluginsRegistry);
	
	var _rules = __webpack_require__(1347);
	
	var _rules2 = _interopRequireDefault(_rules);
	
	var _observables = __webpack_require__(1346);
	
	var _observables2 = _interopRequireDefault(_observables);
	
	var _functions = __webpack_require__(1345);
	
	var _functions2 = _interopRequireDefault(_functions);
	
	var _sheets = __webpack_require__(295);
	
	var _sheets2 = _interopRequireDefault(_sheets);
	
	var _StyleRule = __webpack_require__(115);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _createGenerateClassName = __webpack_require__(462);
	
	var _createGenerateClassName2 = _interopRequireDefault(_createGenerateClassName);
	
	var _createRule2 = __webpack_require__(196);
	
	var _createRule3 = _interopRequireDefault(_createRule2);
	
	var _DomRenderer = __webpack_require__(1348);
	
	var _DomRenderer2 = _interopRequireDefault(_DomRenderer);
	
	var _VirtualRenderer = __webpack_require__(1349);
	
	var _VirtualRenderer2 = _interopRequireDefault(_VirtualRenderer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var defaultPlugins = _rules2['default'].concat([_observables2['default'], _functions2['default']]);
	
	var instanceCounter = 0;
	
	var Jss = function () {
	  function Jss(options) {
	    _classCallCheck(this, Jss);
	
	    this.id = instanceCounter++;
	    this.version = "9.8.7";
	    this.plugins = new _PluginsRegistry2['default']();
	    this.options = {
	      createGenerateClassName: _createGenerateClassName2['default'],
	      Renderer: _isInBrowser2['default'] ? _DomRenderer2['default'] : _VirtualRenderer2['default'],
	      plugins: []
	    };
	    this.generateClassName = (0, _createGenerateClassName2['default'])();
	
	    // eslint-disable-next-line prefer-spread
	    this.use.apply(this, defaultPlugins);
	    this.setup(options);
	  }
	
	  _createClass(Jss, [{
	    key: 'setup',
	    value: function setup() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      if (options.createGenerateClassName) {
	        this.options.createGenerateClassName = options.createGenerateClassName;
	        // $FlowFixMe
	        this.generateClassName = options.createGenerateClassName();
	      }
	
	      if (options.insertionPoint != null) this.options.insertionPoint = options.insertionPoint;
	      if (options.virtual || options.Renderer) {
	        this.options.Renderer = options.Renderer || (options.virtual ? _VirtualRenderer2['default'] : _DomRenderer2['default']);
	      }
	
	      // eslint-disable-next-line prefer-spread
	      if (options.plugins) this.use.apply(this, options.plugins);
	
	      return this;
	    }
	
	    /**
	     * Create a Style Sheet.
	     */
	
	  }, {
	    key: 'createStyleSheet',
	    value: function createStyleSheet(styles) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var index = options.index;
	      if (typeof index !== 'number') {
	        index = _sheets2['default'].index === 0 ? 0 : _sheets2['default'].index + 1;
	      }
	      var sheet = new _StyleSheet2['default'](styles, _extends({}, options, {
	        jss: this,
	        generateClassName: options.generateClassName || this.generateClassName,
	        insertionPoint: this.options.insertionPoint,
	        Renderer: this.options.Renderer,
	        index: index
	      }));
	      this.plugins.onProcessSheet(sheet);
	
	      return sheet;
	    }
	
	    /**
	     * Detach the Style Sheet and remove it from the registry.
	     */
	
	  }, {
	    key: 'removeStyleSheet',
	    value: function removeStyleSheet(sheet) {
	      sheet.detach();
	      _sheets2['default'].remove(sheet);
	      return this;
	    }
	
	    /**
	     * Create a rule without a Style Sheet.
	     */
	
	  }, {
	    key: 'createRule',
	    value: function createRule(name) {
	      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	      // Enable rule without name for inline styles.
	      if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
	        options = style;
	        style = name;
	        name = undefined;
	      }
	
	      // Cast from RuleFactoryOptions to RuleOptions
	      // https://stackoverflow.com/questions/41328728/force-casting-in-flow
	      var ruleOptions = options;
	
	      ruleOptions.jss = this;
	      ruleOptions.Renderer = this.options.Renderer;
	      if (!ruleOptions.generateClassName) ruleOptions.generateClassName = this.generateClassName;
	      if (!ruleOptions.classes) ruleOptions.classes = {};
	      var rule = (0, _createRule3['default'])(name, style, ruleOptions);
	
	      if (!ruleOptions.selector && rule instanceof _StyleRule2['default']) {
	        rule.selector = '.' + ruleOptions.generateClassName(rule);
	      }
	
	      this.plugins.onProcessRule(rule);
	
	      return rule;
	    }
	
	    /**
	     * Register plugin. Passed function will be invoked with a rule instance.
	     */
	
	  }, {
	    key: 'use',
	    value: function use() {
	      var _this = this;
	
	      for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {
	        plugins[_key] = arguments[_key];
	      }
	
	      plugins.forEach(function (plugin) {
	        // Avoids applying same plugin twice, at least based on ref.
	        if (_this.options.plugins.indexOf(plugin) === -1) {
	          _this.options.plugins.push(plugin);
	          _this.plugins.use(plugin);
	        }
	      });
	
	      return this;
	    }
	  }]);
	
	  return Jss;
	}();
	
	exports['default'] = Jss;

/***/ }),
/* 1343 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PluginsRegistry = function () {
	  function PluginsRegistry() {
	    _classCallCheck(this, PluginsRegistry);
	
	    this.hooks = {
	      onCreateRule: [],
	      onProcessRule: [],
	      onProcessStyle: [],
	      onProcessSheet: [],
	      onChangeValue: [],
	      onUpdate: []
	
	      /**
	       * Call `onCreateRule` hooks and return an object if returned by a hook.
	       */
	    };
	  }
	
	  _createClass(PluginsRegistry, [{
	    key: 'onCreateRule',
	    value: function onCreateRule(name, decl, options) {
	      for (var i = 0; i < this.hooks.onCreateRule.length; i++) {
	        var rule = this.hooks.onCreateRule[i](name, decl, options);
	        if (rule) return rule;
	      }
	      return null;
	    }
	
	    /**
	     * Call `onProcessRule` hooks.
	     */
	
	  }, {
	    key: 'onProcessRule',
	    value: function onProcessRule(rule) {
	      if (rule.isProcessed) return;
	      var sheet = rule.options.sheet;
	
	      for (var i = 0; i < this.hooks.onProcessRule.length; i++) {
	        this.hooks.onProcessRule[i](rule, sheet);
	      }
	
	      // $FlowFixMe
	      if (rule.style) this.onProcessStyle(rule.style, rule, sheet);
	
	      rule.isProcessed = true;
	    }
	
	    /**
	     * Call `onProcessStyle` hooks.
	     */
	
	  }, {
	    key: 'onProcessStyle',
	    value: function onProcessStyle(style, rule, sheet) {
	      var nextStyle = style;
	
	      for (var i = 0; i < this.hooks.onProcessStyle.length; i++) {
	        nextStyle = this.hooks.onProcessStyle[i](nextStyle, rule, sheet);
	        // $FlowFixMe
	        rule.style = nextStyle;
	      }
	    }
	
	    /**
	     * Call `onProcessSheet` hooks.
	     */
	
	  }, {
	    key: 'onProcessSheet',
	    value: function onProcessSheet(sheet) {
	      for (var i = 0; i < this.hooks.onProcessSheet.length; i++) {
	        this.hooks.onProcessSheet[i](sheet);
	      }
	    }
	
	    /**
	     * Call `onUpdate` hooks.
	     */
	
	  }, {
	    key: 'onUpdate',
	    value: function onUpdate(data, rule, sheet) {
	      for (var i = 0; i < this.hooks.onUpdate.length; i++) {
	        this.hooks.onUpdate[i](data, rule, sheet);
	      }
	    }
	
	    /**
	     * Call `onChangeValue` hooks.
	     */
	
	  }, {
	    key: 'onChangeValue',
	    value: function onChangeValue(value, prop, rule) {
	      var processedValue = value;
	      for (var i = 0; i < this.hooks.onChangeValue.length; i++) {
	        processedValue = this.hooks.onChangeValue[i](processedValue, prop, rule);
	      }
	      return processedValue;
	    }
	
	    /**
	     * Register a plugin.
	     * If function is passed, it is a shortcut for `{onProcessRule}`.
	     */
	
	  }, {
	    key: 'use',
	    value: function use(plugin) {
	      for (var name in plugin) {
	        if (this.hooks[name]) this.hooks[name].push(plugin[name]);else (0, _warning2['default'])(false, '[JSS] Unknown hook "%s".', name);
	      }
	    }
	  }]);
	
	  return PluginsRegistry;
	}();
	
	exports['default'] = PluginsRegistry;

/***/ }),
/* 1344 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * SheetsManager is like a WeakMap which is designed to count StyleSheet
	 * instances and attach/detach automatically.
	 */
	var SheetsManager = function () {
	  function SheetsManager() {
	    _classCallCheck(this, SheetsManager);
	
	    this.sheets = [];
	    this.refs = [];
	    this.keys = [];
	  }
	
	  _createClass(SheetsManager, [{
	    key: 'get',
	    value: function get(key) {
	      var index = this.keys.indexOf(key);
	      return this.sheets[index];
	    }
	  }, {
	    key: 'add',
	    value: function add(key, sheet) {
	      var sheets = this.sheets,
	          refs = this.refs,
	          keys = this.keys;
	
	      var index = sheets.indexOf(sheet);
	
	      if (index !== -1) return index;
	
	      sheets.push(sheet);
	      refs.push(0);
	      keys.push(key);
	
	      return sheets.length - 1;
	    }
	  }, {
	    key: 'manage',
	    value: function manage(key) {
	      var index = this.keys.indexOf(key);
	      var sheet = this.sheets[index];
	      if (this.refs[index] === 0) sheet.attach();
	      this.refs[index]++;
	      if (!this.keys[index]) this.keys.splice(index, 0, key);
	      return sheet;
	    }
	  }, {
	    key: 'unmanage',
	    value: function unmanage(key) {
	      var index = this.keys.indexOf(key);
	      if (index === -1) {
	        // eslint-ignore-next-line no-console
	        (0, _warning2['default'])(false, "SheetsManager: can't find sheet to unmanage");
	        return;
	      }
	      if (this.refs[index] > 0) {
	        this.refs[index]--;
	        if (this.refs[index] === 0) this.sheets[index].detach();
	      }
	    }
	  }, {
	    key: 'size',
	    get: function get() {
	      return this.keys.length;
	    }
	  }]);
	
	  return SheetsManager;
	}();
	
	exports['default'] = SheetsManager;

/***/ }),
/* 1345 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _RuleList = __webpack_require__(153);
	
	var _RuleList2 = _interopRequireDefault(_RuleList);
	
	var _StyleRule = __webpack_require__(115);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _createRule = __webpack_require__(196);
	
	var _createRule2 = _interopRequireDefault(_createRule);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	// A symbol replacement.
	var now = Date.now();
	
	var fnValuesNs = 'fnValues' + now;
	var fnStyleNs = 'fnStyle' + ++now;
	
	exports['default'] = {
	  onCreateRule: function onCreateRule(name, decl, options) {
	    if (typeof decl !== 'function') return null;
	    var rule = (0, _createRule2['default'])(name, {}, options);
	    rule[fnStyleNs] = decl;
	    return rule;
	  },
	  onProcessStyle: function onProcessStyle(style, rule) {
	    var fn = {};
	    for (var prop in style) {
	      var value = style[prop];
	      if (typeof value !== 'function') continue;
	      delete style[prop];
	      fn[prop] = value;
	    }
	    rule = rule;
	    rule[fnValuesNs] = fn;
	    return style;
	  },
	  onUpdate: function onUpdate(data, rule) {
	    // It is a rules container like for e.g. ConditionalRule.
	    if (rule.rules instanceof _RuleList2['default']) {
	      rule.rules.update(data);
	      return;
	    }
	    if (!(rule instanceof _StyleRule2['default'])) return;
	
	    rule = rule;
	
	    // If we have a fn values map, it is a rule with function values.
	    if (rule[fnValuesNs]) {
	      for (var prop in rule[fnValuesNs]) {
	        rule.prop(prop, rule[fnValuesNs][prop](data));
	      }
	    }
	
	    rule = rule;
	
	    var fnStyle = rule[fnStyleNs];
	
	    // If we have a style function, the entire rule is dynamic and style object
	    // will be returned from that function.
	    if (fnStyle) {
	      var style = fnStyle(data);
	      for (var _prop in style) {
	        rule.prop(_prop, style[_prop]);
	      }
	    }
	  }
	};

/***/ }),
/* 1346 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _StyleRule = __webpack_require__(115);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _createRule = __webpack_require__(196);
	
	var _createRule2 = _interopRequireDefault(_createRule);
	
	var _isObservable = __webpack_require__(463);
	
	var _isObservable2 = _interopRequireDefault(_isObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = {
	  onCreateRule: function onCreateRule(name, decl, options) {
	    if (!(0, _isObservable2['default'])(decl)) return null;
	
	    // Cast `decl` to `Observable`, since it passed the type guard.
	    var style$ = decl;
	
	    var rule = (0, _createRule2['default'])(name, {}, options);
	
	    // TODO
	    // Call `stream.subscribe()` returns a subscription, which should be explicitly
	    // unsubscribed from when we know this sheet is no longer needed.
	    style$.subscribe(function (style) {
	      for (var prop in style) {
	        rule.prop(prop, style[prop]);
	      }
	    });
	
	    return rule;
	  },
	  onProcessRule: function onProcessRule(rule) {
	    if (!(rule instanceof _StyleRule2['default'])) return;
	    var styleRule = rule;
	    var style = styleRule.style;
	
	    var _loop = function _loop(prop) {
	      var value = style[prop];
	      if (!(0, _isObservable2['default'])(value)) return 'continue';
	      delete style[prop];
	      value.subscribe({
	        next: function next(nextValue) {
	          styleRule.prop(prop, nextValue);
	        }
	      });
	    };
	
	    for (var prop in style) {
	      var _ret = _loop(prop);
	
	      if (_ret === 'continue') continue;
	    }
	  }
	};

/***/ }),
/* 1347 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _SimpleRule = __webpack_require__(1353);
	
	var _SimpleRule2 = _interopRequireDefault(_SimpleRule);
	
	var _KeyframesRule = __webpack_require__(1352);
	
	var _KeyframesRule2 = _interopRequireDefault(_KeyframesRule);
	
	var _ConditionalRule = __webpack_require__(1350);
	
	var _ConditionalRule2 = _interopRequireDefault(_ConditionalRule);
	
	var _FontFaceRule = __webpack_require__(1351);
	
	var _FontFaceRule2 = _interopRequireDefault(_FontFaceRule);
	
	var _ViewportRule = __webpack_require__(1354);
	
	var _ViewportRule2 = _interopRequireDefault(_ViewportRule);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var classes = {
	  '@charset': _SimpleRule2['default'],
	  '@import': _SimpleRule2['default'],
	  '@namespace': _SimpleRule2['default'],
	  '@keyframes': _KeyframesRule2['default'],
	  '@media': _ConditionalRule2['default'],
	  '@supports': _ConditionalRule2['default'],
	  '@font-face': _FontFaceRule2['default'],
	  '@viewport': _ViewportRule2['default'],
	  '@-ms-viewport': _ViewportRule2['default']
	
	  /**
	   * Generate plugins which will register all rules.
	   */
	};
	var plugins = Object.keys(classes).map(function (key) {
	  // https://jsperf.com/indexof-vs-substr-vs-regex-at-the-beginning-3
	  var re = new RegExp('^' + key);
	  var RuleClass = classes[key];
	  var onCreateRule = function onCreateRule(name, decl, options) {
	    return re.test(name) ? new RuleClass(name, decl, options) : null;
	  };
	  return { onCreateRule: onCreateRule };
	});
	
	exports['default'] = plugins;

/***/ }),
/* 1348 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _sheets = __webpack_require__(295);
	
	var _sheets2 = _interopRequireDefault(_sheets);
	
	var _StyleRule = __webpack_require__(115);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _toCssValue = __webpack_require__(197);
	
	var _toCssValue2 = _interopRequireDefault(_toCssValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Cache the value from the first time a function is called.
	 */
	var memoize = function memoize(fn) {
	  var value = void 0;
	  return function () {
	    if (!value) value = fn();
	    return value;
	  };
	};
	
	/**
	 * Get a style property value.
	 */
	function getPropertyValue(cssRule, prop) {
	  try {
	    return cssRule.style.getPropertyValue(prop);
	  } catch (err) {
	    // IE may throw if property is unknown.
	    return '';
	  }
	}
	
	/**
	 * Set a style property.
	 */
	function setProperty(cssRule, prop, value) {
	  try {
	    var cssValue = value;
	
	    if (Array.isArray(value)) {
	      cssValue = (0, _toCssValue2['default'])(value, true);
	
	      if (value[value.length - 1] === '!important') {
	        cssRule.style.setProperty(prop, cssValue, 'important');
	        return true;
	      }
	    }
	
	    cssRule.style.setProperty(prop, cssValue);
	  } catch (err) {
	    // IE may throw if property is unknown.
	    return false;
	  }
	  return true;
	}
	
	/**
	 * Remove a style property.
	 */
	function removeProperty(cssRule, prop) {
	  try {
	    cssRule.style.removeProperty(prop);
	  } catch (err) {
	    (0, _warning2['default'])(false, '[JSS] DOMException "%s" was thrown. Tried to remove property "%s".', err.message, prop);
	  }
	}
	
	var CSSRuleTypes = {
	  STYLE_RULE: 1,
	  KEYFRAMES_RULE: 7
	
	  /**
	   * Get the CSS Rule key.
	   */
	
	};var getKey = function () {
	  var extractKey = function extractKey(cssText) {
	    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	    return cssText.substr(from, cssText.indexOf('{') - 1);
	  };
	
	  return function (cssRule) {
	    if (cssRule.type === CSSRuleTypes.STYLE_RULE) return cssRule.selectorText;
	    if (cssRule.type === CSSRuleTypes.KEYFRAMES_RULE) {
	      var name = cssRule.name;
	
	      if (name) return '@keyframes ' + name;
	
	      // There is no rule.name in the following browsers:
	      // - IE 9
	      // - Safari 7.1.8
	      // - Mobile Safari 9.0.0
	      var cssText = cssRule.cssText;
	
	      return '@' + extractKey(cssText, cssText.indexOf('keyframes'));
	    }
	
	    // Conditionals.
	    return extractKey(cssRule.cssText);
	  };
	}();
	
	/**
	 * Set the selector.
	 */
	function setSelector(cssRule, selectorText) {
	  cssRule.selectorText = selectorText;
	
	  // Return false if setter was not successful.
	  // Currently works in chrome only.
	  return cssRule.selectorText === selectorText;
	}
	
	/**
	 * Gets the `head` element upon the first call and caches it.
	 */
	var getHead = memoize(function () {
	  return document.head || document.getElementsByTagName('head')[0];
	});
	
	/**
	 * Gets a map of rule keys, where the property is an unescaped key and value
	 * is a potentially escaped one.
	 * It is used to identify CSS rules and the corresponding JSS rules. As an identifier
	 * for CSSStyleRule we normally use `selectorText`. Though if original selector text
	 * contains escaped code points e.g. `:not(#\\20)`, CSSOM will compile it to `:not(# )`
	 * and so CSS rule's `selectorText` won't match JSS rule selector.
	 *
	 * https://www.w3.org/International/questions/qa-escapes#cssescapes
	 */
	var getUnescapedKeysMap = function () {
	  var style = void 0;
	  var isAttached = false;
	
	  return function (rules) {
	    var map = {};
	    // https://github.com/facebook/flow/issues/2696
	    if (!style) style = document.createElement('style');
	    for (var i = 0; i < rules.length; i++) {
	      var rule = rules[i];
	      if (!(rule instanceof _StyleRule2['default'])) continue;
	      var selector = rule.selector;
	      // Only unescape selector over CSSOM if it contains a back slash.
	
	      if (selector && selector.indexOf('\\') !== -1) {
	        // Lazilly attach when needed.
	        if (!isAttached) {
	          getHead().appendChild(style);
	          isAttached = true;
	        }
	        style.textContent = selector + ' {}';
	        var _style = style,
	            sheet = _style.sheet;
	
	        if (sheet) {
	          var cssRules = sheet.cssRules;
	
	          if (cssRules) map[cssRules[0].selectorText] = rule.key;
	        }
	      }
	    }
	    if (isAttached) {
	      getHead().removeChild(style);
	      isAttached = false;
	    }
	    return map;
	  };
	}();
	
	/**
	 * Find attached sheet with an index higher than the passed one.
	 */
	function findHigherSheet(registry, options) {
	  for (var i = 0; i < registry.length; i++) {
	    var sheet = registry[i];
	    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
	      return sheet;
	    }
	  }
	  return null;
	}
	
	/**
	 * Find attached sheet with the highest index.
	 */
	function findHighestSheet(registry, options) {
	  for (var i = registry.length - 1; i >= 0; i--) {
	    var sheet = registry[i];
	    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
	      return sheet;
	    }
	  }
	  return null;
	}
	
	/**
	 * Find a comment with "jss" inside.
	 */
	function findCommentNode(text) {
	  var head = getHead();
	  for (var i = 0; i < head.childNodes.length; i++) {
	    var node = head.childNodes[i];
	    if (node.nodeType === 8 && node.nodeValue.trim() === text) {
	      return node;
	    }
	  }
	  return null;
	}
	
	/**
	 * Find a node before which we can insert the sheet.
	 */
	function findPrevNode(options) {
	  var registry = _sheets2['default'].registry;
	
	
	  if (registry.length > 0) {
	    // Try to insert before the next higher sheet.
	    var sheet = findHigherSheet(registry, options);
	    if (sheet) return sheet.renderer.element;
	
	    // Otherwise insert after the last attached.
	    sheet = findHighestSheet(registry, options);
	    if (sheet) return sheet.renderer.element.nextElementSibling;
	  }
	
	  // Try to find a comment placeholder if registry is empty.
	  var insertionPoint = options.insertionPoint;
	
	  if (insertionPoint && typeof insertionPoint === 'string') {
	    var comment = findCommentNode(insertionPoint);
	    if (comment) return comment.nextSibling;
	    // If user specifies an insertion point and it can't be found in the document -
	    // bad specificity issues may appear.
	    (0, _warning2['default'])(insertionPoint === 'jss', '[JSS] Insertion point "%s" not found.', insertionPoint);
	  }
	
	  return null;
	}
	
	/**
	 * Insert style element into the DOM.
	 */
	function insertStyle(style, options) {
	  var insertionPoint = options.insertionPoint;
	
	  var prevNode = findPrevNode(options);
	
	  if (prevNode) {
	    var parentNode = prevNode.parentNode;
	
	    if (parentNode) parentNode.insertBefore(style, prevNode);
	    return;
	  }
	
	  // Works with iframes and any node types.
	  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {
	    // https://stackoverflow.com/questions/41328728/force-casting-in-flow
	    var insertionPointElement = insertionPoint;
	    var _parentNode = insertionPointElement.parentNode;
	
	    if (_parentNode) _parentNode.insertBefore(style, insertionPointElement.nextSibling);else (0, _warning2['default'])(false, '[JSS] Insertion point is not in the DOM.');
	    return;
	  }
	
	  getHead().insertBefore(style, prevNode);
	}
	
	/**
	 * Read jss nonce setting from the page if the user has set it.
	 */
	var getNonce = memoize(function () {
	  var node = document.querySelector('meta[property="csp-nonce"]');
	  return node ? node.getAttribute('content') : null;
	});
	
	var DomRenderer = function () {
	  function DomRenderer(sheet) {
	    _classCallCheck(this, DomRenderer);
	
	    this.getPropertyValue = getPropertyValue;
	    this.setProperty = setProperty;
	    this.removeProperty = removeProperty;
	    this.setSelector = setSelector;
	    this.getKey = getKey;
	    this.getUnescapedKeysMap = getUnescapedKeysMap;
	    this.hasInsertedRules = false;
	
	    // There is no sheet when the renderer is used from a standalone StyleRule.
	    if (sheet) _sheets2['default'].add(sheet);
	
	    this.sheet = sheet;
	
	    var _ref = this.sheet ? this.sheet.options : {},
	        media = _ref.media,
	        meta = _ref.meta,
	        element = _ref.element;
	
	    this.element = element || document.createElement('style');
	    this.element.setAttribute('data-jss', '');
	    if (media) this.element.setAttribute('media', media);
	    if (meta) this.element.setAttribute('data-meta', meta);
	    var nonce = getNonce();
	    if (nonce) this.element.setAttribute('nonce', nonce);
	  }
	
	  /**
	   * Insert style element into render tree.
	   */
	
	
	  // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696
	
	
	  _createClass(DomRenderer, [{
	    key: 'attach',
	    value: function attach() {
	      // In the case the element node is external and it is already in the DOM.
	      if (this.element.parentNode || !this.sheet) return;
	
	      // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`
	      // browsers remove those rules.
	      // TODO figure out if its a bug and if it is known.
	      // Workaround is to redeploy the sheet before attaching as a string.
	      if (this.hasInsertedRules) {
	        this.deploy();
	        this.hasInsertedRules = false;
	      }
	
	      insertStyle(this.element, this.sheet.options);
	    }
	
	    /**
	     * Remove style element from render tree.
	     */
	
	  }, {
	    key: 'detach',
	    value: function detach() {
	      this.element.parentNode.removeChild(this.element);
	    }
	
	    /**
	     * Inject CSS string into element.
	     */
	
	  }, {
	    key: 'deploy',
	    value: function deploy() {
	      if (!this.sheet) return;
	      this.element.textContent = '\n' + this.sheet.toString() + '\n';
	    }
	
	    /**
	     * Insert a rule into element.
	     */
	
	  }, {
	    key: 'insertRule',
	    value: function insertRule(rule, index) {
	      var sheet = this.element.sheet;
	      var cssRules = sheet.cssRules;
	
	      var str = rule.toString();
	      if (!index) index = cssRules.length;
	
	      if (!str) return false;
	
	      try {
	        sheet.insertRule(str, index);
	      } catch (err) {
	        (0, _warning2['default'])(false, '[JSS] Can not insert an unsupported rule \n\r%s', rule);
	        return false;
	      }
	      this.hasInsertedRules = true;
	
	      return cssRules[index];
	    }
	
	    /**
	     * Delete a rule.
	     */
	
	  }, {
	    key: 'deleteRule',
	    value: function deleteRule(cssRule) {
	      var sheet = this.element.sheet;
	
	      var index = this.indexOf(cssRule);
	      if (index === -1) return false;
	      sheet.deleteRule(index);
	      return true;
	    }
	
	    /**
	     * Get index of a CSS Rule.
	     */
	
	  }, {
	    key: 'indexOf',
	    value: function indexOf(cssRule) {
	      var cssRules = this.element.sheet.cssRules;
	
	      for (var _index = 0; _index < cssRules.length; _index++) {
	        if (cssRule === cssRules[_index]) return _index;
	      }
	      return -1;
	    }
	
	    /**
	     * Generate a new CSS rule and replace the existing one.
	     */
	
	  }, {
	    key: 'replaceRule',
	    value: function replaceRule(cssRule, rule) {
	      var index = this.indexOf(cssRule);
	      var newCssRule = this.insertRule(rule, index);
	      this.element.sheet.deleteRule(index);
	      return newCssRule;
	    }
	
	    /**
	     * Get all rules elements.
	     */
	
	  }, {
	    key: 'getRules',
	    value: function getRules() {
	      return this.element.sheet.cssRules;
	    }
	  }]);
	
	  return DomRenderer;
	}();
	
	exports['default'] = DomRenderer;

/***/ }),
/* 1349 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/* eslint-disable class-methods-use-this */
	
	/**
	 * Rendering backend to do nothing in nodejs.
	 */
	var VirtualRenderer = function () {
	  function VirtualRenderer() {
	    _classCallCheck(this, VirtualRenderer);
	  }
	
	  _createClass(VirtualRenderer, [{
	    key: 'setProperty',
	    value: function setProperty() {
	      return true;
	    }
	  }, {
	    key: 'getPropertyValue',
	    value: function getPropertyValue() {
	      return '';
	    }
	  }, {
	    key: 'removeProperty',
	    value: function removeProperty() {}
	  }, {
	    key: 'setSelector',
	    value: function setSelector() {
	      return true;
	    }
	  }, {
	    key: 'getKey',
	    value: function getKey() {
	      return '';
	    }
	  }, {
	    key: 'attach',
	    value: function attach() {}
	  }, {
	    key: 'detach',
	    value: function detach() {}
	  }, {
	    key: 'deploy',
	    value: function deploy() {}
	  }, {
	    key: 'insertRule',
	    value: function insertRule() {
	      return false;
	    }
	  }, {
	    key: 'deleteRule',
	    value: function deleteRule() {
	      return true;
	    }
	  }, {
	    key: 'replaceRule',
	    value: function replaceRule() {
	      return false;
	    }
	  }, {
	    key: 'getRules',
	    value: function getRules() {}
	  }, {
	    key: 'indexOf',
	    value: function indexOf() {
	      return -1;
	    }
	  }]);
	
	  return VirtualRenderer;
	}();
	
	exports['default'] = VirtualRenderer;

/***/ }),
/* 1350 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _RuleList = __webpack_require__(153);
	
	var _RuleList2 = _interopRequireDefault(_RuleList);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Conditional rule for @media, @supports
	 */
	var ConditionalRule = function () {
	  function ConditionalRule(key, styles, options) {
	    _classCallCheck(this, ConditionalRule);
	
	    this.type = 'conditional';
	    this.isProcessed = false;
	
	    this.key = key;
	    this.options = options;
	    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));
	
	    for (var name in styles) {
	      this.rules.add(name, styles[name]);
	    }
	
	    this.rules.process();
	  }
	
	  /**
	   * Get a rule.
	   */
	
	
	  _createClass(ConditionalRule, [{
	    key: 'getRule',
	    value: function getRule(name) {
	      return this.rules.get(name);
	    }
	
	    /**
	     * Get index of a rule.
	     */
	
	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.rules.indexOf(rule);
	    }
	
	    /**
	     * Create and register rule, run plugins.
	     */
	
	  }, {
	    key: 'addRule',
	    value: function addRule(name, style, options) {
	      var rule = this.rules.add(name, style, options);
	      this.options.jss.plugins.onProcessRule(rule);
	      return rule;
	    }
	
	    /**
	     * Generates a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };
	
	      var inner = this.rules.toString(options);
	      return inner ? this.key + ' {\n' + inner + '\n}' : '';
	    }
	  }]);
	
	  return ConditionalRule;
	}();
	
	exports['default'] = ConditionalRule;

/***/ }),
/* 1351 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _toCss = __webpack_require__(296);
	
	var _toCss2 = _interopRequireDefault(_toCss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var FontFaceRule = function () {
	  function FontFaceRule(key, style, options) {
	    _classCallCheck(this, FontFaceRule);
	
	    this.type = 'font-face';
	    this.isProcessed = false;
	
	    this.key = key;
	    this.style = style;
	    this.options = options;
	  }
	
	  /**
	   * Generates a CSS string.
	   */
	
	
	  _createClass(FontFaceRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      if (Array.isArray(this.style)) {
	        var str = '';
	        for (var index = 0; index < this.style.length; index++) {
	          str += (0, _toCss2['default'])(this.key, this.style[index]);
	          if (this.style[index + 1]) str += '\n';
	        }
	        return str;
	      }
	
	      return (0, _toCss2['default'])(this.key, this.style, options);
	    }
	  }]);
	
	  return FontFaceRule;
	}();
	
	exports['default'] = FontFaceRule;

/***/ }),
/* 1352 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _RuleList = __webpack_require__(153);
	
	var _RuleList2 = _interopRequireDefault(_RuleList);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Rule for @keyframes
	 */
	var KeyframesRule = function () {
	  function KeyframesRule(key, frames, options) {
	    _classCallCheck(this, KeyframesRule);
	
	    this.type = 'keyframes';
	    this.isProcessed = false;
	
	    this.key = key;
	    this.options = options;
	    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));
	
	    for (var name in frames) {
	      this.rules.add(name, frames[name], _extends({}, this.options, {
	        parent: this,
	        selector: name
	      }));
	    }
	
	    this.rules.process();
	  }
	
	  /**
	   * Generates a CSS string.
	   */
	
	
	  _createClass(KeyframesRule, [{
	    key: 'toString',
	    value: function toString() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };
	
	      var inner = this.rules.toString(options);
	      if (inner) inner += '\n';
	      return this.key + ' {\n' + inner + '}';
	    }
	  }]);
	
	  return KeyframesRule;
	}();
	
	exports['default'] = KeyframesRule;

/***/ }),
/* 1353 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var SimpleRule = function () {
	  function SimpleRule(key, value, options) {
	    _classCallCheck(this, SimpleRule);
	
	    this.type = 'simple';
	    this.isProcessed = false;
	
	    this.key = key;
	    this.value = value;
	    this.options = options;
	  }
	
	  /**
	   * Generates a CSS string.
	   */
	  // eslint-disable-next-line no-unused-vars
	
	
	  _createClass(SimpleRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      if (Array.isArray(this.value)) {
	        var str = '';
	        for (var index = 0; index < this.value.length; index++) {
	          str += this.key + ' ' + this.value[index] + ';';
	          if (this.value[index + 1]) str += '\n';
	        }
	        return str;
	      }
	
	      return this.key + ' ' + this.value + ';';
	    }
	  }]);
	
	  return SimpleRule;
	}();
	
	exports['default'] = SimpleRule;

/***/ }),
/* 1354 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _toCss = __webpack_require__(296);
	
	var _toCss2 = _interopRequireDefault(_toCss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ViewportRule = function () {
	  function ViewportRule(key, style, options) {
	    _classCallCheck(this, ViewportRule);
	
	    this.type = 'viewport';
	    this.isProcessed = false;
	
	    this.key = key;
	    this.style = style;
	    this.options = options;
	  }
	
	  /**
	   * Generates a CSS string.
	   */
	
	
	  _createClass(ViewportRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      return (0, _toCss2['default'])(this.key, this.style, options);
	    }
	  }]);
	
	  return ViewportRule;
	}();
	
	exports['default'] = ViewportRule;

/***/ }),
/* 1355 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports['default'] = cloneStyle;
	
	var _isObservable = __webpack_require__(463);
	
	var _isObservable2 = _interopRequireDefault(_isObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var isArray = Array.isArray;
	function cloneStyle(style) {
	  // Support empty values in case user ends up with them by accident.
	  if (style == null) return style;
	
	  // Support string value for SimpleRule.
	  var typeOfStyle = typeof style === 'undefined' ? 'undefined' : _typeof(style);
	
	  if (typeOfStyle === 'string' || typeOfStyle === 'number' || typeOfStyle === 'function') {
	    return style;
	  }
	
	  // Support array for FontFaceRule.
	  if (isArray(style)) return style.map(cloneStyle);
	
	  // Support Observable styles.  Observables are immutable, so we don't need to
	  // copy them.
	  if ((0, _isObservable2['default'])(style)) return style;
	
	  var newStyle = {};
	  for (var name in style) {
	    var value = style[name];
	    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
	      newStyle[name] = cloneStyle(value);
	      continue;
	    }
	    newStyle[name] = value;
	  }
	
	  return newStyle;
	}

/***/ }),
/* 1356 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var CSS = global.CSS;
	
	var env = ("production");
	
	var escapeRegex = /([[\].#*$><+~=|^:(),"'`])/g;
	
	exports['default'] = function (str) {
	  // We don't need to escape it in production, because we are not using user's
	  // input for selectors, we are generating a valid selector.
	  if (env === 'production') return str;
	
	  if (!CSS || !CSS.escape) {
	    return str.replace(escapeRegex, '\\$1');
	  }
	
	  return CSS.escape(str);
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 1357 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports['default'] = getDynamicStyles;
	/**
	 * Extracts a styles object with only props that contain function values.
	 */
	function getDynamicStyles(styles) {
	  var to = null;
	
	  for (var key in styles) {
	    var value = styles[key];
	    var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
	
	    if (type === 'function') {
	      if (!to) to = {};
	      to[key] = value;
	    } else if (type === 'object' && value !== null && !Array.isArray(value)) {
	      var extracted = getDynamicStyles(value);
	      if (extracted) {
	        if (!to) to = {};
	        to[key] = extracted;
	      }
	    }
	  }
	
	  return to;
	}

/***/ }),
/* 1358 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var ns = '2f1acc6c3a606b082e5eef5e54414ffb';
	if (global[ns] == null) global[ns] = 0;
	
	// Bundle may contain multiple JSS versions at the same time. In order to identify
	// the current version with just one short number and use it for classes generation
	// we use a counter. Also it is more accurate, because user can manually reevaluate
	// the module.
	exports['default'] = global[ns]++;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 1359 */,
/* 1360 */
/***/ (function(module, exports) {

	/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  // Safari 9 makes `arguments.length` enumerable in strict mode.
	  var result = (isArray(value) || isArguments(value))
	    ? baseTimes(value.length, String)
	    : [];
	
	  var length = result.length,
	      skipIndexes = !!length;
	
	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}
	
	module.exports = keys;


/***/ }),
/* 1361 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(95),
	    root = __webpack_require__(33);
	
	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');
	
	module.exports = DataView;


/***/ }),
/* 1362 */
/***/ (function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(1439),
	    hashDelete = __webpack_require__(1440),
	    hashGet = __webpack_require__(1441),
	    hashHas = __webpack_require__(1442),
	    hashSet = __webpack_require__(1443);
	
	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	module.exports = Hash;


/***/ }),
/* 1363 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(95),
	    root = __webpack_require__(33);
	
	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');
	
	module.exports = Promise;


/***/ }),
/* 1364 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(95),
	    root = __webpack_require__(33);
	
	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');
	
	module.exports = Set;


/***/ }),
/* 1365 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ }),
/* 1366 */
/***/ (function(module, exports) {

	/**
	 * Converts an ASCII `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function asciiToArray(string) {
	  return string.split('');
	}
	
	module.exports = asciiToArray;


/***/ }),
/* 1367 */,
/* 1368 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(120),
	    keys = __webpack_require__(58);
	
	/**
	 * The base implementation of `_.assign` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}
	
	module.exports = baseAssign;


/***/ }),
/* 1369 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(120),
	    keysIn = __webpack_require__(126);
	
	/**
	 * The base implementation of `_.assignIn` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssignIn(object, source) {
	  return object && copyObject(source, keysIn(source), object);
	}
	
	module.exports = baseAssignIn;


/***/ }),
/* 1370 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(199),
	    arrayEach = __webpack_require__(302),
	    assignValue = __webpack_require__(305),
	    baseAssign = __webpack_require__(1368),
	    baseAssignIn = __webpack_require__(1369),
	    cloneBuffer = __webpack_require__(485),
	    copyArray = __webpack_require__(203),
	    copySymbols = __webpack_require__(1414),
	    copySymbolsIn = __webpack_require__(1415),
	    getAllKeys = __webpack_require__(495),
	    getAllKeysIn = __webpack_require__(312),
	    getTag = __webpack_require__(159),
	    initCloneArray = __webpack_require__(1444),
	    initCloneByTag = __webpack_require__(1445),
	    initCloneObject = __webpack_require__(499),
	    isArray = __webpack_require__(27),
	    isBuffer = __webpack_require__(162),
	    isMap = __webpack_require__(1495),
	    isObject = __webpack_require__(47),
	    isSet = __webpack_require__(1497),
	    keys = __webpack_require__(58),
	    keysIn = __webpack_require__(126);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values supported by `_.clone`. */
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	cloneableTags[boolTag] = cloneableTags[dateTag] =
	cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	cloneableTags[int32Tag] = cloneableTags[mapTag] =
	cloneableTags[numberTag] = cloneableTags[objectTag] =
	cloneableTags[regexpTag] = cloneableTags[setTag] =
	cloneableTags[stringTag] = cloneableTags[symbolTag] =
	cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	 * traversed objects.
	 *
	 * @private
	 * @param {*} value The value to clone.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Deep clone
	 *  2 - Flatten inherited properties
	 *  4 - Clone symbols
	 * @param {Function} [customizer] The function to customize cloning.
	 * @param {string} [key] The key of `value`.
	 * @param {Object} [object] The parent object of `value`.
	 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	 * @returns {*} Returns the cloned value.
	 */
	function baseClone(value, bitmask, customizer, key, object, stack) {
	  var result,
	      isDeep = bitmask & CLONE_DEEP_FLAG,
	      isFlat = bitmask & CLONE_FLAT_FLAG,
	      isFull = bitmask & CLONE_SYMBOLS_FLAG;
	
	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;
	
	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      result = (isFlat || isFunc) ? {} : initCloneObject(value);
	      if (!isDeep) {
	        return isFlat
	          ? copySymbolsIn(value, baseAssignIn(result, value))
	          : copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, isDeep);
	    }
	  }
	  // Check for circular references and return its corresponding clone.
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);
	
	  if (isSet(value)) {
	    value.forEach(function(subValue) {
	      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
	    });
	  } else if (isMap(value)) {
	    value.forEach(function(subValue, key) {
	      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
	    });
	  }
	
	  var keysFunc = isFull
	    ? (isFlat ? getAllKeysIn : getAllKeys)
	    : (isFlat ? keysIn : keys);
	
	  var props = isArr ? undefined : keysFunc(value);
	  arrayEach(props || value, function(subValue, key) {
	    if (props) {
	      key = subValue;
	      subValue = value[key];
	    }
	    // Recursively populate clone (susceptible to call stack limits).
	    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
	  });
	  return result;
	}
	
	module.exports = baseClone;


/***/ }),
/* 1371 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(300),
	    arrayIncludes = __webpack_require__(303),
	    arrayIncludesWith = __webpack_require__(469),
	    arrayMap = __webpack_require__(70),
	    baseUnary = __webpack_require__(118),
	    cacheHas = __webpack_require__(309);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of methods like `_.difference` without support
	 * for excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;
	
	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee == null ? value : iteratee(value);
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseDifference;


/***/ }),
/* 1372 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(98),
	    toLength = __webpack_require__(1511);
	
	/**
	 * The base implementation of `_.fill` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to fill.
	 * @param {*} value The value to fill `array` with.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns `array`.
	 */
	function baseFill(array, value, start, end) {
	  var length = array.length;
	
	  start = toInteger(start);
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = (end === undefined || end > length) ? length : toInteger(end);
	  if (end < 0) {
	    end += length;
	  }
	  end = start > end ? 0 : toLength(end);
	  while (start < end) {
	    array[start++] = value;
	  }
	  return array;
	}
	
	module.exports = baseFill;


/***/ }),
/* 1373 */
/***/ (function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(202);
	
	/**
	 * The base implementation of `_.filter` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function baseFilter(collection, predicate) {
	  var result = [];
	  baseEach(collection, function(value, index, collection) {
	    if (predicate(value, index, collection)) {
	      result.push(value);
	    }
	  });
	  return result;
	}
	
	module.exports = baseFilter;


/***/ }),
/* 1374 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  return object != null && hasOwnProperty.call(object, key);
	}
	
	module.exports = baseHas;


/***/ }),
/* 1375 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}
	
	module.exports = baseHasIn;


/***/ }),
/* 1376 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(300),
	    arrayIncludes = __webpack_require__(303),
	    arrayIncludesWith = __webpack_require__(469),
	    arrayMap = __webpack_require__(70),
	    baseUnary = __webpack_require__(118),
	    cacheHas = __webpack_require__(309);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * The base implementation of methods like `_.intersection`, without support
	 * for iteratee shorthands, that accepts an array of arrays to inspect.
	 *
	 * @private
	 * @param {Array} arrays The arrays to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of shared values.
	 */
	function baseIntersection(arrays, iteratee, comparator) {
	  var includes = comparator ? arrayIncludesWith : arrayIncludes,
	      length = arrays[0].length,
	      othLength = arrays.length,
	      othIndex = othLength,
	      caches = Array(othLength),
	      maxLength = Infinity,
	      result = [];
	
	  while (othIndex--) {
	    var array = arrays[othIndex];
	    if (othIndex && iteratee) {
	      array = arrayMap(array, baseUnary(iteratee));
	    }
	    maxLength = nativeMin(array.length, maxLength);
	    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	      ? new SetCache(othIndex && array)
	      : undefined;
	  }
	  array = arrays[0];
	
	  var index = -1,
	      seen = caches[0];
	
	  outer:
	  while (++index < length && result.length < maxLength) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (!(seen
	          ? cacheHas(seen, computed)
	          : includes(result, computed, comparator)
	        )) {
	      othIndex = othLength;
	      while (--othIndex) {
	        var cache = caches[othIndex];
	        if (!(cache
	              ? cacheHas(cache, computed)
	              : includes(arrays[othIndex], computed, comparator))
	            ) {
	          continue outer;
	        }
	      }
	      if (seen) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseIntersection;


/***/ }),
/* 1377 */
/***/ (function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(155);
	
	/**
	 * The base implementation of `_.invert` and `_.invertBy` which inverts
	 * `object` with values transformed by `iteratee` and set by `setter`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} setter The function to set `accumulator` values.
	 * @param {Function} iteratee The iteratee to transform values.
	 * @param {Object} accumulator The initial inverted object.
	 * @returns {Function} Returns `accumulator`.
	 */
	function baseInverter(object, setter, iteratee, accumulator) {
	  baseForOwn(object, function(value, key, object) {
	    setter(accumulator, iteratee(value), key, object);
	  });
	  return accumulator;
	}
	
	module.exports = baseInverter;


/***/ }),
/* 1378 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(79),
	    isObjectLike = __webpack_require__(48);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */
	function baseIsArguments(value) {
	  return isObjectLike(value) && baseGetTag(value) == argsTag;
	}
	
	module.exports = baseIsArguments;


/***/ }),
/* 1379 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(199),
	    equalArrays = __webpack_require__(492),
	    equalByTag = __webpack_require__(1430),
	    equalObjects = __webpack_require__(1431),
	    getTag = __webpack_require__(159),
	    isArray = __webpack_require__(27),
	    isBuffer = __webpack_require__(162),
	    isTypedArray = __webpack_require__(211);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = objIsArr ? arrayTag : getTag(object),
	      othTag = othIsArr ? arrayTag : getTag(other);
	
	  objTag = objTag == argsTag ? objectTag : objTag;
	  othTag = othTag == argsTag ? objectTag : othTag;
	
	  var objIsObj = objTag == objectTag,
	      othIsObj = othTag == objectTag,
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && isBuffer(object)) {
	    if (!isBuffer(other)) {
	      return false;
	    }
	    objIsArr = true;
	    objIsObj = false;
	  }
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	  }
	  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ }),
/* 1380 */
/***/ (function(module, exports, __webpack_require__) {

	var getTag = __webpack_require__(159),
	    isObjectLike = __webpack_require__(48);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]';
	
	/**
	 * The base implementation of `_.isMap` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	 */
	function baseIsMap(value) {
	  return isObjectLike(value) && getTag(value) == mapTag;
	}
	
	module.exports = baseIsMap;


/***/ }),
/* 1381 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(199),
	    baseIsEqual = __webpack_require__(306);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;
	
	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];
	
	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}
	
	module.exports = baseIsMatch;


/***/ }),
/* 1382 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.isNaN` without support for number objects.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 */
	function baseIsNaN(value) {
	  return value !== value;
	}
	
	module.exports = baseIsNaN;


/***/ }),
/* 1383 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(125),
	    isMasked = __webpack_require__(1450),
	    isObject = __webpack_require__(47),
	    toSource = __webpack_require__(509);
	
	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	module.exports = baseIsNative;


/***/ }),
/* 1384 */
/***/ (function(module, exports, __webpack_require__) {

	var getTag = __webpack_require__(159),
	    isObjectLike = __webpack_require__(48);
	
	/** `Object#toString` result references. */
	var setTag = '[object Set]';
	
	/**
	 * The base implementation of `_.isSet` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	 */
	function baseIsSet(value) {
	  return isObjectLike(value) && getTag(value) == setTag;
	}
	
	module.exports = baseIsSet;


/***/ }),
/* 1385 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(79),
	    isLength = __webpack_require__(323),
	    isObjectLike = __webpack_require__(48);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	}
	
	module.exports = baseIsTypedArray;


/***/ }),
/* 1386 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(47),
	    isPrototype = __webpack_require__(207),
	    nativeKeysIn = __webpack_require__(1465);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  if (!isObject(object)) {
	    return nativeKeysIn(object);
	  }
	  var isProto = isPrototype(object),
	      result = [];
	
	  for (var key in object) {
	    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeysIn;


/***/ }),
/* 1387 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(1381),
	    getMatchData = __webpack_require__(1433),
	    matchesStrictComparable = __webpack_require__(501);
	
	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}
	
	module.exports = baseMatches;


/***/ }),
/* 1388 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(306),
	    get = __webpack_require__(320),
	    hasIn = __webpack_require__(513),
	    isKey = __webpack_require__(315),
	    isStrictComparable = __webpack_require__(500),
	    matchesStrictComparable = __webpack_require__(501),
	    toKey = __webpack_require__(122);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	  };
	}
	
	module.exports = baseMatchesProperty;


/***/ }),
/* 1389 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(199),
	    assignMergeValue = __webpack_require__(472),
	    baseFor = __webpack_require__(476),
	    baseMergeDeep = __webpack_require__(1390),
	    isObject = __webpack_require__(47),
	    keysIn = __webpack_require__(126),
	    safeGet = __webpack_require__(505);
	
	/**
	 * The base implementation of `_.merge` without support for multiple sources.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMerge(object, source, srcIndex, customizer, stack) {
	  if (object === source) {
	    return;
	  }
	  baseFor(source, function(srcValue, key) {
	    stack || (stack = new Stack);
	    if (isObject(srcValue)) {
	      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	    }
	    else {
	      var newValue = customizer
	        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      if (newValue === undefined) {
	        newValue = srcValue;
	      }
	      assignMergeValue(object, key, newValue);
	    }
	  }, keysIn);
	}
	
	module.exports = baseMerge;


/***/ }),
/* 1390 */
/***/ (function(module, exports, __webpack_require__) {

	var assignMergeValue = __webpack_require__(472),
	    cloneBuffer = __webpack_require__(485),
	    cloneTypedArray = __webpack_require__(486),
	    copyArray = __webpack_require__(203),
	    initCloneObject = __webpack_require__(499),
	    isArguments = __webpack_require__(161),
	    isArray = __webpack_require__(27),
	    isArrayLikeObject = __webpack_require__(321),
	    isBuffer = __webpack_require__(162),
	    isFunction = __webpack_require__(125),
	    isObject = __webpack_require__(47),
	    isPlainObject = __webpack_require__(163),
	    isTypedArray = __webpack_require__(211),
	    safeGet = __webpack_require__(505),
	    toPlainObject = __webpack_require__(1513);
	
	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	  var objValue = safeGet(object, key),
	      srcValue = safeGet(source, key),
	      stacked = stack.get(srcValue);
	
	  if (stacked) {
	    assignMergeValue(object, key, stacked);
	    return;
	  }
	  var newValue = customizer
	    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	    : undefined;
	
	  var isCommon = newValue === undefined;
	
	  if (isCommon) {
	    var isArr = isArray(srcValue),
	        isBuff = !isArr && isBuffer(srcValue),
	        isTyped = !isArr && !isBuff && isTypedArray(srcValue);
	
	    newValue = srcValue;
	    if (isArr || isBuff || isTyped) {
	      if (isArray(objValue)) {
	        newValue = objValue;
	      }
	      else if (isArrayLikeObject(objValue)) {
	        newValue = copyArray(objValue);
	      }
	      else if (isBuff) {
	        isCommon = false;
	        newValue = cloneBuffer(srcValue, true);
	      }
	      else if (isTyped) {
	        isCommon = false;
	        newValue = cloneTypedArray(srcValue, true);
	      }
	      else {
	        newValue = [];
	      }
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      newValue = objValue;
	      if (isArguments(objValue)) {
	        newValue = toPlainObject(objValue);
	      }
	      else if (!isObject(objValue) || isFunction(objValue)) {
	        newValue = initCloneObject(srcValue);
	      }
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    stack.set(srcValue, newValue);
	    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	    stack['delete'](srcValue);
	  }
	  assignMergeValue(object, key, newValue);
	}
	
	module.exports = baseMergeDeep;


/***/ }),
/* 1391 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(70),
	    baseGet = __webpack_require__(156),
	    baseIteratee = __webpack_require__(57),
	    baseMap = __webpack_require__(479),
	    baseSortBy = __webpack_require__(1400),
	    baseUnary = __webpack_require__(118),
	    compareMultiple = __webpack_require__(1413),
	    identity = __webpack_require__(96),
	    isArray = __webpack_require__(27);
	
	/**
	 * The base implementation of `_.orderBy` without param guards.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	 * @param {string[]} orders The sort orders of `iteratees`.
	 * @returns {Array} Returns the new sorted array.
	 */
	function baseOrderBy(collection, iteratees, orders) {
	  if (iteratees.length) {
	    iteratees = arrayMap(iteratees, function(iteratee) {
	      if (isArray(iteratee)) {
	        return function(value) {
	          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
	        }
	      }
	      return iteratee;
	    });
	  } else {
	    iteratees = [identity];
	  }
	
	  var index = -1;
	  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));
	
	  var result = baseMap(collection, function(value, key, collection) {
	    var criteria = arrayMap(iteratees, function(iteratee) {
	      return iteratee(value);
	    });
	    return { 'criteria': criteria, 'index': ++index, 'value': value };
	  });
	
	  return baseSortBy(result, function(object, other) {
	    return compareMultiple(object, other, orders);
	  });
	}
	
	module.exports = baseOrderBy;


/***/ }),
/* 1392 */
/***/ (function(module, exports, __webpack_require__) {

	var basePickBy = __webpack_require__(480),
	    hasIn = __webpack_require__(513);
	
	/**
	 * The base implementation of `_.pick` without support for individual
	 * property identifiers.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @returns {Object} Returns the new object.
	 */
	function basePick(object, paths) {
	  return basePickBy(object, paths, function(value, path) {
	    return hasIn(object, path);
	  });
	}
	
	module.exports = basePick;


/***/ }),
/* 1393 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = baseProperty;


/***/ }),
/* 1394 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(156);
	
	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}
	
	module.exports = basePropertyDeep;


/***/ }),
/* 1395 */,
/* 1396 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeCeil = Math.ceil,
	    nativeMax = Math.max;
	
	/**
	 * The base implementation of `_.range` and `_.rangeRight` which doesn't
	 * coerce arguments.
	 *
	 * @private
	 * @param {number} start The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} step The value to increment or decrement by.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Array} Returns the range of numbers.
	 */
	function baseRange(start, end, step, fromRight) {
	  var index = -1,
	      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	      result = Array(length);
	
	  while (length--) {
	    result[fromRight ? length : ++index] = start;
	    start += step;
	  }
	  return result;
	}
	
	module.exports = baseRange;


/***/ }),
/* 1397 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.reduce` and `_.reduceRight`, without support
	 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} accumulator The initial value.
	 * @param {boolean} initAccum Specify using the first or last element of
	 *  `collection` as the initial value.
	 * @param {Function} eachFunc The function to iterate over `collection`.
	 * @returns {*} Returns the accumulated value.
	 */
	function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	  eachFunc(collection, function(value, index, collection) {
	    accumulator = initAccum
	      ? (initAccum = false, value)
	      : iteratee(accumulator, value, index, collection);
	  });
	  return accumulator;
	}
	
	module.exports = baseReduce;


/***/ }),
/* 1398 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(305),
	    castPath = __webpack_require__(119),
	    isIndex = __webpack_require__(160),
	    isObject = __webpack_require__(47),
	    toKey = __webpack_require__(122);
	
	/**
	 * The base implementation of `_.set`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @param {Function} [customizer] The function to customize path creation.
	 * @returns {Object} Returns `object`.
	 */
	function baseSet(object, path, value, customizer) {
	  if (!isObject(object)) {
	    return object;
	  }
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      lastIndex = length - 1,
	      nested = object;
	
	  while (nested != null && ++index < length) {
	    var key = toKey(path[index]),
	        newValue = value;
	
	    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
	      return object;
	    }
	
	    if (index != lastIndex) {
	      var objValue = nested[key];
	      newValue = customizer ? customizer(objValue, key, nested) : undefined;
	      if (newValue === undefined) {
	        newValue = isObject(objValue)
	          ? objValue
	          : (isIndex(path[index + 1]) ? [] : {});
	      }
	    }
	    assignValue(nested, key, newValue);
	    nested = nested[key];
	  }
	  return object;
	}
	
	module.exports = baseSet;


/***/ }),
/* 1399 */
/***/ (function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(510),
	    defineProperty = __webpack_require__(491),
	    identity = __webpack_require__(96);
	
	/**
	 * The base implementation of `setToString` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetToString = !defineProperty ? identity : function(func, string) {
	  return defineProperty(func, 'toString', {
	    'configurable': true,
	    'enumerable': false,
	    'value': constant(string),
	    'writable': true
	  });
	};
	
	module.exports = baseSetToString;


/***/ }),
/* 1400 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.sortBy` which uses `comparer` to define the
	 * sort order of `array` and replaces criteria objects with their corresponding
	 * values.
	 *
	 * @private
	 * @param {Array} array The array to sort.
	 * @param {Function} comparer The function to define sort order.
	 * @returns {Array} Returns `array`.
	 */
	function baseSortBy(array, comparer) {
	  var length = array.length;
	
	  array.sort(comparer);
	  while (length--) {
	    array[length] = array[length].value;
	  }
	  return array;
	}
	
	module.exports = baseSortBy;


/***/ }),
/* 1401 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.sum` and `_.sumBy` without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {number} Returns the sum.
	 */
	function baseSum(array, iteratee) {
	  var result,
	      index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    var current = iteratee(array[index]);
	    if (current !== undefined) {
	      result = result === undefined ? current : (result + current);
	    }
	  }
	  return result;
	}
	
	module.exports = baseSum;


/***/ }),
/* 1402 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ }),
/* 1403 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(119),
	    last = __webpack_require__(517),
	    parent = __webpack_require__(1467),
	    toKey = __webpack_require__(122);
	
	/**
	 * The base implementation of `_.unset`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The property path to unset.
	 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	 */
	function baseUnset(object, path) {
	  path = castPath(path, object);
	  object = parent(object, path);
	  return object == null || delete object[toKey(last(path))];
	}
	
	module.exports = baseUnset;


/***/ }),
/* 1404 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(70);
	
	/**
	 * The base implementation of `_.values` and `_.valuesIn` which creates an
	 * array of `object` property values corresponding to the property names
	 * of `props`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} props The property names to get values for.
	 * @returns {Object} Returns the array of property values.
	 */
	function baseValues(object, props) {
	  return arrayMap(props, function(key) {
	    return object[key];
	  });
	}
	
	module.exports = baseValues;


/***/ }),
/* 1405 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(321);
	
	/**
	 * Casts `value` to an empty array if it's not an array like object.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array|Object} Returns the cast array-like object.
	 */
	function castArrayLikeObject(value) {
	  return isArrayLikeObject(value) ? value : [];
	}
	
	module.exports = castArrayLikeObject;


/***/ }),
/* 1406 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(482);
	
	/**
	 * Casts `array` to a slice if it's needed.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {number} start The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the cast slice.
	 */
	function castSlice(array, start, end) {
	  var length = array.length;
	  end = end === undefined ? length : end;
	  return (!start && end >= length) ? array : baseSlice(array, start, end);
	}
	
	module.exports = castSlice;


/***/ }),
/* 1407 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(157);
	
	/**
	 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the last unmatched string symbol.
	 */
	function charsEndIndex(strSymbols, chrSymbols) {
	  var index = strSymbols.length;
	
	  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsEndIndex;


/***/ }),
/* 1408 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(157);
	
	/**
	 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the first unmatched string symbol.
	 */
	function charsStartIndex(strSymbols, chrSymbols) {
	  var index = -1,
	      length = strSymbols.length;
	
	  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsStartIndex;


/***/ }),
/* 1409 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(310);
	
	/**
	 * Creates a clone of `dataView`.
	 *
	 * @private
	 * @param {Object} dataView The data view to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned data view.
	 */
	function cloneDataView(dataView, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	}
	
	module.exports = cloneDataView;


/***/ }),
/* 1410 */
/***/ (function(module, exports) {

	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;
	
	/**
	 * Creates a clone of `regexp`.
	 *
	 * @private
	 * @param {Object} regexp The regexp to clone.
	 * @returns {Object} Returns the cloned regexp.
	 */
	function cloneRegExp(regexp) {
	  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}
	
	module.exports = cloneRegExp;


/***/ }),
/* 1411 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(117);
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * Creates a clone of the `symbol` object.
	 *
	 * @private
	 * @param {Object} symbol The symbol object to clone.
	 * @returns {Object} Returns the cloned symbol object.
	 */
	function cloneSymbol(symbol) {
	  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	}
	
	module.exports = cloneSymbol;


/***/ }),
/* 1412 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(165);
	
	/**
	 * Compares values to sort them in ascending order.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {number} Returns the sort order indicator for `value`.
	 */
	function compareAscending(value, other) {
	  if (value !== other) {
	    var valIsDefined = value !== undefined,
	        valIsNull = value === null,
	        valIsReflexive = value === value,
	        valIsSymbol = isSymbol(value);
	
	    var othIsDefined = other !== undefined,
	        othIsNull = other === null,
	        othIsReflexive = other === other,
	        othIsSymbol = isSymbol(other);
	
	    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	        (valIsNull && othIsDefined && othIsReflexive) ||
	        (!valIsDefined && othIsReflexive) ||
	        !valIsReflexive) {
	      return 1;
	    }
	    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	        (othIsNull && valIsDefined && valIsReflexive) ||
	        (!othIsDefined && valIsReflexive) ||
	        !othIsReflexive) {
	      return -1;
	    }
	  }
	  return 0;
	}
	
	module.exports = compareAscending;


/***/ }),
/* 1413 */
/***/ (function(module, exports, __webpack_require__) {

	var compareAscending = __webpack_require__(1412);
	
	/**
	 * Used by `_.orderBy` to compare multiple properties of a value to another
	 * and stable sort them.
	 *
	 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	 * specify an order of "desc" for descending or "asc" for ascending sort order
	 * of corresponding values.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {boolean[]|string[]} orders The order to sort by for each property.
	 * @returns {number} Returns the sort order indicator for `object`.
	 */
	function compareMultiple(object, other, orders) {
	  var index = -1,
	      objCriteria = object.criteria,
	      othCriteria = other.criteria,
	      length = objCriteria.length,
	      ordersLength = orders.length;
	
	  while (++index < length) {
	    var result = compareAscending(objCriteria[index], othCriteria[index]);
	    if (result) {
	      if (index >= ordersLength) {
	        return result;
	      }
	      var order = orders[index];
	      return result * (order == 'desc' ? -1 : 1);
	    }
	  }
	  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	  // that causes it, under certain circumstances, to provide the same value for
	  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	  // for more details.
	  //
	  // This also ensures a stable sort in V8 and other engines.
	  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	  return object.index - other.index;
	}
	
	module.exports = compareMultiple;


/***/ }),
/* 1414 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(120),
	    getSymbols = __webpack_require__(314);
	
	/**
	 * Copies own symbols of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}
	
	module.exports = copySymbols;


/***/ }),
/* 1415 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(120),
	    getSymbolsIn = __webpack_require__(497);
	
	/**
	 * Copies own and inherited symbols of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbolsIn(source, object) {
	  return copyObject(source, getSymbolsIn(source), object);
	}
	
	module.exports = copySymbolsIn;


/***/ }),
/* 1416 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(33);
	
	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];
	
	module.exports = coreJsData;


/***/ }),
/* 1417 */
/***/ (function(module, exports) {

	/**
	 * Gets the number of `placeholder` occurrences in `array`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} placeholder The placeholder to search for.
	 * @returns {number} Returns the placeholder count.
	 */
	function countHolders(array, placeholder) {
	  var length = array.length,
	      result = 0;
	
	  while (length--) {
	    if (array[length] === placeholder) {
	      ++result;
	    }
	  }
	  return result;
	}
	
	module.exports = countHolders;


/***/ }),
/* 1418 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(94),
	    isIterateeCall = __webpack_require__(206);
	
	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;
	
	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;
	
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	module.exports = createAssigner;


/***/ }),
/* 1419 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(72);
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	module.exports = createBaseEach;


/***/ }),
/* 1420 */
/***/ (function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ }),
/* 1421 */
/***/ (function(module, exports, __webpack_require__) {

	var createCtor = __webpack_require__(204),
	    root = __webpack_require__(33);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the optional `this`
	 * binding of `thisArg`.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createBind(func, bitmask, thisArg) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);
	
	  function wrapper() {
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return fn.apply(isBind ? thisArg : this, arguments);
	  }
	  return wrapper;
	}
	
	module.exports = createBind;


/***/ }),
/* 1422 */,
/* 1423 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(301),
	    createCtor = __webpack_require__(204),
	    createHybrid = __webpack_require__(489),
	    createRecurry = __webpack_require__(490),
	    getHolder = __webpack_require__(158),
	    replaceHolders = __webpack_require__(121),
	    root = __webpack_require__(33);
	
	/**
	 * Creates a function that wraps `func` to enable currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {number} arity The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCurry(func, bitmask, arity) {
	  var Ctor = createCtor(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length,
	        placeholder = getHolder(wrapper);
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	      ? []
	      : replaceHolders(args, placeholder);
	
	    length -= holders.length;
	    if (length < arity) {
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, undefined,
	        args, holders, undefined, undefined, arity - length);
	    }
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return apply(fn, this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createCurry;


/***/ }),
/* 1424 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(57),
	    isArrayLike = __webpack_require__(72),
	    keys = __webpack_require__(58);
	
	/**
	 * Creates a `_.find` or `_.findLast` function.
	 *
	 * @private
	 * @param {Function} findIndexFunc The function to find the collection index.
	 * @returns {Function} Returns the new find function.
	 */
	function createFind(findIndexFunc) {
	  return function(collection, predicate, fromIndex) {
	    var iterable = Object(collection);
	    if (!isArrayLike(collection)) {
	      var iteratee = baseIteratee(predicate, 3);
	      collection = keys(collection);
	      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	    }
	    var index = findIndexFunc(collection, predicate, fromIndex);
	    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	  };
	}
	
	module.exports = createFind;


/***/ }),
/* 1425 */
/***/ (function(module, exports, __webpack_require__) {

	var baseInverter = __webpack_require__(1377);
	
	/**
	 * Creates a function like `_.invertBy`.
	 *
	 * @private
	 * @param {Function} setter The function to set accumulator values.
	 * @param {Function} toIteratee The function to resolve iteratees.
	 * @returns {Function} Returns the new inverter function.
	 */
	function createInverter(setter, toIteratee) {
	  return function(object, iteratee) {
	    return baseInverter(object, setter, toIteratee(iteratee), {});
	  };
	}
	
	module.exports = createInverter;


/***/ }),
/* 1426 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(301),
	    createCtor = __webpack_require__(204),
	    root = __webpack_require__(33);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the `this` binding
	 * of `thisArg` and `partials` prepended to the arguments it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} partials The arguments to prepend to those provided to
	 *  the new function.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createPartial(func, bitmask, thisArg, partials) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);
	
	  function wrapper() {
	    var argsIndex = -1,
	        argsLength = arguments.length,
	        leftIndex = -1,
	        leftLength = partials.length,
	        args = Array(leftLength + argsLength),
	        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	
	    while (++leftIndex < leftLength) {
	      args[leftIndex] = partials[leftIndex];
	    }
	    while (argsLength--) {
	      args[leftIndex++] = arguments[++argsIndex];
	    }
	    return apply(fn, isBind ? thisArg : this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createPartial;


/***/ }),
/* 1427 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRange = __webpack_require__(1396),
	    isIterateeCall = __webpack_require__(206),
	    toFinite = __webpack_require__(519);
	
	/**
	 * Creates a `_.range` or `_.rangeRight` function.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new range function.
	 */
	function createRange(fromRight) {
	  return function(start, end, step) {
	    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	      end = step = undefined;
	    }
	    // Ensure the sign of `-0` is preserved.
	    start = toFinite(start);
	    if (end === undefined) {
	      end = start;
	      start = 0;
	    } else {
	      end = toFinite(end);
	    }
	    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	    return baseRange(start, end, step, fromRight);
	  };
	}
	
	module.exports = createRange;


/***/ }),
/* 1428 */
/***/ (function(module, exports, __webpack_require__) {

	var isPlainObject = __webpack_require__(163);
	
	/**
	 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	 * objects.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {string} key The key of the property to inspect.
	 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	 */
	function customOmitClone(value) {
	  return isPlainObject(value) ? undefined : value;
	}
	
	module.exports = customOmitClone;


/***/ }),
/* 1429 */,
/* 1430 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(117),
	    Uint8Array = __webpack_require__(466),
	    eq = __webpack_require__(123),
	    equalArrays = __webpack_require__(492),
	    mapToArray = __webpack_require__(1461),
	    setToArray = __webpack_require__(1472);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;
	
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	      convert || (convert = setToArray);
	
	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= COMPARE_UNORDERED_FLAG;
	
	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	      stack['delete'](object);
	      return result;
	
	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}
	
	module.exports = equalByTag;


/***/ }),
/* 1431 */
/***/ (function(module, exports, __webpack_require__) {

	var getAllKeys = __webpack_require__(495);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      objProps = getAllKeys(object),
	      objLength = objProps.length,
	      othProps = getAllKeys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Check that cyclic values are equal.
	  var objStacked = stack.get(object);
	  var othStacked = stack.get(other);
	  if (objStacked && othStacked) {
	    return objStacked == other && othStacked == object;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ }),
/* 1432 */
/***/ (function(module, exports, __webpack_require__) {

	var realNames = __webpack_require__(1468);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the name of `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {string} Returns the function name.
	 */
	function getFuncName(func) {
	  var result = (func.name + ''),
	      array = realNames[result],
	      length = hasOwnProperty.call(realNames, result) ? array.length : 0;
	
	  while (length--) {
	    var data = array[length],
	        otherFunc = data.func;
	    if (otherFunc == null || otherFunc == func) {
	      return data.name;
	    }
	  }
	  return result;
	}
	
	module.exports = getFuncName;


/***/ }),
/* 1433 */
/***/ (function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(500),
	    keys = __webpack_require__(58);
	
	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;
	
	  while (length--) {
	    var key = result[length],
	        value = object[key];
	
	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}
	
	module.exports = getMatchData;


/***/ }),
/* 1434 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(117);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ }),
/* 1435 */
/***/ (function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}
	
	module.exports = getValue;


/***/ }),
/* 1436 */
/***/ (function(module, exports) {

	/** Used to match wrap detail comments. */
	var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	    reSplitDetails = /,? & /;
	
	/**
	 * Extracts wrapper details from the `source` body comment.
	 *
	 * @private
	 * @param {string} source The source to inspect.
	 * @returns {Array} Returns the wrapper details.
	 */
	function getWrapDetails(source) {
	  var match = source.match(reWrapDetails);
	  return match ? match[1].split(reSplitDetails) : [];
	}
	
	module.exports = getWrapDetails;


/***/ }),
/* 1437 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsZWJ = '\\u200d';
	
	/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');
	
	/**
	 * Checks if `string` contains Unicode symbols.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	 */
	function hasUnicode(string) {
	  return reHasUnicode.test(string);
	}
	
	module.exports = hasUnicode;


/***/ }),
/* 1438 */,
/* 1439 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(208);
	
	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	  this.size = 0;
	}
	
	module.exports = hashClear;


/***/ }),
/* 1440 */
/***/ (function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  var result = this.has(key) && delete this.__data__[key];
	  this.size -= result ? 1 : 0;
	  return result;
	}
	
	module.exports = hashDelete;


/***/ }),
/* 1441 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(208);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	module.exports = hashGet;


/***/ }),
/* 1442 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(208);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	}
	
	module.exports = hashHas;


/***/ }),
/* 1443 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(208);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  this.size += this.has(key) ? 0 : 1;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	module.exports = hashSet;


/***/ }),
/* 1444 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Initializes an array clone.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the initialized clone.
	 */
	function initCloneArray(array) {
	  var length = array.length,
	      result = new array.constructor(length);
	
	  // Add properties assigned by `RegExp#exec`.
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}
	
	module.exports = initCloneArray;


/***/ }),
/* 1445 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(310),
	    cloneDataView = __webpack_require__(1409),
	    cloneRegExp = __webpack_require__(1410),
	    cloneSymbol = __webpack_require__(1411),
	    cloneTypedArray = __webpack_require__(486);
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/**
	 * Initializes an object clone based on its `toStringTag`.
	 *
	 * **Note:** This function only supports cloning values with tags of
	 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @param {string} tag The `toStringTag` of the object to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneByTag(object, tag, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);
	
	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);
	
	    case dataViewTag:
	      return cloneDataView(object, isDeep);
	
	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);
	
	    case mapTag:
	      return new Ctor;
	
	    case numberTag:
	    case stringTag:
	      return new Ctor(object);
	
	    case regexpTag:
	      return cloneRegExp(object);
	
	    case setTag:
	      return new Ctor;
	
	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}
	
	module.exports = initCloneByTag;


/***/ }),
/* 1446 */
/***/ (function(module, exports) {

	/** Used to match wrap detail comments. */
	var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
	
	/**
	 * Inserts wrapper `details` in a comment at the top of the `source` body.
	 *
	 * @private
	 * @param {string} source The source to modify.
	 * @returns {Array} details The details to insert.
	 * @returns {string} Returns the modified source.
	 */
	function insertWrapDetails(source, details) {
	  var length = details.length;
	  if (!length) {
	    return source;
	  }
	  var lastIndex = length - 1;
	  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	  details = details.join(length > 2 ? ', ' : ' ');
	  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	}
	
	module.exports = insertWrapDetails;


/***/ }),
/* 1447 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(117),
	    isArguments = __webpack_require__(161),
	    isArray = __webpack_require__(27);
	
	/** Built-in value references. */
	var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
	
	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value) ||
	    !!(spreadableSymbol && value && value[spreadableSymbol]);
	}
	
	module.exports = isFlattenable;


/***/ }),
/* 1448 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	module.exports = isKeyable;


/***/ }),
/* 1449 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(297),
	    getData = __webpack_require__(496),
	    getFuncName = __webpack_require__(1432),
	    lodash = __webpack_require__(1516);
	
	/**
	 * Checks if `func` has a lazy counterpart.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	 *  else `false`.
	 */
	function isLaziable(func) {
	  var funcName = getFuncName(func),
	      other = lodash[funcName];
	
	  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	    return false;
	  }
	  if (func === other) {
	    return true;
	  }
	  var data = getData(other);
	  return !!data && func === data[0];
	}
	
	module.exports = isLaziable;


/***/ }),
/* 1450 */
/***/ (function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(1416);
	
	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());
	
	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}
	
	module.exports = isMasked;


/***/ }),
/* 1451 */
/***/ (function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}
	
	module.exports = listCacheClear;


/***/ }),
/* 1452 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(200);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}
	
	module.exports = listCacheDelete;


/***/ }),
/* 1453 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(200);
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	module.exports = listCacheGet;


/***/ }),
/* 1454 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(200);
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	module.exports = listCacheHas;


/***/ }),
/* 1455 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(200);
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	module.exports = listCacheSet;


/***/ }),
/* 1456 */
/***/ (function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(1362),
	    ListCache = __webpack_require__(198),
	    Map = __webpack_require__(298);
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.size = 0;
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	module.exports = mapCacheClear;


/***/ }),
/* 1457 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(205);
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  var result = getMapData(this, key)['delete'](key);
	  this.size -= result ? 1 : 0;
	  return result;
	}
	
	module.exports = mapCacheDelete;


/***/ }),
/* 1458 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(205);
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	module.exports = mapCacheGet;


/***/ }),
/* 1459 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(205);
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	module.exports = mapCacheHas;


/***/ }),
/* 1460 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(205);
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  var data = getMapData(this, key),
	      size = data.size;
	
	  data.set(key, value);
	  this.size += data.size == size ? 0 : 1;
	  return this;
	}
	
	module.exports = mapCacheSet;


/***/ }),
/* 1461 */
/***/ (function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	module.exports = mapToArray;


/***/ }),
/* 1462 */
/***/ (function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(1501);
	
	/** Used as the maximum memoize cache size. */
	var MAX_MEMOIZE_SIZE = 500;
	
	/**
	 * A specialized version of `_.memoize` which clears the memoized function's
	 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	 *
	 * @private
	 * @param {Function} func The function to have its output memoized.
	 * @returns {Function} Returns the new memoized function.
	 */
	function memoizeCapped(func) {
	  var result = memoize(func, function(key) {
	    if (cache.size === MAX_MEMOIZE_SIZE) {
	      cache.clear();
	    }
	    return key;
	  });
	
	  var cache = result.cache;
	  return result;
	}
	
	module.exports = memoizeCapped;


/***/ }),
/* 1463 */
/***/ (function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(487),
	    composeArgsRight = __webpack_require__(488),
	    replaceHolders = __webpack_require__(121);
	
	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Merges the function metadata of `source` into `data`.
	 *
	 * Merging metadata reduces the number of wrappers used to invoke a function.
	 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	 * may be applied regardless of execution order. Methods like `_.ary` and
	 * `_.rearg` modify function arguments, making the order in which they are
	 * executed important, preventing the merging of metadata. However, we make
	 * an exception for a safe combined case where curried functions have `_.ary`
	 * and or `_.rearg` applied.
	 *
	 * @private
	 * @param {Array} data The destination metadata.
	 * @param {Array} source The source metadata.
	 * @returns {Array} Returns `data`.
	 */
	function mergeData(data, source) {
	  var bitmask = data[1],
	      srcBitmask = source[1],
	      newBitmask = bitmask | srcBitmask,
	      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
	
	  var isCombo =
	    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
	    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
	    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));
	
	  // Exit early if metadata can't be merged.
	  if (!(isCommon || isCombo)) {
	    return data;
	  }
	  // Use source `thisArg` if available.
	  if (srcBitmask & WRAP_BIND_FLAG) {
	    data[2] = source[2];
	    // Set when currying a bound function.
	    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
	  }
	  // Compose partial arguments.
	  var value = source[3];
	  if (value) {
	    var partials = data[3];
	    data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	  }
	  // Compose partial right arguments.
	  value = source[5];
	  if (value) {
	    partials = data[5];
	    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	  }
	  // Use source `argPos` if available.
	  value = source[7];
	  if (value) {
	    data[7] = value;
	  }
	  // Use source `ary` if it's smaller.
	  if (srcBitmask & WRAP_ARY_FLAG) {
	    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	  }
	  // Use source `arity` if one is not provided.
	  if (data[9] == null) {
	    data[9] = source[9];
	  }
	  // Use source `func` and merge bitmasks.
	  data[0] = source[0];
	  data[1] = newBitmask;
	
	  return data;
	}
	
	module.exports = mergeData;


/***/ }),
/* 1464 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(503);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	module.exports = nativeKeys;


/***/ }),
/* 1465 */
/***/ (function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = nativeKeysIn;


/***/ }),
/* 1466 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ }),
/* 1467 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(156),
	    baseSlice = __webpack_require__(482);
	
	/**
	 * Gets the parent value at `path` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} path The path to get the parent value of.
	 * @returns {*} Returns the parent value.
	 */
	function parent(object, path) {
	  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	}
	
	module.exports = parent;


/***/ }),
/* 1468 */
/***/ (function(module, exports) {

	/** Used to lookup unminified function names. */
	var realNames = {};
	
	module.exports = realNames;


/***/ }),
/* 1469 */
/***/ (function(module, exports, __webpack_require__) {

	var copyArray = __webpack_require__(203),
	    isIndex = __webpack_require__(160);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Reorder `array` according to the specified indexes where the element at
	 * the first index is assigned as the first element, the element at
	 * the second index is assigned as the second element, and so on.
	 *
	 * @private
	 * @param {Array} array The array to reorder.
	 * @param {Array} indexes The arranged array indexes.
	 * @returns {Array} Returns `array`.
	 */
	function reorder(array, indexes) {
	  var arrLength = array.length,
	      length = nativeMin(indexes.length, arrLength),
	      oldArray = copyArray(array);
	
	  while (length--) {
	    var index = indexes[length];
	    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	  }
	  return array;
	}
	
	module.exports = reorder;


/***/ }),
/* 1470 */
/***/ (function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}
	
	module.exports = setCacheAdd;


/***/ }),
/* 1471 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}
	
	module.exports = setCacheHas;


/***/ }),
/* 1472 */
/***/ (function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	module.exports = setToArray;


/***/ }),
/* 1473 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(198);
	
	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	  this.size = 0;
	}
	
	module.exports = stackClear;


/***/ }),
/* 1474 */
/***/ (function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  var data = this.__data__,
	      result = data['delete'](key);
	
	  this.size = data.size;
	  return result;
	}
	
	module.exports = stackDelete;


/***/ }),
/* 1475 */
/***/ (function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	module.exports = stackGet;


/***/ }),
/* 1476 */
/***/ (function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	module.exports = stackHas;


/***/ }),
/* 1477 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(198),
	    Map = __webpack_require__(298),
	    MapCache = __webpack_require__(299);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var data = this.__data__;
	  if (data instanceof ListCache) {
	    var pairs = data.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      this.size = ++data.size;
	      return this;
	    }
	    data = this.__data__ = new MapCache(pairs);
	  }
	  data.set(key, value);
	  this.size = data.size;
	  return this;
	}
	
	module.exports = stackSet;


/***/ }),
/* 1478 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.indexOf` which performs strict equality
	 * comparisons of values, i.e. `===`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function strictIndexOf(array, value, fromIndex) {
	  var index = fromIndex - 1,
	      length = array.length;
	
	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = strictIndexOf;


/***/ }),
/* 1479 */
/***/ (function(module, exports, __webpack_require__) {

	var asciiToArray = __webpack_require__(1366),
	    hasUnicode = __webpack_require__(1437),
	    unicodeToArray = __webpack_require__(1482);
	
	/**
	 * Converts `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function stringToArray(string) {
	  return hasUnicode(string)
	    ? unicodeToArray(string)
	    : asciiToArray(string);
	}
	
	module.exports = stringToArray;


/***/ }),
/* 1480 */
/***/ (function(module, exports, __webpack_require__) {

	var memoizeCapped = __webpack_require__(1462);
	
	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
	
	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;
	
	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoizeCapped(function(string) {
	  var result = [];
	  if (string.charCodeAt(0) === 46 /* . */) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, subString) {
	    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});
	
	module.exports = stringToPath;


/***/ }),
/* 1481 */
/***/ (function(module, exports) {

	/** Used to match a single whitespace character. */
	var reWhitespace = /\s/;
	
	/**
	 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
	 * character of `string`.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {number} Returns the index of the last non-whitespace character.
	 */
	function trimmedEndIndex(string) {
	  var index = string.length;
	
	  while (index-- && reWhitespace.test(string.charAt(index))) {}
	  return index;
	}
	
	module.exports = trimmedEndIndex;


/***/ }),
/* 1482 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	/**
	 * Converts a Unicode `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function unicodeToArray(string) {
	  return string.match(reUnicode) || [];
	}
	
	module.exports = unicodeToArray;


/***/ }),
/* 1483 */,
/* 1484 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(302),
	    arrayIncludes = __webpack_require__(303);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256,
	    WRAP_FLIP_FLAG = 512;
	
	/** Used to associate wrap methods with their bit flags. */
	var wrapFlags = [
	  ['ary', WRAP_ARY_FLAG],
	  ['bind', WRAP_BIND_FLAG],
	  ['bindKey', WRAP_BIND_KEY_FLAG],
	  ['curry', WRAP_CURRY_FLAG],
	  ['curryRight', WRAP_CURRY_RIGHT_FLAG],
	  ['flip', WRAP_FLIP_FLAG],
	  ['partial', WRAP_PARTIAL_FLAG],
	  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	  ['rearg', WRAP_REARG_FLAG]
	];
	
	/**
	 * Updates wrapper `details` based on `bitmask` flags.
	 *
	 * @private
	 * @returns {Array} details The details to modify.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @returns {Array} Returns `details`.
	 */
	function updateWrapDetails(details, bitmask) {
	  arrayEach(wrapFlags, function(pair) {
	    var value = '_.' + pair[0];
	    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	      details.push(value);
	    }
	  });
	  return details.sort();
	}
	
	module.exports = updateWrapDetails;


/***/ }),
/* 1485 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(297),
	    LodashWrapper = __webpack_require__(465),
	    copyArray = __webpack_require__(203);
	
	/**
	 * Creates a clone of `wrapper`.
	 *
	 * @private
	 * @param {Object} wrapper The wrapper to clone.
	 * @returns {Object} Returns the cloned wrapper.
	 */
	function wrapperClone(wrapper) {
	  if (wrapper instanceof LazyWrapper) {
	    return wrapper.clone();
	  }
	  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	  result.__actions__ = copyArray(wrapper.__actions__);
	  result.__index__  = wrapper.__index__;
	  result.__values__ = wrapper.__values__;
	  return result;
	}
	
	module.exports = wrapperClone;


/***/ }),
/* 1486 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(94),
	    createWrap = __webpack_require__(311),
	    getHolder = __webpack_require__(158),
	    replaceHolders = __webpack_require__(121);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_PARTIAL_FLAG = 32;
	
	/**
	 * Creates a function that invokes `func` with the `this` binding of `thisArg`
	 * and `partials` prepended to the arguments it receives.
	 *
	 * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	 * may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	 * property of bound functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to bind.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new bound function.
	 * @example
	 *
	 * function greet(greeting, punctuation) {
	 *   return greeting + ' ' + this.user + punctuation;
	 * }
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * var bound = _.bind(greet, object, 'hi');
	 * bound('!');
	 * // => 'hi fred!'
	 *
	 * // Bound with placeholders.
	 * var bound = _.bind(greet, object, _, '!');
	 * bound('hi');
	 * // => 'hi fred!'
	 */
	var bind = baseRest(function(func, thisArg, partials) {
	  var bitmask = WRAP_BIND_FLAG;
	  if (partials.length) {
	    var holders = replaceHolders(partials, getHolder(bind));
	    bitmask |= WRAP_PARTIAL_FLAG;
	  }
	  return createWrap(func, bitmask, thisArg, partials, holders);
	});
	
	// Assign default placeholders.
	bind.placeholder = {};
	
	module.exports = bind;


/***/ }),
/* 1487 */
/***/ (function(module, exports) {

	/**
	 * Creates an array with all falsey values removed. The values `false`, `null`,
	 * `0`, `""`, `undefined`, and `NaN` are falsey.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to compact.
	 * @returns {Array} Returns the new array of filtered values.
	 * @example
	 *
	 * _.compact([0, 1, false, 2, '', 3]);
	 * // => [1, 2, 3]
	 */
	function compact(array) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (value) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = compact;


/***/ }),
/* 1488 */,
/* 1489 */
/***/ (function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(1371),
	    baseFlatten = __webpack_require__(475),
	    baseRest = __webpack_require__(94),
	    isArrayLikeObject = __webpack_require__(321);
	
	/**
	 * Creates an array of `array` values not included in the other given arrays
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. The order and references of result values are
	 * determined by the first array.
	 *
	 * **Note:** Unlike `_.pullAll`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...Array} [values] The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 * @see _.without, _.xor
	 * @example
	 *
	 * _.difference([2, 1], [2, 3]);
	 * // => [1]
	 */
	var difference = baseRest(function(array, values) {
	  return isArrayLikeObject(array)
	    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	    : [];
	});
	
	module.exports = difference;


/***/ }),
/* 1490 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFill = __webpack_require__(1372),
	    isIterateeCall = __webpack_require__(206);
	
	/**
	 * Fills elements of `array` with `value` from `start` up to, but not
	 * including, `end`.
	 *
	 * **Note:** This method mutates `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.2.0
	 * @category Array
	 * @param {Array} array The array to fill.
	 * @param {*} value The value to fill `array` with.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns `array`.
	 * @example
	 *
	 * var array = [1, 2, 3];
	 *
	 * _.fill(array, 'a');
	 * console.log(array);
	 * // => ['a', 'a', 'a']
	 *
	 * _.fill(Array(3), 2);
	 * // => [2, 2, 2]
	 *
	 * _.fill([4, 6, 8, 10], '*', 1, 3);
	 * // => [4, '*', '*', 10]
	 */
	function fill(array, value, start, end) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return [];
	  }
	  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	    start = 0;
	    end = length;
	  }
	  return baseFill(array, value, start, end);
	}
	
	module.exports = fill;


/***/ }),
/* 1491 */
/***/ (function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(155),
	    castFunction = __webpack_require__(484);
	
	/**
	 * Iterates over own enumerable string keyed properties of an object and
	 * invokes `iteratee` for each property. The iteratee is invoked with three
	 * arguments: (value, key, object). Iteratee functions may exit iteration
	 * early by explicitly returning `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.3.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 * @see _.forOwnRight
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.forOwn(new Foo, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forOwn(object, iteratee) {
	  return object && baseForOwn(object, castFunction(iteratee));
	}
	
	module.exports = forOwn;


/***/ }),
/* 1492 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(157),
	    isArrayLike = __webpack_require__(72),
	    isString = __webpack_require__(164),
	    toInteger = __webpack_require__(98),
	    values = __webpack_require__(1514);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Checks if `value` is in `collection`. If `collection` is a string, it's
	 * checked for a substring of `value`, otherwise
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * is used for equality comparisons. If `fromIndex` is negative, it's used as
	 * the offset from the end of `collection`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object|string} collection The collection to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	 * @returns {boolean} Returns `true` if `value` is found, else `false`.
	 * @example
	 *
	 * _.includes([1, 2, 3], 1);
	 * // => true
	 *
	 * _.includes([1, 2, 3], 1, 2);
	 * // => false
	 *
	 * _.includes({ 'a': 1, 'b': 2 }, 1);
	 * // => true
	 *
	 * _.includes('abcd', 'bc');
	 * // => true
	 */
	function includes(collection, value, fromIndex, guard) {
	  collection = isArrayLike(collection) ? collection : values(collection);
	  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
	
	  var length = collection.length;
	  if (fromIndex < 0) {
	    fromIndex = nativeMax(length + fromIndex, 0);
	  }
	  return isString(collection)
	    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	}
	
	module.exports = includes;


/***/ }),
/* 1493 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(70),
	    baseIntersection = __webpack_require__(1376),
	    baseRest = __webpack_require__(94),
	    castArrayLikeObject = __webpack_require__(1405);
	
	/**
	 * Creates an array of unique values that are included in all given arrays
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. The order and references of result values are
	 * determined by the first array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {...Array} [arrays] The arrays to inspect.
	 * @returns {Array} Returns the new array of intersecting values.
	 * @example
	 *
	 * _.intersection([2, 1], [2, 3]);
	 * // => [2]
	 */
	var intersection = baseRest(function(arrays) {
	  var mapped = arrayMap(arrays, castArrayLikeObject);
	  return (mapped.length && mapped[0] === arrays[0])
	    ? baseIntersection(mapped)
	    : [];
	});
	
	module.exports = intersection;


/***/ }),
/* 1494 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(33);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsFinite = root.isFinite;
	
	/**
	 * Checks if `value` is a finite primitive number.
	 *
	 * **Note:** This method is based on
	 * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	 * @example
	 *
	 * _.isFinite(3);
	 * // => true
	 *
	 * _.isFinite(Number.MIN_VALUE);
	 * // => true
	 *
	 * _.isFinite(Infinity);
	 * // => false
	 *
	 * _.isFinite('3');
	 * // => false
	 */
	function isFinite(value) {
	  return typeof value == 'number' && nativeIsFinite(value);
	}
	
	module.exports = isFinite;


/***/ }),
/* 1495 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsMap = __webpack_require__(1380),
	    baseUnary = __webpack_require__(118),
	    nodeUtil = __webpack_require__(316);
	
	/* Node.js helper references. */
	var nodeIsMap = nodeUtil && nodeUtil.isMap;
	
	/**
	 * Checks if `value` is classified as a `Map` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	 * @example
	 *
	 * _.isMap(new Map);
	 * // => true
	 *
	 * _.isMap(new WeakMap);
	 * // => false
	 */
	var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
	
	module.exports = isMap;


/***/ }),
/* 1496 */
/***/ (function(module, exports, __webpack_require__) {

	var isNumber = __webpack_require__(515);
	
	/**
	 * Checks if `value` is `NaN`.
	 *
	 * **Note:** This method is based on
	 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	 * `undefined` and other non-number values.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 * @example
	 *
	 * _.isNaN(NaN);
	 * // => true
	 *
	 * _.isNaN(new Number(NaN));
	 * // => true
	 *
	 * isNaN(undefined);
	 * // => true
	 *
	 * _.isNaN(undefined);
	 * // => false
	 */
	function isNaN(value) {
	  // An `NaN` primitive is the only value that is not equal to itself.
	  // Perform the `toStringTag` check first to avoid errors with some
	  // ActiveX objects in IE.
	  return isNumber(value) && value != +value;
	}
	
	module.exports = isNaN;


/***/ }),
/* 1497 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsSet = __webpack_require__(1384),
	    baseUnary = __webpack_require__(118),
	    nodeUtil = __webpack_require__(316);
	
	/* Node.js helper references. */
	var nodeIsSet = nodeUtil && nodeUtil.isSet;
	
	/**
	 * Checks if `value` is classified as a `Set` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	 * @example
	 *
	 * _.isSet(new Set);
	 * // => true
	 *
	 * _.isSet(new WeakSet);
	 * // => false
	 */
	var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
	
	module.exports = isSet;


/***/ }),
/* 1498 */,
/* 1499 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(154),
	    baseForOwn = __webpack_require__(155),
	    baseIteratee = __webpack_require__(57);
	
	/**
	 * The opposite of `_.mapValues`; this method creates an object with the
	 * same values as `object` and keys generated by running each own enumerable
	 * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	 * with three arguments: (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @since 3.8.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns the new mapped object.
	 * @see _.mapValues
	 * @example
	 *
	 * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   return key + value;
	 * });
	 * // => { 'a1': 1, 'b2': 2 }
	 */
	function mapKeys(object, iteratee) {
	  var result = {};
	  iteratee = baseIteratee(iteratee, 3);
	
	  baseForOwn(object, function(value, key, object) {
	    baseAssignValue(result, iteratee(value, key, object), value);
	  });
	  return result;
	}
	
	module.exports = mapKeys;


/***/ }),
/* 1500 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(154),
	    baseForOwn = __webpack_require__(155),
	    baseIteratee = __webpack_require__(57);
	
	/**
	 * Creates an object with the same keys as `object` and values generated
	 * by running each own enumerable string keyed property of `object` thru
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns the new mapped object.
	 * @see _.mapKeys
	 * @example
	 *
	 * var users = {
	 *   'fred':    { 'user': 'fred',    'age': 40 },
	 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	 * };
	 *
	 * _.mapValues(users, function(o) { return o.age; });
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.mapValues(users, 'age');
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 */
	function mapValues(object, iteratee) {
	  var result = {};
	  iteratee = baseIteratee(iteratee, 3);
	
	  baseForOwn(object, function(value, key, object) {
	    baseAssignValue(result, key, iteratee(value, key, object));
	  });
	  return result;
	}
	
	module.exports = mapValues;


/***/ }),
/* 1501 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(299);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;
	
	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result) || cache;
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}
	
	// Expose `MapCache`.
	memoize.Cache = MapCache;
	
	module.exports = memoize;


/***/ }),
/* 1502 */
/***/ (function(module, exports) {

	/**
	 * This method returns `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.3.0
	 * @category Util
	 * @example
	 *
	 * _.times(2, _.noop);
	 * // => [undefined, undefined]
	 */
	function noop() {
	  // No operation performed.
	}
	
	module.exports = noop;


/***/ }),
/* 1503 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(94),
	    createWrap = __webpack_require__(311),
	    getHolder = __webpack_require__(158),
	    replaceHolders = __webpack_require__(121);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_PARTIAL_FLAG = 32;
	
	/**
	 * Creates a function that invokes `func` with `partials` prepended to the
	 * arguments it receives. This method is like `_.bind` except it does **not**
	 * alter the `this` binding.
	 *
	 * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.2.0
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * function greet(greeting, name) {
	 *   return greeting + ' ' + name;
	 * }
	 *
	 * var sayHelloTo = _.partial(greet, 'hello');
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 *
	 * // Partially applied with placeholders.
	 * var greetFred = _.partial(greet, _, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 */
	var partial = baseRest(function(func, partials) {
	  var holders = replaceHolders(partials, getHolder(partial));
	  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
	});
	
	// Assign default placeholders.
	partial.placeholder = {};
	
	module.exports = partial;


/***/ }),
/* 1504 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(94),
	    createWrap = __webpack_require__(311),
	    getHolder = __webpack_require__(158),
	    replaceHolders = __webpack_require__(121);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/**
	 * This method is like `_.partial` except that partially applied arguments
	 * are appended to the arguments it receives.
	 *
	 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.0.0
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * function greet(greeting, name) {
	 *   return greeting + ' ' + name;
	 * }
	 *
	 * var greetFred = _.partialRight(greet, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 *
	 * // Partially applied with placeholders.
	 * var sayHelloTo = _.partialRight(greet, 'hello', _);
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 */
	var partialRight = baseRest(function(func, partials) {
	  var holders = replaceHolders(partials, getHolder(partialRight));
	  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	});
	
	// Assign default placeholders.
	partialRight.placeholder = {};
	
	module.exports = partialRight;


/***/ }),
/* 1505 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(70),
	    baseIteratee = __webpack_require__(57),
	    basePickBy = __webpack_require__(480),
	    getAllKeysIn = __webpack_require__(312);
	
	/**
	 * Creates an object composed of the `object` properties `predicate` returns
	 * truthy for. The predicate is invoked with two arguments: (value, key).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {Function} [predicate=_.identity] The function invoked per property.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pickBy(object, _.isNumber);
	 * // => { 'a': 1, 'c': 3 }
	 */
	function pickBy(object, predicate) {
	  if (object == null) {
	    return {};
	  }
	  var props = arrayMap(getAllKeysIn(object), function(prop) {
	    return [prop];
	  });
	  predicate = baseIteratee(predicate);
	  return basePickBy(object, props, function(value, path) {
	    return predicate(value, path[0]);
	  });
	}
	
	module.exports = pickBy;


/***/ }),
/* 1506 */
/***/ (function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(1393),
	    basePropertyDeep = __webpack_require__(1394),
	    isKey = __webpack_require__(315),
	    toKey = __webpack_require__(122);
	
	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}
	
	module.exports = property;


/***/ }),
/* 1507 */
/***/ (function(module, exports, __webpack_require__) {

	var createRange = __webpack_require__(1427);
	
	/**
	 * Creates an array of numbers (positive and/or negative) progressing from
	 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	 * `start` is specified without an `end` or `step`. If `end` is not specified,
	 * it's set to `start` with `start` then set to `0`.
	 *
	 * **Note:** JavaScript follows the IEEE-754 standard for resolving
	 * floating-point values which can produce unexpected results.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {number} [start=0] The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} [step=1] The value to increment or decrement by.
	 * @returns {Array} Returns the range of numbers.
	 * @see _.inRange, _.rangeRight
	 * @example
	 *
	 * _.range(4);
	 * // => [0, 1, 2, 3]
	 *
	 * _.range(-4);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 5);
	 * // => [1, 2, 3, 4]
	 *
	 * _.range(0, 20, 5);
	 * // => [0, 5, 10, 15]
	 *
	 * _.range(0, -4, -1);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 4, 0);
	 * // => [1, 1, 1]
	 *
	 * _.range(0);
	 * // => []
	 */
	var range = createRange();
	
	module.exports = range;


/***/ }),
/* 1508 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClamp = __webpack_require__(473),
	    baseToString = __webpack_require__(308),
	    toInteger = __webpack_require__(98),
	    toString = __webpack_require__(167);
	
	/**
	 * Checks if `string` starts with the given target string.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to inspect.
	 * @param {string} [target] The string to search for.
	 * @param {number} [position=0] The position to search from.
	 * @returns {boolean} Returns `true` if `string` starts with `target`,
	 *  else `false`.
	 * @example
	 *
	 * _.startsWith('abc', 'a');
	 * // => true
	 *
	 * _.startsWith('abc', 'b');
	 * // => false
	 *
	 * _.startsWith('abc', 'b', 1);
	 * // => true
	 */
	function startsWith(string, target, position) {
	  string = toString(string);
	  position = position == null
	    ? 0
	    : baseClamp(toInteger(position), 0, string.length);
	
	  target = baseToString(target);
	  return string.slice(position, position + target.length) == target;
	}
	
	module.exports = startsWith;


/***/ }),
/* 1509 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ }),
/* 1510 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(57),
	    baseSum = __webpack_require__(1401);
	
	/**
	 * This method is like `_.sum` except that it accepts `iteratee` which is
	 * invoked for each element in `array` to generate the value to be summed.
	 * The iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Math
	 * @param {Array} array The array to iterate over.
	 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	 * @returns {number} Returns the sum.
	 * @example
	 *
	 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	 *
	 * _.sumBy(objects, function(o) { return o.n; });
	 * // => 20
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.sumBy(objects, 'n');
	 * // => 20
	 */
	function sumBy(array, iteratee) {
	  return (array && array.length)
	    ? baseSum(array, baseIteratee(iteratee, 2))
	    : 0;
	}
	
	module.exports = sumBy;


/***/ }),
/* 1511 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClamp = __webpack_require__(473),
	    toInteger = __webpack_require__(98);
	
	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;
	
	/**
	 * Converts `value` to an integer suitable for use as the length of an
	 * array-like object.
	 *
	 * **Note:** This method is based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toLength(3.2);
	 * // => 3
	 *
	 * _.toLength(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toLength(Infinity);
	 * // => 4294967295
	 *
	 * _.toLength('3.2');
	 * // => 3
	 */
	function toLength(value) {
	  return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	}
	
	module.exports = toLength;


/***/ }),
/* 1512 */
/***/ (function(module, exports, __webpack_require__) {

	var baseTrim = __webpack_require__(483),
	    isObject = __webpack_require__(47),
	    isSymbol = __webpack_require__(165);
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = baseTrim(value);
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = toNumber;


/***/ }),
/* 1513 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(120),
	    keysIn = __webpack_require__(126);
	
	/**
	 * Converts `value` to a plain object flattening inherited enumerable string
	 * keyed properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return copyObject(value, keysIn(value));
	}
	
	module.exports = toPlainObject;


/***/ }),
/* 1514 */
/***/ (function(module, exports, __webpack_require__) {

	var baseValues = __webpack_require__(1404),
	    keys = __webpack_require__(58);
	
	/**
	 * Creates an array of the own enumerable string keyed property values of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property values.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.values(new Foo);
	 * // => [1, 2] (iteration order is not guaranteed)
	 *
	 * _.values('hi');
	 * // => ['h', 'i']
	 */
	function values(object) {
	  return object == null ? [] : baseValues(object, keys(object));
	}
	
	module.exports = values;


/***/ }),
/* 1515 */,
/* 1516 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(297),
	    LodashWrapper = __webpack_require__(465),
	    baseLodash = __webpack_require__(307),
	    isArray = __webpack_require__(27),
	    isObjectLike = __webpack_require__(48),
	    wrapperClone = __webpack_require__(1485);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates a `lodash` object which wraps `value` to enable implicit method
	 * chain sequences. Methods that operate on and return arrays, collections,
	 * and functions can be chained together. Methods that retrieve a single value
	 * or may return a primitive value will automatically end the chain sequence
	 * and return the unwrapped value. Otherwise, the value must be unwrapped
	 * with `_#value`.
	 *
	 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	 * enabled using `_.chain`.
	 *
	 * The execution of chained methods is lazy, that is, it's deferred until
	 * `_#value` is implicitly or explicitly called.
	 *
	 * Lazy evaluation allows several methods to support shortcut fusion.
	 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	 * the creation of intermediate arrays and can greatly reduce the number of
	 * iteratee executions. Sections of a chain sequence qualify for shortcut
	 * fusion if the section is applied to an array and iteratees accept only
	 * one argument. The heuristic for whether a section qualifies for shortcut
	 * fusion is subject to change.
	 *
	 * Chaining is supported in custom builds as long as the `_#value` method is
	 * directly or indirectly included in the build.
	 *
	 * In addition to lodash methods, wrappers have `Array` and `String` methods.
	 *
	 * The wrapper `Array` methods are:
	 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	 *
	 * The wrapper `String` methods are:
	 * `replace` and `split`
	 *
	 * The wrapper methods that support shortcut fusion are:
	 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	 *
	 * The chainable wrapper methods are:
	 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	 * `zipObject`, `zipObjectDeep`, and `zipWith`
	 *
	 * The wrapper methods that are **not** chainable by default are:
	 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	 * `upperFirst`, `value`, and `words`
	 *
	 * @name _
	 * @constructor
	 * @category Seq
	 * @param {*} value The value to wrap in a `lodash` instance.
	 * @returns {Object} Returns the new `lodash` wrapper instance.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * var wrapped = _([1, 2, 3]);
	 *
	 * // Returns an unwrapped value.
	 * wrapped.reduce(_.add);
	 * // => 6
	 *
	 * // Returns a wrapped value.
	 * var squares = wrapped.map(square);
	 *
	 * _.isArray(squares);
	 * // => false
	 *
	 * _.isArray(squares.value());
	 * // => true
	 */
	function lodash(value) {
	  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	    if (value instanceof LodashWrapper) {
	      return value;
	    }
	    if (hasOwnProperty.call(value, '__wrapped__')) {
	      return wrapperClone(value);
	    }
	  }
	  return new LodashWrapper(value);
	}
	
	// Ensure wrappers are instances of `baseLodash`.
	lodash.prototype = baseLodash.prototype;
	lodash.prototype.constructor = lodash;
	
	module.exports = lodash;


/***/ }),
/* 1517 */,
/* 1518 */,
/* 1519 */
/***/ (function(module, exports) {

	/**
	 * Helpers.
	 */
	
	var s = 1000;
	var m = s * 60;
	var h = m * 60;
	var d = h * 24;
	var y = d * 365.25;
	
	/**
	 * Parse or format the given `val`.
	 *
	 * Options:
	 *
	 *  - `long` verbose formatting [false]
	 *
	 * @param {String|Number} val
	 * @param {Object} [options]
	 * @throws {Error} throw an error if val is not a non-empty string or a number
	 * @return {String|Number}
	 * @api public
	 */
	
	module.exports = function(val, options) {
	  options = options || {};
	  var type = typeof val;
	  if (type === 'string' && val.length > 0) {
	    return parse(val);
	  } else if (type === 'number' && isNaN(val) === false) {
	    return options.long ? fmtLong(val) : fmtShort(val);
	  }
	  throw new Error(
	    'val is not a non-empty string or a valid number. val=' +
	      JSON.stringify(val)
	  );
	};
	
	/**
	 * Parse the given `str` and return milliseconds.
	 *
	 * @param {String} str
	 * @return {Number}
	 * @api private
	 */
	
	function parse(str) {
	  str = String(str);
	  if (str.length > 100) {
	    return;
	  }
	  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
	    str
	  );
	  if (!match) {
	    return;
	  }
	  var n = parseFloat(match[1]);
	  var type = (match[2] || 'ms').toLowerCase();
	  switch (type) {
	    case 'years':
	    case 'year':
	    case 'yrs':
	    case 'yr':
	    case 'y':
	      return n * y;
	    case 'days':
	    case 'day':
	    case 'd':
	      return n * d;
	    case 'hours':
	    case 'hour':
	    case 'hrs':
	    case 'hr':
	    case 'h':
	      return n * h;
	    case 'minutes':
	    case 'minute':
	    case 'mins':
	    case 'min':
	    case 'm':
	      return n * m;
	    case 'seconds':
	    case 'second':
	    case 'secs':
	    case 'sec':
	    case 's':
	      return n * s;
	    case 'milliseconds':
	    case 'millisecond':
	    case 'msecs':
	    case 'msec':
	    case 'ms':
	      return n;
	    default:
	      return undefined;
	  }
	}
	
	/**
	 * Short format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */
	
	function fmtShort(ms) {
	  if (ms >= d) {
	    return Math.round(ms / d) + 'd';
	  }
	  if (ms >= h) {
	    return Math.round(ms / h) + 'h';
	  }
	  if (ms >= m) {
	    return Math.round(ms / m) + 'm';
	  }
	  if (ms >= s) {
	    return Math.round(ms / s) + 's';
	  }
	  return ms + 'ms';
	}
	
	/**
	 * Long format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */
	
	function fmtLong(ms) {
	  return plural(ms, d, 'day') ||
	    plural(ms, h, 'hour') ||
	    plural(ms, m, 'minute') ||
	    plural(ms, s, 'second') ||
	    ms + ' ms';
	}
	
	/**
	 * Pluralization helper.
	 */
	
	function plural(ms, n, name) {
	  if (ms < n) {
	    return;
	  }
	  if (ms < n * 1.5) {
	    return Math.floor(ms / n) + ' ' + name;
	  }
	  return Math.ceil(ms / n) + ' ' + name + 's';
	}


/***/ }),
/* 1520 */,
/* 1521 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = compile;
	
	var BaseFuncs = __webpack_require__(138),
	    trueFunc  = BaseFuncs.trueFunc,
	    falseFunc = BaseFuncs.falseFunc;
	
	/*
		returns a function that checks if an elements index matches the given rule
		highly optimized to return the fastest solution
	*/
	function compile(parsed){
		var a = parsed[0],
		    b = parsed[1] - 1;
	
		//when b <= 0, a*n won't be possible for any matches when a < 0
		//besides, the specification says that no element is matched when a and b are 0
		if(b < 0 && a <= 0) return falseFunc;
	
		//when a is in the range -1..1, it matches any element (so only b is checked)
		if(a ===-1) return function(pos){ return pos <= b; };
		if(a === 0) return function(pos){ return pos === b; };
		//when b <= 0 and a === 1, they match any element
		if(a === 1) return b < 0 ? trueFunc : function(pos){ return pos >= b; };
	
		//when a > 0, modulo can be used to check if there is a match
		var bMod = b % a;
		if(bMod < 0) bMod += a;
	
		if(a > 1){
			return function(pos){
				return pos >= b && pos % a === bMod;
			};
		}
	
		a *= -1; //make `a` positive
	
		return function(pos){
			return pos <= b && pos % a === bMod;
		};
	}

/***/ }),
/* 1522 */
/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(1523),
	    compile = __webpack_require__(1521);
	
	module.exports = function nthCheck(formula){
		return compile(parse(formula));
	};
	
	module.exports.parse = parse;
	module.exports.compile = compile;

/***/ }),
/* 1523 */
/***/ (function(module, exports) {

	module.exports = parse;
	
	//following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo
	
	//[ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?
	var re_nthElement = /^([+\-]?\d*n)?\s*(?:([+\-]?)\s*(\d+))?$/;
	
	/*
		parses a nth-check formula, returns an array of two numbers
	*/
	function parse(formula){
		formula = formula.trim().toLowerCase();
	
		if(formula === "even"){
			return [2, 0];
		} else if(formula === "odd"){
			return [2, 1];
		} else {
			var parsed = formula.match(re_nthElement);
	
			if(!parsed){
				throw new SyntaxError("n-th rule couldn't be parsed ('" + formula + "')");
			}
	
			var a;
	
			if(parsed[1]){
				a = parseInt(parsed[1], 10);
				if(isNaN(a)){
					if(parsed[1].charAt(0) === "-") a = -1;
					else a = 1;
				}
			} else a = 0;
	
			return [
				a,
				parsed[3] ? parseInt((parsed[2] || "") + parsed[3], 10) : 0
			];
		}
	}


/***/ }),
/* 1524 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var define = __webpack_require__(151);
	var callBind = __webpack_require__(258);
	
	var implementation = __webpack_require__(521);
	var getPolyfill = __webpack_require__(522);
	var shim = __webpack_require__(1525);
	
	var polyfill = callBind(getPolyfill(), Object);
	
	define(polyfill, {
		getPolyfill: getPolyfill,
		implementation: implementation,
		shim: shim
	});
	
	module.exports = polyfill;


/***/ }),
/* 1525 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var getPolyfill = __webpack_require__(522);
	var define = __webpack_require__(151);
	
	module.exports = function shimObjectIs() {
		var polyfill = getPolyfill();
		define(Object, { is: polyfill }, {
			is: function testObjectIs() {
				return Object.is !== polyfill;
			}
		});
		return polyfill;
	};


/***/ }),
/* 1526 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var keysShim;
	if (!Object.keys) {
		// modified from https://github.com/es-shims/es5-shim
		var has = Object.prototype.hasOwnProperty;
		var toStr = Object.prototype.toString;
		var isArgs = __webpack_require__(523); // eslint-disable-line global-require
		var isEnumerable = Object.prototype.propertyIsEnumerable;
		var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
		var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
		var dontEnums = [
			'toString',
			'toLocaleString',
			'valueOf',
			'hasOwnProperty',
			'isPrototypeOf',
			'propertyIsEnumerable',
			'constructor'
		];
		var equalsConstructorPrototype = function (o) {
			var ctor = o.constructor;
			return ctor && ctor.prototype === o;
		};
		var excludedKeys = {
			$applicationCache: true,
			$console: true,
			$external: true,
			$frame: true,
			$frameElement: true,
			$frames: true,
			$innerHeight: true,
			$innerWidth: true,
			$onmozfullscreenchange: true,
			$onmozfullscreenerror: true,
			$outerHeight: true,
			$outerWidth: true,
			$pageXOffset: true,
			$pageYOffset: true,
			$parent: true,
			$scrollLeft: true,
			$scrollTop: true,
			$scrollX: true,
			$scrollY: true,
			$self: true,
			$webkitIndexedDB: true,
			$webkitStorageInfo: true,
			$window: true
		};
		var hasAutomationEqualityBug = (function () {
			/* global window */
			if (typeof window === 'undefined') { return false; }
			for (var k in window) {
				try {
					if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
						try {
							equalsConstructorPrototype(window[k]);
						} catch (e) {
							return true;
						}
					}
				} catch (e) {
					return true;
				}
			}
			return false;
		}());
		var equalsConstructorPrototypeIfNotBuggy = function (o) {
			/* global window */
			if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
				return equalsConstructorPrototype(o);
			}
			try {
				return equalsConstructorPrototype(o);
			} catch (e) {
				return false;
			}
		};
	
		keysShim = function keys(object) {
			var isObject = object !== null && typeof object === 'object';
			var isFunction = toStr.call(object) === '[object Function]';
			var isArguments = isArgs(object);
			var isString = isObject && toStr.call(object) === '[object String]';
			var theKeys = [];
	
			if (!isObject && !isFunction && !isArguments) {
				throw new TypeError('Object.keys called on a non-object');
			}
	
			var skipProto = hasProtoEnumBug && isFunction;
			if (isString && object.length > 0 && !has.call(object, 0)) {
				for (var i = 0; i < object.length; ++i) {
					theKeys.push(String(i));
				}
			}
	
			if (isArguments && object.length > 0) {
				for (var j = 0; j < object.length; ++j) {
					theKeys.push(String(j));
				}
			} else {
				for (var name in object) {
					if (!(skipProto && name === 'prototype') && has.call(object, name)) {
						theKeys.push(String(name));
					}
				}
			}
	
			if (hasDontEnumBug) {
				var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
	
				for (var k = 0; k < dontEnums.length; ++k) {
					if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
						theKeys.push(dontEnums[k]);
					}
				}
			}
			return theKeys;
		};
	}
	module.exports = keysShim;


/***/ }),
/* 1527 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	const doctype = __webpack_require__(214);
	const { DOCUMENT_MODE } = __webpack_require__(53);
	
	//Conversion tables for DOM Level1 structure emulation
	const nodeTypes = {
	    element: 1,
	    text: 3,
	    cdata: 4,
	    comment: 8
	};
	
	const nodePropertyShorthands = {
	    tagName: 'name',
	    childNodes: 'children',
	    parentNode: 'parent',
	    previousSibling: 'prev',
	    nextSibling: 'next',
	    nodeValue: 'data'
	};
	
	//Node
	class Node {
	    constructor(props) {
	        for (const key of Object.keys(props)) {
	            this[key] = props[key];
	        }
	    }
	
	    get firstChild() {
	        const children = this.children;
	
	        return (children && children[0]) || null;
	    }
	
	    get lastChild() {
	        const children = this.children;
	
	        return (children && children[children.length - 1]) || null;
	    }
	
	    get nodeType() {
	        return nodeTypes[this.type] || nodeTypes.element;
	    }
	}
	
	Object.keys(nodePropertyShorthands).forEach(key => {
	    const shorthand = nodePropertyShorthands[key];
	
	    Object.defineProperty(Node.prototype, key, {
	        get: function() {
	            return this[shorthand] || null;
	        },
	        set: function(val) {
	            this[shorthand] = val;
	            return val;
	        }
	    });
	});
	
	//Node construction
	exports.createDocument = function() {
	    return new Node({
	        type: 'root',
	        name: 'root',
	        parent: null,
	        prev: null,
	        next: null,
	        children: [],
	        'x-mode': DOCUMENT_MODE.NO_QUIRKS
	    });
	};
	
	exports.createDocumentFragment = function() {
	    return new Node({
	        type: 'root',
	        name: 'root',
	        parent: null,
	        prev: null,
	        next: null,
	        children: []
	    });
	};
	
	exports.createElement = function(tagName, namespaceURI, attrs) {
	    const attribs = Object.create(null);
	    const attribsNamespace = Object.create(null);
	    const attribsPrefix = Object.create(null);
	
	    for (let i = 0; i < attrs.length; i++) {
	        const attrName = attrs[i].name;
	
	        attribs[attrName] = attrs[i].value;
	        attribsNamespace[attrName] = attrs[i].namespace;
	        attribsPrefix[attrName] = attrs[i].prefix;
	    }
	
	    return new Node({
	        type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',
	        name: tagName,
	        namespace: namespaceURI,
	        attribs: attribs,
	        'x-attribsNamespace': attribsNamespace,
	        'x-attribsPrefix': attribsPrefix,
	        children: [],
	        parent: null,
	        prev: null,
	        next: null
	    });
	};
	
	exports.createCommentNode = function(data) {
	    return new Node({
	        type: 'comment',
	        data: data,
	        parent: null,
	        prev: null,
	        next: null
	    });
	};
	
	const createTextNode = function(value) {
	    return new Node({
	        type: 'text',
	        data: value,
	        parent: null,
	        prev: null,
	        next: null
	    });
	};
	
	//Tree mutation
	const appendChild = (exports.appendChild = function(parentNode, newNode) {
	    const prev = parentNode.children[parentNode.children.length - 1];
	
	    if (prev) {
	        prev.next = newNode;
	        newNode.prev = prev;
	    }
	
	    parentNode.children.push(newNode);
	    newNode.parent = parentNode;
	});
	
	const insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {
	    const insertionIdx = parentNode.children.indexOf(referenceNode);
	    const prev = referenceNode.prev;
	
	    if (prev) {
	        prev.next = newNode;
	        newNode.prev = prev;
	    }
	
	    referenceNode.prev = newNode;
	    newNode.next = referenceNode;
	
	    parentNode.children.splice(insertionIdx, 0, newNode);
	    newNode.parent = parentNode;
	});
	
	exports.setTemplateContent = function(templateElement, contentElement) {
	    appendChild(templateElement, contentElement);
	};
	
	exports.getTemplateContent = function(templateElement) {
	    return templateElement.children[0];
	};
	
	exports.setDocumentType = function(document, name, publicId, systemId) {
	    const data = doctype.serializeContent(name, publicId, systemId);
	    let doctypeNode = null;
	
	    for (let i = 0; i < document.children.length; i++) {
	        if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {
	            doctypeNode = document.children[i];
	            break;
	        }
	    }
	
	    if (doctypeNode) {
	        doctypeNode.data = data;
	        doctypeNode['x-name'] = name;
	        doctypeNode['x-publicId'] = publicId;
	        doctypeNode['x-systemId'] = systemId;
	    } else {
	        appendChild(
	            document,
	            new Node({
	                type: 'directive',
	                name: '!doctype',
	                data: data,
	                'x-name': name,
	                'x-publicId': publicId,
	                'x-systemId': systemId
	            })
	        );
	    }
	};
	
	exports.setDocumentMode = function(document, mode) {
	    document['x-mode'] = mode;
	};
	
	exports.getDocumentMode = function(document) {
	    return document['x-mode'];
	};
	
	exports.detachNode = function(node) {
	    if (node.parent) {
	        const idx = node.parent.children.indexOf(node);
	        const prev = node.prev;
	        const next = node.next;
	
	        node.prev = null;
	        node.next = null;
	
	        if (prev) {
	            prev.next = next;
	        }
	
	        if (next) {
	            next.prev = prev;
	        }
	
	        node.parent.children.splice(idx, 1);
	        node.parent = null;
	    }
	};
	
	exports.insertText = function(parentNode, text) {
	    const lastChild = parentNode.children[parentNode.children.length - 1];
	
	    if (lastChild && lastChild.type === 'text') {
	        lastChild.data += text;
	    } else {
	        appendChild(parentNode, createTextNode(text));
	    }
	};
	
	exports.insertTextBefore = function(parentNode, text, referenceNode) {
	    const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];
	
	    if (prevNode && prevNode.type === 'text') {
	        prevNode.data += text;
	    } else {
	        insertBefore(parentNode, createTextNode(text), referenceNode);
	    }
	};
	
	exports.adoptAttributes = function(recipient, attrs) {
	    for (let i = 0; i < attrs.length; i++) {
	        const attrName = attrs[i].name;
	
	        if (typeof recipient.attribs[attrName] === 'undefined') {
	            recipient.attribs[attrName] = attrs[i].value;
	            recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;
	            recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;
	        }
	    }
	};
	
	//Tree traversing
	exports.getFirstChild = function(node) {
	    return node.children[0];
	};
	
	exports.getChildNodes = function(node) {
	    return node.children;
	};
	
	exports.getParentNode = function(node) {
	    return node.parent;
	};
	
	exports.getAttrList = function(element) {
	    const attrList = [];
	
	    for (const name in element.attribs) {
	        attrList.push({
	            name: name,
	            value: element.attribs[name],
	            namespace: element['x-attribsNamespace'][name],
	            prefix: element['x-attribsPrefix'][name]
	        });
	    }
	
	    return attrList;
	};
	
	//Node data
	exports.getTagName = function(element) {
	    return element.name;
	};
	
	exports.getNamespaceURI = function(element) {
	    return element.namespace;
	};
	
	exports.getTextNodeContent = function(textNode) {
	    return textNode.data;
	};
	
	exports.getCommentNodeContent = function(commentNode) {
	    return commentNode.data;
	};
	
	exports.getDocumentTypeNodeName = function(doctypeNode) {
	    return doctypeNode['x-name'];
	};
	
	exports.getDocumentTypeNodePublicId = function(doctypeNode) {
	    return doctypeNode['x-publicId'];
	};
	
	exports.getDocumentTypeNodeSystemId = function(doctypeNode) {
	    return doctypeNode['x-systemId'];
	};
	
	//Node types
	exports.isTextNode = function(node) {
	    return node.type === 'text';
	};
	
	exports.isCommentNode = function(node) {
	    return node.type === 'comment';
	};
	
	exports.isDocumentTypeNode = function(node) {
	    return node.type === 'directive' && node.name === '!doctype';
	};
	
	exports.isElementNode = function(node) {
	    return !!node.attribs;
	};
	
	// Source code location
	exports.setNodeSourceCodeLocation = function(node, location) {
	    node.sourceCodeLocation = location;
	};
	
	exports.getNodeSourceCodeLocation = function(node) {
	    return node.sourceCodeLocation;
	};
	
	exports.updateNodeSourceCodeLocation = function(node, endLocation) {
	    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);
	};


/***/ }),
/* 1528 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Mixin = __webpack_require__(215),
	    inherits = __webpack_require__(60).inherits;
	
	var LocationInfoOpenElementStackMixin = module.exports = function (stack, options) {
	    Mixin.call(this, stack);
	
	    this.onItemPop = options.onItemPop;
	};
	
	inherits(LocationInfoOpenElementStackMixin, Mixin);
	
	LocationInfoOpenElementStackMixin.prototype._getOverriddenMethods = function (mxn, orig) {
	    return {
	        pop: function () {
	            mxn.onItemPop(this.current);
	            orig.pop.call(this);
	        },
	
	        popAllUpToHtmlElement: function () {
	            for (var i = this.stackTop; i > 0; i--)
	                mxn.onItemPop(this.items[i]);
	
	            orig.popAllUpToHtmlElement.call(this);
	        },
	
	        remove: function (element) {
	            mxn.onItemPop(this.current);
	            orig.remove.call(this, element);
	        }
	    };
	};
	


/***/ }),
/* 1529 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Mixin = __webpack_require__(215),
	    Tokenizer = __webpack_require__(127),
	    LocationInfoTokenizerMixin = __webpack_require__(525),
	    PositionTrackingPreprocessorMixin = __webpack_require__(526),
	    LocationInfoOpenElementStackMixin = __webpack_require__(1528),
	    HTML = __webpack_require__(53),
	    inherits = __webpack_require__(60).inherits;
	
	
	//Aliases
	var $ = HTML.TAG_NAMES;
	
	var LocationInfoParserMixin = module.exports = function (parser) {
	    Mixin.call(this, parser);
	
	    this.parser = parser;
	    this.posTracker = null;
	    this.lastStartTagToken = null;
	    this.lastFosterParentingLocation = null;
	    this.currentToken = null;
	};
	
	inherits(LocationInfoParserMixin, Mixin);
	
	
	LocationInfoParserMixin.prototype._setStartLocation = function (element) {
	    if (this.lastStartTagToken) {
	        element.__location = Object.create(this.lastStartTagToken.location);
	        element.__location.startTag = this.lastStartTagToken.location;
	    }
	    else
	        element.__location = null;
	};
	
	LocationInfoParserMixin.prototype._setEndLocation = function (element, closingToken) {
	    var loc = element.__location;
	
	    if (loc) {
	        if (closingToken.location) {
	            var ctLoc = closingToken.location,
	                tn = this.parser.treeAdapter.getTagName(element);
	
	            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing
	            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.
	            var isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;
	
	            if (isClosingEndTag) {
	                loc.endTag = Object.create(ctLoc);
	                loc.endOffset = ctLoc.endOffset;
	            }
	
	            else
	                loc.endOffset = ctLoc.startOffset;
	        }
	
	        else if (closingToken.type === Tokenizer.EOF_TOKEN)
	            loc.endOffset = this.posTracker.offset;
	    }
	};
	
	LocationInfoParserMixin.prototype._getOverriddenMethods = function (mxn, orig) {
	    return {
	        _bootstrap: function (document, fragmentContext) {
	            orig._bootstrap.call(this, document, fragmentContext);
	
	            mxn.lastStartTagToken = null;
	            mxn.lastFosterParentingLocation = null;
	            mxn.currentToken = null;
	            mxn.posTracker = new PositionTrackingPreprocessorMixin(this.tokenizer.preprocessor);
	
	            new LocationInfoTokenizerMixin(this.tokenizer);
	
	            new LocationInfoOpenElementStackMixin(this.openElements, {
	                onItemPop: function (element) {
	                    mxn._setEndLocation(element, mxn.currentToken);
	                }
	            });
	        },
	
	        _runParsingLoop: function (scriptHandler) {
	            orig._runParsingLoop.call(this, scriptHandler);
	
	            // NOTE: generate location info for elements
	            // that remains on open element stack
	            for (var i = this.openElements.stackTop; i >= 0; i--)
	                mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);
	        },
	
	
	        //Token processing
	        _processTokenInForeignContent: function (token) {
	            mxn.currentToken = token;
	            orig._processTokenInForeignContent.call(this, token);
	        },
	
	        _processToken: function (token) {
	            mxn.currentToken = token;
	            orig._processToken.call(this, token);
	
	            //NOTE: <body> and <html> are never popped from the stack, so we need to updated
	            //their end location explicitly.
	            var requireExplicitUpdate = token.type === Tokenizer.END_TAG_TOKEN &&
	                                        (token.tagName === $.HTML ||
	                                         token.tagName === $.BODY && this.openElements.hasInScope($.BODY));
	
	            if (requireExplicitUpdate) {
	                for (var i = this.openElements.stackTop; i >= 0; i--) {
	                    var element = this.openElements.items[i];
	
	                    if (this.treeAdapter.getTagName(element) === token.tagName) {
	                        mxn._setEndLocation(element, token);
	                        break;
	                    }
	                }
	            }
	        },
	
	
	        //Doctype
	        _setDocumentType: function (token) {
	            orig._setDocumentType.call(this, token);
	
	            var documentChildren = this.treeAdapter.getChildNodes(this.document),
	                cnLength = documentChildren.length;
	
	            for (var i = 0; i < cnLength; i++) {
	                var node = documentChildren[i];
	
	                if (this.treeAdapter.isDocumentTypeNode(node)) {
	                    node.__location = token.location;
	                    break;
	                }
	            }
	        },
	
	
	        //Elements
	        _attachElementToTree: function (element) {
	            //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.
	            //So we will use token location stored in this methods for the element.
	            mxn._setStartLocation(element);
	            mxn.lastStartTagToken = null;
	            orig._attachElementToTree.call(this, element);
	        },
	
	        _appendElement: function (token, namespaceURI) {
	            mxn.lastStartTagToken = token;
	            orig._appendElement.call(this, token, namespaceURI);
	        },
	
	        _insertElement: function (token, namespaceURI) {
	            mxn.lastStartTagToken = token;
	            orig._insertElement.call(this, token, namespaceURI);
	        },
	
	        _insertTemplate: function (token) {
	            mxn.lastStartTagToken = token;
	            orig._insertTemplate.call(this, token);
	
	            var tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);
	
	            tmplContent.__location = null;
	        },
	
	        _insertFakeRootElement: function () {
	            orig._insertFakeRootElement.call(this);
	            this.openElements.current.__location = null;
	        },
	
	        //Comments
	        _appendCommentNode: function (token, parent) {
	            orig._appendCommentNode.call(this, token, parent);
	
	            var children = this.treeAdapter.getChildNodes(parent),
	                commentNode = children[children.length - 1];
	
	            commentNode.__location = token.location;
	        },
	
	        //Text
	        _findFosterParentingLocation: function () {
	            //NOTE: store last foster parenting location, so we will be able to find inserted text
	            //in case of foster parenting
	            mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);
	
	            return mxn.lastFosterParentingLocation;
	        },
	
	        _insertCharacters: function (token) {
	            orig._insertCharacters.call(this, token);
	
	            var hasFosterParent = this._shouldFosterParentOnInsertion(),
	                parent = hasFosterParent && mxn.lastFosterParentingLocation.parent ||
	                         this.openElements.currentTmplContent ||
	                         this.openElements.current,
	                siblings = this.treeAdapter.getChildNodes(parent),
	                textNodeIdx = hasFosterParent && mxn.lastFosterParentingLocation.beforeElement ?
	                siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1 :
	                siblings.length - 1,
	                textNode = siblings[textNodeIdx];
	
	            //NOTE: if we have location assigned by another token, then just update end position
	            if (textNode.__location)
	                textNode.__location.endOffset = token.location.endOffset;
	
	            else
	                textNode.__location = token.location;
	        }
	    };
	};
	


/***/ }),
/* 1530 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Parser = __webpack_require__(527),
	    Serializer = __webpack_require__(529);
	
	
	// Shorthands
	exports.parse = function parse(html, options) {
	    var parser = new Parser(options);
	
	    return parser.parse(html);
	};
	
	exports.parseFragment = function parseFragment(fragmentContext, html, options) {
	    if (typeof fragmentContext === 'string') {
	        options = html;
	        html = fragmentContext;
	        fragmentContext = null;
	    }
	
	    var parser = new Parser(options);
	
	    return parser.parseFragment(html, fragmentContext);
	};
	
	exports.serialize = function (node, options) {
	    var serializer = new Serializer(node, options);
	
	    return serializer.serialize();
	};
	
	
	// Tree adapters
	exports.treeAdapters = {
	    default: __webpack_require__(327),
	    htmlparser2: __webpack_require__(1540)
	};
	
	
	// Streaming
	exports.ParserStream = __webpack_require__(528);
	exports.PlainTextConversionStream = __webpack_require__(1533);
	exports.SerializerStream = __webpack_require__(1537);
	exports.SAXParser = __webpack_require__(1535);


/***/ }),
/* 1531 */
/***/ (function(module, exports) {

	'use strict';
	
	//Const
	var NOAH_ARK_CAPACITY = 3;
	
	//List of formatting elements
	var FormattingElementList = module.exports = function (treeAdapter) {
	    this.length = 0;
	    this.entries = [];
	    this.treeAdapter = treeAdapter;
	    this.bookmark = null;
	};
	
	//Entry types
	FormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';
	FormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';
	
	//Noah Ark's condition
	//OPTIMIZATION: at first we try to find possible candidates for exclusion using
	//lightweight heuristics without thorough attributes check.
	FormattingElementList.prototype._getNoahArkConditionCandidates = function (newElement) {
	    var candidates = [];
	
	    if (this.length >= NOAH_ARK_CAPACITY) {
	        var neAttrsLength = this.treeAdapter.getAttrList(newElement).length,
	            neTagName = this.treeAdapter.getTagName(newElement),
	            neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);
	
	        for (var i = this.length - 1; i >= 0; i--) {
	            var entry = this.entries[i];
	
	            if (entry.type === FormattingElementList.MARKER_ENTRY)
	                break;
	
	            var element = entry.element,
	                elementAttrs = this.treeAdapter.getAttrList(element),
	                isCandidate = this.treeAdapter.getTagName(element) === neTagName &&
	                              this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&
	                              elementAttrs.length === neAttrsLength;
	
	            if (isCandidate)
	                candidates.push({idx: i, attrs: elementAttrs});
	        }
	    }
	
	    return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;
	};
	
	FormattingElementList.prototype._ensureNoahArkCondition = function (newElement) {
	    var candidates = this._getNoahArkConditionCandidates(newElement),
	        cLength = candidates.length;
	
	    if (cLength) {
	        var neAttrs = this.treeAdapter.getAttrList(newElement),
	            neAttrsLength = neAttrs.length,
	            neAttrsMap = Object.create(null);
	
	        //NOTE: build attrs map for the new element so we can perform fast lookups
	        for (var i = 0; i < neAttrsLength; i++) {
	            var neAttr = neAttrs[i];
	
	            neAttrsMap[neAttr.name] = neAttr.value;
	        }
	
	        for (i = 0; i < neAttrsLength; i++) {
	            for (var j = 0; j < cLength; j++) {
	                var cAttr = candidates[j].attrs[i];
	
	                if (neAttrsMap[cAttr.name] !== cAttr.value) {
	                    candidates.splice(j, 1);
	                    cLength--;
	                }
	
	                if (candidates.length < NOAH_ARK_CAPACITY)
	                    return;
	            }
	        }
	
	        //NOTE: remove bottommost candidates until Noah's Ark condition will not be met
	        for (i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {
	            this.entries.splice(candidates[i].idx, 1);
	            this.length--;
	        }
	    }
	};
	
	//Mutations
	FormattingElementList.prototype.insertMarker = function () {
	    this.entries.push({type: FormattingElementList.MARKER_ENTRY});
	    this.length++;
	};
	
	FormattingElementList.prototype.pushElement = function (element, token) {
	    this._ensureNoahArkCondition(element);
	
	    this.entries.push({
	        type: FormattingElementList.ELEMENT_ENTRY,
	        element: element,
	        token: token
	    });
	
	    this.length++;
	};
	
	FormattingElementList.prototype.insertElementAfterBookmark = function (element, token) {
	    var bookmarkIdx = this.length - 1;
	
	    for (; bookmarkIdx >= 0; bookmarkIdx--) {
	        if (this.entries[bookmarkIdx] === this.bookmark)
	            break;
	    }
	
	    this.entries.splice(bookmarkIdx + 1, 0, {
	        type: FormattingElementList.ELEMENT_ENTRY,
	        element: element,
	        token: token
	    });
	
	    this.length++;
	};
	
	FormattingElementList.prototype.removeEntry = function (entry) {
	    for (var i = this.length - 1; i >= 0; i--) {
	        if (this.entries[i] === entry) {
	            this.entries.splice(i, 1);
	            this.length--;
	            break;
	        }
	    }
	};
	
	FormattingElementList.prototype.clearToLastMarker = function () {
	    while (this.length) {
	        var entry = this.entries.pop();
	
	        this.length--;
	
	        if (entry.type === FormattingElementList.MARKER_ENTRY)
	            break;
	    }
	};
	
	//Search
	FormattingElementList.prototype.getElementEntryInScopeWithTagName = function (tagName) {
	    for (var i = this.length - 1; i >= 0; i--) {
	        var entry = this.entries[i];
	
	        if (entry.type === FormattingElementList.MARKER_ENTRY)
	            return null;
	
	        if (this.treeAdapter.getTagName(entry.element) === tagName)
	            return entry;
	    }
	
	    return null;
	};
	
	FormattingElementList.prototype.getElementEntry = function (element) {
	    for (var i = this.length - 1; i >= 0; i--) {
	        var entry = this.entries[i];
	
	        if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element)
	            return entry;
	    }
	
	    return null;
	};


/***/ }),
/* 1532 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var HTML = __webpack_require__(53);
	
	//Aliases
	var $ = HTML.TAG_NAMES,
	    NS = HTML.NAMESPACES;
	
	//Element utils
	
	//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
	//It's faster than using dictionary.
	function isImpliedEndTagRequired(tn) {
	    switch (tn.length) {
	        case 1:
	            return tn === $.P;
	
	        case 2:
	            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;
	
	        case 3:
	            return tn === $.RTC;
	
	        case 6:
	            return tn === $.OPTION;
	
	        case 8:
	            return tn === $.OPTGROUP || tn === $.MENUITEM;
	    }
	
	    return false;
	}
	
	function isScopingElement(tn, ns) {
	    switch (tn.length) {
	        case 2:
	            if (tn === $.TD || tn === $.TH)
	                return ns === NS.HTML;
	
	            else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS)
	                return ns === NS.MATHML;
	
	            break;
	
	        case 4:
	            if (tn === $.HTML)
	                return ns === NS.HTML;
	
	            else if (tn === $.DESC)
	                return ns === NS.SVG;
	
	            break;
	
	        case 5:
	            if (tn === $.TABLE)
	                return ns === NS.HTML;
	
	            else if (tn === $.MTEXT)
	                return ns === NS.MATHML;
	
	            else if (tn === $.TITLE)
	                return ns === NS.SVG;
	
	            break;
	
	        case 6:
	            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;
	
	        case 7:
	            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;
	
	        case 8:
	            return tn === $.TEMPLATE && ns === NS.HTML;
	
	        case 13:
	            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;
	
	        case 14:
	            return tn === $.ANNOTATION_XML && ns === NS.MATHML;
	    }
	
	    return false;
	}
	
	//Stack of open elements
	var OpenElementStack = module.exports = function (document, treeAdapter) {
	    this.stackTop = -1;
	    this.items = [];
	    this.current = document;
	    this.currentTagName = null;
	    this.currentTmplContent = null;
	    this.tmplCount = 0;
	    this.treeAdapter = treeAdapter;
	};
	
	//Index of element
	OpenElementStack.prototype._indexOf = function (element) {
	    var idx = -1;
	
	    for (var i = this.stackTop; i >= 0; i--) {
	        if (this.items[i] === element) {
	            idx = i;
	            break;
	        }
	    }
	    return idx;
	};
	
	//Update current element
	OpenElementStack.prototype._isInTemplate = function () {
	    return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;
	};
	
	OpenElementStack.prototype._updateCurrentElement = function () {
	    this.current = this.items[this.stackTop];
	    this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);
	
	    this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;
	};
	
	//Mutations
	OpenElementStack.prototype.push = function (element) {
	    this.items[++this.stackTop] = element;
	    this._updateCurrentElement();
	
	    if (this._isInTemplate())
	        this.tmplCount++;
	
	};
	
	OpenElementStack.prototype.pop = function () {
	    this.stackTop--;
	
	    if (this.tmplCount > 0 && this._isInTemplate())
	        this.tmplCount--;
	
	    this._updateCurrentElement();
	};
	
	OpenElementStack.prototype.replace = function (oldElement, newElement) {
	    var idx = this._indexOf(oldElement);
	
	    this.items[idx] = newElement;
	
	    if (idx === this.stackTop)
	        this._updateCurrentElement();
	};
	
	OpenElementStack.prototype.insertAfter = function (referenceElement, newElement) {
	    var insertionIdx = this._indexOf(referenceElement) + 1;
	
	    this.items.splice(insertionIdx, 0, newElement);
	
	    if (insertionIdx === ++this.stackTop)
	        this._updateCurrentElement();
	};
	
	OpenElementStack.prototype.popUntilTagNamePopped = function (tagName) {
	    while (this.stackTop > -1) {
	        var tn = this.currentTagName,
	            ns = this.treeAdapter.getNamespaceURI(this.current);
	
	        this.pop();
	
	        if (tn === tagName && ns === NS.HTML)
	            break;
	    }
	};
	
	OpenElementStack.prototype.popUntilElementPopped = function (element) {
	    while (this.stackTop > -1) {
	        var poppedElement = this.current;
	
	        this.pop();
	
	        if (poppedElement === element)
	            break;
	    }
	};
	
	OpenElementStack.prototype.popUntilNumberedHeaderPopped = function () {
	    while (this.stackTop > -1) {
	        var tn = this.currentTagName,
	            ns = this.treeAdapter.getNamespaceURI(this.current);
	
	        this.pop();
	
	        if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6 && ns === NS.HTML)
	            break;
	    }
	};
	
	OpenElementStack.prototype.popUntilTableCellPopped = function () {
	    while (this.stackTop > -1) {
	        var tn = this.currentTagName,
	            ns = this.treeAdapter.getNamespaceURI(this.current);
	
	        this.pop();
	
	        if (tn === $.TD || tn === $.TH && ns === NS.HTML)
	            break;
	    }
	};
	
	OpenElementStack.prototype.popAllUpToHtmlElement = function () {
	    //NOTE: here we assume that root <html> element is always first in the open element stack, so
	    //we perform this fast stack clean up.
	    this.stackTop = 0;
	    this._updateCurrentElement();
	};
	
	OpenElementStack.prototype.clearBackToTableContext = function () {
	    while (this.currentTagName !== $.TABLE &&
	           this.currentTagName !== $.TEMPLATE &&
	           this.currentTagName !== $.HTML ||
	           this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML)
	        this.pop();
	};
	
	OpenElementStack.prototype.clearBackToTableBodyContext = function () {
	    while (this.currentTagName !== $.TBODY &&
	           this.currentTagName !== $.TFOOT &&
	           this.currentTagName !== $.THEAD &&
	           this.currentTagName !== $.TEMPLATE &&
	           this.currentTagName !== $.HTML ||
	           this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML)
	        this.pop();
	};
	
	OpenElementStack.prototype.clearBackToTableRowContext = function () {
	    while (this.currentTagName !== $.TR &&
	           this.currentTagName !== $.TEMPLATE &&
	           this.currentTagName !== $.HTML ||
	           this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML)
	        this.pop();
	};
	
	OpenElementStack.prototype.remove = function (element) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        if (this.items[i] === element) {
	            this.items.splice(i, 1);
	            this.stackTop--;
	            this._updateCurrentElement();
	            break;
	        }
	    }
	};
	
	//Search
	OpenElementStack.prototype.tryPeekProperlyNestedBodyElement = function () {
	    //Properly nested <body> element (should be second element in stack).
	    var element = this.items[1];
	
	    return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;
	};
	
	OpenElementStack.prototype.contains = function (element) {
	    return this._indexOf(element) > -1;
	};
	
	OpenElementStack.prototype.getCommonAncestor = function (element) {
	    var elementIdx = this._indexOf(element);
	
	    return --elementIdx >= 0 ? this.items[elementIdx] : null;
	};
	
	OpenElementStack.prototype.isRootHtmlElementCurrent = function () {
	    return this.stackTop === 0 && this.currentTagName === $.HTML;
	};
	
	//Element in scope
	OpenElementStack.prototype.hasInScope = function (tagName) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]),
	            ns = this.treeAdapter.getNamespaceURI(this.items[i]);
	
	        if (tn === tagName && ns === NS.HTML)
	            return true;
	
	        if (isScopingElement(tn, ns))
	            return false;
	    }
	
	    return true;
	};
	
	OpenElementStack.prototype.hasNumberedHeaderInScope = function () {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]),
	            ns = this.treeAdapter.getNamespaceURI(this.items[i]);
	
	        if ((tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) && ns === NS.HTML)
	            return true;
	
	        if (isScopingElement(tn, ns))
	            return false;
	    }
	
	    return true;
	};
	
	OpenElementStack.prototype.hasInListItemScope = function (tagName) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]),
	            ns = this.treeAdapter.getNamespaceURI(this.items[i]);
	
	        if (tn === tagName && ns === NS.HTML)
	            return true;
	
	        if ((tn === $.UL || tn === $.OL) && ns === NS.HTML || isScopingElement(tn, ns))
	            return false;
	    }
	
	    return true;
	};
	
	OpenElementStack.prototype.hasInButtonScope = function (tagName) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]),
	            ns = this.treeAdapter.getNamespaceURI(this.items[i]);
	
	        if (tn === tagName && ns === NS.HTML)
	            return true;
	
	        if (tn === $.BUTTON && ns === NS.HTML || isScopingElement(tn, ns))
	            return false;
	    }
	
	    return true;
	};
	
	OpenElementStack.prototype.hasInTableScope = function (tagName) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]),
	            ns = this.treeAdapter.getNamespaceURI(this.items[i]);
	
	        if (ns !== NS.HTML)
	            continue;
	
	        if (tn === tagName)
	            return true;
	
	        if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML)
	            return false;
	    }
	
	    return true;
	};
	
	OpenElementStack.prototype.hasTableBodyContextInTableScope = function () {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]),
	            ns = this.treeAdapter.getNamespaceURI(this.items[i]);
	
	        if (ns !== NS.HTML)
	            continue;
	
	        if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT)
	            return true;
	
	        if (tn === $.TABLE || tn === $.HTML)
	            return false;
	    }
	
	    return true;
	};
	
	OpenElementStack.prototype.hasInSelectScope = function (tagName) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]),
	            ns = this.treeAdapter.getNamespaceURI(this.items[i]);
	
	        if (ns !== NS.HTML)
	            continue;
	
	        if (tn === tagName)
	            return true;
	
	        if (tn !== $.OPTION && tn !== $.OPTGROUP)
	            return false;
	    }
	
	    return true;
	};
	
	//Implied end tags
	OpenElementStack.prototype.generateImpliedEndTags = function () {
	    while (isImpliedEndTagRequired(this.currentTagName))
	        this.pop();
	};
	
	OpenElementStack.prototype.generateImpliedEndTagsWithExclusion = function (exclusionTagName) {
	    while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName)
	        this.pop();
	};


/***/ }),
/* 1533 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ParserStream = __webpack_require__(528),
	    inherits = __webpack_require__(60).inherits,
	    $ = __webpack_require__(53).TAG_NAMES;
	
	var PlainTextConversionStream = module.exports = function (options) {
	    ParserStream.call(this, options);
	
	    // NOTE: see https://html.spec.whatwg.org/#read-text
	    this.parser._insertFakeElement($.HTML);
	    this.parser._insertFakeElement($.HEAD);
	    this.parser.openElements.pop();
	    this.parser._insertFakeElement($.BODY);
	    this.parser._insertFakeElement($.PRE);
	    this.parser.treeAdapter.insertText(this.parser.openElements.current, '\n');
	    this.parser.switchToPlaintextParsing();
	};
	
	inherits(PlainTextConversionStream, ParserStream);


/***/ }),
/* 1534 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var WritableStream = __webpack_require__(220).Writable,
	    util = __webpack_require__(60);
	
	var DevNullStream = module.exports = function () {
	    WritableStream.call(this);
	};
	
	util.inherits(DevNullStream, WritableStream);
	
	DevNullStream.prototype._write = function (chunk, encoding, cb) {
	    cb();
	};


/***/ }),
/* 1535 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var TransformStream = __webpack_require__(220).Transform,
	    DevNullStream = __webpack_require__(1534),
	    inherits = __webpack_require__(60).inherits,
	    Tokenizer = __webpack_require__(127),
	    LocationInfoTokenizerMixin = __webpack_require__(525),
	    ParserFeedbackSimulator = __webpack_require__(1536),
	    mergeOptions = __webpack_require__(328);
	
	var DEFAULT_OPTIONS = {
	    locationInfo: false
	};
	
	var SAXParser = module.exports = function (options) {
	    TransformStream.call(this);
	
	    this.options = mergeOptions(DEFAULT_OPTIONS, options);
	
	    this.tokenizer = new Tokenizer(options);
	
	    if (this.options.locationInfo)
	        new LocationInfoTokenizerMixin(this.tokenizer);
	
	    this.parserFeedbackSimulator = new ParserFeedbackSimulator(this.tokenizer);
	
	    this.pendingText = null;
	    this.currentTokenLocation = void 0;
	
	    this.lastChunkWritten = false;
	    this.stopped = false;
	
	    // NOTE: always pipe stream to the /dev/null stream to avoid
	    // `highWaterMark` hit even if we don't have consumers.
	    // (see: https://github.com/inikulin/parse5/issues/97#issuecomment-171940774)
	    this.pipe(new DevNullStream());
	};
	
	inherits(SAXParser, TransformStream);
	
	//TransformStream implementation
	SAXParser.prototype._transform = function (chunk, encoding, callback) {
	    if (!this.stopped) {
	        this.tokenizer.write(chunk.toString('utf8'), this.lastChunkWritten);
	        this._runParsingLoop();
	    }
	
	    this.push(chunk);
	
	    callback();
	};
	
	SAXParser.prototype._flush = function (callback) {
	    callback();
	};
	
	SAXParser.prototype.end = function (chunk, encoding, callback) {
	    this.lastChunkWritten = true;
	    TransformStream.prototype.end.call(this, chunk, encoding, callback);
	};
	
	SAXParser.prototype.stop = function () {
	    this.stopped = true;
	};
	
	//Internals
	SAXParser.prototype._runParsingLoop = function () {
	    do {
	        var token = this.parserFeedbackSimulator.getNextToken();
	
	        if (token.type === Tokenizer.HIBERNATION_TOKEN)
	            break;
	
	        if (token.type === Tokenizer.CHARACTER_TOKEN ||
	            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN ||
	            token.type === Tokenizer.NULL_CHARACTER_TOKEN) {
	
	            if (this.options.locationInfo) {
	                if (this.pendingText === null)
	                    this.currentTokenLocation = token.location;
	
	                else
	                    this.currentTokenLocation.endOffset = token.location.endOffset;
	            }
	
	            this.pendingText = (this.pendingText || '') + token.chars;
	        }
	
	        else {
	            this._emitPendingText();
	            this._handleToken(token);
	        }
	    } while (!this.stopped && token.type !== Tokenizer.EOF_TOKEN);
	};
	
	SAXParser.prototype._handleToken = function (token) {
	    if (this.options.locationInfo)
	        this.currentTokenLocation = token.location;
	
	    if (token.type === Tokenizer.START_TAG_TOKEN)
	        this.emit('startTag', token.tagName, token.attrs, token.selfClosing, this.currentTokenLocation);
	
	    else if (token.type === Tokenizer.END_TAG_TOKEN)
	        this.emit('endTag', token.tagName, this.currentTokenLocation);
	
	    else if (token.type === Tokenizer.COMMENT_TOKEN)
	        this.emit('comment', token.data, this.currentTokenLocation);
	
	    else if (token.type === Tokenizer.DOCTYPE_TOKEN)
	        this.emit('doctype', token.name, token.publicId, token.systemId, this.currentTokenLocation);
	};
	
	SAXParser.prototype._emitPendingText = function () {
	    if (this.pendingText !== null) {
	        this.emit('text', this.pendingText, this.currentTokenLocation);
	        this.pendingText = null;
	    }
	};


/***/ }),
/* 1536 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Tokenizer = __webpack_require__(127),
	    foreignContent = __webpack_require__(524),
	    UNICODE = __webpack_require__(168),
	    HTML = __webpack_require__(53);
	
	
	//Aliases
	var $ = HTML.TAG_NAMES,
	    NS = HTML.NAMESPACES;
	
	
	//ParserFeedbackSimulator
	//Simulates adjustment of the Tokenizer which performed by standard parser during tree construction.
	var ParserFeedbackSimulator = module.exports = function (tokenizer) {
	    this.tokenizer = tokenizer;
	
	    this.namespaceStack = [];
	    this.namespaceStackTop = -1;
	    this._enterNamespace(NS.HTML);
	};
	
	ParserFeedbackSimulator.prototype.getNextToken = function () {
	    var token = this.tokenizer.getNextToken();
	
	    if (token.type === Tokenizer.START_TAG_TOKEN)
	        this._handleStartTagToken(token);
	
	    else if (token.type === Tokenizer.END_TAG_TOKEN)
	        this._handleEndTagToken(token);
	
	    else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN && this.inForeignContent) {
	        token.type = Tokenizer.CHARACTER_TOKEN;
	        token.chars = UNICODE.REPLACEMENT_CHARACTER;
	    }
	
	    else if (this.skipNextNewLine) {
	        if (token.type !== Tokenizer.HIBERNATION_TOKEN)
	            this.skipNextNewLine = false;
	
	        if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\n') {
	            if (token.chars.length === 1)
	                return this.getNextToken();
	
	            token.chars = token.chars.substr(1);
	        }
	    }
	
	    return token;
	};
	
	//Namespace stack mutations
	ParserFeedbackSimulator.prototype._enterNamespace = function (namespace) {
	    this.namespaceStackTop++;
	    this.namespaceStack.push(namespace);
	
	    this.inForeignContent = namespace !== NS.HTML;
	    this.currentNamespace = namespace;
	    this.tokenizer.allowCDATA = this.inForeignContent;
	};
	
	ParserFeedbackSimulator.prototype._leaveCurrentNamespace = function () {
	    this.namespaceStackTop--;
	    this.namespaceStack.pop();
	
	    this.currentNamespace = this.namespaceStack[this.namespaceStackTop];
	    this.inForeignContent = this.currentNamespace !== NS.HTML;
	    this.tokenizer.allowCDATA = this.inForeignContent;
	};
	
	//Token handlers
	ParserFeedbackSimulator.prototype._ensureTokenizerMode = function (tn) {
	    if (tn === $.TEXTAREA || tn === $.TITLE)
	        this.tokenizer.state = Tokenizer.MODE.RCDATA;
	
	    else if (tn === $.PLAINTEXT)
	        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
	
	    else if (tn === $.SCRIPT)
	        this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;
	
	    else if (tn === $.STYLE || tn === $.IFRAME || tn === $.XMP ||
	             tn === $.NOEMBED || tn === $.NOFRAMES || tn === $.NOSCRIPT)
	        this.tokenizer.state = Tokenizer.MODE.RAWTEXT;
	};
	
	ParserFeedbackSimulator.prototype._handleStartTagToken = function (token) {
	    var tn = token.tagName;
	
	    if (tn === $.SVG)
	        this._enterNamespace(NS.SVG);
	
	    else if (tn === $.MATH)
	        this._enterNamespace(NS.MATHML);
	
	    if (this.inForeignContent) {
	        if (foreignContent.causesExit(token)) {
	            this._leaveCurrentNamespace();
	            return;
	        }
	
	        var currentNs = this.currentNamespace;
	
	        if (currentNs === NS.MATHML)
	            foreignContent.adjustTokenMathMLAttrs(token);
	
	        else if (currentNs === NS.SVG) {
	            foreignContent.adjustTokenSVGTagName(token);
	            foreignContent.adjustTokenSVGAttrs(token);
	        }
	
	        foreignContent.adjustTokenXMLAttrs(token);
	
	        tn = token.tagName;
	
	        if (!token.selfClosing && foreignContent.isIntegrationPoint(tn, currentNs, token.attrs))
	            this._enterNamespace(NS.HTML);
	    }
	
	    else {
	        if (tn === $.PRE || tn === $.TEXTAREA || tn === $.LISTING)
	            this.skipNextNewLine = true;
	
	        else if (tn === $.IMAGE)
	            token.tagName = $.IMG;
	
	        this._ensureTokenizerMode(tn);
	    }
	};
	
	ParserFeedbackSimulator.prototype._handleEndTagToken = function (token) {
	    var tn = token.tagName;
	
	    if (!this.inForeignContent) {
	        var previousNs = this.namespaceStack[this.namespaceStackTop - 1];
	
	        if (previousNs === NS.SVG && foreignContent.SVG_TAG_NAMES_ADJUSTMENT_MAP[tn])
	            tn = foreignContent.SVG_TAG_NAMES_ADJUSTMENT_MAP[tn];
	
	        //NOTE: check for exit from integration point
	        if (foreignContent.isIntegrationPoint(tn, previousNs, token.attrs))
	            this._leaveCurrentNamespace();
	    }
	
	    else if (tn === $.SVG && this.currentNamespace === NS.SVG ||
	             tn === $.MATH && this.currentNamespace === NS.MATHML)
	        this._leaveCurrentNamespace();
	
	    // NOTE: adjust end tag name as well for consistency
	    if (this.currentNamespace === NS.SVG)
	        foreignContent.adjustTokenSVGTagName(token);
	};


/***/ }),
/* 1537 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ReadableStream = __webpack_require__(220).Readable,
	    inherits = __webpack_require__(60).inherits,
	    Serializer = __webpack_require__(529);
	
	var SerializerStream = module.exports = function (node, options) {
	    ReadableStream.call(this);
	
	    this.serializer = new Serializer(node, options);
	
	    Object.defineProperty(this.serializer, 'html', {
	        //NOTE: To make `+=` concat operator work properly we define
	        //getter which always returns empty string
	        get: function () {
	            return '';
	        },
	        set: this.push.bind(this)
	    });
	};
	
	inherits(SerializerStream, ReadableStream);
	
	//Readable stream implementation
	SerializerStream.prototype._read = function () {
	    this.serializer.serialize();
	    this.push(null);
	};


/***/ }),
/* 1538 */
/***/ (function(module, exports) {

	'use strict';
	
	//NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption
	//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate_named_entity_data/README.md)
	module.exports = new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4000,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,10000,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13000,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);

/***/ }),
/* 1539 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var UNICODE = __webpack_require__(168);
	
	//Aliases
	var $ = UNICODE.CODE_POINTS;
	
	//Utils
	
	//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline
	//this functions if they will be situated in another module due to context switch.
	//Always perform inlining check before modifying this functions ('node --trace-inlining').
	function isSurrogatePair(cp1, cp2) {
	    return cp1 >= 0xD800 && cp1 <= 0xDBFF && cp2 >= 0xDC00 && cp2 <= 0xDFFF;
	}
	
	function getSurrogatePairCodePoint(cp1, cp2) {
	    return (cp1 - 0xD800) * 0x400 + 0x2400 + cp2;
	}
	
	
	//Const
	var DEFAULT_BUFFER_WATERLINE = 1 << 16;
	
	
	//Preprocessor
	//NOTE: HTML input preprocessing
	//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)
	var Preprocessor = module.exports = function () {
	    this.html = null;
	
	    this.pos = -1;
	    this.lastGapPos = -1;
	    this.lastCharPos = -1;
	
	    this.gapStack = [];
	
	    this.skipNextNewLine = false;
	
	    this.lastChunkWritten = false;
	    this.endOfChunkHit = false;
	    this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;
	};
	
	Preprocessor.prototype.dropParsedChunk = function () {
	    if (this.pos > this.bufferWaterline) {
	        this.lastCharPos -= this.pos;
	        this.html = this.html.substring(this.pos);
	        this.pos = 0;
	        this.lastGapPos = -1;
	        this.gapStack = [];
	    }
	};
	
	Preprocessor.prototype._addGap = function () {
	    this.gapStack.push(this.lastGapPos);
	    this.lastGapPos = this.pos;
	};
	
	Preprocessor.prototype._processHighRangeCodePoint = function (cp) {
	    //NOTE: try to peek a surrogate pair
	    if (this.pos !== this.lastCharPos) {
	        var nextCp = this.html.charCodeAt(this.pos + 1);
	
	        if (isSurrogatePair(cp, nextCp)) {
	            //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.
	            this.pos++;
	            cp = getSurrogatePairCodePoint(cp, nextCp);
	
	            //NOTE: add gap that should be avoided during retreat
	            this._addGap();
	        }
	    }
	
	    // NOTE: we've hit the end of chunk, stop processing at this point
	    else if (!this.lastChunkWritten) {
	        this.endOfChunkHit = true;
	        return $.EOF;
	    }
	
	    return cp;
	};
	
	Preprocessor.prototype.write = function (chunk, isLastChunk) {
	    if (this.html)
	        this.html += chunk;
	
	    else
	        this.html = chunk;
	
	    this.lastCharPos = this.html.length - 1;
	    this.endOfChunkHit = false;
	    this.lastChunkWritten = isLastChunk;
	};
	
	Preprocessor.prototype.insertHtmlAtCurrentPos = function (chunk) {
	    this.html = this.html.substring(0, this.pos + 1) +
	                chunk +
	                this.html.substring(this.pos + 1, this.html.length);
	
	    this.lastCharPos = this.html.length - 1;
	    this.endOfChunkHit = false;
	};
	
	
	Preprocessor.prototype.advance = function () {
	    this.pos++;
	
	    if (this.pos > this.lastCharPos) {
	        if (!this.lastChunkWritten)
	            this.endOfChunkHit = true;
	
	        return $.EOF;
	    }
	
	    var cp = this.html.charCodeAt(this.pos);
	
	    //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character
	    //must be ignored.
	    if (this.skipNextNewLine && cp === $.LINE_FEED) {
	        this.skipNextNewLine = false;
	        this._addGap();
	        return this.advance();
	    }
	
	    //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters
	    if (cp === $.CARRIAGE_RETURN) {
	        this.skipNextNewLine = true;
	        return $.LINE_FEED;
	    }
	
	    this.skipNextNewLine = false;
	
	    //OPTIMIZATION: first perform check if the code point in the allowed range that covers most common
	    //HTML input (e.g. ASCII codes) to avoid performance-cost operations for high-range code points.
	    return cp >= 0xD800 ? this._processHighRangeCodePoint(cp) : cp;
	};
	
	Preprocessor.prototype.retreat = function () {
	    if (this.pos === this.lastGapPos) {
	        this.lastGapPos = this.gapStack.pop();
	        this.pos--;
	    }
	
	    this.pos--;
	};
	


/***/ }),
/* 1540 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var doctype = __webpack_require__(214),
	    DOCUMENT_MODE = __webpack_require__(53).DOCUMENT_MODE;
	
	
	//Conversion tables for DOM Level1 structure emulation
	var nodeTypes = {
	    element: 1,
	    text: 3,
	    cdata: 4,
	    comment: 8
	};
	
	var nodePropertyShorthands = {
	    tagName: 'name',
	    childNodes: 'children',
	    parentNode: 'parent',
	    previousSibling: 'prev',
	    nextSibling: 'next',
	    nodeValue: 'data'
	};
	
	//Node
	var Node = function (props) {
	    for (var key in props) {
	        if (props.hasOwnProperty(key))
	            this[key] = props[key];
	    }
	};
	
	Node.prototype = {
	    get firstChild() {
	        var children = this.children;
	
	        return children && children[0] || null;
	    },
	
	    get lastChild() {
	        var children = this.children;
	
	        return children && children[children.length - 1] || null;
	    },
	
	    get nodeType() {
	        return nodeTypes[this.type] || nodeTypes.element;
	    }
	};
	
	Object.keys(nodePropertyShorthands).forEach(function (key) {
	    var shorthand = nodePropertyShorthands[key];
	
	    Object.defineProperty(Node.prototype, key, {
	        get: function () {
	            return this[shorthand] || null;
	        },
	        set: function (val) {
	            this[shorthand] = val;
	            return val;
	        }
	    });
	});
	
	
	//Node construction
	exports.createDocument = function () {
	    return new Node({
	        type: 'root',
	        name: 'root',
	        parent: null,
	        prev: null,
	        next: null,
	        children: [],
	        'x-mode': DOCUMENT_MODE.NO_QUIRKS
	    });
	};
	
	exports.createDocumentFragment = function () {
	    return new Node({
	        type: 'root',
	        name: 'root',
	        parent: null,
	        prev: null,
	        next: null,
	        children: []
	    });
	};
	
	exports.createElement = function (tagName, namespaceURI, attrs) {
	    var attribs = Object.create(null),
	        attribsNamespace = Object.create(null),
	        attribsPrefix = Object.create(null);
	
	    for (var i = 0; i < attrs.length; i++) {
	        var attrName = attrs[i].name;
	
	        attribs[attrName] = attrs[i].value;
	        attribsNamespace[attrName] = attrs[i].namespace;
	        attribsPrefix[attrName] = attrs[i].prefix;
	    }
	
	    return new Node({
	        type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',
	        name: tagName,
	        namespace: namespaceURI,
	        attribs: attribs,
	        'x-attribsNamespace': attribsNamespace,
	        'x-attribsPrefix': attribsPrefix,
	        children: [],
	        parent: null,
	        prev: null,
	        next: null
	    });
	};
	
	exports.createCommentNode = function (data) {
	    return new Node({
	        type: 'comment',
	        data: data,
	        parent: null,
	        prev: null,
	        next: null
	    });
	};
	
	var createTextNode = function (value) {
	    return new Node({
	        type: 'text',
	        data: value,
	        parent: null,
	        prev: null,
	        next: null
	    });
	};
	
	
	//Tree mutation
	var appendChild = exports.appendChild = function (parentNode, newNode) {
	    var prev = parentNode.children[parentNode.children.length - 1];
	
	    if (prev) {
	        prev.next = newNode;
	        newNode.prev = prev;
	    }
	
	    parentNode.children.push(newNode);
	    newNode.parent = parentNode;
	};
	
	var insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {
	    var insertionIdx = parentNode.children.indexOf(referenceNode),
	        prev = referenceNode.prev;
	
	    if (prev) {
	        prev.next = newNode;
	        newNode.prev = prev;
	    }
	
	    referenceNode.prev = newNode;
	    newNode.next = referenceNode;
	
	    parentNode.children.splice(insertionIdx, 0, newNode);
	    newNode.parent = parentNode;
	};
	
	exports.setTemplateContent = function (templateElement, contentElement) {
	    appendChild(templateElement, contentElement);
	};
	
	exports.getTemplateContent = function (templateElement) {
	    return templateElement.children[0];
	};
	
	exports.setDocumentType = function (document, name, publicId, systemId) {
	    var data = doctype.serializeContent(name, publicId, systemId),
	        doctypeNode = null;
	
	    for (var i = 0; i < document.children.length; i++) {
	        if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {
	            doctypeNode = document.children[i];
	            break;
	        }
	    }
	
	    if (doctypeNode) {
	        doctypeNode.data = data;
	        doctypeNode['x-name'] = name;
	        doctypeNode['x-publicId'] = publicId;
	        doctypeNode['x-systemId'] = systemId;
	    }
	
	    else {
	        appendChild(document, new Node({
	            type: 'directive',
	            name: '!doctype',
	            data: data,
	            'x-name': name,
	            'x-publicId': publicId,
	            'x-systemId': systemId
	        }));
	    }
	
	};
	
	exports.setDocumentMode = function (document, mode) {
	    document['x-mode'] = mode;
	};
	
	exports.getDocumentMode = function (document) {
	    return document['x-mode'];
	};
	
	exports.detachNode = function (node) {
	    if (node.parent) {
	        var idx = node.parent.children.indexOf(node),
	            prev = node.prev,
	            next = node.next;
	
	        node.prev = null;
	        node.next = null;
	
	        if (prev)
	            prev.next = next;
	
	        if (next)
	            next.prev = prev;
	
	        node.parent.children.splice(idx, 1);
	        node.parent = null;
	    }
	};
	
	exports.insertText = function (parentNode, text) {
	    var lastChild = parentNode.children[parentNode.children.length - 1];
	
	    if (lastChild && lastChild.type === 'text')
	        lastChild.data += text;
	    else
	        appendChild(parentNode, createTextNode(text));
	};
	
	exports.insertTextBefore = function (parentNode, text, referenceNode) {
	    var prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];
	
	    if (prevNode && prevNode.type === 'text')
	        prevNode.data += text;
	    else
	        insertBefore(parentNode, createTextNode(text), referenceNode);
	};
	
	exports.adoptAttributes = function (recipient, attrs) {
	    for (var i = 0; i < attrs.length; i++) {
	        var attrName = attrs[i].name;
	
	        if (typeof recipient.attribs[attrName] === 'undefined') {
	            recipient.attribs[attrName] = attrs[i].value;
	            recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;
	            recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;
	        }
	    }
	};
	
	
	//Tree traversing
	exports.getFirstChild = function (node) {
	    return node.children[0];
	};
	
	exports.getChildNodes = function (node) {
	    return node.children;
	};
	
	exports.getParentNode = function (node) {
	    return node.parent;
	};
	
	exports.getAttrList = function (element) {
	    var attrList = [];
	
	    for (var name in element.attribs) {
	        attrList.push({
	            name: name,
	            value: element.attribs[name],
	            namespace: element['x-attribsNamespace'][name],
	            prefix: element['x-attribsPrefix'][name]
	        });
	    }
	
	    return attrList;
	};
	
	
	//Node data
	exports.getTagName = function (element) {
	    return element.name;
	};
	
	exports.getNamespaceURI = function (element) {
	    return element.namespace;
	};
	
	exports.getTextNodeContent = function (textNode) {
	    return textNode.data;
	};
	
	exports.getCommentNodeContent = function (commentNode) {
	    return commentNode.data;
	};
	
	exports.getDocumentTypeNodeName = function (doctypeNode) {
	    return doctypeNode['x-name'];
	};
	
	exports.getDocumentTypeNodePublicId = function (doctypeNode) {
	    return doctypeNode['x-publicId'];
	};
	
	exports.getDocumentTypeNodeSystemId = function (doctypeNode) {
	    return doctypeNode['x-systemId'];
	};
	
	
	//Node types
	exports.isTextNode = function (node) {
	    return node.type === 'text';
	};
	
	exports.isCommentNode = function (node) {
	    return node.type === 'comment';
	};
	
	exports.isDocumentTypeNode = function (node) {
	    return node.type === 'directive' && node.name === '!doctype';
	};
	
	exports.isElementNode = function (node) {
	    return !!node.attribs;
	};


/***/ }),
/* 1541 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
	(function() {
	  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
	
	  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
	    module.exports = function() {
	      return performance.now();
	    };
	  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
	    module.exports = function() {
	      return (getNanoSeconds() - nodeLoadTime) / 1e6;
	    };
	    hrtime = process.hrtime;
	    getNanoSeconds = function() {
	      var hr;
	      hr = hrtime();
	      return hr[0] * 1e9 + hr[1];
	    };
	    moduleLoadTime = getNanoSeconds();
	    upTime = process.uptime() * 1e9;
	    nodeLoadTime = moduleLoadTime - upTime;
	  } else if (Date.now) {
	    module.exports = function() {
	      return Date.now() - loadTime;
	    };
	    loadTime = Date.now();
	  } else {
	    module.exports = function() {
	      return new Date().getTime() - loadTime;
	    };
	    loadTime = new Date().getTime();
	  }
	
	}).call(this);
	
	//# sourceMappingURL=performance-now.js.map
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)))

/***/ }),
/* 1542 */
/***/ (function(module, exports) {

	var div = null
	var prefixes = [ 'Webkit', 'Moz', 'O', 'ms' ]
	
	module.exports = function prefixStyle (prop) {
	  // re-use a dummy div
	  if (!div) {
	    div = document.createElement('div')
	  }
	
	  var style = div.style
	
	  // prop exists without prefix
	  if (prop in style) {
	    return prop
	  }
	
	  // borderRadius -> BorderRadius
	  var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1)
	
	  // find the vendor-prefixed prop
	  for (var i = prefixes.length; i >= 0; i--) {
	    var name = prefixes[i] + titleCase
	    // e.g. WebkitBorderRadius or webkitBorderRadius
	    if (name in style) {
	      return name
	    }
	  }
	
	  return false
	}


/***/ }),
/* 1543 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = __webpack_require__(1544);
	
	function emptyFunction() {}
	function emptyFunctionWithReset() {}
	emptyFunctionWithReset.resetWarningCache = emptyFunction;
	
	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    var err = new Error(
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	    err.name = 'Invariant Violation';
	    throw err;
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,
	
	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    elementType: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim,
	
	    checkPropTypes: emptyFunctionWithReset,
	    resetWarningCache: emptyFunction
	  };
	
	  ReactPropTypes.PropTypes = ReactPropTypes;
	
	  return ReactPropTypes;
	};


/***/ }),
/* 1544 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;


/***/ }),
/* 1545 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var stringify = __webpack_require__(1547);
	var parse = __webpack_require__(1546);
	var formats = __webpack_require__(530);
	
	module.exports = {
	    formats: formats,
	    parse: parse,
	    stringify: stringify
	};


/***/ }),
/* 1546 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(330);
	
	var has = Object.prototype.hasOwnProperty;
	
	var defaults = {
	    allowDots: false,
	    allowPrototypes: false,
	    arrayLimit: 20,
	    charset: 'utf-8',
	    charsetSentinel: false,
	    comma: false,
	    decoder: utils.decode,
	    delimiter: '&',
	    depth: 5,
	    ignoreQueryPrefix: false,
	    interpretNumericEntities: false,
	    parameterLimit: 1000,
	    parseArrays: true,
	    plainObjects: false,
	    strictNullHandling: false
	};
	
	var interpretNumericEntities = function (str) {
	    return str.replace(/&#(\d+);/g, function ($0, numberStr) {
	        return String.fromCharCode(parseInt(numberStr, 10));
	    });
	};
	
	// This is what browsers will submit when the ✓ character occurs in an
	// application/x-www-form-urlencoded body and the encoding of the page containing
	// the form is iso-8859-1, or when the submitted form has an accept-charset
	// attribute of iso-8859-1. Presumably also with other charsets that do not contain
	// the ✓ character, such as us-ascii.
	var isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')
	
	// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.
	var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')
	
	var parseValues = function parseQueryStringValues(str, options) {
	    var obj = {};
	    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
	    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
	    var parts = cleanStr.split(options.delimiter, limit);
	    var skipIndex = -1; // Keep track of where the utf8 sentinel was found
	    var i;
	
	    var charset = options.charset;
	    if (options.charsetSentinel) {
	        for (i = 0; i < parts.length; ++i) {
	            if (parts[i].indexOf('utf8=') === 0) {
	                if (parts[i] === charsetSentinel) {
	                    charset = 'utf-8';
	                } else if (parts[i] === isoSentinel) {
	                    charset = 'iso-8859-1';
	                }
	                skipIndex = i;
	                i = parts.length; // The eslint settings do not allow break;
	            }
	        }
	    }
	
	    for (i = 0; i < parts.length; ++i) {
	        if (i === skipIndex) {
	            continue;
	        }
	        var part = parts[i];
	
	        var bracketEqualsPos = part.indexOf(']=');
	        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;
	
	        var key, val;
	        if (pos === -1) {
	            key = options.decoder(part, defaults.decoder, charset);
	            val = options.strictNullHandling ? null : '';
	        } else {
	            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);
	            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);
	        }
	
	        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {
	            val = interpretNumericEntities(val);
	        }
	
	        if (val && options.comma && val.indexOf(',') > -1) {
	            val = val.split(',');
	        }
	
	        if (has.call(obj, key)) {
	            obj[key] = utils.combine(obj[key], val);
	        } else {
	            obj[key] = val;
	        }
	    }
	
	    return obj;
	};
	
	var parseObject = function (chain, val, options) {
	    var leaf = val;
	
	    for (var i = chain.length - 1; i >= 0; --i) {
	        var obj;
	        var root = chain[i];
	
	        if (root === '[]' && options.parseArrays) {
	            obj = [].concat(leaf);
	        } else {
	            obj = options.plainObjects ? Object.create(null) : {};
	            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
	            var index = parseInt(cleanRoot, 10);
	            if (!options.parseArrays && cleanRoot === '') {
	                obj = { 0: leaf };
	            } else if (
	                !isNaN(index)
	                && root !== cleanRoot
	                && String(index) === cleanRoot
	                && index >= 0
	                && (options.parseArrays && index <= options.arrayLimit)
	            ) {
	                obj = [];
	                obj[index] = leaf;
	            } else {
	                obj[cleanRoot] = leaf;
	            }
	        }
	
	        leaf = obj;
	    }
	
	    return leaf;
	};
	
	var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
	    if (!givenKey) {
	        return;
	    }
	
	    // Transform dot notation to bracket notation
	    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;
	
	    // The regex chunks
	
	    var brackets = /(\[[^[\]]*])/;
	    var child = /(\[[^[\]]*])/g;
	
	    // Get the parent
	
	    var segment = brackets.exec(key);
	    var parent = segment ? key.slice(0, segment.index) : key;
	
	    // Stash the parent if it exists
	
	    var keys = [];
	    if (parent) {
	        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
	        if (!options.plainObjects && has.call(Object.prototype, parent)) {
	            if (!options.allowPrototypes) {
	                return;
	            }
	        }
	
	        keys.push(parent);
	    }
	
	    // Loop through children appending to the array until we hit depth
	
	    var i = 0;
	    while ((segment = child.exec(key)) !== null && i < options.depth) {
	        i += 1;
	        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
	            if (!options.allowPrototypes) {
	                return;
	            }
	        }
	        keys.push(segment[1]);
	    }
	
	    // If there's a remainder, just add whatever is left
	
	    if (segment) {
	        keys.push('[' + key.slice(segment.index) + ']');
	    }
	
	    return parseObject(keys, val, options);
	};
	
	var normalizeParseOptions = function normalizeParseOptions(opts) {
	    if (!opts) {
	        return defaults;
	    }
	
	    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {
	        throw new TypeError('Decoder has to be a function.');
	    }
	
	    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
	        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');
	    }
	    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;
	
	    return {
	        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
	        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
	        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
	        charset: charset,
	        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
	        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
	        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
	        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
	        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,
	        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
	        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
	        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
	        parseArrays: opts.parseArrays !== false,
	        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
	        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
	    };
	};
	
	module.exports = function (str, opts) {
	    var options = normalizeParseOptions(opts);
	
	    if (str === '' || str === null || typeof str === 'undefined') {
	        return options.plainObjects ? Object.create(null) : {};
	    }
	
	    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
	    var obj = options.plainObjects ? Object.create(null) : {};
	
	    // Iterate over the keys and setup the new object
	
	    var keys = Object.keys(tempObj);
	    for (var i = 0; i < keys.length; ++i) {
	        var key = keys[i];
	        var newObj = parseKeys(key, tempObj[key], options);
	        obj = utils.merge(obj, newObj, options);
	    }
	
	    return utils.compact(obj);
	};


/***/ }),
/* 1547 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(330);
	var formats = __webpack_require__(530);
	var has = Object.prototype.hasOwnProperty;
	
	var arrayPrefixGenerators = {
	    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching
	        return prefix + '[]';
	    },
	    comma: 'comma',
	    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching
	        return prefix + '[' + key + ']';
	    },
	    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching
	        return prefix;
	    }
	};
	
	var isArray = Array.isArray;
	var push = Array.prototype.push;
	var pushToArray = function (arr, valueOrArray) {
	    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
	};
	
	var toISO = Date.prototype.toISOString;
	
	var defaults = {
	    addQueryPrefix: false,
	    allowDots: false,
	    charset: 'utf-8',
	    charsetSentinel: false,
	    delimiter: '&',
	    encode: true,
	    encoder: utils.encode,
	    encodeValuesOnly: false,
	    formatter: formats.formatters[formats['default']],
	    // deprecated
	    indices: false,
	    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching
	        return toISO.call(date);
	    },
	    skipNulls: false,
	    strictNullHandling: false
	};
	
	var stringify = function stringify( // eslint-disable-line func-name-matching
	    object,
	    prefix,
	    generateArrayPrefix,
	    strictNullHandling,
	    skipNulls,
	    encoder,
	    filter,
	    sort,
	    allowDots,
	    serializeDate,
	    formatter,
	    encodeValuesOnly,
	    charset
	) {
	    var obj = object;
	    if (typeof filter === 'function') {
	        obj = filter(prefix, obj);
	    } else if (obj instanceof Date) {
	        obj = serializeDate(obj);
	    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
	        obj = obj.join(',');
	    }
	
	    if (obj === null) {
	        if (strictNullHandling) {
	            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;
	        }
	
	        obj = '';
	    }
	
	    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {
	        if (encoder) {
	            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);
	            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];
	        }
	        return [formatter(prefix) + '=' + formatter(String(obj))];
	    }
	
	    var values = [];
	
	    if (typeof obj === 'undefined') {
	        return values;
	    }
	
	    var objKeys;
	    if (isArray(filter)) {
	        objKeys = filter;
	    } else {
	        var keys = Object.keys(obj);
	        objKeys = sort ? keys.sort(sort) : keys;
	    }
	
	    for (var i = 0; i < objKeys.length; ++i) {
	        var key = objKeys[i];
	
	        if (skipNulls && obj[key] === null) {
	            continue;
	        }
	
	        if (isArray(obj)) {
	            pushToArray(values, stringify(
	                obj[key],
	                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,
	                generateArrayPrefix,
	                strictNullHandling,
	                skipNulls,
	                encoder,
	                filter,
	                sort,
	                allowDots,
	                serializeDate,
	                formatter,
	                encodeValuesOnly,
	                charset
	            ));
	        } else {
	            pushToArray(values, stringify(
	                obj[key],
	                prefix + (allowDots ? '.' + key : '[' + key + ']'),
	                generateArrayPrefix,
	                strictNullHandling,
	                skipNulls,
	                encoder,
	                filter,
	                sort,
	                allowDots,
	                serializeDate,
	                formatter,
	                encodeValuesOnly,
	                charset
	            ));
	        }
	    }
	
	    return values;
	};
	
	var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
	    if (!opts) {
	        return defaults;
	    }
	
	    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {
	        throw new TypeError('Encoder has to be a function.');
	    }
	
	    var charset = opts.charset || defaults.charset;
	    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
	        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
	    }
	
	    var format = formats['default'];
	    if (typeof opts.format !== 'undefined') {
	        if (!has.call(formats.formatters, opts.format)) {
	            throw new TypeError('Unknown format option provided.');
	        }
	        format = opts.format;
	    }
	    var formatter = formats.formatters[format];
	
	    var filter = defaults.filter;
	    if (typeof opts.filter === 'function' || isArray(opts.filter)) {
	        filter = opts.filter;
	    }
	
	    return {
	        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
	        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
	        charset: charset,
	        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
	        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
	        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
	        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
	        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
	        filter: filter,
	        formatter: formatter,
	        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,
	        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,
	        sort: typeof opts.sort === 'function' ? opts.sort : null,
	        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
	    };
	};
	
	module.exports = function (object, opts) {
	    var obj = object;
	    var options = normalizeStringifyOptions(opts);
	
	    var objKeys;
	    var filter;
	
	    if (typeof options.filter === 'function') {
	        filter = options.filter;
	        obj = filter('', obj);
	    } else if (isArray(options.filter)) {
	        filter = options.filter;
	        objKeys = filter;
	    }
	
	    var keys = [];
	
	    if (typeof obj !== 'object' || obj === null) {
	        return '';
	    }
	
	    var arrayFormat;
	    if (opts && opts.arrayFormat in arrayPrefixGenerators) {
	        arrayFormat = opts.arrayFormat;
	    } else if (opts && 'indices' in opts) {
	        arrayFormat = opts.indices ? 'indices' : 'repeat';
	    } else {
	        arrayFormat = 'indices';
	    }
	
	    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
	
	    if (!objKeys) {
	        objKeys = Object.keys(obj);
	    }
	
	    if (options.sort) {
	        objKeys.sort(options.sort);
	    }
	
	    for (var i = 0; i < objKeys.length; ++i) {
	        var key = objKeys[i];
	
	        if (options.skipNulls && obj[key] === null) {
	            continue;
	        }
	        pushToArray(keys, stringify(
	            obj[key],
	            key,
	            generateArrayPrefix,
	            options.strictNullHandling,
	            options.skipNulls,
	            options.encode ? options.encoder : null,
	            options.filter,
	            options.sort,
	            options.allowDots,
	            options.serializeDate,
	            options.formatter,
	            options.encodeValuesOnly,
	            options.charset
	        ));
	    }
	
	    var joined = keys.join(options.delimiter);
	    var prefix = options.addQueryPrefix === true ? '?' : '';
	
	    if (options.charsetSentinel) {
	        if (options.charset === 'iso-8859-1') {
	            // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
	            prefix += 'utf8=%26%2310003%3B&';
	        } else {
	            // encodeURIComponent('✓')
	            prefix += 'utf8=%E2%9C%93&';
	        }
	    }
	
	    return joined.length > 0 ? prefix + joined : '';
	};


/***/ }),
/* 1548 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	// If obj.hasOwnProperty has been overridden, then calling
	// obj.hasOwnProperty(prop) will break.
	// See: https://github.com/joyent/node/issues/1707
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	module.exports = function(qs, sep, eq, options) {
	  sep = sep || '&';
	  eq = eq || '=';
	  var obj = {};
	
	  if (typeof qs !== 'string' || qs.length === 0) {
	    return obj;
	  }
	
	  var regexp = /\+/g;
	  qs = qs.split(sep);
	
	  var maxKeys = 1000;
	  if (options && typeof options.maxKeys === 'number') {
	    maxKeys = options.maxKeys;
	  }
	
	  var len = qs.length;
	  // maxKeys <= 0 means that we should not limit keys count
	  if (maxKeys > 0 && len > maxKeys) {
	    len = maxKeys;
	  }
	
	  for (var i = 0; i < len; ++i) {
	    var x = qs[i].replace(regexp, '%20'),
	        idx = x.indexOf(eq),
	        kstr, vstr, k, v;
	
	    if (idx >= 0) {
	      kstr = x.substr(0, idx);
	      vstr = x.substr(idx + 1);
	    } else {
	      kstr = x;
	      vstr = '';
	    }
	
	    k = decodeURIComponent(kstr);
	    v = decodeURIComponent(vstr);
	
	    if (!hasOwnProperty(obj, k)) {
	      obj[k] = v;
	    } else if (isArray(obj[k])) {
	      obj[k].push(v);
	    } else {
	      obj[k] = [obj[k], v];
	    }
	  }
	
	  return obj;
	};
	
	var isArray = Array.isArray || function (xs) {
	  return Object.prototype.toString.call(xs) === '[object Array]';
	};


/***/ }),
/* 1549 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.decode = exports.parse = __webpack_require__(1548);
	exports.encode = exports.stringify = __webpack_require__(531);


/***/ }),
/* 1550 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(1541)
	  , root = typeof window === 'undefined' ? global : window
	  , vendors = ['moz', 'webkit']
	  , suffix = 'AnimationFrame'
	  , raf = root['request' + suffix]
	  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]
	
	for(var i = 0; !raf && i < vendors.length; i++) {
	  raf = root[vendors[i] + 'Request' + suffix]
	  caf = root[vendors[i] + 'Cancel' + suffix]
	      || root[vendors[i] + 'CancelRequest' + suffix]
	}
	
	// Some versions of FF have rAF but not cAF
	if(!raf || !caf) {
	  var last = 0
	    , id = 0
	    , queue = []
	    , frameDuration = 1000 / 60
	
	  raf = function(callback) {
	    if(queue.length === 0) {
	      var _now = now()
	        , next = Math.max(0, frameDuration - (_now - last))
	      last = next + _now
	      setTimeout(function() {
	        var cp = queue.slice(0)
	        // Clear queue here to prevent
	        // callbacks from appending listeners
	        // to the current frame's queue
	        queue.length = 0
	        for(var i = 0; i < cp.length; i++) {
	          if(!cp[i].cancelled) {
	            try{
	              cp[i].callback(last)
	            } catch(e) {
	              setTimeout(function() { throw e }, 0)
	            }
	          }
	        }
	      }, Math.round(next))
	    }
	    queue.push({
	      handle: ++id,
	      callback: callback,
	      cancelled: false
	    })
	    return id
	  }
	
	  caf = function(handle) {
	    for(var i = 0; i < queue.length; i++) {
	      if(queue[i].handle === handle) {
	        queue[i].cancelled = true
	      }
	    }
	  }
	}
	
	module.exports = function(fn) {
	  // Wrap in a new function to prevent
	  // `cancel` potentially being assigned
	  // to the native rAF function
	  return raf.call(root, fn)
	}
	module.exports.cancel = function() {
	  caf.apply(root, arguments)
	}
	module.exports.polyfill = function(object) {
	  if (!object) {
	    object = root;
	  }
	  object.requestAnimationFrame = raf
	  object.cancelAnimationFrame = caf
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 1551 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.renderViewDefault = renderViewDefault;
	exports.renderTrackHorizontalDefault = renderTrackHorizontalDefault;
	exports.renderTrackVerticalDefault = renderTrackVerticalDefault;
	exports.renderThumbHorizontalDefault = renderThumbHorizontalDefault;
	exports.renderThumbVerticalDefault = renderThumbVerticalDefault;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/* eslint-disable react/prop-types */
	
	function renderViewDefault(props) {
	    return _react2["default"].createElement('div', props);
	}
	
	function renderTrackHorizontalDefault(_ref) {
	    var style = _ref.style,
	        props = _objectWithoutProperties(_ref, ['style']);
	
	    var finalStyle = _extends({}, style, {
	        right: 2,
	        bottom: 2,
	        left: 2,
	        borderRadius: 3
	    });
	    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
	}
	
	function renderTrackVerticalDefault(_ref2) {
	    var style = _ref2.style,
	        props = _objectWithoutProperties(_ref2, ['style']);
	
	    var finalStyle = _extends({}, style, {
	        right: 2,
	        bottom: 2,
	        top: 2,
	        borderRadius: 3
	    });
	    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
	}
	
	function renderThumbHorizontalDefault(_ref3) {
	    var style = _ref3.style,
	        props = _objectWithoutProperties(_ref3, ['style']);
	
	    var finalStyle = _extends({}, style, {
	        cursor: 'pointer',
	        borderRadius: 'inherit',
	        backgroundColor: 'rgba(0,0,0,.2)'
	    });
	    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
	}
	
	function renderThumbVerticalDefault(_ref4) {
	    var style = _ref4.style,
	        props = _objectWithoutProperties(_ref4, ['style']);
	
	    var finalStyle = _extends({}, style, {
	        cursor: 'pointer',
	        borderRadius: 'inherit',
	        backgroundColor: 'rgba(0,0,0,.2)'
	    });
	    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
	}

/***/ }),
/* 1552 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _raf2 = __webpack_require__(1550);
	
	var _raf3 = _interopRequireDefault(_raf2);
	
	var _domCss = __webpack_require__(439);
	
	var _domCss2 = _interopRequireDefault(_domCss);
	
	var _react = __webpack_require__(2);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _isString = __webpack_require__(1558);
	
	var _isString2 = _interopRequireDefault(_isString);
	
	var _getScrollbarWidth = __webpack_require__(1557);
	
	var _getScrollbarWidth2 = _interopRequireDefault(_getScrollbarWidth);
	
	var _returnFalse = __webpack_require__(1559);
	
	var _returnFalse2 = _interopRequireDefault(_returnFalse);
	
	var _getInnerWidth = __webpack_require__(1556);
	
	var _getInnerWidth2 = _interopRequireDefault(_getInnerWidth);
	
	var _getInnerHeight = __webpack_require__(1555);
	
	var _getInnerHeight2 = _interopRequireDefault(_getInnerHeight);
	
	var _styles = __webpack_require__(1553);
	
	var _defaultRenderElements = __webpack_require__(1551);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Scrollbars = function (_Component) {
	    _inherits(Scrollbars, _Component);
	
	    function Scrollbars(props) {
	        var _ref;
	
	        _classCallCheck(this, Scrollbars);
	
	        for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	            rest[_key - 1] = arguments[_key];
	        }
	
	        var _this = _possibleConstructorReturn(this, (_ref = Scrollbars.__proto__ || Object.getPrototypeOf(Scrollbars)).call.apply(_ref, [this, props].concat(rest)));
	
	        _this.getScrollLeft = _this.getScrollLeft.bind(_this);
	        _this.getScrollTop = _this.getScrollTop.bind(_this);
	        _this.getScrollWidth = _this.getScrollWidth.bind(_this);
	        _this.getScrollHeight = _this.getScrollHeight.bind(_this);
	        _this.getClientWidth = _this.getClientWidth.bind(_this);
	        _this.getClientHeight = _this.getClientHeight.bind(_this);
	        _this.getValues = _this.getValues.bind(_this);
	        _this.getThumbHorizontalWidth = _this.getThumbHorizontalWidth.bind(_this);
	        _this.getThumbVerticalHeight = _this.getThumbVerticalHeight.bind(_this);
	        _this.getScrollLeftForOffset = _this.getScrollLeftForOffset.bind(_this);
	        _this.getScrollTopForOffset = _this.getScrollTopForOffset.bind(_this);
	
	        _this.scrollLeft = _this.scrollLeft.bind(_this);
	        _this.scrollTop = _this.scrollTop.bind(_this);
	        _this.scrollToLeft = _this.scrollToLeft.bind(_this);
	        _this.scrollToTop = _this.scrollToTop.bind(_this);
	        _this.scrollToRight = _this.scrollToRight.bind(_this);
	        _this.scrollToBottom = _this.scrollToBottom.bind(_this);
	
	        _this.handleTrackMouseEnter = _this.handleTrackMouseEnter.bind(_this);
	        _this.handleTrackMouseLeave = _this.handleTrackMouseLeave.bind(_this);
	        _this.handleHorizontalTrackMouseDown = _this.handleHorizontalTrackMouseDown.bind(_this);
	        _this.handleVerticalTrackMouseDown = _this.handleVerticalTrackMouseDown.bind(_this);
	        _this.handleHorizontalThumbMouseDown = _this.handleHorizontalThumbMouseDown.bind(_this);
	        _this.handleVerticalThumbMouseDown = _this.handleVerticalThumbMouseDown.bind(_this);
	        _this.handleWindowResize = _this.handleWindowResize.bind(_this);
	        _this.handleScroll = _this.handleScroll.bind(_this);
	        _this.handleDrag = _this.handleDrag.bind(_this);
	        _this.handleDragEnd = _this.handleDragEnd.bind(_this);
	
	        _this.state = {
	            didMountUniversal: false
	        };
	        return _this;
	    }
	
	    _createClass(Scrollbars, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.addListeners();
	            this.update();
	            this.componentDidMountUniversal();
	        }
	    }, {
	        key: 'componentDidMountUniversal',
	        value: function componentDidMountUniversal() {
	            // eslint-disable-line react/sort-comp
	            var universal = this.props.universal;
	
	            if (!universal) return;
	            this.setState({ didMountUniversal: true });
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            this.update();
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            this.removeListeners();
	            (0, _raf2.cancel)(this.requestFrame);
	            clearTimeout(this.hideTracksTimeout);
	            clearInterval(this.detectScrollingInterval);
	        }
	    }, {
	        key: 'getScrollLeft',
	        value: function getScrollLeft() {
	            if (!this.view) return 0;
	            return this.view.scrollLeft;
	        }
	    }, {
	        key: 'getScrollTop',
	        value: function getScrollTop() {
	            if (!this.view) return 0;
	            return this.view.scrollTop;
	        }
	    }, {
	        key: 'getScrollWidth',
	        value: function getScrollWidth() {
	            if (!this.view) return 0;
	            return this.view.scrollWidth;
	        }
	    }, {
	        key: 'getScrollHeight',
	        value: function getScrollHeight() {
	            if (!this.view) return 0;
	            return this.view.scrollHeight;
	        }
	    }, {
	        key: 'getClientWidth',
	        value: function getClientWidth() {
	            if (!this.view) return 0;
	            return this.view.clientWidth;
	        }
	    }, {
	        key: 'getClientHeight',
	        value: function getClientHeight() {
	            if (!this.view) return 0;
	            return this.view.clientHeight;
	        }
	    }, {
	        key: 'getValues',
	        value: function getValues() {
	            var _ref2 = this.view || {},
	                _ref2$scrollLeft = _ref2.scrollLeft,
	                scrollLeft = _ref2$scrollLeft === undefined ? 0 : _ref2$scrollLeft,
	                _ref2$scrollTop = _ref2.scrollTop,
	                scrollTop = _ref2$scrollTop === undefined ? 0 : _ref2$scrollTop,
	                _ref2$scrollWidth = _ref2.scrollWidth,
	                scrollWidth = _ref2$scrollWidth === undefined ? 0 : _ref2$scrollWidth,
	                _ref2$scrollHeight = _ref2.scrollHeight,
	                scrollHeight = _ref2$scrollHeight === undefined ? 0 : _ref2$scrollHeight,
	                _ref2$clientWidth = _ref2.clientWidth,
	                clientWidth = _ref2$clientWidth === undefined ? 0 : _ref2$clientWidth,
	                _ref2$clientHeight = _ref2.clientHeight,
	                clientHeight = _ref2$clientHeight === undefined ? 0 : _ref2$clientHeight;
	
	            return {
	                left: scrollLeft / (scrollWidth - clientWidth) || 0,
	                top: scrollTop / (scrollHeight - clientHeight) || 0,
	                scrollLeft: scrollLeft,
	                scrollTop: scrollTop,
	                scrollWidth: scrollWidth,
	                scrollHeight: scrollHeight,
	                clientWidth: clientWidth,
	                clientHeight: clientHeight
	            };
	        }
	    }, {
	        key: 'getThumbHorizontalWidth',
	        value: function getThumbHorizontalWidth() {
	            var _props = this.props,
	                thumbSize = _props.thumbSize,
	                thumbMinSize = _props.thumbMinSize;
	            var _view = this.view,
	                scrollWidth = _view.scrollWidth,
	                clientWidth = _view.clientWidth;
	
	            var trackWidth = (0, _getInnerWidth2["default"])(this.trackHorizontal);
	            var width = Math.ceil(clientWidth / scrollWidth * trackWidth);
	            if (trackWidth === width) return 0;
	            if (thumbSize) return thumbSize;
	            return Math.max(width, thumbMinSize);
	        }
	    }, {
	        key: 'getThumbVerticalHeight',
	        value: function getThumbVerticalHeight() {
	            var _props2 = this.props,
	                thumbSize = _props2.thumbSize,
	                thumbMinSize = _props2.thumbMinSize;
	            var _view2 = this.view,
	                scrollHeight = _view2.scrollHeight,
	                clientHeight = _view2.clientHeight;
	
	            var trackHeight = (0, _getInnerHeight2["default"])(this.trackVertical);
	            var height = Math.ceil(clientHeight / scrollHeight * trackHeight);
	            if (trackHeight === height) return 0;
	            if (thumbSize) return thumbSize;
	            return Math.max(height, thumbMinSize);
	        }
	    }, {
	        key: 'getScrollLeftForOffset',
	        value: function getScrollLeftForOffset(offset) {
	            var _view3 = this.view,
	                scrollWidth = _view3.scrollWidth,
	                clientWidth = _view3.clientWidth;
	
	            var trackWidth = (0, _getInnerWidth2["default"])(this.trackHorizontal);
	            var thumbWidth = this.getThumbHorizontalWidth();
	            return offset / (trackWidth - thumbWidth) * (scrollWidth - clientWidth);
	        }
	    }, {
	        key: 'getScrollTopForOffset',
	        value: function getScrollTopForOffset(offset) {
	            var _view4 = this.view,
	                scrollHeight = _view4.scrollHeight,
	                clientHeight = _view4.clientHeight;
	
	            var trackHeight = (0, _getInnerHeight2["default"])(this.trackVertical);
	            var thumbHeight = this.getThumbVerticalHeight();
	            return offset / (trackHeight - thumbHeight) * (scrollHeight - clientHeight);
	        }
	    }, {
	        key: 'scrollLeft',
	        value: function scrollLeft() {
	            var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	
	            if (!this.view) return;
	            this.view.scrollLeft = left;
	        }
	    }, {
	        key: 'scrollTop',
	        value: function scrollTop() {
	            var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	
	            if (!this.view) return;
	            this.view.scrollTop = top;
	        }
	    }, {
	        key: 'scrollToLeft',
	        value: function scrollToLeft() {
	            if (!this.view) return;
	            this.view.scrollLeft = 0;
	        }
	    }, {
	        key: 'scrollToTop',
	        value: function scrollToTop() {
	            if (!this.view) return;
	            this.view.scrollTop = 0;
	        }
	    }, {
	        key: 'scrollToRight',
	        value: function scrollToRight() {
	            if (!this.view) return;
	            this.view.scrollLeft = this.view.scrollWidth;
	        }
	    }, {
	        key: 'scrollToBottom',
	        value: function scrollToBottom() {
	            if (!this.view) return;
	            this.view.scrollTop = this.view.scrollHeight;
	        }
	    }, {
	        key: 'addListeners',
	        value: function addListeners() {
	            /* istanbul ignore if */
	            if (typeof document === 'undefined' || !this.view) return;
	            var view = this.view,
	                trackHorizontal = this.trackHorizontal,
	                trackVertical = this.trackVertical,
	                thumbHorizontal = this.thumbHorizontal,
	                thumbVertical = this.thumbVertical;
	
	            view.addEventListener('scroll', this.handleScroll);
	            if (!(0, _getScrollbarWidth2["default"])()) return;
	            trackHorizontal.addEventListener('mouseenter', this.handleTrackMouseEnter);
	            trackHorizontal.addEventListener('mouseleave', this.handleTrackMouseLeave);
	            trackHorizontal.addEventListener('mousedown', this.handleHorizontalTrackMouseDown);
	            trackVertical.addEventListener('mouseenter', this.handleTrackMouseEnter);
	            trackVertical.addEventListener('mouseleave', this.handleTrackMouseLeave);
	            trackVertical.addEventListener('mousedown', this.handleVerticalTrackMouseDown);
	            thumbHorizontal.addEventListener('mousedown', this.handleHorizontalThumbMouseDown);
	            thumbVertical.addEventListener('mousedown', this.handleVerticalThumbMouseDown);
	            window.addEventListener('resize', this.handleWindowResize);
	        }
	    }, {
	        key: 'removeListeners',
	        value: function removeListeners() {
	            /* istanbul ignore if */
	            if (typeof document === 'undefined' || !this.view) return;
	            var view = this.view,
	                trackHorizontal = this.trackHorizontal,
	                trackVertical = this.trackVertical,
	                thumbHorizontal = this.thumbHorizontal,
	                thumbVertical = this.thumbVertical;
	
	            view.removeEventListener('scroll', this.handleScroll);
	            if (!(0, _getScrollbarWidth2["default"])()) return;
	            trackHorizontal.removeEventListener('mouseenter', this.handleTrackMouseEnter);
	            trackHorizontal.removeEventListener('mouseleave', this.handleTrackMouseLeave);
	            trackHorizontal.removeEventListener('mousedown', this.handleHorizontalTrackMouseDown);
	            trackVertical.removeEventListener('mouseenter', this.handleTrackMouseEnter);
	            trackVertical.removeEventListener('mouseleave', this.handleTrackMouseLeave);
	            trackVertical.removeEventListener('mousedown', this.handleVerticalTrackMouseDown);
	            thumbHorizontal.removeEventListener('mousedown', this.handleHorizontalThumbMouseDown);
	            thumbVertical.removeEventListener('mousedown', this.handleVerticalThumbMouseDown);
	            window.removeEventListener('resize', this.handleWindowResize);
	            // Possibly setup by `handleDragStart`
	            this.teardownDragging();
	        }
	    }, {
	        key: 'handleScroll',
	        value: function handleScroll(event) {
	            var _this2 = this;
	
	            var _props3 = this.props,
	                onScroll = _props3.onScroll,
	                onScrollFrame = _props3.onScrollFrame;
	
	            if (onScroll) onScroll(event);
	            this.update(function (values) {
	                var scrollLeft = values.scrollLeft,
	                    scrollTop = values.scrollTop;
	
	                _this2.viewScrollLeft = scrollLeft;
	                _this2.viewScrollTop = scrollTop;
	                if (onScrollFrame) onScrollFrame(values);
	            });
	            this.detectScrolling();
	        }
	    }, {
	        key: 'handleScrollStart',
	        value: function handleScrollStart() {
	            var onScrollStart = this.props.onScrollStart;
	
	            if (onScrollStart) onScrollStart();
	            this.handleScrollStartAutoHide();
	        }
	    }, {
	        key: 'handleScrollStartAutoHide',
	        value: function handleScrollStartAutoHide() {
	            var autoHide = this.props.autoHide;
	
	            if (!autoHide) return;
	            this.showTracks();
	        }
	    }, {
	        key: 'handleScrollStop',
	        value: function handleScrollStop() {
	            var onScrollStop = this.props.onScrollStop;
	
	            if (onScrollStop) onScrollStop();
	            this.handleScrollStopAutoHide();
	        }
	    }, {
	        key: 'handleScrollStopAutoHide',
	        value: function handleScrollStopAutoHide() {
	            var autoHide = this.props.autoHide;
	
	            if (!autoHide) return;
	            this.hideTracks();
	        }
	    }, {
	        key: 'handleWindowResize',
	        value: function handleWindowResize() {
	            this.update();
	        }
	    }, {
	        key: 'handleHorizontalTrackMouseDown',
	        value: function handleHorizontalTrackMouseDown(event) {
	            event.preventDefault();
	            var target = event.target,
	                clientX = event.clientX;
	
	            var _target$getBoundingCl = target.getBoundingClientRect(),
	                targetLeft = _target$getBoundingCl.left;
	
	            var thumbWidth = this.getThumbHorizontalWidth();
	            var offset = Math.abs(targetLeft - clientX) - thumbWidth / 2;
	            this.view.scrollLeft = this.getScrollLeftForOffset(offset);
	        }
	    }, {
	        key: 'handleVerticalTrackMouseDown',
	        value: function handleVerticalTrackMouseDown(event) {
	            event.preventDefault();
	            var target = event.target,
	                clientY = event.clientY;
	
	            var _target$getBoundingCl2 = target.getBoundingClientRect(),
	                targetTop = _target$getBoundingCl2.top;
	
	            var thumbHeight = this.getThumbVerticalHeight();
	            var offset = Math.abs(targetTop - clientY) - thumbHeight / 2;
	            this.view.scrollTop = this.getScrollTopForOffset(offset);
	        }
	    }, {
	        key: 'handleHorizontalThumbMouseDown',
	        value: function handleHorizontalThumbMouseDown(event) {
	            event.preventDefault();
	            this.handleDragStart(event);
	            var target = event.target,
	                clientX = event.clientX;
	            var offsetWidth = target.offsetWidth;
	
	            var _target$getBoundingCl3 = target.getBoundingClientRect(),
	                left = _target$getBoundingCl3.left;
	
	            this.prevPageX = offsetWidth - (clientX - left);
	        }
	    }, {
	        key: 'handleVerticalThumbMouseDown',
	        value: function handleVerticalThumbMouseDown(event) {
	            event.preventDefault();
	            this.handleDragStart(event);
	            var target = event.target,
	                clientY = event.clientY;
	            var offsetHeight = target.offsetHeight;
	
	            var _target$getBoundingCl4 = target.getBoundingClientRect(),
	                top = _target$getBoundingCl4.top;
	
	            this.prevPageY = offsetHeight - (clientY - top);
	        }
	    }, {
	        key: 'setupDragging',
	        value: function setupDragging() {
	            (0, _domCss2["default"])(document.body, _styles.disableSelectStyle);
	            document.addEventListener('mousemove', this.handleDrag);
	            document.addEventListener('mouseup', this.handleDragEnd);
	            document.onselectstart = _returnFalse2["default"];
	        }
	    }, {
	        key: 'teardownDragging',
	        value: function teardownDragging() {
	            (0, _domCss2["default"])(document.body, _styles.disableSelectStyleReset);
	            document.removeEventListener('mousemove', this.handleDrag);
	            document.removeEventListener('mouseup', this.handleDragEnd);
	            document.onselectstart = undefined;
	        }
	    }, {
	        key: 'handleDragStart',
	        value: function handleDragStart(event) {
	            this.dragging = true;
	            event.stopImmediatePropagation();
	            this.setupDragging();
	        }
	    }, {
	        key: 'handleDrag',
	        value: function handleDrag(event) {
	            if (this.prevPageX) {
	                var clientX = event.clientX;
	
	                var _trackHorizontal$getB = this.trackHorizontal.getBoundingClientRect(),
	                    trackLeft = _trackHorizontal$getB.left;
	
	                var thumbWidth = this.getThumbHorizontalWidth();
	                var clickPosition = thumbWidth - this.prevPageX;
	                var offset = -trackLeft + clientX - clickPosition;
	                this.view.scrollLeft = this.getScrollLeftForOffset(offset);
	            }
	            if (this.prevPageY) {
	                var clientY = event.clientY;
	
	                var _trackVertical$getBou = this.trackVertical.getBoundingClientRect(),
	                    trackTop = _trackVertical$getBou.top;
	
	                var thumbHeight = this.getThumbVerticalHeight();
	                var _clickPosition = thumbHeight - this.prevPageY;
	                var _offset = -trackTop + clientY - _clickPosition;
	                this.view.scrollTop = this.getScrollTopForOffset(_offset);
	            }
	            return false;
	        }
	    }, {
	        key: 'handleDragEnd',
	        value: function handleDragEnd() {
	            this.dragging = false;
	            this.prevPageX = this.prevPageY = 0;
	            this.teardownDragging();
	            this.handleDragEndAutoHide();
	        }
	    }, {
	        key: 'handleDragEndAutoHide',
	        value: function handleDragEndAutoHide() {
	            var autoHide = this.props.autoHide;
	
	            if (!autoHide) return;
	            this.hideTracks();
	        }
	    }, {
	        key: 'handleTrackMouseEnter',
	        value: function handleTrackMouseEnter() {
	            this.trackMouseOver = true;
	            this.handleTrackMouseEnterAutoHide();
	        }
	    }, {
	        key: 'handleTrackMouseEnterAutoHide',
	        value: function handleTrackMouseEnterAutoHide() {
	            var autoHide = this.props.autoHide;
	
	            if (!autoHide) return;
	            this.showTracks();
	        }
	    }, {
	        key: 'handleTrackMouseLeave',
	        value: function handleTrackMouseLeave() {
	            this.trackMouseOver = false;
	            this.handleTrackMouseLeaveAutoHide();
	        }
	    }, {
	        key: 'handleTrackMouseLeaveAutoHide',
	        value: function handleTrackMouseLeaveAutoHide() {
	            var autoHide = this.props.autoHide;
	
	            if (!autoHide) return;
	            this.hideTracks();
	        }
	    }, {
	        key: 'showTracks',
	        value: function showTracks() {
	            clearTimeout(this.hideTracksTimeout);
	            (0, _domCss2["default"])(this.trackHorizontal, { opacity: 1 });
	            (0, _domCss2["default"])(this.trackVertical, { opacity: 1 });
	        }
	    }, {
	        key: 'hideTracks',
	        value: function hideTracks() {
	            var _this3 = this;
	
	            if (this.dragging) return;
	            if (this.scrolling) return;
	            if (this.trackMouseOver) return;
	            var autoHideTimeout = this.props.autoHideTimeout;
	
	            clearTimeout(this.hideTracksTimeout);
	            this.hideTracksTimeout = setTimeout(function () {
	                (0, _domCss2["default"])(_this3.trackHorizontal, { opacity: 0 });
	                (0, _domCss2["default"])(_this3.trackVertical, { opacity: 0 });
	            }, autoHideTimeout);
	        }
	    }, {
	        key: 'detectScrolling',
	        value: function detectScrolling() {
	            var _this4 = this;
	
	            if (this.scrolling) return;
	            this.scrolling = true;
	            this.handleScrollStart();
	            this.detectScrollingInterval = setInterval(function () {
	                if (_this4.lastViewScrollLeft === _this4.viewScrollLeft && _this4.lastViewScrollTop === _this4.viewScrollTop) {
	                    clearInterval(_this4.detectScrollingInterval);
	                    _this4.scrolling = false;
	                    _this4.handleScrollStop();
	                }
	                _this4.lastViewScrollLeft = _this4.viewScrollLeft;
	                _this4.lastViewScrollTop = _this4.viewScrollTop;
	            }, 100);
	        }
	    }, {
	        key: 'raf',
	        value: function raf(callback) {
	            var _this5 = this;
	
	            if (this.requestFrame) _raf3["default"].cancel(this.requestFrame);
	            this.requestFrame = (0, _raf3["default"])(function () {
	                _this5.requestFrame = undefined;
	                callback();
	            });
	        }
	    }, {
	        key: 'update',
	        value: function update(callback) {
	            var _this6 = this;
	
	            this.raf(function () {
	                return _this6._update(callback);
	            });
	        }
	    }, {
	        key: '_update',
	        value: function _update(callback) {
	            var _props4 = this.props,
	                onUpdate = _props4.onUpdate,
	                hideTracksWhenNotNeeded = _props4.hideTracksWhenNotNeeded;
	
	            var values = this.getValues();
	            if ((0, _getScrollbarWidth2["default"])()) {
	                var scrollLeft = values.scrollLeft,
	                    clientWidth = values.clientWidth,
	                    scrollWidth = values.scrollWidth;
	
	                var trackHorizontalWidth = (0, _getInnerWidth2["default"])(this.trackHorizontal);
	                var thumbHorizontalWidth = this.getThumbHorizontalWidth();
	                var thumbHorizontalX = scrollLeft / (scrollWidth - clientWidth) * (trackHorizontalWidth - thumbHorizontalWidth);
	                var thumbHorizontalStyle = {
	                    width: thumbHorizontalWidth,
	                    transform: 'translateX(' + thumbHorizontalX + 'px)'
	                };
	                var scrollTop = values.scrollTop,
	                    clientHeight = values.clientHeight,
	                    scrollHeight = values.scrollHeight;
	
	                var trackVerticalHeight = (0, _getInnerHeight2["default"])(this.trackVertical);
	                var thumbVerticalHeight = this.getThumbVerticalHeight();
	                var thumbVerticalY = scrollTop / (scrollHeight - clientHeight) * (trackVerticalHeight - thumbVerticalHeight);
	                var thumbVerticalStyle = {
	                    height: thumbVerticalHeight,
	                    transform: 'translateY(' + thumbVerticalY + 'px)'
	                };
	                if (hideTracksWhenNotNeeded) {
	                    var trackHorizontalStyle = {
	                        visibility: scrollWidth > clientWidth ? 'visible' : 'hidden'
	                    };
	                    var trackVerticalStyle = {
	                        visibility: scrollHeight > clientHeight ? 'visible' : 'hidden'
	                    };
	                    (0, _domCss2["default"])(this.trackHorizontal, trackHorizontalStyle);
	                    (0, _domCss2["default"])(this.trackVertical, trackVerticalStyle);
	                }
	                (0, _domCss2["default"])(this.thumbHorizontal, thumbHorizontalStyle);
	                (0, _domCss2["default"])(this.thumbVertical, thumbVerticalStyle);
	            }
	            if (onUpdate) onUpdate(values);
	            if (typeof callback !== 'function') return;
	            callback(values);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this7 = this;
	
	            var scrollbarWidth = (0, _getScrollbarWidth2["default"])();
	            /* eslint-disable no-unused-vars */
	
	            var _props5 = this.props,
	                onScroll = _props5.onScroll,
	                onScrollFrame = _props5.onScrollFrame,
	                onScrollStart = _props5.onScrollStart,
	                onScrollStop = _props5.onScrollStop,
	                onUpdate = _props5.onUpdate,
	                renderView = _props5.renderView,
	                renderTrackHorizontal = _props5.renderTrackHorizontal,
	                renderTrackVertical = _props5.renderTrackVertical,
	                renderThumbHorizontal = _props5.renderThumbHorizontal,
	                renderThumbVertical = _props5.renderThumbVertical,
	                tagName = _props5.tagName,
	                hideTracksWhenNotNeeded = _props5.hideTracksWhenNotNeeded,
	                autoHide = _props5.autoHide,
	                autoHideTimeout = _props5.autoHideTimeout,
	                autoHideDuration = _props5.autoHideDuration,
	                thumbSize = _props5.thumbSize,
	                thumbMinSize = _props5.thumbMinSize,
	                universal = _props5.universal,
	                autoHeight = _props5.autoHeight,
	                autoHeightMin = _props5.autoHeightMin,
	                autoHeightMax = _props5.autoHeightMax,
	                style = _props5.style,
	                children = _props5.children,
	                props = _objectWithoutProperties(_props5, ['onScroll', 'onScrollFrame', 'onScrollStart', 'onScrollStop', 'onUpdate', 'renderView', 'renderTrackHorizontal', 'renderTrackVertical', 'renderThumbHorizontal', 'renderThumbVertical', 'tagName', 'hideTracksWhenNotNeeded', 'autoHide', 'autoHideTimeout', 'autoHideDuration', 'thumbSize', 'thumbMinSize', 'universal', 'autoHeight', 'autoHeightMin', 'autoHeightMax', 'style', 'children']);
	            /* eslint-enable no-unused-vars */
	
	            var didMountUniversal = this.state.didMountUniversal;
	
	
	            var containerStyle = _extends({}, _styles.containerStyleDefault, autoHeight && _extends({}, _styles.containerStyleAutoHeight, {
	                minHeight: autoHeightMin,
	                maxHeight: autoHeightMax
	            }), style);
	
	            var viewStyle = _extends({}, _styles.viewStyleDefault, {
	                // Hide scrollbars by setting a negative margin
	                marginRight: scrollbarWidth ? -scrollbarWidth : 0,
	                marginBottom: scrollbarWidth ? -scrollbarWidth : 0
	            }, autoHeight && _extends({}, _styles.viewStyleAutoHeight, {
	                // Add scrollbarWidth to autoHeight in order to compensate negative margins
	                minHeight: (0, _isString2["default"])(autoHeightMin) ? 'calc(' + autoHeightMin + ' + ' + scrollbarWidth + 'px)' : autoHeightMin + scrollbarWidth,
	                maxHeight: (0, _isString2["default"])(autoHeightMax) ? 'calc(' + autoHeightMax + ' + ' + scrollbarWidth + 'px)' : autoHeightMax + scrollbarWidth
	            }), autoHeight && universal && !didMountUniversal && {
	                minHeight: autoHeightMin,
	                maxHeight: autoHeightMax
	            }, universal && !didMountUniversal && _styles.viewStyleUniversalInitial);
	
	            var trackAutoHeightStyle = {
	                transition: 'opacity ' + autoHideDuration + 'ms',
	                opacity: 0
	            };
	
	            var trackHorizontalStyle = _extends({}, _styles.trackHorizontalStyleDefault, autoHide && trackAutoHeightStyle, (!scrollbarWidth || universal && !didMountUniversal) && {
	                display: 'none'
	            });
	
	            var trackVerticalStyle = _extends({}, _styles.trackVerticalStyleDefault, autoHide && trackAutoHeightStyle, (!scrollbarWidth || universal && !didMountUniversal) && {
	                display: 'none'
	            });
	
	            return (0, _react.createElement)(tagName, _extends({}, props, { style: containerStyle, ref: function ref(_ref3) {
	                    _this7.container = _ref3;
	                } }), [(0, _react.cloneElement)(renderView({ style: viewStyle }), { key: 'view', ref: function ref(_ref4) {
	                    _this7.view = _ref4;
	                } }, children), (0, _react.cloneElement)(renderTrackHorizontal({ style: trackHorizontalStyle }), { key: 'trackHorizontal', ref: function ref(_ref5) {
	                    _this7.trackHorizontal = _ref5;
	                } }, (0, _react.cloneElement)(renderThumbHorizontal({ style: _styles.thumbHorizontalStyleDefault }), { ref: function ref(_ref6) {
	                    _this7.thumbHorizontal = _ref6;
	                } })), (0, _react.cloneElement)(renderTrackVertical({ style: trackVerticalStyle }), { key: 'trackVertical', ref: function ref(_ref7) {
	                    _this7.trackVertical = _ref7;
	                } }, (0, _react.cloneElement)(renderThumbVertical({ style: _styles.thumbVerticalStyleDefault }), { ref: function ref(_ref8) {
	                    _this7.thumbVertical = _ref8;
	                } }))]);
	        }
	    }]);
	
	    return Scrollbars;
	}(_react.Component);
	
	exports["default"] = Scrollbars;
	
	
	Scrollbars.propTypes = {
	    onScroll: _propTypes2["default"].func,
	    onScrollFrame: _propTypes2["default"].func,
	    onScrollStart: _propTypes2["default"].func,
	    onScrollStop: _propTypes2["default"].func,
	    onUpdate: _propTypes2["default"].func,
	    renderView: _propTypes2["default"].func,
	    renderTrackHorizontal: _propTypes2["default"].func,
	    renderTrackVertical: _propTypes2["default"].func,
	    renderThumbHorizontal: _propTypes2["default"].func,
	    renderThumbVertical: _propTypes2["default"].func,
	    tagName: _propTypes2["default"].string,
	    thumbSize: _propTypes2["default"].number,
	    thumbMinSize: _propTypes2["default"].number,
	    hideTracksWhenNotNeeded: _propTypes2["default"].bool,
	    autoHide: _propTypes2["default"].bool,
	    autoHideTimeout: _propTypes2["default"].number,
	    autoHideDuration: _propTypes2["default"].number,
	    autoHeight: _propTypes2["default"].bool,
	    autoHeightMin: _propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].string]),
	    autoHeightMax: _propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].string]),
	    universal: _propTypes2["default"].bool,
	    style: _propTypes2["default"].object,
	    children: _propTypes2["default"].node
	};
	
	Scrollbars.defaultProps = {
	    renderView: _defaultRenderElements.renderViewDefault,
	    renderTrackHorizontal: _defaultRenderElements.renderTrackHorizontalDefault,
	    renderTrackVertical: _defaultRenderElements.renderTrackVerticalDefault,
	    renderThumbHorizontal: _defaultRenderElements.renderThumbHorizontalDefault,
	    renderThumbVertical: _defaultRenderElements.renderThumbVerticalDefault,
	    tagName: 'div',
	    thumbMinSize: 30,
	    hideTracksWhenNotNeeded: false,
	    autoHide: false,
	    autoHideTimeout: 1000,
	    autoHideDuration: 200,
	    autoHeight: false,
	    autoHeightMin: 0,
	    autoHeightMax: 200,
	    universal: false
	};

/***/ }),
/* 1553 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var containerStyleDefault = exports.containerStyleDefault = {
	    position: 'relative',
	    overflow: 'hidden',
	    width: '100%',
	    height: '100%'
	};
	
	// Overrides containerStyleDefault properties
	var containerStyleAutoHeight = exports.containerStyleAutoHeight = {
	    height: 'auto'
	};
	
	var viewStyleDefault = exports.viewStyleDefault = {
	    position: 'absolute',
	    top: 0,
	    left: 0,
	    right: 0,
	    bottom: 0,
	    overflow: 'scroll',
	    WebkitOverflowScrolling: 'touch'
	};
	
	// Overrides viewStyleDefault properties
	var viewStyleAutoHeight = exports.viewStyleAutoHeight = {
	    position: 'relative',
	    top: undefined,
	    left: undefined,
	    right: undefined,
	    bottom: undefined
	};
	
	var viewStyleUniversalInitial = exports.viewStyleUniversalInitial = {
	    overflow: 'hidden',
	    marginRight: 0,
	    marginBottom: 0
	};
	
	var trackHorizontalStyleDefault = exports.trackHorizontalStyleDefault = {
	    position: 'absolute',
	    height: 6
	};
	
	var trackVerticalStyleDefault = exports.trackVerticalStyleDefault = {
	    position: 'absolute',
	    width: 6
	};
	
	var thumbHorizontalStyleDefault = exports.thumbHorizontalStyleDefault = {
	    position: 'relative',
	    display: 'block',
	    height: '100%'
	};
	
	var thumbVerticalStyleDefault = exports.thumbVerticalStyleDefault = {
	    position: 'relative',
	    display: 'block',
	    width: '100%'
	};
	
	var disableSelectStyle = exports.disableSelectStyle = {
	    userSelect: 'none'
	};
	
	var disableSelectStyleReset = exports.disableSelectStyleReset = {
	    userSelect: ''
	};

/***/ }),
/* 1554 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Scrollbars = undefined;
	
	var _Scrollbars = __webpack_require__(1552);
	
	var _Scrollbars2 = _interopRequireDefault(_Scrollbars);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	exports["default"] = _Scrollbars2["default"];
	exports.Scrollbars = _Scrollbars2["default"];

/***/ }),
/* 1555 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = getInnerHeight;
	function getInnerHeight(el) {
	    var clientHeight = el.clientHeight;
	
	    var _getComputedStyle = getComputedStyle(el),
	        paddingTop = _getComputedStyle.paddingTop,
	        paddingBottom = _getComputedStyle.paddingBottom;
	
	    return clientHeight - parseFloat(paddingTop) - parseFloat(paddingBottom);
	}

/***/ }),
/* 1556 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = getInnerWidth;
	function getInnerWidth(el) {
	    var clientWidth = el.clientWidth;
	
	    var _getComputedStyle = getComputedStyle(el),
	        paddingLeft = _getComputedStyle.paddingLeft,
	        paddingRight = _getComputedStyle.paddingRight;
	
	    return clientWidth - parseFloat(paddingLeft) - parseFloat(paddingRight);
	}

/***/ }),
/* 1557 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = getScrollbarWidth;
	
	var _domCss = __webpack_require__(439);
	
	var _domCss2 = _interopRequireDefault(_domCss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var scrollbarWidth = false;
	
	function getScrollbarWidth() {
	    if (scrollbarWidth !== false) return scrollbarWidth;
	    /* istanbul ignore else */
	    if (typeof document !== 'undefined') {
	        var div = document.createElement('div');
	        (0, _domCss2["default"])(div, {
	            width: 100,
	            height: 100,
	            position: 'absolute',
	            top: -9999,
	            overflow: 'scroll',
	            MsOverflowStyle: 'scrollbar'
	        });
	        document.body.appendChild(div);
	        scrollbarWidth = div.offsetWidth - div.clientWidth;
	        document.body.removeChild(div);
	    } else {
	        scrollbarWidth = 0;
	    }
	    return scrollbarWidth || 0;
	}

/***/ }),
/* 1558 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = isString;
	function isString(maybe) {
	    return typeof maybe === 'string';
	}

/***/ }),
/* 1559 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = returnFalse;
	function returnFalse() {
	    return false;
	}

/***/ }),
/* 1560 */,
/* 1561 */,
/* 1562 */
/***/ (function(module, exports, __webpack_require__) {

	exports.__esModule = true;
	exports.warn = exports.requestIdleCallback = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _objectAssign = __webpack_require__(213);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var _HelmetConstants = __webpack_require__(535);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var encodeSpecialCharacters = function encodeSpecialCharacters(str) {
	    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	
	    if (encode === false) {
	        return String(str);
	    }
	
	    return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
	};
	
	var getTitleFromPropsList = function getTitleFromPropsList(propsList) {
	    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);
	    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);
	
	    if (innermostTemplate && innermostTitle) {
	        // use function arg to avoid need to escape $ characters
	        return innermostTemplate.replace(/%s/g, function () {
	            return innermostTitle;
	        });
	    }
	
	    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);
	
	    return innermostTitle || innermostDefaultTitle || undefined;
	};
	
	var getOnChangeClientState = function getOnChangeClientState(propsList) {
	    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};
	};
	
	var getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {
	    return propsList.filter(function (props) {
	        return typeof props[tagType] !== "undefined";
	    }).map(function (props) {
	        return props[tagType];
	    }).reduce(function (tagAttrs, current) {
	        return _extends({}, tagAttrs, current);
	    }, {});
	};
	
	var getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {
	    return propsList.filter(function (props) {
	        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== "undefined";
	    }).map(function (props) {
	        return props[_HelmetConstants.TAG_NAMES.BASE];
	    }).reverse().reduce(function (innermostBaseTag, tag) {
	        if (!innermostBaseTag.length) {
	            var keys = Object.keys(tag);
	
	            for (var i = 0; i < keys.length; i++) {
	                var attributeKey = keys[i];
	                var lowerCaseAttributeKey = attributeKey.toLowerCase();
	
	                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {
	                    return innermostBaseTag.concat(tag);
	                }
	            }
	        }
	
	        return innermostBaseTag;
	    }, []);
	};
	
	var getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {
	    // Calculate list of tags, giving priority innermost component (end of the propslist)
	    var approvedSeenTags = {};
	
	    return propsList.filter(function (props) {
	        if (Array.isArray(props[tagName])) {
	            return true;
	        }
	        if (typeof props[tagName] !== "undefined") {
	            warn("Helmet: " + tagName + " should be of type \"Array\". Instead found type \"" + _typeof(props[tagName]) + "\"");
	        }
	        return false;
	    }).map(function (props) {
	        return props[tagName];
	    }).reverse().reduce(function (approvedTags, instanceTags) {
	        var instanceSeenTags = {};
	
	        instanceTags.filter(function (tag) {
	            var primaryAttributeKey = void 0;
	            var keys = Object.keys(tag);
	            for (var i = 0; i < keys.length; i++) {
	                var attributeKey = keys[i];
	                var lowerCaseAttributeKey = attributeKey.toLowerCase();
	
	                // Special rule with link tags, since rel and href are both primary tags, rel takes priority
	                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === "canonical") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === "stylesheet")) {
	                    primaryAttributeKey = lowerCaseAttributeKey;
	                }
	                // Special case for innerHTML which doesn't work lowercased
	                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {
	                    primaryAttributeKey = attributeKey;
	                }
	            }
	
	            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {
	                return false;
	            }
	
	            var value = tag[primaryAttributeKey].toLowerCase();
	
	            if (!approvedSeenTags[primaryAttributeKey]) {
	                approvedSeenTags[primaryAttributeKey] = {};
	            }
	
	            if (!instanceSeenTags[primaryAttributeKey]) {
	                instanceSeenTags[primaryAttributeKey] = {};
	            }
	
	            if (!approvedSeenTags[primaryAttributeKey][value]) {
	                instanceSeenTags[primaryAttributeKey][value] = true;
	                return true;
	            }
	
	            return false;
	        }).reverse().forEach(function (tag) {
	            return approvedTags.push(tag);
	        });
	
	        // Update seen tags with tags from this instance
	        var keys = Object.keys(instanceSeenTags);
	        for (var i = 0; i < keys.length; i++) {
	            var attributeKey = keys[i];
	            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);
	
	            approvedSeenTags[attributeKey] = tagUnion;
	        }
	
	        return approvedTags;
	    }, []).reverse();
	};
	
	var getInnermostProperty = function getInnermostProperty(propsList, property) {
	    for (var i = propsList.length - 1; i >= 0; i--) {
	        var props = propsList[i];
	
	        if (props.hasOwnProperty(property)) {
	            return props[property];
	        }
	    }
	
	    return null;
	};
	
	var reducePropsToState = function reducePropsToState(propsList) {
	    return {
	        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),
	        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),
	        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),
	        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),
	        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),
	        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),
	        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),
	        onChangeClientState: getOnChangeClientState(propsList),
	        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),
	        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),
	        title: getTitleFromPropsList(propsList),
	        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)
	    };
	};
	
	var requestIdleCallback = function () {
	    if (typeof window !== "undefined" && typeof window.requestIdleCallback !== "undefined") {
	        return window.requestIdleCallback;
	    }
	
	    return function (cb) {
	        var start = Date.now();
	        return setTimeout(function () {
	            cb({
	                didTimeout: false,
	                timeRemaining: function timeRemaining() {
	                    return Math.max(0, 50 - (Date.now() - start));
	                }
	            });
	        }, 1);
	    };
	}();
	
	var cancelIdleCallback = function () {
	    if (typeof window !== "undefined" && typeof window.cancelIdleCallback !== "undefined") {
	        return window.cancelIdleCallback;
	    }
	
	    return function (id) {
	        return clearTimeout(id);
	    };
	}();
	
	var warn = function warn(msg) {
	    return console && typeof console.warn === "function" && console.warn(msg);
	};
	
	var _helmetIdleCallback = null;
	
	var handleClientStateChange = function handleClientStateChange(newState) {
	    var baseTag = newState.baseTag,
	        bodyAttributes = newState.bodyAttributes,
	        htmlAttributes = newState.htmlAttributes,
	        linkTags = newState.linkTags,
	        metaTags = newState.metaTags,
	        noscriptTags = newState.noscriptTags,
	        onChangeClientState = newState.onChangeClientState,
	        scriptTags = newState.scriptTags,
	        styleTags = newState.styleTags,
	        title = newState.title,
	        titleAttributes = newState.titleAttributes;
	
	
	    if (_helmetIdleCallback) {
	        cancelIdleCallback(_helmetIdleCallback);
	    }
	
	    _helmetIdleCallback = requestIdleCallback(function () {
	        updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);
	        updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);
	
	        updateTitle(title, titleAttributes);
	
	        var tagUpdates = {
	            baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),
	            linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),
	            metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),
	            noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),
	            scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),
	            styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)
	        };
	
	        var addedTags = {};
	        var removedTags = {};
	
	        Object.keys(tagUpdates).forEach(function (tagType) {
	            var _tagUpdates$tagType = tagUpdates[tagType],
	                newTags = _tagUpdates$tagType.newTags,
	                oldTags = _tagUpdates$tagType.oldTags;
	
	
	            if (newTags.length) {
	                addedTags[tagType] = newTags;
	            }
	            if (oldTags.length) {
	                removedTags[tagType] = tagUpdates[tagType].oldTags;
	            }
	        });
	
	        _helmetIdleCallback = null;
	        onChangeClientState(newState, addedTags, removedTags);
	    });
	};
	
	var updateTitle = function updateTitle(title, attributes) {
	    if (typeof title !== "undefined" && document.title !== title) {
	        document.title = Array.isArray(title) ? title.join("") : title;
	    }
	
	    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);
	};
	
	var updateAttributes = function updateAttributes(tagName, attributes) {
	    var elementTag = document.getElementsByTagName(tagName)[0];
	
	    if (!elementTag) {
	        return;
	    }
	
	    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);
	    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(",") : [];
	    var attributesToRemove = [].concat(helmetAttributes);
	    var attributeKeys = Object.keys(attributes);
	
	    for (var i = 0; i < attributeKeys.length; i++) {
	        var attribute = attributeKeys[i];
	        var value = attributes[attribute] || "";
	
	        if (elementTag.getAttribute(attribute) !== value) {
	            elementTag.setAttribute(attribute, value);
	        }
	
	        if (helmetAttributes.indexOf(attribute) === -1) {
	            helmetAttributes.push(attribute);
	        }
	
	        var indexToSave = attributesToRemove.indexOf(attribute);
	        if (indexToSave !== -1) {
	            attributesToRemove.splice(indexToSave, 1);
	        }
	    }
	
	    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {
	        elementTag.removeAttribute(attributesToRemove[_i]);
	    }
	
	    if (helmetAttributes.length === attributesToRemove.length) {
	        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);
	    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(",")) {
	        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(","));
	    }
	};
	
	var updateTags = function updateTags(type, tags) {
	    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);
	    var tagNodes = headElement.querySelectorAll(type + "[" + _HelmetConstants.HELMET_ATTRIBUTE + "]");
	    var oldTags = Array.prototype.slice.call(tagNodes);
	    var newTags = [];
	    var indexToDelete = void 0;
	
	    if (tags && tags.length) {
	        tags.forEach(function (tag) {
	            var newElement = document.createElement(type);
	
	            for (var attribute in tag) {
	                if (tag.hasOwnProperty(attribute)) {
	                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {
	                        newElement.innerHTML = tag.innerHTML;
	                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {
	                        if (newElement.styleSheet) {
	                            newElement.styleSheet.cssText = tag.cssText;
	                        } else {
	                            newElement.appendChild(document.createTextNode(tag.cssText));
	                        }
	                    } else {
	                        var value = typeof tag[attribute] === "undefined" ? "" : tag[attribute];
	                        newElement.setAttribute(attribute, value);
	                    }
	                }
	            }
	
	            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, "true");
	
	            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.
	            if (oldTags.some(function (existingTag, index) {
	                indexToDelete = index;
	                return newElement.isEqualNode(existingTag);
	            })) {
	                oldTags.splice(indexToDelete, 1);
	            } else {
	                newTags.push(newElement);
	            }
	        });
	    }
	
	    oldTags.forEach(function (tag) {
	        return tag.parentNode.removeChild(tag);
	    });
	    newTags.forEach(function (tag) {
	        return headElement.appendChild(tag);
	    });
	
	    return {
	        oldTags: oldTags,
	        newTags: newTags
	    };
	};
	
	var generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {
	    return Object.keys(attributes).reduce(function (str, key) {
	        var attr = typeof attributes[key] !== "undefined" ? key + "=\"" + attributes[key] + "\"" : "" + key;
	        return str ? str + " " + attr : attr;
	    }, "");
	};
	
	var generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {
	    var attributeString = generateElementAttributesAsString(attributes);
	    return attributeString ? "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\" " + attributeString + ">" + encodeSpecialCharacters(title, encode) + "</" + type + ">" : "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\">" + encodeSpecialCharacters(title, encode) + "</" + type + ">";
	};
	
	var generateTagsAsString = function generateTagsAsString(type, tags, encode) {
	    return tags.reduce(function (str, tag) {
	        var attributeHtml = Object.keys(tag).filter(function (attribute) {
	            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);
	        }).reduce(function (string, attribute) {
	            var attr = typeof tag[attribute] === "undefined" ? attribute : attribute + "=\"" + encodeSpecialCharacters(tag[attribute], encode) + "\"";
	            return string ? string + " " + attr : attr;
	        }, "");
	
	        var tagContent = tag.innerHTML || tag.cssText || "";
	
	        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;
	
	        return str + "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\" " + attributeHtml + (isSelfClosing ? "/>" : ">" + tagContent + "</" + type + ">");
	    }, "");
	};
	
	var convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {
	    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    return Object.keys(attributes).reduce(function (obj, key) {
	        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];
	        return obj;
	    }, initProps);
	};
	
	var convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {
	    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    return Object.keys(props).reduce(function (obj, key) {
	        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];
	        return obj;
	    }, initAttributes);
	};
	
	var generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {
	    var _initProps;
	
	    // assigning into an array to define toString function on it
	    var initProps = (_initProps = {
	        key: title
	    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);
	    var props = convertElementAttributestoReactProps(attributes, initProps);
	
	    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];
	};
	
	var generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {
	    return tags.map(function (tag, i) {
	        var _mappedTag;
	
	        var mappedTag = (_mappedTag = {
	            key: i
	        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);
	
	        Object.keys(tag).forEach(function (attribute) {
	            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;
	
	            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {
	                var content = tag.innerHTML || tag.cssText;
	                mappedTag.dangerouslySetInnerHTML = { __html: content };
	            } else {
	                mappedTag[mappedAttribute] = tag[attribute];
	            }
	        });
	
	        return _react2.default.createElement(type, mappedTag);
	    });
	};
	
	var getMethodsForTag = function getMethodsForTag(type, tags, encode) {
	    switch (type) {
	        case _HelmetConstants.TAG_NAMES.TITLE:
	            return {
	                toComponent: function toComponent() {
	                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);
	                },
	                toString: function toString() {
	                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);
	                }
	            };
	        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:
	        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:
	            return {
	                toComponent: function toComponent() {
	                    return convertElementAttributestoReactProps(tags);
	                },
	                toString: function toString() {
	                    return generateElementAttributesAsString(tags);
	                }
	            };
	        default:
	            return {
	                toComponent: function toComponent() {
	                    return generateTagsAsReactComponent(type, tags);
	                },
	                toString: function toString() {
	                    return generateTagsAsString(type, tags, encode);
	                }
	            };
	    }
	};
	
	var mapStateOnServer = function mapStateOnServer(_ref) {
	    var baseTag = _ref.baseTag,
	        bodyAttributes = _ref.bodyAttributes,
	        encode = _ref.encode,
	        htmlAttributes = _ref.htmlAttributes,
	        linkTags = _ref.linkTags,
	        metaTags = _ref.metaTags,
	        noscriptTags = _ref.noscriptTags,
	        scriptTags = _ref.scriptTags,
	        styleTags = _ref.styleTags,
	        _ref$title = _ref.title,
	        title = _ref$title === undefined ? "" : _ref$title,
	        titleAttributes = _ref.titleAttributes;
	    return {
	        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),
	        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),
	        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),
	        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),
	        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),
	        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),
	        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),
	        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),
	        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)
	    };
	};
	
	exports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;
	exports.handleClientStateChange = handleClientStateChange;
	exports.mapStateOnServer = mapStateOnServer;
	exports.reducePropsToState = reducePropsToState;
	exports.requestIdleCallback = requestIdleCallback;
	exports.warn = warn;

/***/ }),
/* 1563 */,
/* 1564 */,
/* 1565 */,
/* 1566 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	/**
	 * @description
	 * `<Index>` is the component that allows you to apply widgets to a dedicated index. It's
	 * useful if you want to build an interface that targets multiple indices.
	 * @kind widget
	 * @name <Index>
	 * @propType {string} indexName - index in which to search.
	 * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Index, SearchBox, Hits, Configure } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Configure hitsPerPage={5} />
	 *     <SearchBox />
	 *     <Index indexName="instant_search">
	 *       <Hits />
	 *     </Index>
	 *     <Index indexName="bestbuy">
	 *       <Hits />
	 *     </Index>
	 *   </InstantSearch>
	 * );
	 */
	var Index =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Index, _Component);
	
	  function Index() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Index);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    /*
	     we want <Index> to be seen as a regular widget.
	     It means that with only <Index> present a new query will be sent to Algolia.
	     That way you don't need a virtual hits widget to use the connectAutoComplete.
	    */
	
	    _this.unregisterWidget = _this.context.ais.widgetsManager.registerWidget((0, _assertThisInitialized2.default)(_this));
	    return _this;
	  }
	
	  (0, _createClass2.default)(Index, [{
	    key: "componentWillMount",
	    value: function componentWillMount() {
	      this.context.ais.onSearchParameters(this.getSearchParameters.bind(this), this.getChildContext(), this.props);
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.props.indexName !== nextProps.indexName) {
	        this.context.ais.widgetsManager.update();
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.unregisterWidget();
	    }
	  }, {
	    key: "getChildContext",
	    value: function getChildContext() {
	      return {
	        multiIndexContext: {
	          targetedIndex: this.props.indexId
	        }
	      };
	    }
	  }, {
	    key: "getSearchParameters",
	    value: function getSearchParameters(searchParameters, props) {
	      return searchParameters.setIndex(this.props ? this.props.indexName : props.indexName);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var childrenCount = _react.Children.count(this.props.children);
	
	      var _this$props$root = this.props.root,
	          Root = _this$props$root.Root,
	          props = _this$props$root.props;
	      if (childrenCount === 0) return null;else return _react.default.createElement(Root, props, this.props.children);
	    }
	  }]);
	  return Index;
	}(_react.Component);
	
	Index.propTypes = {
	  // @TODO: These props are currently constant.
	  indexName: _propTypes.default.string.isRequired,
	  indexId: _propTypes.default.string.isRequired,
	  children: _propTypes.default.node,
	  root: _propTypes.default.shape({
	    Root: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	    props: _propTypes.default.object
	  }).isRequired
	};
	Index.childContextTypes = {
	  multiIndexContext: _propTypes.default.object.isRequired
	};
	Index.contextTypes = {
	  // @TODO: more precise widgets manager propType
	  ais: _propTypes.default.object.isRequired
	};
	var _default = Index;
	exports.default = _default;

/***/ }),
/* 1567 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createInstantSearchManager = _interopRequireDefault(__webpack_require__(1592));
	
	function validateNextProps(props, nextProps) {
	  if (!props.searchState && nextProps.searchState) {
	    throw new Error("You can't switch <InstantSearch> from being uncontrolled to controlled");
	  } else if (props.searchState && !nextProps.searchState) {
	    throw new Error("You can't switch <InstantSearch> from being controlled to uncontrolled");
	  }
	}
	/**
	 * @description
	 * `<InstantSearch>` is the root component of all React InstantSearch implementations.
	 * It provides all the connected components (aka widgets) a means to interact
	 * with the searchState.
	 * @kind widget
	 * @name <InstantSearch>
	 * @requirements You will need to have an Algolia account to be able to use this widget.
	 * [Create one now](https://www.algolia.com/users/sign_up).
	 * @propType {string} appId - Your Algolia application id.
	 * @propType {string} apiKey - Your Algolia search-only API key.
	 * @propType {string} indexName - Main index in which to search.
	 * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.
	 * @propType {object} [algoliaClient] - Provide a custom Algolia client instead of the internal one (deprecated in favor of `searchClient`).
	 * @propType {object} [searchClient] - Provide a custom search client.
	 * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).
	 * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).
	 * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).
	 * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).
	 * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.
	 * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SearchBox />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	
	
	var InstantSearch =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(InstantSearch, _Component);
	
	  function InstantSearch(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, InstantSearch);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InstantSearch).call(this, props));
	    _this.isControlled = Boolean(props.searchState);
	    var initialState = _this.isControlled ? props.searchState : {};
	    _this.isUnmounting = false;
	    _this.aisManager = (0, _createInstantSearchManager.default)({
	      indexName: props.indexName,
	      searchClient: props.searchClient,
	      initialState: initialState,
	      resultsState: props.resultsState,
	      stalledSearchDelay: props.stalledSearchDelay
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(InstantSearch, [{
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      validateNextProps(this.props, nextProps);
	
	      if (this.props.indexName !== nextProps.indexName) {
	        this.aisManager.updateIndex(nextProps.indexName);
	      }
	
	      if (this.props.refresh !== nextProps.refresh) {
	        if (nextProps.refresh) {
	          this.aisManager.clearCache();
	        }
	      }
	
	      if (this.props.searchClient !== nextProps.searchClient) {
	        this.aisManager.updateClient(nextProps.searchClient);
	      }
	
	      if (this.isControlled) {
	        this.aisManager.onExternalStateUpdate(nextProps.searchState);
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.isUnmounting = true;
	      this.aisManager.skipSearch();
	    }
	  }, {
	    key: "getChildContext",
	    value: function getChildContext() {
	      // If not already cached, cache the bound methods so that we can forward them as part
	      // of the context.
	      if (!this._aisContextCache) {
	        this._aisContextCache = {
	          ais: {
	            onInternalStateUpdate: this.onWidgetsInternalStateUpdate.bind(this),
	            createHrefForState: this.createHrefForState.bind(this),
	            onSearchForFacetValues: this.onSearchForFacetValues.bind(this),
	            onSearchStateChange: this.onSearchStateChange.bind(this),
	            onSearchParameters: this.onSearchParameters.bind(this)
	          }
	        };
	      }
	
	      return {
	        ais: (0, _objectSpread2.default)({}, this._aisContextCache.ais, {
	          store: this.aisManager.store,
	          widgetsManager: this.aisManager.widgetsManager,
	          mainTargetedIndex: this.props.indexName
	        })
	      };
	    }
	  }, {
	    key: "createHrefForState",
	    value: function createHrefForState(searchState) {
	      searchState = this.aisManager.transitionState(searchState);
	      return this.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';
	    }
	  }, {
	    key: "onWidgetsInternalStateUpdate",
	    value: function onWidgetsInternalStateUpdate(searchState) {
	      searchState = this.aisManager.transitionState(searchState);
	      this.onSearchStateChange(searchState);
	
	      if (!this.isControlled) {
	        this.aisManager.onExternalStateUpdate(searchState);
	      }
	    }
	  }, {
	    key: "onSearchStateChange",
	    value: function onSearchStateChange(searchState) {
	      if (this.props.onSearchStateChange && !this.isUnmounting) {
	        this.props.onSearchStateChange(searchState);
	      }
	    }
	  }, {
	    key: "onSearchParameters",
	    value: function onSearchParameters(getSearchParameters, context, props) {
	      if (this.props.onSearchParameters) {
	        var searchState = this.props.searchState ? this.props.searchState : {};
	        this.props.onSearchParameters(getSearchParameters, context, props, searchState);
	      }
	    }
	  }, {
	    key: "onSearchForFacetValues",
	    value: function onSearchForFacetValues(searchState) {
	      this.aisManager.onSearchForFacetValues(searchState);
	    }
	  }, {
	    key: "getKnownKeys",
	    value: function getKnownKeys() {
	      return this.aisManager.getWidgetsIds();
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var childrenCount = _react.Children.count(this.props.children);
	
	      var _this$props$root = this.props.root,
	          Root = _this$props$root.Root,
	          props = _this$props$root.props;
	      if (childrenCount === 0) return null;else return _react.default.createElement(Root, props, this.props.children);
	    }
	  }]);
	  return InstantSearch;
	}(_react.Component);
	
	InstantSearch.defaultProps = {
	  stalledSearchDelay: 200
	};
	InstantSearch.propTypes = {
	  // @TODO: These props are currently constant.
	  indexName: _propTypes.default.string.isRequired,
	  searchClient: _propTypes.default.object.isRequired,
	  createURL: _propTypes.default.func,
	  refresh: _propTypes.default.bool.isRequired,
	  searchState: _propTypes.default.object,
	  onSearchStateChange: _propTypes.default.func,
	  onSearchParameters: _propTypes.default.func,
	  resultsState: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
	  children: _propTypes.default.node,
	  root: _propTypes.default.shape({
	    Root: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	    props: _propTypes.default.object
	  }).isRequired,
	  stalledSearchDelay: _propTypes.default.number
	};
	InstantSearch.childContextTypes = {
	  // @TODO: more precise widgets manager propType
	  ais: _propTypes.default.object.isRequired
	};
	var _default = InstantSearch;
	exports.default = _default;

/***/ }),
/* 1568 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(84));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	var getId = function getId() {
	  return 'query';
	};
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  var currentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, '');
	
	  if (currentRefinement) {
	    return currentRefinement;
	  }
	
	  return '';
	}
	
	function getHits(searchResults) {
	  if (searchResults.results) {
	    if (searchResults.results.hits && Array.isArray(searchResults.results.hits)) {
	      return searchResults.results.hits;
	    } else {
	      return Object.keys(searchResults.results).reduce(function (hits, index) {
	        return [].concat((0, _toConsumableArray2.default)(hits), [{
	          index: index,
	          hits: searchResults.results[index].hits
	        }]);
	      }, []);
	    }
	  } else {
	    return [];
	  }
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId();
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, getId());
	}
	/**
	 * connectAutoComplete connector provides the logic to create connected
	 * components that will render the results retrieved from
	 * Algolia.
	 *
	 * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage
	 * prop to a [Configure](guide/Search_parameters.html) widget.
	 * @name connectAutoComplete
	 * @kind connector
	 * @propType {string} [defaultRefinement] - Provide a default value for the query
	 * @providedPropType {array.<object>} hits - the records that matched the search state
	 * @providedPropType {function} refine - a function to change the query
	 * @providedPropType {string} currentRefinement - the query to search for
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaAutoComplete',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    return {
	      hits: getHits(searchResults),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context)
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	
	  /* connectAutoComplete needs to be considered as a widget to trigger a search if no others widgets are used.
	   * To be considered as a widget you need either getSearchParameters, getMetadata or getTransitionState
	   * See createConnector.js
	   * */
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setQuery(getCurrentRefinement(props, searchState, this.context));
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1569 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.getId = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	var getId = function getId(props) {
	  return props.attributes[0];
	};
	
	exports.getId = getId;
	var namespace = 'hierarchicalMenu';
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement || '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function transformValue(values) {
	  return values.reduce(function (acc, item) {
	    if (item.isRefined) {
	      acc.push({
	        label: item.name,
	        // If dealing with a nested "items", "value" is equal to the previous value concatenated with the current label
	        // If dealing with the first level, "value" is equal to the current label
	        value: item.path
	      }); // Create a variable in order to keep the same acc for the recursion, otherwise "reduce" returns a new one
	
	      if (item.data) {
	        acc = acc.concat(transformValue(item.data, acc));
	      }
	    }
	
	    return acc;
	  }, []);
	}
	/**
	 * The breadcrumb component is s a type of secondary navigation scheme that
	 * reveals the user’s location in a website or web application.
	 *
	 * @name connectBreadcrumb
	 * @requirements To use this widget, your attributes must be formatted in a specific way.
	 * If you want for example to have a Breadcrumb of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 *   "categories.lvl2": "products > fruits > citrus"
	 * }
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @kind connector
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the Breadcrumb can display.
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaBreadcrumb',
	  propTypes: {
	    attributes: function attributes(props, propName, componentName) {
	      var isNotString = function isNotString(val) {
	        return typeof val !== 'string';
	      };
	
	      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {
	        return new Error("Invalid prop ".concat(propName, " supplied to ").concat(componentName, ". Expected an Array of Strings"));
	      }
	
	      return undefined;
	    },
	    transformItems: _propTypes.default.func
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var id = getId(props);
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));
	
	    if (!isFacetPresent) {
	      return {
	        items: [],
	        canRefine: false
	      };
	    }
	
	    var values = results.getFacetValues(id);
	    var items = values.data ? transformValue(values.data) : [];
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      canRefine: transformedItems.length > 0,
	      items: transformedItems
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1570 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	/**
	 * connectCurrentRefinements connector provides the logic to build a widget that will
	 * give the user the ability to remove all or some of the filters that were
	 * set.
	 * @name connectCurrentRefinements
	 * @kind connector
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @propType {function} [clearsQuery=false] - Pass true to also clear the search query
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {array.<{label: string, attribute: string, currentRefinement: string || object, items: array, value: function}>} items - all the filters, the `value` is to pass to the `refine` function for removing all currentrefinements, `label` is for the display. When existing several refinements for the same atribute name, then you get a nested `items` object that contains a `label` and a `value` function to use to remove a single filter. `attribute` and `currentRefinement` are metadata containing row values.
	 * @providedPropType {string} query - the search query
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaCurrentRefinements',
	  propTypes: {
	    transformItems: _propTypes.default.func
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults, metadata) {
	    var items = metadata.reduce(function (res, meta) {
	      if (typeof meta.items !== 'undefined') {
	        if (!props.clearsQuery && meta.id === 'query') {
	          return res;
	        } else {
	          if (props.clearsQuery && meta.id === 'query' && meta.items[0].currentRefinement === '') {
	            return res;
	          }
	
	          return res.concat(meta.items.map(function (item) {
	            return (0, _objectSpread2.default)({}, item, {
	              id: meta.id,
	              index: meta.index
	            });
	          }));
	        }
	      }
	
	      return res;
	    }, []);
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      items: transformedItems,
	      canRefine: transformedItems.length > 0
	    };
	  },
	  refine: function refine(props, searchState, items) {
	    // `value` corresponds to our internal clear function computed in each connector metadata.
	    var refinementsToClear = items instanceof Array ? items.map(function (item) {
	      return item.value;
	    }) : [items];
	    return refinementsToClear.reduce(function (res, clear) {
	      return clear(res);
	    }, searchState);
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1571 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _isEmpty2 = _interopRequireDefault(__webpack_require__(80));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	/**
	 * The GeoSearch connector provides the logic to build a widget that will display the results on a map.
	 * It also provides a way to search for results based on their position. The connector provides function to manage the search experience (search on map interaction).
	 * @name connectGeoSearch
	 * @kind connector
	 * @requirements Note that the GeoSearch connector uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia.
	 * Your hits **must** have a `_geoloc` attribute in order to be passed to the rendering function. Currently, the feature is not compatible with multiple values in the `_geoloc` attribute
	 * (e.g. a restaurant with multiple locations). In that case you can duplicate your records and use the [distinct](https://www.algolia.com/doc/guides/ranking/distinct) feature of Algolia to only retrieve unique results.
	 * @propType {{ northEast: { lat: number, lng: number }, southWest: { lat: number, lng: number } }} [defaultRefinement] - Default search state of the widget containing the bounds for the map
	 * @providedPropType {function({ northEast: { lat: number, lng: number }, southWest: { lat: number, lng: number } })} refine - a function to toggle the refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {array.<object>} hits - the records that matched the search
	 * @providedPropType {boolean} isRefinedWithMap - true if the current refinement is set with the map bounds
	 * @providedPropType {{ northEast: { lat: number, lng: number }, southWest: { lat: number, lng: number } }} [currentRefinement] - the refinement currently applied
	 * @providedPropType {{ lat: number, lng: number }} [position] - the position of the search
	 */
	// To control the map with an external widget the other widget
	// **must** write the value in the attribute `aroundLatLng`
	var getBoundingBoxId = function getBoundingBoxId() {
	  return 'boundingBox';
	};
	
	var getAroundLatLngId = function getAroundLatLngId() {
	  return 'aroundLatLng';
	};
	
	var getConfigureAroundLatLngId = function getConfigureAroundLatLngId() {
	  return 'configure.aroundLatLng';
	};
	
	var currentRefinementToString = function currentRefinementToString(currentRefinement) {
	  return [currentRefinement.northEast.lat, currentRefinement.northEast.lng, currentRefinement.southWest.lat, currentRefinement.southWest.lng].join();
	};
	
	var stringToCurrentRefinement = function stringToCurrentRefinement(value) {
	  var values = value.split(',');
	  return {
	    northEast: {
	      lat: parseFloat(values[0]),
	      lng: parseFloat(values[1])
	    },
	    southWest: {
	      lat: parseFloat(values[2]),
	      lng: parseFloat(values[3])
	    }
	  };
	};
	
	var latLngRegExp = /^(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)$/;
	
	var stringToPosition = function stringToPosition(value) {
	  var pattern = value.match(latLngRegExp);
	  return {
	    lat: parseFloat(pattern[1]),
	    lng: parseFloat(pattern[2])
	  };
	};
	
	var getCurrentRefinement = function getCurrentRefinement(props, searchState, context) {
	  var refinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, getBoundingBoxId(), {});
	
	  if ((0, _isEmpty2.default)(refinement)) {
	    return;
	  } // eslint-disable-next-line consistent-return
	
	
	  return {
	    northEast: {
	      lat: parseFloat(refinement.northEast.lat),
	      lng: parseFloat(refinement.northEast.lng)
	    },
	    southWest: {
	      lat: parseFloat(refinement.southWest.lat),
	      lng: parseFloat(refinement.southWest.lng)
	    }
	  };
	};
	
	var getCurrentPosition = function getCurrentPosition(props, searchState, context) {
	  var defaultRefinement = props.defaultRefinement,
	      propsWithoutDefaultRefinement = (0, _objectWithoutProperties2.default)(props, ["defaultRefinement"]);
	  var aroundLatLng = (0, _indexUtils.getCurrentRefinementValue)(propsWithoutDefaultRefinement, searchState, context, getAroundLatLngId());
	
	  if (!aroundLatLng) {
	    // Fallback on `configure.aroundLatLng`
	    var configureAroundLatLng = (0, _indexUtils.getCurrentRefinementValue)(propsWithoutDefaultRefinement, searchState, context, getConfigureAroundLatLngId());
	    return configureAroundLatLng && stringToPosition(configureAroundLatLng);
	  }
	
	  return aroundLatLng;
	};
	
	var _refine = function refine(searchState, nextValue, context) {
	  var resetPage = true;
	  var nextRefinement = (0, _defineProperty2.default)({}, getBoundingBoxId(), nextValue);
	  return (0, _indexUtils.refineValue)(searchState, nextRefinement, context, resetPage);
	};
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaGeoSearch',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context); // We read it from both because the SearchParameters & the searchState are not always
	    // in sync. When we set the refinement the searchState is used but when we clear the refinement
	    // the SearchParameters is used. In the first case when we render, the results are not there
	    // so we can't find the value from the results. The most up to date value is the searchState.
	    // But when we clear the refinement the searchState is immediatly cleared even when the items
	    // retrieved are still the one from the previous query with the bounding box. It leads to some
	    // issue with the position of the map. We should rely on 1 source of truth or at least always
	    // be sync.
	
	    var currentRefinementFromSearchState = getCurrentRefinement(props, searchState, this.context);
	    var currentRefinementFromSearchParameters = results && results._state.insideBoundingBox && stringToCurrentRefinement(results._state.insideBoundingBox) || undefined;
	    var currentPositionFromSearchState = getCurrentPosition(props, searchState, this.context);
	    var currentPositionFromSearchParameters = results && results._state.aroundLatLng && stringToPosition(results._state.aroundLatLng) || undefined;
	    var currentRefinement = currentRefinementFromSearchState || currentRefinementFromSearchParameters;
	    var position = currentPositionFromSearchState || currentPositionFromSearchParameters;
	    return {
	      hits: !results ? [] : results.hits.filter(function (_) {
	        return Boolean(_._geoloc);
	      }),
	      isRefinedWithMap: Boolean(currentRefinement),
	      currentRefinement: currentRefinement,
	      position: position
	    };
	  },
	  refine: function refine(props, searchState, nextValue) {
	    return _refine(searchState, nextValue, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    if (!currentRefinement) {
	      return searchParameters;
	    }
	
	    return searchParameters.setQueryParameter('insideBoundingBox', currentRefinementToString(currentRefinement));
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getBoundingBoxId());
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var items = [];
	    var id = getBoundingBoxId();
	    var index = (0, _indexUtils.getIndexId)(this.context);
	    var nextRefinement = {};
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    if (currentRefinement) {
	      items.push({
	        label: "".concat(id, ": ").concat(currentRefinementToString(currentRefinement)),
	        value: function value(nextState) {
	          return _refine(nextState, nextRefinement, _this.context);
	        },
	        currentRefinement: currentRefinement
	      });
	    }
	
	    return {
	      id: id,
	      index: index,
	      items: items
	    };
	  },
	  shouldComponentUpdate: function shouldComponentUpdate() {
	    return true;
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1572 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.getId = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _algoliasearchHelper = _interopRequireDefault(__webpack_require__(387));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	var getId = function getId(props) {
	  return props.attributes[0];
	};
	
	exports.getId = getId;
	var namespace = 'hierarchicalMenu';
	
	function getCurrentRefinement(props, searchState, context) {
	  var currentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), null);
	
	  if (currentRefinement === '') {
	    return null;
	  }
	
	  return currentRefinement;
	}
	
	function getValue(path, props, searchState, context) {
	  var id = props.id,
	      attributes = props.attributes,
	      separator = props.separator,
	      rootPath = props.rootPath,
	      showParentLevel = props.showParentLevel;
	  var currentRefinement = getCurrentRefinement(props, searchState, context);
	  var nextRefinement;
	
	  if (currentRefinement === null) {
	    nextRefinement = path;
	  } else {
	    var tmpSearchParameters = new _algoliasearchHelper.default.SearchParameters({
	      hierarchicalFacets: [{
	        name: id,
	        attributes: attributes,
	        separator: separator,
	        rootPath: rootPath,
	        showParentLevel: showParentLevel
	      }]
	    });
	    nextRefinement = tmpSearchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement).toggleHierarchicalFacetRefinement(id, path).getHierarchicalRefinement(id)[0];
	  }
	
	  return nextRefinement;
	}
	
	function transformValue(value, props, searchState, context) {
	  return value.map(function (v) {
	    return {
	      label: v.name,
	      value: getValue(v.path, props, searchState, context),
	      count: v.count,
	      isRefined: v.isRefined,
	      items: v.data && transformValue(v.data, props, searchState, context)
	    };
	  });
	}
	
	var truncate = function truncate() {
	  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
	  return items.slice(0, limit).map(function () {
	    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    return Array.isArray(item.items) ? (0, _objectSpread2.default)({}, item, {
	      items: truncate(item.items, limit)
	    }) : item;
	  });
	};
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement || '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	
	var sortBy = ['name:asc'];
	/**
	 * connectHierarchicalMenu connector provides the logic to build a widget that will
	 * give the user the ability to explore a tree-like structure.
	 * This is commonly used for multi-level categorization of products on e-commerce
	 * websites. From a UX point of view, we suggest not displaying more than two levels deep.
	 * @name connectHierarchicalMenu
	 * @requirements To use this widget, your attributes must be formatted in a specific way.
	 * If you want for example to have a hiearchical menu of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 *   "categories.lvl2": "products > fruits > citrus"
	 * }
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @kind connector
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.
	 * @propType {string} [defaultRefinement] - the item value selected by default
	 * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limit and showMoreLimit.
	 * @propType {number} [limit=10] -  The maximum number of items displayed.
	 * @propType {number} [showMoreLimit=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.
	 * @propType {string} [separator='>'] -  Specifies the level separator used in the data.
	 * @propType {string} [rootPath=null] - The path to use if the first level is not the root level.
	 * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the HierarchicalMenu can display. items has the same shape as parent items.
	 */
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaHierarchicalMenu',
	  propTypes: {
	    attributes: function attributes(props, propName, componentName) {
	      var isNotString = function isNotString(val) {
	        return typeof val !== 'string';
	      };
	
	      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {
	        return new Error("Invalid prop ".concat(propName, " supplied to ").concat(componentName, ". Expected an Array of Strings"));
	      }
	
	      return undefined;
	    },
	    separator: _propTypes.default.string,
	    rootPath: _propTypes.default.string,
	    showParentLevel: _propTypes.default.bool,
	    defaultRefinement: _propTypes.default.string,
	    showMore: _propTypes.default.bool,
	    limit: _propTypes.default.number,
	    showMoreLimit: _propTypes.default.number,
	    transformItems: _propTypes.default.func
	  },
	  defaultProps: {
	    showMore: false,
	    limit: 10,
	    showMoreLimit: 20,
	    separator: ' > ',
	    rootPath: null,
	    showParentLevel: true
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var showMore = props.showMore,
	        limit = props.limit,
	        showMoreLimit = props.showMoreLimit;
	    var id = getId(props);
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));
	
	    if (!isFacetPresent) {
	      return {
	        items: [],
	        currentRefinement: getCurrentRefinement(props, searchState, this.context),
	        canRefine: false
	      };
	    }
	
	    var itemsLimit = showMore ? showMoreLimit : limit;
	    var value = results.getFacetValues(id, {
	      sortBy: sortBy
	    });
	    var items = value.data ? transformValue(value.data, props, searchState, this.context) : [];
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      items: truncate(transformedItems, itemsLimit),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      canRefine: transformedItems.length > 0
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attributes = props.attributes,
	        separator = props.separator,
	        rootPath = props.rootPath,
	        showParentLevel = props.showParentLevel,
	        showMore = props.showMore,
	        limit = props.limit,
	        showMoreLimit = props.showMoreLimit;
	    var id = getId(props);
	    var itemsLimit = showMore ? showMoreLimit : limit;
	    searchParameters = searchParameters.addHierarchicalFacet({
	      name: id,
	      attributes: attributes,
	      separator: separator,
	      rootPath: rootPath,
	      showParentLevel: showParentLevel
	    }).setQueryParameters({
	      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, itemsLimit)
	    });
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    if (currentRefinement !== null) {
	      searchParameters = searchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement);
	    }
	
	    return searchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var rootAttribute = props.attributes[0];
	    var id = getId(props);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndexId)(this.context),
	      items: !currentRefinement ? [] : [{
	        label: "".concat(rootAttribute, ": ").concat(currentRefinement),
	        attribute: rootAttribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this.context);
	        },
	        currentRefinement: currentRefinement
	      }]
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1573 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _highlight = __webpack_require__(332);
	
	var highlight = function highlight(_ref) {
	  var attribute = _ref.attribute,
	      hit = _ref.hit,
	      highlightProperty = _ref.highlightProperty,
	      _ref$preTag = _ref.preTag,
	      preTag = _ref$preTag === void 0 ? _highlight.HIGHLIGHT_TAGS.highlightPreTag : _ref$preTag,
	      _ref$postTag = _ref.postTag,
	      postTag = _ref$postTag === void 0 ? _highlight.HIGHLIGHT_TAGS.highlightPostTag : _ref$postTag;
	  return (0, _highlight.parseAlgoliaHit)({
	    attribute: attribute,
	    highlightProperty: highlightProperty,
	    hit: hit,
	    preTag: preTag,
	    postTag: postTag
	  });
	};
	/**
	 * connectHighlight connector provides the logic to create an highlighter
	 * component that will retrieve, parse and render an highlighted attribute
	 * from an Algolia hit.
	 * @name connectHighlight
	 * @kind connector
	 * @category connector
	 * @providedPropType {function} highlight - function to retrieve and parse an attribute from a hit. It takes a configuration object with 3 attributes: `highlightProperty` which is the property that contains the highlight structure from the records, `attribute` which is the name of the attribute (it can be either a string or an array of strings) to look for and `hit` which is the hit from Algolia. It returns an array of objects `{value: string, isHighlighted: boolean}`. If the element that corresponds to the attribute is an array of strings, it will return a nested array of objects.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, connectHighlight } from 'react-instantsearch-dom';
	 *
	 * const CustomHighlight = connectHighlight(
	 *   ({ highlight, attribute, hit, highlightProperty }) => {
	 *     const highlights = highlight({
	 *       highlightProperty: '_highlightResult',
	 *       attribute,
	 *       hit
	 *     });
	 *
	 *     return highlights.map(part => part.isHighlighted ? (
	 *       <mark>{part.value}</mark>
	 *     ) : (
	 *       <span>{part.value}</span>
	 *     ));
	 *   }
	 * );
	 *
	 * const Hit = ({ hit }) => (
	 *   <p>
	 *     <CustomHighlight attribute="name" hit={hit} />
	 *   </p>
	 * );
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SearchBox defaultRefinement="pho" />
	 *     <Hits hitComponent={Hit} />
	 *   </InstantSearch>
	 * );
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaHighlighter',
	  propTypes: {},
	  getProvidedProps: function getProvidedProps() {
	    return {
	      highlight: highlight
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1574 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	function inferPayload(_ref) {
	  var method = _ref.method,
	      results = _ref.results,
	      currentHit = _ref.currentHit;
	  var index = results.index;
	  var queryID = currentHit.__queryID;
	  var objectIDs = [currentHit.objectID];
	
	  switch (method) {
	    case 'clickedObjectIDsAfterSearch':
	      {
	        var positions = [currentHit.__position];
	        return {
	          index: index,
	          queryID: queryID,
	          objectIDs: objectIDs,
	          positions: positions
	        };
	      }
	
	    case 'convertedObjectIDsAfterSearch':
	      return {
	        index: index,
	        queryID: queryID,
	        objectIDs: objectIDs
	      };
	
	    default:
	      throw new Error("Unsupported method \"".concat(method, "\" passed to the insights function. The supported methods are: \"clickedObjectIDsAfterSearch\", \"convertedObjectIDsAfterSearch\"."));
	  }
	}
	
	var wrapInsightsClient = function wrapInsightsClient(aa, results, currentHit) {
	  return function (method, payload) {
	    if (typeof aa !== 'function') {
	      throw new TypeError("Expected insightsClient to be a Function");
	    }
	
	    var inferredPayload = inferPayload({
	      method: method,
	      results: results,
	      currentHit: currentHit
	    });
	    aa(method, (0, _objectSpread2.default)({}, inferredPayload, payload));
	  };
	};
	
	var _default = function _default(insightsClient) {
	  return (0, _createConnector.default)({
	    displayName: 'AlgoliaInsights',
	    getProvidedProps: function getProvidedProps(props, _, searchResults) {
	      var results = (0, _indexUtils.getResults)(searchResults, this.context);
	      var insights = wrapInsightsClient(insightsClient, results, props.hit);
	      return {
	        insights: insights
	      };
	    }
	  });
	};
	
	exports.default = _default;

/***/ }),
/* 1575 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	var _utils = __webpack_require__(169);
	
	/**
	 * connectHits connector provides the logic to create connected
	 * components that will render the results retrieved from
	 * Algolia.
	 *
	 * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage
	 * prop to a [Configure](guide/Search_parameters.html) widget.
	 *
	 * **Warning:** you will need to use the **objectID** property available on every hit as a key
	 * when iterating over them. This will ensure you have the best possible UI experience
	 * especially on slow networks.
	 * @name connectHits
	 * @kind connector
	 * @providedPropType {array.<object>} hits - the records that matched the search state
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Highlight, connectHits } from 'react-instantsearch-dom';
	 *
	 * const CustomHits = connectHits(({ hits }) => (
	 *   <div>
	 *     {hits.map(hit =>
	 *       <p key={hit.objectID}>
	 *         <Highlight attribute="name" hit={hit} />
	 *       </p>
	 *     )}
	 *   </div>
	 * ));
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <CustomHits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaHits',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    if (!results) {
	      return {
	        hits: []
	      };
	    }
	
	    var hitsWithPositions = (0, _utils.addAbsolutePositions)(results.hits, results.hitsPerPage, results.page);
	    var hitsWithPositionsAndQueryID = (0, _utils.addQueryID)(hitsWithPositions, results.queryID);
	    return {
	      hits: hitsWithPositionsAndQueryID
	    };
	  },
	
	  /* Hits needs to be considered as a widget to trigger a search if no others widgets are used.
	   * To be considered as a widget you need either getSearchParameters, getMetadata or getTransitionState
	   * See createConnector.js
	   * */
	  getSearchParameters: function getSearchParameters(searchParameters) {
	    return searchParameters;
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1576 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	function getId() {
	  return 'hitsPerPage';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  var currentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, null);
	
	  if (typeof currentRefinement === 'string') {
	    return parseInt(currentRefinement, 10);
	  }
	
	  return currentRefinement;
	}
	/**
	 * connectHitsPerPage connector provides the logic to create connected
	 * components that will allow a user to choose to display more or less results from Algolia.
	 * @name connectHitsPerPage
	 * @kind connector
	 * @propType {number} defaultRefinement - The number of items selected by default
	 * @propType {{value: number, label: string}[]} items - List of hits per page options.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{isRefined: boolean, label?: string, value: number}>} items - the list of items the HitsPerPage can display. If no label provided, the value will be displayed.
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaHitsPerPage',
	  propTypes: {
	    defaultRefinement: _propTypes.default.number.isRequired,
	    items: _propTypes.default.arrayOf(_propTypes.default.shape({
	      label: _propTypes.default.string,
	      value: _propTypes.default.number.isRequired
	    })).isRequired,
	    transformItems: _propTypes.default.func
	  },
	  getProvidedProps: function getProvidedProps(props, searchState) {
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var items = props.items.map(function (item) {
	      return item.value === currentRefinement ? (0, _objectSpread2.default)({}, item, {
	        isRefined: true
	      }) : (0, _objectSpread2.default)({}, item, {
	        isRefined: false
	      });
	    });
	    return {
	      items: props.transformItems ? props.transformItems(items) : items,
	      currentRefinement: currentRefinement
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    var id = getId();
	    var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement);
	    var resetPage = true;
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context, resetPage);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setHitsPerPage(getCurrentRefinement(props, searchState, this.context));
	  },
	  getMetadata: function getMetadata() {
	    return {
	      id: getId()
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1577 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(84));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _isEqual2 = _interopRequireDefault(__webpack_require__(322));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	var _utils = __webpack_require__(169);
	
	function getId() {
	  return 'page';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  var page = 1;
	  var currentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, page);
	
	  if (typeof currentRefinement === 'string') {
	    return parseInt(currentRefinement, 10);
	  }
	
	  return currentRefinement;
	}
	/**
	 * InfiniteHits connector provides the logic to create connected
	 * components that will render an continuous list of results retrieved from
	 * Algolia. This connector provides a function to load more results.
	 * @name connectInfiniteHits
	 * @kind connector
	 * @providedPropType {array.<object>} hits - the records that matched the search state
	 * @providedPropType {boolean} hasMore - indicates if there are more pages to load
	 * @providedPropType {function} refine - call to load more results
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaInfiniteHits',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var _this = this;
	
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    this._allResults = this._allResults || [];
	    this._prevState = this._prevState || {};
	
	    if (!results) {
	      return {
	        hits: [],
	        hasPrevious: false,
	        hasMore: false,
	        refine: function refine() {},
	        refinePrevious: function refinePrevious() {},
	        refineNext: function refineNext() {}
	      };
	    }
	
	    var page = results.page,
	        hits = results.hits,
	        hitsPerPage = results.hitsPerPage,
	        nbPages = results.nbPages,
	        _results$_state = results._state;
	    _results$_state = _results$_state === void 0 ? {} : _results$_state;
	    var p = _results$_state.page,
	        currentState = (0, _objectWithoutProperties2.default)(_results$_state, ["page"]);
	    var hitsWithPositions = (0, _utils.addAbsolutePositions)(hits, hitsPerPage, page);
	    var hitsWithPositionsAndQueryID = (0, _utils.addQueryID)(hitsWithPositions, results.queryID);
	
	    if (this._firstReceivedPage === undefined || !(0, _isEqual2.default)(currentState, this._prevState)) {
	      this._allResults = (0, _toConsumableArray2.default)(hitsWithPositionsAndQueryID);
	      this._firstReceivedPage = page;
	      this._lastReceivedPage = page;
	    } else if (this._lastReceivedPage < page) {
	      this._allResults = [].concat((0, _toConsumableArray2.default)(this._allResults), (0, _toConsumableArray2.default)(hitsWithPositionsAndQueryID));
	      this._lastReceivedPage = page;
	    } else if (this._firstReceivedPage > page) {
	      this._allResults = [].concat((0, _toConsumableArray2.default)(hitsWithPositionsAndQueryID), (0, _toConsumableArray2.default)(this._allResults));
	      this._firstReceivedPage = page;
	    }
	
	    this._prevState = currentState;
	    var hasPrevious = this._firstReceivedPage > 0;
	    var lastPageIndex = nbPages - 1;
	    var hasMore = page < lastPageIndex;
	
	    var refinePrevious = function refinePrevious(event) {
	      return _this.refine(event, _this._firstReceivedPage - 1);
	    };
	
	    var refineNext = function refineNext(event) {
	      return _this.refine(event, _this._lastReceivedPage + 1);
	    };
	
	    return {
	      hits: this._allResults,
	      hasPrevious: hasPrevious,
	      hasMore: hasMore,
	      refinePrevious: refinePrevious,
	      refineNext: refineNext
	    };
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setQueryParameters({
	      page: getCurrentRefinement(props, searchState, this.context) - 1
	    });
	  },
	  refine: function refine(props, searchState, event, index) {
	    if (index === undefined && this._lastReceivedPage !== undefined) {
	      index = this._lastReceivedPage + 1;
	    } else if (index === undefined) {
	      index = getCurrentRefinement(props, searchState, this.context);
	    }
	
	    var id = getId();
	    var nextValue = (0, _defineProperty2.default)({}, id, index + 1); // `index` is indexed from 0 but page number is indexed from 1
	
	    var resetPage = false;
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context, resetPage);
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1578 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _orderBy2 = _interopRequireDefault(__webpack_require__(325));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	var namespace = 'menu';
	
	function getId(props) {
	  return props.attribute;
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var currentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), null);
	
	  if (currentRefinement === '') {
	    return null;
	  }
	
	  return currentRefinement;
	}
	
	function getValue(name, props, searchState, context) {
	  var currentRefinement = getCurrentRefinement(props, searchState, context);
	  return name === currentRefinement ? '' : name;
	}
	
	function getLimit(_ref) {
	  var showMore = _ref.showMore,
	      limit = _ref.limit,
	      showMoreLimit = _ref.showMoreLimit;
	  return showMore ? showMoreLimit : limit;
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement ? nextRefinement : '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	
	var sortBy = ['count:desc', 'name:asc'];
	/**
	 * connectMenu connector provides the logic to build a widget that will
	 * give the user the ability to choose a single value for a specific facet.
	 * @name connectMenu
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * @kind connector
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of diplayed items
	 * @propType {number} [showMoreLimit=20] - the maximun number of displayed items. Only used when showMore is set to `true`
	 * @propType {string} [defaultRefinement] - the value of the item selected by default
	 * @propType {boolean} [searchable=false] - allow search inside values
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the Menu can display.
	 * @providedPropType {function} searchForItems - a function to toggle a search inside items values
	 * @providedPropType {boolean} isFromSearch - a boolean that says if the `items` props contains facet values from the global search or from the search inside items.
	 */
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaMenu',
	  propTypes: {
	    attribute: _propTypes.default.string.isRequired,
	    showMore: _propTypes.default.bool,
	    limit: _propTypes.default.number,
	    showMoreLimit: _propTypes.default.number,
	    defaultRefinement: _propTypes.default.string,
	    transformItems: _propTypes.default.func,
	    searchable: _propTypes.default.bool
	  },
	  defaultProps: {
	    showMore: false,
	    limit: 10,
	    showMoreLimit: 20
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults, meta, searchForFacetValuesResults) {
	    var _this = this;
	
	    var attribute = props.attribute,
	        searchable = props.searchable;
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var canRefine = Boolean(results) && Boolean(results.getFacetByName(attribute));
	    var isFromSearch = Boolean(searchForFacetValuesResults && searchForFacetValuesResults[attribute] && searchForFacetValuesResults.query !== ''); // Search For Facet Values is not available with derived helper (used for multi index search)
	
	    if (searchable && this.context.multiIndexContext) {
	      throw new Error('react-instantsearch: searching in *List is not available when used inside a' + ' multi index context');
	    }
	
	    if (!canRefine) {
	      return {
	        items: [],
	        currentRefinement: getCurrentRefinement(props, searchState, this.context),
	        isFromSearch: isFromSearch,
	        searchable: searchable,
	        canRefine: canRefine
	      };
	    }
	
	    var items = isFromSearch ? searchForFacetValuesResults[attribute].map(function (v) {
	      return {
	        label: v.value,
	        value: getValue(v.value, props, searchState, _this.context),
	        _highlightResult: {
	          label: {
	            value: v.highlighted
	          }
	        },
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    }) : results.getFacetValues(attribute, {
	      sortBy: sortBy
	    }).map(function (v) {
	      return {
	        label: v.name,
	        value: getValue(v.name, props, searchState, _this.context),
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    });
	    var sortedItems = searchable && !isFromSearch ? (0, _orderBy2.default)(items, ['isRefined', 'count', 'label'], ['desc', 'desc', 'asc']) : items;
	    var transformedItems = props.transformItems ? props.transformItems(sortedItems) : sortedItems;
	    return {
	      items: transformedItems.slice(0, getLimit(props)),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      isFromSearch: isFromSearch,
	      searchable: searchable,
	      canRefine: transformedItems.length > 0
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  searchForFacetValues: function searchForFacetValues(props, searchState, nextRefinement) {
	    return {
	      facetName: props.attribute,
	      query: nextRefinement,
	      maxFacetHits: getLimit(props)
	    };
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute;
	    searchParameters = searchParameters.setQueryParameters({
	      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, getLimit(props))
	    });
	    searchParameters = searchParameters.addDisjunctiveFacet(attribute);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    if (currentRefinement !== null) {
	      searchParameters = searchParameters.addDisjunctiveFacetRefinement(attribute, currentRefinement);
	    }
	
	    return searchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this2 = this;
	
	    var id = getId(props);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndexId)(this.context),
	      items: currentRefinement === null ? [] : [{
	        label: "".concat(props.attribute, ": ").concat(currentRefinement),
	        attribute: props.attribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this2.context);
	        },
	        currentRefinement: currentRefinement
	      }]
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1579 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _slicedToArray2 = _interopRequireDefault(__webpack_require__(577));
	
	var _isEmpty2 = _interopRequireDefault(__webpack_require__(80));
	
	var _find3 = _interopRequireDefault(__webpack_require__(71));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	function stringifyItem(item) {
	  if (typeof item.start === 'undefined' && typeof item.end === 'undefined') {
	    return '';
	  }
	
	  return "".concat(item.start ? item.start : '', ":").concat(item.end ? item.end : '');
	}
	
	function parseItem(value) {
	  if (value.length === 0) {
	    return {
	      start: null,
	      end: null
	    };
	  }
	
	  var _value$split = value.split(':'),
	      _value$split2 = (0, _slicedToArray2.default)(_value$split, 2),
	      startStr = _value$split2[0],
	      endStr = _value$split2[1];
	
	  return {
	    start: startStr.length > 0 ? parseInt(startStr, 10) : null,
	    end: endStr.length > 0 ? parseInt(endStr, 10) : null
	  };
	}
	
	var namespace = 'multiRange';
	
	function getId(props) {
	  return props.attribute;
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), '', function (currentRefinement) {
	    if (currentRefinement === '') {
	      return '';
	    }
	
	    return currentRefinement;
	  });
	}
	
	function isRefinementsRangeIncludesInsideItemRange(stats, start, end) {
	  return stats.min > start && stats.min < end || stats.max > start && stats.max < end;
	}
	
	function isItemRangeIncludedInsideRefinementsRange(stats, start, end) {
	  return start > stats.min && start < stats.max || end > stats.min && end < stats.max;
	}
	
	function itemHasRefinement(attribute, results, value) {
	  var stats = results.getFacetByName(attribute) ? results.getFacetStats(attribute) : null;
	  var range = value.split(':');
	  var start = Number(range[0]) === 0 || value === '' ? Number.NEGATIVE_INFINITY : Number(range[0]);
	  var end = Number(range[1]) === 0 || value === '' ? Number.POSITIVE_INFINITY : Number(range[1]);
	  return !(Boolean(stats) && (isRefinementsRangeIncludesInsideItemRange(stats, start, end) || isItemRangeIncludedInsideRefinementsRange(stats, start, end)));
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var nextValue = (0, _defineProperty2.default)({}, getId(props, searchState), nextRefinement);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	/**
	 * connectNumericMenu connector provides the logic to build a widget that will
	 * give the user the ability to select a range value for a numeric attribute.
	 * Ranges are defined statically.
	 * @name connectNumericMenu
	 * @requirements The attribute passed to the `attribute` prop must be holding numerical values.
	 * @kind connector
	 * @propType {string} attribute - the name of the attribute in the records
	 * @propType {{label: string, start: number, end: number}[]} items - List of options. With a text label, and upper and lower bounds.
	 * @propType {string} [defaultRefinement] - the value of the item selected by default, follow the shape of a `string` with a pattern of `'{start}:{end}'`.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to select a range.
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied.  follow the shape of a `string` with a pattern of `'{start}:{end}'` which corresponds to the current selected item. For instance, when the selected item is `{start: 10, end: 20}`, the searchState of the widget is `'10:20'`. When `start` isn't defined, the searchState of the widget is `':{end}'`, and the same way around when `end` isn't defined. However, when neither `start` nor `end` are defined, the searchState is an empty string.
	 * @providedPropType {array.<{isRefined: boolean, label: string, value: string, isRefined: boolean, noRefinement: boolean}>} items - the list of ranges the NumericMenu can display.
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaNumericMenu',
	  propTypes: {
	    id: _propTypes.default.string,
	    attribute: _propTypes.default.string.isRequired,
	    items: _propTypes.default.arrayOf(_propTypes.default.shape({
	      label: _propTypes.default.node,
	      start: _propTypes.default.number,
	      end: _propTypes.default.number
	    })).isRequired,
	    transformItems: _propTypes.default.func
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var attribute = props.attribute;
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var items = props.items.map(function (item) {
	      var value = stringifyItem(item);
	      return {
	        label: item.label,
	        value: value,
	        isRefined: value === currentRefinement,
	        noRefinement: results ? itemHasRefinement(getId(props), results, value) : false
	      };
	    });
	    var stats = results && results.getFacetByName(attribute) ? results.getFacetStats(attribute) : null;
	    var refinedItem = (0, _find3.default)(items, function (item) {
	      return item.isRefined === true;
	    });
	
	    if (!items.some(function (item) {
	      return item.value === '';
	    })) {
	      items.push({
	        value: '',
	        isRefined: (0, _isEmpty2.default)(refinedItem),
	        noRefinement: !stats,
	        label: 'All'
	      });
	    }
	
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      items: transformedItems,
	      currentRefinement: currentRefinement,
	      canRefine: transformedItems.length > 0 && transformedItems.some(function (item) {
	        return item.noRefinement === false;
	      })
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute;
	
	    var _parseItem = parseItem(getCurrentRefinement(props, searchState, this.context)),
	        start = _parseItem.start,
	        end = _parseItem.end;
	
	    searchParameters = searchParameters.addDisjunctiveFacet(attribute);
	
	    if (start) {
	      searchParameters = searchParameters.addNumericRefinement(attribute, '>=', start);
	    }
	
	    if (end) {
	      searchParameters = searchParameters.addNumericRefinement(attribute, '<=', end);
	    }
	
	    return searchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var id = getId(props);
	    var value = getCurrentRefinement(props, searchState, this.context);
	    var items = [];
	    var index = (0, _indexUtils.getIndexId)(this.context);
	
	    if (value !== '') {
	      var _find2 = (0, _find3.default)(props.items, function (item) {
	        return stringifyItem(item) === value;
	      }),
	          label = _find2.label;
	
	      items.push({
	        label: "".concat(props.attribute, ": ").concat(label),
	        attribute: props.attribute,
	        currentRefinement: label,
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this.context);
	        }
	      });
	    }
	
	    return {
	      id: id,
	      index: index,
	      items: items
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1580 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	function getId() {
	  return 'page';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  var page = 1;
	  var currentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, page);
	
	  if (typeof currentRefinement === 'string') {
	    return parseInt(currentRefinement, 10);
	  }
	
	  return currentRefinement;
	}
	
	function _refine(props, searchState, nextPage, context) {
	  var id = getId();
	  var nextValue = (0, _defineProperty2.default)({}, id, nextPage);
	  var resetPage = false;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);
	}
	/**
	 * connectPagination connector provides the logic to build a widget that will
	 * let the user displays hits corresponding to a certain page.
	 * @name connectPagination
	 * @kind connector
	 * @propType {boolean} [showFirst=true] - Display the first page link.
	 * @propType {boolean} [showLast=false] - Display the last page link.
	 * @propType {boolean} [showPrevious=true] - Display the previous page link.
	 * @propType {boolean} [showNext=true] - Display the next page link.
	 * @propType {number} [padding=3] - How many page links to display around the current page.
	 * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {number} nbPages - the total of existing pages
	 * @providedPropType {number} currentRefinement - the page refinement currently applied
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaPagination',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    if (!results) {
	      return null;
	    }
	
	    var nbPages = results.nbPages;
	    return {
	      nbPages: nbPages,
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      canRefine: nbPages > 1
	    };
	  },
	  refine: function refine(props, searchState, nextPage) {
	    return _refine(props, searchState, nextPage, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setPage(getCurrentRefinement(props, searchState, this.context) - 1);
	  },
	  getMetadata: function getMetadata() {
	    return {
	      id: getId()
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1581 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	/**
	 * connectPoweredBy connector provides the logic to build a widget that
	 * will display a link to algolia.
	 * @name connectPoweredBy
	 * @kind connector
	 * @providedPropType {string} url - the url to redirect to algolia
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaPoweredBy',
	  getProvidedProps: function getProvidedProps() {
	    var isServer = typeof window === 'undefined';
	    var url = 'https://www.algolia.com/?' + 'utm_source=react-instantsearch&' + 'utm_medium=website&' + "utm_content=".concat(!isServer ? window.location.hostname : '', "&") + 'utm_campaign=poweredby';
	    return {
	      url: url
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1582 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _isFinite3 = _interopRequireDefault(__webpack_require__(1494));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	/**
	 * connectRange connector provides the logic to create connected
	 * components that will give the ability for a user to refine results using
	 * a numeric range.
	 * @name connectRange
	 * @kind connector
	 * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * The values inside the attribute must be JavaScript numbers (not strings).
	 * @propType {string} attribute - Name of the attribute for faceting
	 * @propType {{min?: number, max?: number}} [defaultRefinement] - Default searchState of the widget containing the start and the end of the range.
	 * @propType {number} [min] - Minimum value. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [max] - Maximum value. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [precision=0] - Number of digits after decimal point to use.
	 * @providedPropType {function} refine - a function to select a range.
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {number} min - the minimum value available.
	 * @providedPropType {number} max - the maximum value available.
	 * @providedPropType {number} precision - Number of digits after decimal point to use.
	 */
	function getId(props) {
	  return props.attribute;
	}
	
	var namespace = 'range';
	
	function getCurrentRange(boundaries, stats, precision) {
	  var pow = Math.pow(10, precision);
	  var min;
	
	  if ((0, _isFinite3.default)(boundaries.min)) {
	    min = boundaries.min;
	  } else if ((0, _isFinite3.default)(stats.min)) {
	    min = stats.min;
	  } else {
	    min = undefined;
	  }
	
	  var max;
	
	  if ((0, _isFinite3.default)(boundaries.max)) {
	    max = boundaries.max;
	  } else if ((0, _isFinite3.default)(stats.max)) {
	    max = stats.max;
	  } else {
	    max = undefined;
	  }
	
	  return {
	    min: min !== undefined ? Math.floor(min * pow) / pow : min,
	    max: max !== undefined ? Math.ceil(max * pow) / pow : max
	  };
	}
	
	function getCurrentRefinement(props, searchState, currentRange, context) {
	  var _getCurrentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), {}),
	      min = _getCurrentRefinement.min,
	      max = _getCurrentRefinement.max;
	
	  var isFloatPrecision = Boolean(props.precision);
	  var nextMin = min;
	
	  if (typeof nextMin === 'string') {
	    nextMin = isFloatPrecision ? parseFloat(nextMin) : parseInt(nextMin, 10);
	  }
	
	  var nextMax = max;
	
	  if (typeof nextMax === 'string') {
	    nextMax = isFloatPrecision ? parseFloat(nextMax) : parseInt(nextMax, 10);
	  }
	
	  var refinement = {
	    min: nextMin,
	    max: nextMax
	  };
	  var hasMinBound = props.min !== undefined;
	  var hasMaxBound = props.max !== undefined;
	  var hasMinRefinment = refinement.min !== undefined;
	  var hasMaxRefinment = refinement.max !== undefined;
	
	  if (hasMinBound && hasMinRefinment && refinement.min < currentRange.min) {
	    throw Error("You can't provide min value lower than range.");
	  }
	
	  if (hasMaxBound && hasMaxRefinment && refinement.max > currentRange.max) {
	    throw Error("You can't provide max value greater than range.");
	  }
	
	  if (hasMinBound && !hasMinRefinment) {
	    refinement.min = currentRange.min;
	  }
	
	  if (hasMaxBound && !hasMaxRefinment) {
	    refinement.max = currentRange.max;
	  }
	
	  return refinement;
	}
	
	function getCurrentRefinementWithRange(refinement, range) {
	  return {
	    min: refinement.min !== undefined ? refinement.min : range.min,
	    max: refinement.max !== undefined ? refinement.max : range.max
	  };
	}
	
	function nextValueForRefinement(hasBound, isReset, range, value) {
	  var next;
	
	  if (!hasBound && range === value) {
	    next = undefined;
	  } else if (hasBound && isReset) {
	    next = range;
	  } else {
	    next = value;
	  }
	
	  return next;
	}
	
	function _refine(props, searchState, nextRefinement, currentRange, context) {
	  var nextMin = nextRefinement.min,
	      nextMax = nextRefinement.max;
	  var currentMinRange = currentRange.min,
	      currentMaxRange = currentRange.max;
	  var isMinReset = nextMin === undefined || nextMin === '';
	  var isMaxReset = nextMax === undefined || nextMax === '';
	  var nextMinAsNumber = !isMinReset ? parseFloat(nextMin) : undefined;
	  var nextMaxAsNumber = !isMaxReset ? parseFloat(nextMax) : undefined;
	  var isNextMinValid = isMinReset || (0, _isFinite3.default)(nextMinAsNumber);
	  var isNextMaxValid = isMaxReset || (0, _isFinite3.default)(nextMaxAsNumber);
	
	  if (!isNextMinValid || !isNextMaxValid) {
	    throw Error("You can't provide non finite values to the range connector.");
	  }
	
	  if (nextMinAsNumber < currentMinRange) {
	    throw Error("You can't provide min value lower than range.");
	  }
	
	  if (nextMaxAsNumber > currentMaxRange) {
	    throw Error("You can't provide max value greater than range.");
	  }
	
	  var id = getId(props);
	  var resetPage = true;
	  var nextValue = (0, _defineProperty2.default)({}, id, {
	    min: nextValueForRefinement(props.min !== undefined, isMinReset, currentMinRange, nextMinAsNumber),
	    max: nextValueForRefinement(props.max !== undefined, isMaxReset, currentMaxRange, nextMaxAsNumber)
	  });
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaRange',
	  propTypes: {
	    id: _propTypes.default.string,
	    attribute: _propTypes.default.string.isRequired,
	    defaultRefinement: _propTypes.default.shape({
	      min: _propTypes.default.number,
	      max: _propTypes.default.number
	    }),
	    min: _propTypes.default.number,
	    max: _propTypes.default.number,
	    precision: _propTypes.default.number,
	    header: _propTypes.default.node,
	    footer: _propTypes.default.node
	  },
	  defaultProps: {
	    precision: 0
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var attribute = props.attribute,
	        precision = props.precision,
	        minBound = props.min,
	        maxBound = props.max;
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var hasFacet = results && results.getFacetByName(attribute);
	    var stats = hasFacet ? results.getFacetStats(attribute) || {} : {};
	    var facetValues = hasFacet ? results.getFacetValues(attribute) : [];
	    var count = facetValues.map(function (v) {
	      return {
	        value: v.name,
	        count: v.count
	      };
	    });
	
	    var _getCurrentRange = getCurrentRange({
	      min: minBound,
	      max: maxBound
	    }, stats, precision),
	        rangeMin = _getCurrentRange.min,
	        rangeMax = _getCurrentRange.max; // The searchState is not always in sync with the helper state. For example
	    // when we set boundaries on the first render the searchState don't have
	    // the correct refinement. If this behaviour change in the upcoming version
	    // we could store the range inside the searchState instead of rely on `this`.
	
	
	    this._currentRange = {
	      min: rangeMin,
	      max: rangeMax
	    };
	    var currentRefinement = getCurrentRefinement(props, searchState, this._currentRange, this.context);
	    return {
	      min: rangeMin,
	      max: rangeMax,
	      canRefine: count.length > 0,
	      currentRefinement: getCurrentRefinementWithRange(currentRefinement, this._currentRange),
	      count: count,
	      precision: precision
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this._currentRange, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(params, props, searchState) {
	    var attribute = props.attribute;
	
	    var _getCurrentRefinement2 = getCurrentRefinement(props, searchState, this._currentRange, this.context),
	        min = _getCurrentRefinement2.min,
	        max = _getCurrentRefinement2.max;
	
	    params = params.addDisjunctiveFacet(attribute);
	
	    if (min !== undefined) {
	      params = params.addNumericRefinement(attribute, '>=', min);
	    }
	
	    if (max !== undefined) {
	      params = params.addNumericRefinement(attribute, '<=', max);
	    }
	
	    return params;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var _this$_currentRange = this._currentRange,
	        minRange = _this$_currentRange.min,
	        maxRange = _this$_currentRange.max;
	
	    var _getCurrentRefinement3 = getCurrentRefinement(props, searchState, this._currentRange, this.context),
	        minValue = _getCurrentRefinement3.min,
	        maxValue = _getCurrentRefinement3.max;
	
	    var items = [];
	    var hasMin = minValue !== undefined;
	    var hasMax = maxValue !== undefined;
	    var shouldDisplayMinLabel = hasMin && minValue !== minRange;
	    var shouldDisplayMaxLabel = hasMax && maxValue !== maxRange;
	
	    if (shouldDisplayMinLabel || shouldDisplayMaxLabel) {
	      var fragments = [hasMin ? "".concat(minValue, " <= ") : '', props.attribute, hasMax ? " <= ".concat(maxValue) : ''];
	      items.push({
	        label: fragments.join(''),
	        attribute: props.attribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, {}, _this._currentRange, _this.context);
	        },
	        currentRefinement: getCurrentRefinementWithRange({
	          min: minValue,
	          max: maxValue
	        }, {
	          min: minRange,
	          max: maxRange
	        })
	      });
	    }
	
	    return {
	      id: getId(props),
	      index: (0, _indexUtils.getIndexId)(this.context),
	      items: items
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1583 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	var namespace = 'refinementList';
	
	function getId(props) {
	  return props.attribute;
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var currentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), []);
	
	  if (typeof currentRefinement !== 'string') {
	    return currentRefinement;
	  }
	
	  if (currentRefinement) {
	    return [currentRefinement];
	  }
	
	  return [];
	}
	
	function getValue(name, props, searchState, context) {
	  var currentRefinement = getCurrentRefinement(props, searchState, context);
	  var isAnewValue = currentRefinement.indexOf(name) === -1;
	  var nextRefinement = isAnewValue ? currentRefinement.concat([name]) // cannot use .push(), it mutates
	  : currentRefinement.filter(function (selectedValue) {
	    return selectedValue !== name;
	  }); // cannot use .splice(), it mutates
	
	  return nextRefinement;
	}
	
	function getLimit(_ref) {
	  var showMore = _ref.showMore,
	      limit = _ref.limit,
	      showMoreLimit = _ref.showMoreLimit;
	  return showMore ? showMoreLimit : limit;
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props); // Setting the value to an empty string ensures that it is persisted in
	  // the URL as an empty value.
	  // This is necessary in the case where `defaultRefinement` contains one
	  // item and we try to deselect it. `nextSelected` would be an empty array,
	  // which would not be persisted to the URL.
	  // {foo: ['bar']} => "foo[0]=bar"
	  // {foo: []} => ""
	
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement.length > 0 ? nextRefinement : '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	/**
	 * connectRefinementList connector provides the logic to build a widget that will
	 * give the user the ability to choose multiple values for a specific facet.
	 * @name connectRefinementList
	 * @kind connector
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [searchable=false] - allow search inside values
	 * @propType {string} [operator=or] - How to apply the refinements. Possible values: 'or' or 'and'.
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of displayed items
	 * @propType {number} [showMoreLimit=20] - the maximun number of displayed items. Only used when showMore is set to `true`
	 * @propType {string[]} defaultRefinement - the values of the items selected by default. The searchState of this widget takes the form of a list of `string`s, which correspond to the values of all selected refinements. However, when there are no refinements selected, the value of the searchState is an empty string.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string[]} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the RefinementList can display.
	 * @providedPropType {function} searchForItems - a function to toggle a search inside items values
	 * @providedPropType {boolean} isFromSearch - a boolean that says if the `items` props contains facet values from the global search or from the search inside items.
	 * @providedPropType {boolean} canRefine - a boolean that says whether you can refine
	 */
	
	
	var sortBy = ['isRefined', 'count:desc', 'name:asc'];
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaRefinementList',
	  propTypes: {
	    id: _propTypes.default.string,
	    attribute: _propTypes.default.string.isRequired,
	    operator: _propTypes.default.oneOf(['and', 'or']),
	    showMore: _propTypes.default.bool,
	    limit: _propTypes.default.number,
	    showMoreLimit: _propTypes.default.number,
	    defaultRefinement: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])),
	    searchable: _propTypes.default.bool,
	    transformItems: _propTypes.default.func
	  },
	  defaultProps: {
	    operator: 'or',
	    showMore: false,
	    limit: 10,
	    showMoreLimit: 20
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults, metadata, searchForFacetValuesResults) {
	    var _this = this;
	
	    var attribute = props.attribute,
	        searchable = props.searchable;
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var canRefine = Boolean(results) && Boolean(results.getFacetByName(attribute));
	    var isFromSearch = Boolean(searchForFacetValuesResults && searchForFacetValuesResults[attribute] && searchForFacetValuesResults.query !== ''); // Search For Facet Values is not available with derived helper (used for multi index search)
	
	    if (searchable && this.context.multiIndexContext) {
	      throw new Error('react-instantsearch: searching in *List is not available when used inside a' + ' multi index context');
	    }
	
	    if (!canRefine) {
	      return {
	        items: [],
	        currentRefinement: getCurrentRefinement(props, searchState, this.context),
	        canRefine: canRefine,
	        isFromSearch: isFromSearch,
	        searchable: searchable
	      };
	    }
	
	    var items = isFromSearch ? searchForFacetValuesResults[attribute].map(function (v) {
	      return {
	        label: v.value,
	        value: getValue(v.value, props, searchState, _this.context),
	        _highlightResult: {
	          label: {
	            value: v.highlighted
	          }
	        },
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    }) : results.getFacetValues(attribute, {
	      sortBy: sortBy
	    }).map(function (v) {
	      return {
	        label: v.name,
	        value: getValue(v.name, props, searchState, _this.context),
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    });
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      items: transformedItems.slice(0, getLimit(props)),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      isFromSearch: isFromSearch,
	      searchable: searchable,
	      canRefine: transformedItems.length > 0
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  searchForFacetValues: function searchForFacetValues(props, searchState, nextRefinement) {
	    return {
	      facetName: props.attribute,
	      query: nextRefinement,
	      maxFacetHits: getLimit(props)
	    };
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute,
	        operator = props.operator;
	    var addKey = operator === 'and' ? 'addFacet' : 'addDisjunctiveFacet';
	    var addRefinementKey = "".concat(addKey, "Refinement");
	    searchParameters = searchParameters.setQueryParameters({
	      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, getLimit(props))
	    });
	    searchParameters = searchParameters[addKey](attribute);
	    return getCurrentRefinement(props, searchState, this.context).reduce(function (res, val) {
	      return res[addRefinementKey](attribute, val);
	    }, searchParameters);
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var id = getId(props);
	    var context = this.context;
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndexId)(this.context),
	      items: getCurrentRefinement(props, searchState, context).length > 0 ? [{
	        attribute: props.attribute,
	        label: "".concat(props.attribute, ": "),
	        currentRefinement: getCurrentRefinement(props, searchState, context),
	        value: function value(nextState) {
	          return _refine(props, nextState, [], context);
	        },
	        items: getCurrentRefinement(props, searchState, context).map(function (item) {
	          return {
	            label: "".concat(item),
	            value: function value(nextState) {
	              var nextSelectedItems = getCurrentRefinement(props, nextState, context).filter(function (other) {
	                return other !== item;
	              });
	              return _refine(props, searchState, nextSelectedItems, context);
	            }
	          };
	        })
	      }] : []
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1584 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _omit2 = _interopRequireDefault(__webpack_require__(97));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	var _utils = __webpack_require__(169);
	
	/**
	 * connectScrollTo connector provides the logic to build a widget that will
	 * let the page scroll to a certain point.
	 * @name connectScrollTo
	 * @kind connector
	 * @propType {string} [scrollOn="page"] - Widget searchState key on which to listen for changes, default to the pagination widget.
	 * @providedPropType {any} value - the current refinement applied to the widget listened by scrollTo
	 * @providedPropType {boolean} hasNotChanged - indicates whether the refinement came from the scrollOn argument (for instance page by default)
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaScrollTo',
	  propTypes: {
	    scrollOn: _propTypes.default.string
	  },
	  defaultProps: {
	    scrollOn: 'page'
	  },
	  getProvidedProps: function getProvidedProps(props, searchState) {
	    var id = props.scrollOn;
	    var value = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, this.context, id, null);
	
	    if (!this._prevSearchState) {
	      this._prevSearchState = {};
	    }
	    /* Get the subpart of the state that interest us*/
	
	
	    if ((0, _indexUtils.hasMultipleIndices)(this.context)) {
	      searchState = searchState.indices ? searchState.indices[(0, _indexUtils.getIndexId)(this.context)] : {};
	    }
	    /*
	      if there is a change in the app that has been triggered by another element than
	      "props.scrollOn (id) or the Configure widget, we need to keep track of the search state to
	      know if there's a change in the app that was not triggered by the props.scrollOn (id)
	      or the Configure widget. This is useful when using ScrollTo in combination of Pagination.
	      As pagination can be change by every widget, we want to scroll only if it cames from the pagination
	      widget itself. We also remove the configure key from the search state to do this comparaison because for
	      now configure values are not present in the search state before a first refinement has been made
	      and will false the results.
	      See: https://github.com/algolia/react-instantsearch/issues/164
	    */
	
	
	    var cleanedSearchState = (0, _omit2.default)((0, _omit2.default)(searchState, 'configure'), id);
	    var hasNotChanged = (0, _utils.shallowEqual)(this._prevSearchState, cleanedSearchState);
	    this._prevSearchState = cleanedSearchState;
	    return {
	      value: value,
	      hasNotChanged: hasNotChanged
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1585 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	function getId() {
	  return 'query';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId(props);
	  var currentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, '');
	
	  if (currentRefinement) {
	    return currentRefinement;
	  }
	
	  return '';
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId();
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, getId());
	}
	/**
	 * connectSearchBox connector provides the logic to build a widget that will
	 * let the user search for a query
	 * @name connectSearchBox
	 * @kind connector
	 * @propType {string} [defaultRefinement] - Provide a default value for the query
	 * @providedPropType {function} refine - a function to change the current query
	 * @providedPropType {string} currentRefinement - the current query used
	 * @providedPropType {boolean} isSearchStalled - a flag that indicates if InstantSearch has detected that searches are stalled
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaSearchBox',
	  propTypes: {
	    defaultRefinement: _propTypes.default.string
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    return {
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      isSearchStalled: searchResults.isSearchStalled
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setQuery(getCurrentRefinement(props, searchState, this.context));
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var id = getId(props);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndexId)(this.context),
	      items: currentRefinement === null ? [] : [{
	        label: "".concat(id, ": ").concat(currentRefinement),
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this.context);
	        },
	        currentRefinement: currentRefinement
	      }]
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1586 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	function getId() {
	  return 'sortBy';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId(props);
	  var currentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, null);
	
	  if (currentRefinement) {
	    return currentRefinement;
	  }
	
	  return null;
	}
	/**
	 * The connectSortBy connector provides the logic to build a widget that will
	 *  display a list of indices. This allows a user to change how the hits are being sorted.
	 * @name connectSortBy
	 * @requirements Algolia handles sorting by creating replica indices. [Read more about sorting](https://www.algolia.com/doc/guides/relevance/sorting/) on
	 * the Algolia website.
	 * @kind connector
	 * @propType {string} defaultRefinement - The default selected index.
	 * @propType {{value: string, label: string}[]} items - The list of indexes to search in.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string[]} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{isRefined: boolean, label?: string, value: string}>} items - the list of items the HitsPerPage can display.  If no label provided, the value will be displayed.
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaSortBy',
	  propTypes: {
	    defaultRefinement: _propTypes.default.string,
	    items: _propTypes.default.arrayOf(_propTypes.default.shape({
	      label: _propTypes.default.string,
	      value: _propTypes.default.string.isRequired
	    })).isRequired,
	    transformItems: _propTypes.default.func
	  },
	  getProvidedProps: function getProvidedProps(props, searchState) {
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var items = props.items.map(function (item) {
	      return item.value === currentRefinement ? (0, _objectSpread2.default)({}, item, {
	        isRefined: true
	      }) : (0, _objectSpread2.default)({}, item, {
	        isRefined: false
	      });
	    });
	    return {
	      items: props.transformItems ? props.transformItems(items) : items,
	      currentRefinement: currentRefinement
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    var id = getId();
	    var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement);
	    var resetPage = true;
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context, resetPage);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var selectedIndex = getCurrentRefinement(props, searchState, this.context);
	    return searchParameters.setIndex(selectedIndex);
	  },
	  getMetadata: function getMetadata() {
	    return {
	      id: getId()
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1587 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	/**
	 * The `connectStateResults` connector provides a way to access the `searchState` and the `searchResults`
	 * of InstantSearch.
	 * For instance this connector allows you to create results/noResults or query/noQuery pages.
	 * @name connectStateResults
	 * @kind connector
	 * @providedPropType {object} searchState - The search state of the instant search component. <br/><br/> See: [Search state structure](https://community.algolia.com/react-instantsearch/guide/Search_state.html)
	 * @providedPropType {object} searchResults - The search results. <br/><br/> In case of multiple indices: if used under `<Index>`, results will be those of the corresponding index otherwise it'll be those of the root index  See: [Search results structure](https://community.algolia.com/algoliasearch-helper-js/reference.html#searchresults)
	 * @providedPropType {object} allSearchResults - In case of multiple indices you can retrieve all the results
	 * @providedPropType {string} error - If the search failed, the error will be logged here.
	 * @providedPropType {boolean} searching - If there is a search in progress.
	 * @providedPropType {boolean} isSearchStalled - Flag that indicates if React InstantSearch has detected that searches are stalled.
	 * @providedPropType {boolean} searchingForFacetValues - If there is a search in a list in progress.
	 * @providedPropType {object} props - component props.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, connectStateResults } from 'react-instantsearch-dom';
	 *
	 * const Content = connectStateResults(({ searchState, searchResults }) => {
	 *   const hasResults = searchResults && searchResults.nbHits !== 0;
	 *
	 *    return (
	 *      <div>
	 *        <div hidden={!hasResults}>
	 *          <Hits />
	 *        </div>
	 *        <div hidden={hasResults}>
	 *          <div>No results has been found for {searchState.query}</div>
	 *        </div>
	 *      </div>
	 *    );
	 * });
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *      appId="latency"
	 *      apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *      indexName="instant_search"
	 *    >
	 *      <SearchBox />
	 *      <Content />
	 *    </InstantSearch>
	 * );
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaStateResults',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    return {
	      searchState: searchState,
	      searchResults: results,
	      allSearchResults: searchResults.results,
	      searching: searchResults.searching,
	      isSearchStalled: searchResults.isSearchStalled,
	      error: searchResults.error,
	      searchingForFacetValues: searchResults.searchingForFacetValues,
	      props: props
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1588 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	/**
	 * connectStats connector provides the logic to build a widget that will
	 *  displays algolia search statistics (hits number and processing time).
	 * @name connectStats
	 * @kind connector
	 * @providedPropType {number} nbHits - number of hits returned by Algolia.
	 * @providedPropType {number} processingTimeMS - the time in ms took by Algolia to search for results.
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaStats',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    if (!results) {
	      return null;
	    }
	
	    return {
	      nbHits: results.nbHits,
	      processingTimeMS: results.processingTimeMS
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1589 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _find2 = _interopRequireDefault(__webpack_require__(71));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(24));
	
	var _indexUtils = __webpack_require__(25);
	
	function getId(props) {
	  return props.attribute;
	}
	
	var namespace = 'toggle';
	
	function getCurrentRefinement(props, searchState, context) {
	  var currentRefinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), false);
	
	  if (currentRefinement) {
	    return currentRefinement;
	  }
	
	  return false;
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement ? nextRefinement : false);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	/**
	 * connectToggleRefinement connector provides the logic to build a widget that will
	 * provides an on/off filtering feature based on an attribute value.
	 * @name connectToggleRefinement
	 * @kind connector
	 * @requirements To use this widget, you'll need an attribute to toggle on.
	 *
	 * You can't toggle on null or not-null values. If you want to address this particular use-case you'll need to compute an
	 * extra boolean attribute saying if the value exists or not. See this [thread](https://discourse.algolia.com/t/how-to-create-a-toggle-for-the-absence-of-a-string-attribute/2460) for more details.
	 *
	 * @propType {string} attribute - Name of the attribute on which to apply the `value` refinement. Required when `value` is present.
	 * @propType {string} label - Label for the toggle.
	 * @propType {string} value - Value of the refinement to apply on `attribute`.
	 * @propType {boolean} [defaultRefinement=false] - Default searchState of the widget. Should the toggle be checked by default?
	 * @providedPropType {boolean} currentRefinement - `true` when the refinement is applied, `false` otherwise
	 * @providedPropType {object} count - an object that contains the count for `checked` and `unchecked` state
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaToggle',
	  propTypes: {
	    label: _propTypes.default.string.isRequired,
	    attribute: _propTypes.default.string.isRequired,
	    value: _propTypes.default.any.isRequired,
	    filter: _propTypes.default.func,
	    defaultRefinement: _propTypes.default.bool
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var attribute = props.attribute,
	        value = props.value;
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var allFacetValues = results && results.getFacetByName(attribute) ? results.getFacetValues(attribute) : null;
	    var facetValue = // Use null to always be consistent with type of the value
	    // count: number | null
	    allFacetValues && allFacetValues.length ? (0, _find2.default)(allFacetValues, function (item) {
	      return item.name === value.toString();
	    }) : null;
	    var facetValueCount = facetValue && facetValue.count;
	    var allFacetValuesCount = // Use null to always be consistent with type of the value
	    // count: number | null
	    allFacetValues && allFacetValues.length ? allFacetValues.reduce(function (acc, item) {
	      return acc + item.count;
	    }, 0) : null;
	    var canRefine = currentRefinement ? allFacetValuesCount !== null && allFacetValuesCount > 0 : facetValueCount !== null && facetValueCount > 0;
	    var count = {
	      checked: allFacetValuesCount,
	      unchecked: facetValueCount
	    };
	    return {
	      currentRefinement: currentRefinement,
	      canRefine: canRefine,
	      count: count
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute,
	        value = props.value,
	        filter = props.filter;
	    var checked = getCurrentRefinement(props, searchState, this.context);
	    var nextSearchParameters = searchParameters.addDisjunctiveFacet(attribute);
	
	    if (checked) {
	      nextSearchParameters = nextSearchParameters.addDisjunctiveFacetRefinement(attribute, value);
	
	      if (filter) {
	        nextSearchParameters = filter(nextSearchParameters);
	      }
	    }
	
	    return nextSearchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var id = getId(props);
	    var checked = getCurrentRefinement(props, searchState, this.context);
	    var items = [];
	    var index = (0, _indexUtils.getIndexId)(this.context);
	
	    if (checked) {
	      items.push({
	        label: props.label,
	        currentRefinement: checked,
	        attribute: props.attribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, false, _this.context);
	        }
	      });
	    }
	
	    return {
	      id: id,
	      index: index,
	      items: items
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 1590 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _Index = _interopRequireDefault(__webpack_require__(1566));
	
	/**
	 * Creates a specialized root Index component. It accepts
	 * a specification of the root Element.
	 * @param {object} defaultRoot - the defininition of the root of an Index sub tree.
	 * @return {object} a Index root
	 */
	var createIndex = function createIndex(defaultRoot) {
	  var CreateIndex = function CreateIndex(_ref) {
	    var indexName = _ref.indexName,
	        indexId = _ref.indexId,
	        root = _ref.root,
	        children = _ref.children;
	    return _react.default.createElement(_Index.default, {
	      indexName: indexName,
	      indexId: indexId || indexName,
	      root: root
	    }, children);
	  };
	
	  CreateIndex.propTypes = {
	    indexName: _propTypes.default.string.isRequired,
	    // @MAJOR: indexId must be required
	    indexId: _propTypes.default.string,
	    root: _propTypes.default.shape({
	      Root: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]).isRequired,
	      props: _propTypes.default.object
	    }),
	    children: _propTypes.default.node
	  };
	  CreateIndex.defaultProps = {
	    root: defaultRoot
	  };
	  return CreateIndex;
	};
	
	var _default = createIndex;
	exports.default = _default;

/***/ }),
/* 1591 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createInstantSearch;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _InstantSearch = _interopRequireDefault(__webpack_require__(1567));
	
	var _version = _interopRequireDefault(__webpack_require__(538));
	
	/**
	 * Creates a specialized root InstantSearch component. It accepts
	 * an algolia client and a specification of the root Element.
	 * @param {function} defaultAlgoliaClient - a function that builds an Algolia client
	 * @param {object} root - the defininition of the root of an InstantSearch sub tree.
	 * @returns {object} an InstantSearch root
	 */
	function createInstantSearch(defaultAlgoliaClient, root) {
	  var _class, _temp;
	
	  return _temp = _class =
	  /*#__PURE__*/
	  function (_Component) {
	    (0, _inherits2.default)(CreateInstantSearch, _Component);
	
	    function CreateInstantSearch() {
	      var _getPrototypeOf2;
	
	      var _this;
	
	      (0, _classCallCheck2.default)(this, CreateInstantSearch);
	
	      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CreateInstantSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));
	
	      if (_this.props.searchClient) {
	        if (_this.props.appId || _this.props.apiKey || _this.props.algoliaClient) {
	          throw new Error('react-instantsearch:: `searchClient` cannot be used with `appId`, `apiKey` or `algoliaClient`.');
	        }
	      }
	
	      if (_this.props.algoliaClient) {
	        // eslint-disable-next-line no-console
	        console.warn('`algoliaClient` option was renamed `searchClient`. Please use this new option before the next major version.');
	      }
	
	      _this.client = _this.props.searchClient || _this.props.algoliaClient || defaultAlgoliaClient(_this.props.appId, _this.props.apiKey, {
	        _useRequestCache: true
	      });
	
	      if (typeof _this.client.addAlgoliaAgent === 'function') {
	        _this.client.addAlgoliaAgent("react (".concat(_react.default.version, ")"));
	
	        _this.client.addAlgoliaAgent("react-instantsearch (".concat(_version.default, ")"));
	      }
	
	      return _this;
	    }
	
	    (0, _createClass2.default)(CreateInstantSearch, [{
	      key: "componentWillReceiveProps",
	      value: function componentWillReceiveProps(nextProps) {
	        var props = this.props;
	
	        if (nextProps.searchClient) {
	          this.client = nextProps.searchClient;
	        } else if (nextProps.algoliaClient) {
	          this.client = nextProps.algoliaClient;
	        } else if (props.appId !== nextProps.appId || props.apiKey !== nextProps.apiKey) {
	          this.client = defaultAlgoliaClient(nextProps.appId, nextProps.apiKey);
	        }
	
	        if (typeof this.client.addAlgoliaAgent === 'function') {
	          this.client.addAlgoliaAgent("react (".concat(_react.default.version, ")"));
	          this.client.addAlgoliaAgent("react-instantsearch (".concat(_version.default, ")"));
	        }
	      }
	    }, {
	      key: "render",
	      value: function render() {
	        return _react.default.createElement(_InstantSearch.default, {
	          createURL: this.props.createURL,
	          indexName: this.props.indexName,
	          searchState: this.props.searchState,
	          onSearchStateChange: this.props.onSearchStateChange,
	          onSearchParameters: this.props.onSearchParameters,
	          root: this.props.root,
	          searchClient: this.client,
	          algoliaClient: this.client,
	          refresh: this.props.refresh,
	          resultsState: this.props.resultsState
	        }, this.props.children);
	      }
	    }]);
	    return CreateInstantSearch;
	  }(_react.Component), (0, _defineProperty2.default)(_class, "propTypes", {
	    algoliaClient: _propTypes.default.object,
	    searchClient: _propTypes.default.object,
	    appId: _propTypes.default.string,
	    apiKey: _propTypes.default.string,
	    children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),
	    indexName: _propTypes.default.string.isRequired,
	    createURL: _propTypes.default.func,
	    searchState: _propTypes.default.object,
	    refresh: _propTypes.default.bool.isRequired,
	    onSearchStateChange: _propTypes.default.func,
	    onSearchParameters: _propTypes.default.func,
	    resultsState: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
	    root: _propTypes.default.shape({
	      Root: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]).isRequired,
	      props: _propTypes.default.object
	    })
	  }), (0, _defineProperty2.default)(_class, "defaultProps", {
	    refresh: false,
	    root: root
	  }), _temp;
	}

/***/ }),
/* 1592 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createInstantSearchManager;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _objectSpread4 = _interopRequireDefault(__webpack_require__(31));
	
	var _omit2 = _interopRequireDefault(__webpack_require__(97));
	
	var _algoliasearchHelper = _interopRequireDefault(__webpack_require__(387));
	
	var _createWidgetsManager = _interopRequireDefault(__webpack_require__(1594));
	
	var _createStore = _interopRequireDefault(__webpack_require__(1593));
	
	var _highlight = __webpack_require__(332);
	
	var _indexUtils = __webpack_require__(25);
	
	var isMultiIndexContext = function isMultiIndexContext(widget) {
	  return (0, _indexUtils.hasMultipleIndices)(widget.context);
	};
	
	var isTargetedIndexEqualIndex = function isTargetedIndexEqualIndex(widget, indexId) {
	  return widget.context.multiIndexContext.targetedIndex === indexId;
	}; // Relying on the `indexId` is a bit brittle to detect the `Index` widget.
	// Since it's a class we could rely on `instanceof` or similar. We never
	// had an issue though. Works for now.
	
	
	var isIndexWidget = function isIndexWidget(widget) {
	  return Boolean(widget.props.indexId);
	};
	
	var isIndexWidgetEqualIndex = function isIndexWidgetEqualIndex(widget, indexId) {
	  return widget.props.indexId === indexId;
	};
	/**
	 * Creates a new instance of the InstantSearchManager which controls the widgets and
	 * trigger the search when the widgets are updated.
	 * @param {string} indexName - the main index name
	 * @param {object} initialState - initial widget state
	 * @param {object} SearchParameters - optional additional parameters to send to the algolia API
	 * @param {number} stalledSearchDelay - time (in ms) after the search is stalled
	 * @return {InstantSearchManager} a new instance of InstantSearchManager
	 */
	
	
	function createInstantSearchManager(_ref) {
	  var indexName = _ref.indexName,
	      _ref$initialState = _ref.initialState,
	      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,
	      searchClient = _ref.searchClient,
	      resultsState = _ref.resultsState,
	      stalledSearchDelay = _ref.stalledSearchDelay;
	  var helper = (0, _algoliasearchHelper.default)(searchClient, indexName, (0, _objectSpread4.default)({}, _highlight.HIGHLIGHT_TAGS));
	  helper.on('search', handleNewSearch).on('result', handleSearchSuccess({
	    indexId: indexName
	  })).on('error', handleSearchError);
	  var skip = false;
	  var stalledSearchTimer = null;
	  var initialSearchParameters = helper.state;
	  var widgetsManager = (0, _createWidgetsManager.default)(onWidgetsUpdate);
	  var store = (0, _createStore.default)({
	    widgets: initialState,
	    metadata: [],
	    results: resultsState || null,
	    error: null,
	    searching: false,
	    isSearchStalled: true,
	    searchingForFacetValues: false
	  });
	
	  function skipSearch() {
	    skip = true;
	  }
	
	  function updateClient(client) {
	    helper.setClient(client);
	    search();
	  }
	
	  function clearCache() {
	    helper.clearCache();
	    search();
	  }
	
	  function getMetadata(state) {
	    return widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getMetadata);
	    }).map(function (widget) {
	      return widget.getMetadata(state);
	    });
	  }
	
	  function getSearchParameters() {
	    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getSearchParameters);
	    }).filter(function (widget) {
	      return !isMultiIndexContext(widget) && !isIndexWidget(widget);
	    }).reduce(function (res, widget) {
	      return widget.getSearchParameters(res);
	    }, initialSearchParameters);
	    var mainParameters = widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getSearchParameters);
	    }).filter(function (widget) {
	      var targetedIndexEqualMainIndex = isMultiIndexContext(widget) && isTargetedIndexEqualIndex(widget, indexName);
	      var subIndexEqualMainIndex = isIndexWidget(widget) && isIndexWidgetEqualIndex(widget, indexName);
	      return targetedIndexEqualMainIndex || subIndexEqualMainIndex;
	    }).reduce(function (res, widget) {
	      return widget.getSearchParameters(res);
	    }, sharedParameters);
	    var derivedIndices = widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getSearchParameters);
	    }).filter(function (widget) {
	      var targetedIndexNotEqualMainIndex = isMultiIndexContext(widget) && !isTargetedIndexEqualIndex(widget, indexName);
	      var subIndexNotEqualMainIndex = isIndexWidget(widget) && !isIndexWidgetEqualIndex(widget, indexName);
	      return targetedIndexNotEqualMainIndex || subIndexNotEqualMainIndex;
	    }).reduce(function (indices, widget) {
	      var indexId = isMultiIndexContext(widget) ? widget.context.multiIndexContext.targetedIndex : widget.props.indexId;
	      var widgets = indices[indexId] || [];
	      return (0, _objectSpread4.default)({}, indices, (0, _defineProperty2.default)({}, indexId, widgets.concat(widget)));
	    }, {});
	    var derivedParameters = Object.keys(derivedIndices).map(function (indexId) {
	      return {
	        parameters: derivedIndices[indexId].reduce(function (res, widget) {
	          return widget.getSearchParameters(res);
	        }, sharedParameters),
	        indexId: indexId
	      };
	    });
	    return {
	      mainParameters: mainParameters,
	      derivedParameters: derivedParameters
	    };
	  }
	
	  function search() {
	    if (!skip) {
	      var _getSearchParameters = getSearchParameters(helper.state),
	          mainParameters = _getSearchParameters.mainParameters,
	          derivedParameters = _getSearchParameters.derivedParameters; // We have to call `slice` because the method `detach` on the derived
	      // helpers mutates the value `derivedHelpers`. The `forEach` loop does
	      // not iterate on each value and we're not able to correctly clear the
	      // previous derived helpers (memory leak + useless requests).
	
	
	      helper.derivedHelpers.slice().forEach(function (derivedHelper) {
	        // Since we detach the derived helpers on **every** new search they
	        // won't receive intermediate results in case of a stalled search.
	        // Only the last result is dispatched by the derived helper because
	        // they are not detached yet:
	        //
	        // - a -> main helper receives results
	        // - ap -> main helper receives results
	        // - app -> main helper + derived helpers receive results
	        //
	        // The quick fix is to avoid to detatch them on search but only once they
	        // received the results. But it means that in case of a stalled search
	        // all the derived helpers not detached yet register a new search inside
	        // the helper. The number grows fast in case of a bad network and it's
	        // not deterministic.
	        derivedHelper.detach();
	      });
	      derivedParameters.forEach(function (_ref2) {
	        var indexId = _ref2.indexId,
	            parameters = _ref2.parameters;
	        var derivedHelper = helper.derive(function () {
	          return parameters;
	        });
	        derivedHelper.on('result', handleSearchSuccess({
	          indexId: indexId
	        })).on('error', handleSearchError);
	      });
	      helper.setState(mainParameters);
	      helper.search();
	    }
	  }
	
	  function handleSearchSuccess(_ref3) {
	    var indexId = _ref3.indexId;
	    return function (content) {
	      var state = store.getState();
	      var isDerivedHelpersEmpty = !helper.derivedHelpers.length;
	      var results = state.results ? state.results : {}; // Switching from mono index to multi index and vice versa must reset the
	      // results to an empty object, otherwise we keep reference of stalled and
	      // unused results.
	
	      results = !isDerivedHelpersEmpty && results.getFacetByName ? {} : results;
	
	      if (!isDerivedHelpersEmpty) {
	        results[indexId] = content;
	      } else {
	        results = content;
	      }
	
	      var currentState = store.getState();
	      var nextIsSearchStalled = currentState.isSearchStalled;
	
	      if (!helper.hasPendingRequests()) {
	        clearTimeout(stalledSearchTimer);
	        stalledSearchTimer = null;
	        nextIsSearchStalled = false;
	      }
	
	      var nextState = (0, _omit2.default)((0, _objectSpread4.default)({}, currentState, {
	        results: results,
	        isSearchStalled: nextIsSearchStalled,
	        searching: false,
	        error: null
	      }), 'resultsFacetValues');
	      store.setState(nextState);
	    };
	  }
	
	  function handleSearchError(error) {
	    var currentState = store.getState();
	    var nextIsSearchStalled = currentState.isSearchStalled;
	
	    if (!helper.hasPendingRequests()) {
	      clearTimeout(stalledSearchTimer);
	      nextIsSearchStalled = false;
	    }
	
	    var nextState = (0, _omit2.default)((0, _objectSpread4.default)({}, currentState, {
	      isSearchStalled: nextIsSearchStalled,
	      error: error,
	      searching: false
	    }), 'resultsFacetValues');
	    store.setState(nextState);
	  }
	
	  function handleNewSearch() {
	    if (!stalledSearchTimer) {
	      stalledSearchTimer = setTimeout(function () {
	        var nextState = (0, _omit2.default)((0, _objectSpread4.default)({}, store.getState(), {
	          isSearchStalled: true
	        }), 'resultsFacetValues');
	        store.setState(nextState);
	      }, stalledSearchDelay);
	    }
	  } // Called whenever a widget has been rendered with new props.
	
	
	  function onWidgetsUpdate() {
	    var metadata = getMetadata(store.getState().widgets);
	    store.setState((0, _objectSpread4.default)({}, store.getState(), {
	      metadata: metadata,
	      searching: true
	    })); // Since the `getSearchParameters` method of widgets also depends on props,
	    // the result search parameters might have changed.
	
	    search();
	  }
	
	  function transitionState(nextSearchState) {
	    var searchState = store.getState().widgets;
	    return widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.transitionState);
	    }).reduce(function (res, widget) {
	      return widget.transitionState(searchState, res);
	    }, nextSearchState);
	  }
	
	  function onExternalStateUpdate(nextSearchState) {
	    var metadata = getMetadata(nextSearchState);
	    store.setState((0, _objectSpread4.default)({}, store.getState(), {
	      widgets: nextSearchState,
	      metadata: metadata,
	      searching: true
	    }));
	    search();
	  }
	
	  function onSearchForFacetValues(_ref4) {
	    var facetName = _ref4.facetName,
	        query = _ref4.query,
	        _ref4$maxFacetHits = _ref4.maxFacetHits,
	        maxFacetHits = _ref4$maxFacetHits === void 0 ? 10 : _ref4$maxFacetHits;
	    // The values 1, 100 are the min / max values that the engine accepts.
	    // see: https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits
	    var maxFacetHitsWithinRange = Math.max(1, Math.min(maxFacetHits, 100));
	    store.setState((0, _objectSpread4.default)({}, store.getState(), {
	      searchingForFacetValues: true
	    }));
	    helper.searchForFacetValues(facetName, query, maxFacetHitsWithinRange).then(function (content) {
	      var _objectSpread3;
	
	      store.setState((0, _objectSpread4.default)({}, store.getState(), {
	        error: null,
	        searchingForFacetValues: false,
	        resultsFacetValues: (0, _objectSpread4.default)({}, store.getState().resultsFacetValues, (_objectSpread3 = {}, (0, _defineProperty2.default)(_objectSpread3, facetName, content.facetHits), (0, _defineProperty2.default)(_objectSpread3, "query", query), _objectSpread3))
	      }));
	    }, function (error) {
	      store.setState((0, _objectSpread4.default)({}, store.getState(), {
	        searchingForFacetValues: false,
	        error: error
	      }));
	    }).catch(function (error) {
	      // Since setState is synchronous, any error that occurs in the render of a
	      // component will be swallowed by this promise.
	      // This is a trick to make the error show up correctly in the console.
	      // See http://stackoverflow.com/a/30741722/969302
	      setTimeout(function () {
	        throw error;
	      });
	    });
	  }
	
	  function updateIndex(newIndex) {
	    initialSearchParameters = initialSearchParameters.setIndex(newIndex);
	    search();
	  }
	
	  function getWidgetsIds() {
	    return store.getState().metadata.reduce(function (res, meta) {
	      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;
	    }, []);
	  }
	
	  return {
	    store: store,
	    widgetsManager: widgetsManager,
	    getWidgetsIds: getWidgetsIds,
	    getSearchParameters: getSearchParameters,
	    onSearchForFacetValues: onSearchForFacetValues,
	    onExternalStateUpdate: onExternalStateUpdate,
	    transitionState: transitionState,
	    updateClient: updateClient,
	    updateIndex: updateIndex,
	    clearCache: clearCache,
	    skipSearch: skipSearch
	  };
	}

/***/ }),
/* 1593 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createStore;
	
	function createStore(initialState) {
	  var state = initialState;
	  var listeners = [];
	
	  function dispatch() {
	    listeners.forEach(function (listener) {
	      return listener();
	    });
	  }
	
	  return {
	    getState: function getState() {
	      return state;
	    },
	    setState: function setState(nextState) {
	      state = nextState;
	      dispatch();
	    },
	    subscribe: function subscribe(listener) {
	      listeners.push(listener);
	      return function unsubcribe() {
	        listeners.splice(listeners.indexOf(listener), 1);
	      };
	    }
	  };
	}

/***/ }),
/* 1594 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createWidgetsManager;
	
	var _utils = __webpack_require__(169);
	
	function createWidgetsManager(onWidgetsUpdate) {
	  var widgets = []; // Is an update scheduled?
	
	  var scheduled = false; // The state manager's updates need to be batched since more than one
	  // component can register or unregister widgets during the same tick.
	
	  function scheduleUpdate() {
	    if (scheduled) {
	      return;
	    }
	
	    scheduled = true;
	    (0, _utils.defer)(function () {
	      scheduled = false;
	      onWidgetsUpdate();
	    });
	  }
	
	  return {
	    registerWidget: function registerWidget(widget) {
	      widgets.push(widget);
	      scheduleUpdate();
	      return function unregisterWidget() {
	        widgets.splice(widgets.indexOf(widget), 1);
	        scheduleUpdate();
	      };
	    },
	    update: scheduleUpdate,
	    getWidgets: function getWidgets() {
	      return widgets;
	    }
	  };
	}

/***/ }),
/* 1595 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = translatable;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _has2 = _interopRequireDefault(__webpack_require__(209));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var withKeysPropType = function withKeysPropType(keys) {
	  return function (props, propName, componentName) {
	    var prop = props[propName];
	
	    if (prop) {
	      for (var _i = 0, _Object$keys = Object.keys(prop); _i < _Object$keys.length; _i++) {
	        var key = _Object$keys[_i];
	
	        if (keys.indexOf(key) === -1) {
	          return new Error("Unknown `".concat(propName, "` key `").concat(key, "`. Check the render method ") + "of `".concat(componentName, "`."));
	        }
	      }
	    }
	
	    return undefined;
	  };
	};
	
	function translatable(defaultTranslations) {
	  return function (Composed) {
	    var Translatable =
	    /*#__PURE__*/
	    function (_Component) {
	      (0, _inherits2.default)(Translatable, _Component);
	
	      function Translatable() {
	        var _getPrototypeOf2;
	
	        var _this;
	
	        (0, _classCallCheck2.default)(this, Translatable);
	
	        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }
	
	        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Translatable)).call.apply(_getPrototypeOf2, [this].concat(args)));
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "translate", function (key) {
	          var translations = _this.props.translations;
	          var translation = translations && (0, _has2.default)(translations, key) ? translations[key] : defaultTranslations[key];
	
	          if (typeof translation === 'function') {
	            for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	              params[_key2 - 1] = arguments[_key2];
	            }
	
	            return translation.apply(void 0, params);
	          }
	
	          return translation;
	        });
	        return _this;
	      }
	
	      (0, _createClass2.default)(Translatable, [{
	        key: "render",
	        value: function render() {
	          return _react.default.createElement(Composed, (0, _extends2.default)({
	            translate: this.translate
	          }, this.props));
	        }
	      }]);
	      return Translatable;
	    }(_react.Component);
	
	    var name = Composed.displayName || Composed.name || 'UnknownComponent';
	    Translatable.displayName = "Translatable(".concat(name, ")");
	    Translatable.propTypes = {
	      translations: withKeysPropType(Object.keys(defaultTranslations))
	    };
	    return Translatable;
	  };
	}

/***/ }),
/* 1596 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _translatable = __webpack_require__(1597);
	
	Object.keys(_translatable).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _translatable[key];
	    }
	  });
	});

/***/ }),
/* 1597 */
/***/ (function(module, exports) {

	"use strict";

/***/ }),
/* 1598 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _connectConfigure = _interopRequireDefault(__webpack_require__(536));
	
	/**
	 * Configure is a widget that lets you provide raw search parameters
	 * to the Algolia API.
	 *
	 * Any of the props added to this widget will be forwarded to Algolia. For more information
	 * on the different parameters that can be set, have a look at the
	 * [reference](https://www.algolia.com/doc/api-client/javascript/search#search-parameters).
	 *
	 * This widget can be used either with react-dom and react-native. It will not render anything
	 * on screen, only configure some parameters.
	 *
	 * Read more in the [Search parameters](guide/Search_parameters.html) guide.
	 * @name Configure
	 * @kind widget
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Configure, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Configure hitsPerPage={5} />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _connectConfigure.default)(function () {
	  return null;
	});
	
	exports.default = _default;

/***/ }),
/* 1599 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _connectQueryRules = _interopRequireDefault(__webpack_require__(537));
	
	var _default = (0, _connectQueryRules.default)(function QueryRuleContext() {
	  return null;
	});
	
	exports.default = _default;

/***/ }),
/* 1600 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var _Link = _interopRequireDefault(__webpack_require__(217));
	
	var cx = (0, _utils.createClassNames)('Breadcrumb');
	
	var itemsPropType = _propTypes.default.arrayOf(_propTypes.default.shape({
	  label: _propTypes.default.string.isRequired,
	  value: _propTypes.default.string.isRequired
	}));
	
	var Breadcrumb =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Breadcrumb, _Component);
	
	  function Breadcrumb() {
	    (0, _classCallCheck2.default)(this, Breadcrumb);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Breadcrumb).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(Breadcrumb, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          canRefine = _this$props.canRefine,
	          createURL = _this$props.createURL,
	          items = _this$props.items,
	          refine = _this$props.refine,
	          rootURL = _this$props.rootURL,
	          separator = _this$props.separator,
	          translate = _this$props.translate,
	          className = _this$props.className;
	      var rootPath = canRefine ? _react.default.createElement("li", {
	        className: cx('item')
	      }, _react.default.createElement(_Link.default, {
	        className: cx('link'),
	        onClick: function onClick() {
	          return !rootURL ? refine() : null;
	        },
	        href: rootURL ? rootURL : createURL()
	      }, translate('rootLabel'))) : null;
	      var breadcrumb = items.map(function (item, idx) {
	        var isLast = idx === items.length - 1;
	        return _react.default.createElement("li", {
	          className: cx('item', isLast && 'item--selected'),
	          key: idx
	        }, _react.default.createElement("span", {
	          className: cx('separator')
	        }, separator), !isLast ? _react.default.createElement(_Link.default, {
	          className: cx('link'),
	          onClick: function onClick() {
	            return refine(item.value);
	          },
	          href: createURL(item.value)
	        }, item.label) : item.label);
	      });
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, _react.default.createElement("ul", {
	        className: cx('list')
	      }, rootPath, breadcrumb));
	    }
	  }]);
	  return Breadcrumb;
	}(_react.Component);
	
	(0, _defineProperty2.default)(Breadcrumb, "propTypes", {
	  canRefine: _propTypes.default.bool.isRequired,
	  createURL: _propTypes.default.func.isRequired,
	  items: itemsPropType,
	  refine: _propTypes.default.func.isRequired,
	  rootURL: _propTypes.default.string,
	  separator: _propTypes.default.node,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(Breadcrumb, "defaultProps", {
	  rootURL: null,
	  separator: ' > ',
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  rootLabel: 'Home'
	})(Breadcrumb);
	
	exports.default = _default;

/***/ }),
/* 1601 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('ClearRefinements');
	
	var ClearRefinements =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(ClearRefinements, _Component);
	
	  function ClearRefinements() {
	    (0, _classCallCheck2.default)(this, ClearRefinements);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ClearRefinements).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(ClearRefinements, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          items = _this$props.items,
	          canRefine = _this$props.canRefine,
	          refine = _this$props.refine,
	          translate = _this$props.translate,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement("button", {
	        className: cx('button', !canRefine && 'button--disabled'),
	        onClick: function onClick() {
	          return refine(items);
	        },
	        disabled: !canRefine
	      }, translate('reset')));
	    }
	  }]);
	  return ClearRefinements;
	}(_react.Component);
	
	(0, _defineProperty2.default)(ClearRefinements, "propTypes", {
	  items: _propTypes.default.arrayOf(_propTypes.default.object).isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(ClearRefinements, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  reset: 'Clear all filters'
	})(ClearRefinements);
	
	exports.default = _default;

/***/ }),
/* 1602 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.CurrentRefinements = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('CurrentRefinements');
	
	var CurrentRefinements = function CurrentRefinements(_ref) {
	  var items = _ref.items,
	      canRefine = _ref.canRefine,
	      refine = _ref.refine,
	      translate = _ref.translate,
	      className = _ref.className;
	  return _react.default.createElement("div", {
	    className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	  }, _react.default.createElement("ul", {
	    className: cx('list', !canRefine && 'list--noRefinement')
	  }, items.map(function (item) {
	    return _react.default.createElement("li", {
	      key: item.label,
	      className: cx('item')
	    }, _react.default.createElement("span", {
	      className: cx('label')
	    }, item.label), item.items ? item.items.map(function (nest) {
	      return _react.default.createElement("span", {
	        key: nest.label,
	        className: cx('category')
	      }, _react.default.createElement("span", {
	        className: cx('categoryLabel')
	      }, nest.label), _react.default.createElement("button", {
	        className: cx('delete'),
	        onClick: function onClick() {
	          return refine(nest.value);
	        }
	      }, translate('clearFilter', nest)));
	    }) : _react.default.createElement("span", {
	      className: cx('category')
	    }, _react.default.createElement("button", {
	      className: cx('delete'),
	      onClick: function onClick() {
	        return refine(item.value);
	      }
	    }, translate('clearFilter', item))));
	  })));
	};
	
	exports.CurrentRefinements = CurrentRefinements;
	
	var itemPropTypes = _propTypes.default.arrayOf(_propTypes.default.shape({
	  label: _propTypes.default.string.isRequired,
	  value: _propTypes.default.func.isRequired,
	  items: function items() {
	    return itemPropTypes.apply(void 0, arguments);
	  }
	}));
	
	CurrentRefinements.propTypes = {
	  items: itemPropTypes.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	};
	CurrentRefinements.defaultProps = {
	  className: ''
	};
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  clearFilter: '✕'
	})(CurrentRefinements);
	
	exports.default = _default;

/***/ }),
/* 1603 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _pick2 = _interopRequireDefault(__webpack_require__(212));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var _List = _interopRequireDefault(__webpack_require__(218));
	
	var _Link = _interopRequireDefault(__webpack_require__(217));
	
	var cx = (0, _utils.createClassNames)('HierarchicalMenu');
	
	var itemsPropType = _propTypes.default.arrayOf(_propTypes.default.shape({
	  label: _propTypes.default.string.isRequired,
	  value: _propTypes.default.string,
	  count: _propTypes.default.number.isRequired,
	  items: function items() {
	    return itemsPropType.apply(void 0, arguments);
	  }
	}));
	
	var HierarchicalMenu =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(HierarchicalMenu, _Component);
	
	  function HierarchicalMenu() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, HierarchicalMenu);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(HierarchicalMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderItem", function (item) {
	      var _this$props = _this.props,
	          createURL = _this$props.createURL,
	          refine = _this$props.refine;
	      return _react.default.createElement(_Link.default, {
	        className: cx('link'),
	        onClick: function onClick() {
	          return refine(item.value);
	        },
	        href: createURL(item.value)
	      }, _react.default.createElement("span", {
	        className: cx('label')
	      }, item.label), ' ', _react.default.createElement("span", {
	        className: cx('count')
	      }, item.count));
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(HierarchicalMenu, [{
	    key: "render",
	    value: function render() {
	      return _react.default.createElement(_List.default, (0, _extends2.default)({
	        renderItem: this.renderItem,
	        cx: cx
	      }, (0, _pick2.default)(this.props, ['translate', 'items', 'showMore', 'limit', 'showMoreLimit', 'isEmpty', 'canRefine', 'className'])));
	    }
	  }]);
	  return HierarchicalMenu;
	}(_react.Component);
	
	(0, _defineProperty2.default)(HierarchicalMenu, "propTypes", {
	  translate: _propTypes.default.func.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  createURL: _propTypes.default.func.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  items: itemsPropType,
	  showMore: _propTypes.default.bool,
	  className: _propTypes.default.string,
	  limit: _propTypes.default.number,
	  showMoreLimit: _propTypes.default.number,
	  transformItems: _propTypes.default.func
	});
	(0, _defineProperty2.default)(HierarchicalMenu, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  showMore: function showMore(extended) {
	    return extended ? 'Show less' : 'Show more';
	  }
	})(HierarchicalMenu);
	
	exports.default = _default;

/***/ }),
/* 1604 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _utils = __webpack_require__(20);
	
	var _Highlighter = _interopRequireDefault(__webpack_require__(539));
	
	var cx = (0, _utils.createClassNames)('Highlight');
	
	var Highlight = function Highlight(props) {
	  return _react.default.createElement(_Highlighter.default, (0, _extends2.default)({}, props, {
	    highlightProperty: "_highlightResult",
	    cx: cx
	  }));
	};
	
	var _default = Highlight;
	exports.default = _default;

/***/ }),
/* 1605 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('Hits');
	
	var Hits = function Hits(_ref) {
	  var hits = _ref.hits,
	      _ref$className = _ref.className,
	      className = _ref$className === void 0 ? '' : _ref$className,
	      _ref$hitComponent = _ref.hitComponent,
	      HitComponent = _ref$hitComponent === void 0 ? DefaultHitComponent : _ref$hitComponent;
	  return _react.default.createElement("div", {
	    className: (0, _classnames.default)(cx(''), className)
	  }, _react.default.createElement("ul", {
	    className: cx('list')
	  }, hits.map(function (hit) {
	    return _react.default.createElement("li", {
	      className: cx('item'),
	      key: hit.objectID
	    }, _react.default.createElement(HitComponent, {
	      hit: hit
	    }));
	  })));
	};
	
	var DefaultHitComponent = function DefaultHitComponent(props) {
	  return _react.default.createElement("div", {
	    style: {
	      borderBottom: '1px solid #bbb',
	      paddingBottom: '5px',
	      marginBottom: '5px',
	      wordBreak: 'break-all'
	    }
	  }, JSON.stringify(props).slice(0, 100), "...");
	};
	
	var HitPropTypes = _propTypes.default.shape({
	  objectID: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired
	});
	
	Hits.propTypes = {
	  hits: _propTypes.default.arrayOf(HitPropTypes.isRequired).isRequired,
	  className: _propTypes.default.string,
	  hitComponent: _propTypes.default.func
	};
	var _default = Hits;
	exports.default = _default;

/***/ }),
/* 1606 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _utils = __webpack_require__(20);
	
	var _Select = _interopRequireDefault(__webpack_require__(541));
	
	var cx = (0, _utils.createClassNames)('HitsPerPage');
	
	var HitsPerPage =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(HitsPerPage, _Component);
	
	  function HitsPerPage() {
	    (0, _classCallCheck2.default)(this, HitsPerPage);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HitsPerPage).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(HitsPerPage, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          items = _this$props.items,
	          currentRefinement = _this$props.currentRefinement,
	          refine = _this$props.refine,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement(_Select.default, {
	        onSelect: refine,
	        selectedItem: currentRefinement,
	        items: items,
	        cx: cx
	      }));
	    }
	  }]);
	  return HitsPerPage;
	}(_react.Component);
	
	(0, _defineProperty2.default)(HitsPerPage, "propTypes", {
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    value: _propTypes.default.number.isRequired,
	    label: _propTypes.default.string
	  })).isRequired,
	  currentRefinement: _propTypes.default.number.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(HitsPerPage, "defaultProps", {
	  className: ''
	});
	var _default = HitsPerPage;
	exports.default = _default;

/***/ }),
/* 1607 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('InfiniteHits');
	
	var InfiniteHits =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(InfiniteHits, _Component);
	
	  function InfiniteHits() {
	    (0, _classCallCheck2.default)(this, InfiniteHits);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InfiniteHits).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(InfiniteHits, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          HitComponent = _this$props.hitComponent,
	          hits = _this$props.hits,
	          showPrevious = _this$props.showPrevious,
	          hasPrevious = _this$props.hasPrevious,
	          hasMore = _this$props.hasMore,
	          refinePrevious = _this$props.refinePrevious,
	          refineNext = _this$props.refineNext,
	          translate = _this$props.translate,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, showPrevious && _react.default.createElement("button", {
	        className: cx('loadPrevious', !hasPrevious && 'loadPrevious--disabled'),
	        onClick: function onClick() {
	          return refinePrevious();
	        },
	        disabled: !hasPrevious
	      }, translate('loadPrevious')), _react.default.createElement("ul", {
	        className: cx('list')
	      }, hits.map(function (hit) {
	        return _react.default.createElement("li", {
	          key: hit.objectID,
	          className: cx('item')
	        }, _react.default.createElement(HitComponent, {
	          hit: hit
	        }));
	      })), _react.default.createElement("button", {
	        className: cx('loadMore', !hasMore && 'loadMore--disabled'),
	        onClick: function onClick() {
	          return refineNext();
	        },
	        disabled: !hasMore
	      }, translate('loadMore')));
	    }
	  }]);
	  return InfiniteHits;
	}(_react.Component);
	
	InfiniteHits.propTypes = {
	  hits: _propTypes.default.arrayOf(_propTypes.default.object).isRequired,
	  showPrevious: _propTypes.default.bool.isRequired,
	  hasPrevious: _propTypes.default.bool.isRequired,
	  hasMore: _propTypes.default.bool.isRequired,
	  refinePrevious: _propTypes.default.func.isRequired,
	  refineNext: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string,
	  hitComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func])
	};
	InfiniteHits.defaultProps = {
	  className: '',
	  showPrevious: false,
	  hitComponent: function hitComponent(hit) {
	    return _react.default.createElement("div", {
	      style: {
	        borderBottom: '1px solid #bbb',
	        paddingBottom: '5px',
	        marginBottom: '5px',
	        wordBreak: 'break-all'
	      }
	    }, JSON.stringify(hit).slice(0, 100), "...");
	  }
	};
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  loadPrevious: 'Load previous',
	  loadMore: 'Load more'
	})(InfiniteHits);
	
	exports.default = _default;

/***/ }),
/* 1608 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _has2 = _interopRequireDefault(__webpack_require__(209));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _Link = _interopRequireDefault(__webpack_require__(217));
	
	var LinkList =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(LinkList, _Component);
	
	  function LinkList() {
	    (0, _classCallCheck2.default)(this, LinkList);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LinkList).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(LinkList, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          cx = _this$props.cx,
	          createURL = _this$props.createURL,
	          items = _this$props.items,
	          onSelect = _this$props.onSelect,
	          canRefine = _this$props.canRefine;
	      return _react.default.createElement("ul", {
	        className: cx('list', !canRefine && 'list--noRefinement')
	      }, items.map(function (item) {
	        return _react.default.createElement("li", {
	          key: (0, _has2.default)(item, 'key') ? item.key : item.value,
	          className: cx('item', item.selected && !item.disabled && 'item--selected', item.disabled && 'item--disabled', item.modifier)
	        }, item.disabled ? _react.default.createElement("span", {
	          className: cx('link')
	        }, (0, _has2.default)(item, 'label') ? item.label : item.value) : _react.default.createElement(_Link.default, {
	          className: cx('link', item.selected && 'link--selected'),
	          "aria-label": item.ariaLabel,
	          href: createURL(item.value),
	          onClick: function onClick() {
	            return onSelect(item.value);
	          }
	        }, (0, _has2.default)(item, 'label') ? item.label : item.value));
	      }));
	    }
	  }]);
	  return LinkList;
	}(_react.Component);
	
	exports.default = LinkList;
	(0, _defineProperty2.default)(LinkList, "propTypes", {
	  cx: _propTypes.default.func.isRequired,
	  createURL: _propTypes.default.func.isRequired,
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.object]).isRequired,
	    key: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	    label: _propTypes.default.node,
	    modifier: _propTypes.default.string,
	    ariaLabel: _propTypes.default.string,
	    disabled: _propTypes.default.bool
	  })),
	  onSelect: _propTypes.default.func.isRequired,
	  canRefine: _propTypes.default.bool.isRequired
	});

/***/ }),
/* 1609 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _pick2 = _interopRequireDefault(__webpack_require__(212));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var _Highlight = _interopRequireDefault(__webpack_require__(333));
	
	var _List = _interopRequireDefault(__webpack_require__(218));
	
	var _Link = _interopRequireDefault(__webpack_require__(217));
	
	var cx = (0, _utils.createClassNames)('Menu');
	
	var Menu =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Menu, _Component);
	
	  function Menu() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Menu);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderItem", function (item, resetQuery) {
	      var createURL = _this.props.createURL;
	      var label = _this.props.isFromSearch ? _react.default.createElement(_Highlight.default, {
	        attribute: "label",
	        hit: item
	      }) : item.label;
	      return _react.default.createElement(_Link.default, {
	        className: cx('link'),
	        onClick: function onClick() {
	          return _this.selectItem(item, resetQuery);
	        },
	        href: createURL(item.value)
	      }, _react.default.createElement("span", {
	        className: cx('label')
	      }, label), ' ', _react.default.createElement("span", {
	        className: cx('count')
	      }, item.count));
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectItem", function (item, resetQuery) {
	      resetQuery();
	
	      _this.props.refine(item.value);
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(Menu, [{
	    key: "render",
	    value: function render() {
	      return _react.default.createElement(_List.default, (0, _extends2.default)({
	        renderItem: this.renderItem,
	        selectItem: this.selectItem,
	        cx: cx
	      }, (0, _pick2.default)(this.props, ['translate', 'items', 'showMore', 'limit', 'showMoreLimit', 'isFromSearch', 'searchForItems', 'searchable', 'canRefine', 'className'])));
	    }
	  }]);
	  return Menu;
	}(_react.Component);
	
	(0, _defineProperty2.default)(Menu, "propTypes", {
	  translate: _propTypes.default.func.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  searchForItems: _propTypes.default.func.isRequired,
	  searchable: _propTypes.default.bool,
	  createURL: _propTypes.default.func.isRequired,
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    label: _propTypes.default.string.isRequired,
	    value: _propTypes.default.string.isRequired,
	    count: _propTypes.default.number.isRequired,
	    isRefined: _propTypes.default.bool.isRequired
	  })),
	  isFromSearch: _propTypes.default.bool.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  showMore: _propTypes.default.bool,
	  limit: _propTypes.default.number,
	  showMoreLimit: _propTypes.default.number,
	  transformItems: _propTypes.default.func,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(Menu, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  showMore: function showMore(extended) {
	    return extended ? 'Show less' : 'Show more';
	  },
	  noResults: 'No results',
	  submit: null,
	  reset: null,
	  resetTitle: 'Clear the search query.',
	  submitTitle: 'Submit your search query.',
	  placeholder: 'Search here…'
	})(Menu);
	
	exports.default = _default;

/***/ }),
/* 1610 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _find2 = _interopRequireDefault(__webpack_require__(71));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('MenuSelect');
	
	var MenuSelect =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(MenuSelect, _Component);
	
	  function MenuSelect() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, MenuSelect);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MenuSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSelectChange", function (_ref) {
	      var value = _ref.target.value;
	
	      _this.props.refine(value === 'ais__see__all__option' ? '' : value);
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(MenuSelect, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          items = _this$props.items,
	          canRefine = _this$props.canRefine,
	          translate = _this$props.translate,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, _react.default.createElement("select", {
	        value: this.selectedValue,
	        onChange: this.handleSelectChange,
	        className: cx('select')
	      }, _react.default.createElement("option", {
	        value: "ais__see__all__option",
	        className: cx('option')
	      }, translate('seeAllOption')), items.map(function (item) {
	        return _react.default.createElement("option", {
	          key: item.value,
	          value: item.value,
	          className: cx('option')
	        }, item.label, " (", item.count, ")");
	      })));
	    }
	  }, {
	    key: "selectedValue",
	    get: function get() {
	      var _ref2 = (0, _find2.default)(this.props.items, {
	        isRefined: true
	      }) || {
	        value: 'ais__see__all__option'
	      },
	          value = _ref2.value;
	
	      return value;
	    }
	  }]);
	  return MenuSelect;
	}(_react.Component);
	
	(0, _defineProperty2.default)(MenuSelect, "propTypes", {
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    label: _propTypes.default.string.isRequired,
	    value: _propTypes.default.string.isRequired,
	    count: _propTypes.default.oneOfType([_propTypes.default.number.isRequired, _propTypes.default.string.isRequired]),
	    isRefined: _propTypes.default.bool.isRequired
	  })).isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(MenuSelect, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  seeAllOption: 'See all'
	})(MenuSelect);
	
	exports.default = _default;

/***/ }),
/* 1611 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var _List = _interopRequireDefault(__webpack_require__(218));
	
	var cx = (0, _utils.createClassNames)('NumericMenu');
	
	var NumericMenu =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(NumericMenu, _Component);
	
	  function NumericMenu() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, NumericMenu);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(NumericMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderItem", function (item) {
	      var _this$props = _this.props,
	          refine = _this$props.refine,
	          translate = _this$props.translate;
	      return _react.default.createElement("label", {
	        className: cx('label')
	      }, _react.default.createElement("input", {
	        className: cx('radio'),
	        type: "radio",
	        checked: item.isRefined,
	        disabled: item.noRefinement,
	        onChange: function onChange() {
	          return refine(item.value);
	        }
	      }), _react.default.createElement("span", {
	        className: cx('labelText')
	      }, item.value === '' ? translate('all') : item.label));
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(NumericMenu, [{
	    key: "render",
	    value: function render() {
	      var _this$props2 = this.props,
	          items = _this$props2.items,
	          canRefine = _this$props2.canRefine,
	          className = _this$props2.className;
	      return _react.default.createElement(_List.default, {
	        renderItem: this.renderItem,
	        showMore: false,
	        canRefine: canRefine,
	        cx: cx,
	        items: items.map(function (item) {
	          return (0, _objectSpread2.default)({}, item, {
	            key: item.value
	          });
	        }),
	        className: className
	      });
	    }
	  }]);
	  return NumericMenu;
	}(_react.Component);
	
	(0, _defineProperty2.default)(NumericMenu, "propTypes", {
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    label: _propTypes.default.node.isRequired,
	    value: _propTypes.default.string.isRequired,
	    isRefined: _propTypes.default.bool.isRequired,
	    noRefinement: _propTypes.default.bool.isRequired
	  })).isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(NumericMenu, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  all: 'All'
	})(NumericMenu);
	
	exports.default = _default;

/***/ }),
/* 1612 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(6));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _range2 = _interopRequireDefault(__webpack_require__(1507));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var _LinkList = _interopRequireDefault(__webpack_require__(1608));
	
	var cx = (0, _utils.createClassNames)('Pagination'); // Determines the size of the widget (the number of pages displayed - that the user can directly click on)
	
	function calculateSize(padding, maxPages) {
	  return Math.min(2 * padding + 1, maxPages);
	}
	
	function calculatePaddingLeft(currentPage, padding, maxPages, size) {
	  if (currentPage <= padding) {
	    return currentPage;
	  }
	
	  if (currentPage >= maxPages - padding) {
	    return size - (maxPages - currentPage);
	  }
	
	  return padding + 1;
	} // Retrieve the correct page range to populate the widget
	
	
	function getPages(currentPage, maxPages, padding) {
	  var size = calculateSize(padding, maxPages); // If the widget size is equal to the max number of pages, return the entire page range
	
	  if (size === maxPages) return (0, _range2.default)(1, maxPages + 1);
	  var paddingLeft = calculatePaddingLeft(currentPage, padding, maxPages, size);
	  var paddingRight = size - paddingLeft;
	  var first = currentPage - paddingLeft;
	  var last = currentPage + paddingRight;
	  return (0, _range2.default)(first + 1, last + 1);
	}
	
	var Pagination =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Pagination, _Component);
	
	  function Pagination() {
	    (0, _classCallCheck2.default)(this, Pagination);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pagination).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(Pagination, [{
	    key: "getItem",
	    value: function getItem(modifier, translationKey, value) {
	      var _this$props = this.props,
	          nbPages = _this$props.nbPages,
	          totalPages = _this$props.totalPages,
	          translate = _this$props.translate;
	      return {
	        key: "".concat(modifier, ".").concat(value),
	        modifier: modifier,
	        disabled: value < 1 || value >= Math.min(totalPages, nbPages),
	        label: translate(translationKey, value),
	        value: value,
	        ariaLabel: translate("aria".concat((0, _utils.capitalize)(translationKey)), value)
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props2 = this.props,
	          ListComponent = _this$props2.listComponent,
	          nbPages = _this$props2.nbPages,
	          totalPages = _this$props2.totalPages,
	          currentRefinement = _this$props2.currentRefinement,
	          padding = _this$props2.padding,
	          showFirst = _this$props2.showFirst,
	          showPrevious = _this$props2.showPrevious,
	          showNext = _this$props2.showNext,
	          showLast = _this$props2.showLast,
	          refine = _this$props2.refine,
	          createURL = _this$props2.createURL,
	          canRefine = _this$props2.canRefine,
	          translate = _this$props2.translate,
	          className = _this$props2.className,
	          otherProps = (0, _objectWithoutProperties2.default)(_this$props2, ["listComponent", "nbPages", "totalPages", "currentRefinement", "padding", "showFirst", "showPrevious", "showNext", "showLast", "refine", "createURL", "canRefine", "translate", "className"]);
	      var maxPages = Math.min(nbPages, totalPages);
	      var lastPage = maxPages;
	      var items = [];
	
	      if (showFirst) {
	        items.push({
	          key: 'first',
	          modifier: 'item--firstPage',
	          disabled: currentRefinement === 1,
	          label: translate('first'),
	          value: 1,
	          ariaLabel: translate('ariaFirst')
	        });
	      }
	
	      if (showPrevious) {
	        items.push({
	          key: 'previous',
	          modifier: 'item--previousPage',
	          disabled: currentRefinement === 1,
	          label: translate('previous'),
	          value: currentRefinement - 1,
	          ariaLabel: translate('ariaPrevious')
	        });
	      }
	
	      items = items.concat(getPages(currentRefinement, maxPages, padding).map(function (value) {
	        return {
	          key: value,
	          modifier: 'item--page',
	          label: translate('page', value),
	          value: value,
	          selected: value === currentRefinement,
	          ariaLabel: translate('ariaPage', value)
	        };
	      }));
	
	      if (showNext) {
	        items.push({
	          key: 'next',
	          modifier: 'item--nextPage',
	          disabled: currentRefinement === lastPage || lastPage <= 1,
	          label: translate('next'),
	          value: currentRefinement + 1,
	          ariaLabel: translate('ariaNext')
	        });
	      }
	
	      if (showLast) {
	        items.push({
	          key: 'last',
	          modifier: 'item--lastPage',
	          disabled: currentRefinement === lastPage || lastPage <= 1,
	          label: translate('last'),
	          value: lastPage,
	          ariaLabel: translate('ariaLast')
	        });
	      }
	
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, _react.default.createElement(ListComponent, (0, _extends2.default)({}, otherProps, {
	        cx: cx,
	        items: items,
	        onSelect: refine,
	        createURL: createURL,
	        canRefine: canRefine
	      })));
	    }
	  }]);
	  return Pagination;
	}(_react.Component);
	
	(0, _defineProperty2.default)(Pagination, "propTypes", {
	  nbPages: _propTypes.default.number.isRequired,
	  currentRefinement: _propTypes.default.number.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  createURL: _propTypes.default.func.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  listComponent: _propTypes.default.func,
	  showFirst: _propTypes.default.bool,
	  showPrevious: _propTypes.default.bool,
	  showNext: _propTypes.default.bool,
	  showLast: _propTypes.default.bool,
	  padding: _propTypes.default.number,
	  totalPages: _propTypes.default.number,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(Pagination, "defaultProps", {
	  listComponent: _LinkList.default,
	  showFirst: true,
	  showPrevious: true,
	  showNext: true,
	  showLast: false,
	  padding: 3,
	  totalPages: Infinity,
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  previous: '‹',
	  next: '›',
	  first: '«',
	  last: '»',
	  page: function page(currentRefinement) {
	    return currentRefinement.toString();
	  },
	  ariaPrevious: 'Previous page',
	  ariaNext: 'Next page',
	  ariaFirst: 'First page',
	  ariaLast: 'Last page',
	  ariaPage: function ariaPage(currentRefinement) {
	    return "Page ".concat(currentRefinement.toString());
	  }
	})(Pagination);
	
	exports.default = _default;

/***/ }),
/* 1613 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('Panel');
	
	var Panel =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Panel, _Component);
	
	  function Panel() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Panel);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Panel)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
	      canRefine: true
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setCanRefine", function (nextCanRefine) {
	      _this.setState({
	        canRefine: nextCanRefine
	      });
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(Panel, [{
	    key: "getChildContext",
	    value: function getChildContext() {
	      return {
	        setCanRefine: this.setCanRefine
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          children = _this$props.children,
	          className = _this$props.className,
	          header = _this$props.header,
	          footer = _this$props.footer;
	      var canRefine = this.state.canRefine;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, header && _react.default.createElement("div", {
	        className: cx('header')
	      }, header), _react.default.createElement("div", {
	        className: cx('body')
	      }, children), footer && _react.default.createElement("div", {
	        className: cx('footer')
	      }, footer));
	    }
	  }]);
	  return Panel;
	}(_react.Component);
	
	(0, _defineProperty2.default)(Panel, "propTypes", {
	  children: _propTypes.default.node.isRequired,
	  className: _propTypes.default.string,
	  header: _propTypes.default.node,
	  footer: _propTypes.default.node
	});
	(0, _defineProperty2.default)(Panel, "childContextTypes", {
	  setCanRefine: _propTypes.default.func.isRequired
	});
	(0, _defineProperty2.default)(Panel, "defaultProps", {
	  className: '',
	  header: null,
	  footer: null
	});
	var _default = Panel;
	exports.default = _default;

/***/ }),
/* 1614 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('PoweredBy');
	/* eslint-disable max-len */
	
	var AlgoliaLogo = function AlgoliaLogo() {
	  return _react.default.createElement("svg", {
	    xmlns: "http://www.w3.org/2000/svg",
	    baseProfile: "basic",
	    viewBox: "0 0 1366 362",
	    width: "100",
	    height: "27",
	    className: cx('logo')
	  }, _react.default.createElement("linearGradient", {
	    id: "g",
	    x1: "428.258",
	    x2: "434.145",
	    y1: "404.15",
	    y2: "409.85",
	    gradientUnits: "userSpaceOnUse",
	    gradientTransform: "matrix(94.045 0 0 -94.072 -40381.527 38479.52)"
	  }, _react.default.createElement("stop", {
	    offset: "0",
	    stopColor: "#00AEFF"
	  }), _react.default.createElement("stop", {
	    offset: "1",
	    stopColor: "#3369E7"
	  })), _react.default.createElement("path", {
	    d: "M61.8 15.4h242.8c23.9 0 43.4 19.4 43.4 43.4v242.9c0 23.9-19.4 43.4-43.4 43.4H61.8c-23.9 0-43.4-19.4-43.4-43.4v-243c0-23.9 19.4-43.3 43.4-43.3z",
	    fill: "url(#g)"
	  }), _react.default.createElement("path", {
	    d: "M187 98.7c-51.4 0-93.1 41.7-93.1 93.2S135.6 285 187 285s93.1-41.7 93.1-93.2-41.6-93.1-93.1-93.1zm0 158.8c-36.2 0-65.6-29.4-65.6-65.6s29.4-65.6 65.6-65.6 65.6 29.4 65.6 65.6-29.3 65.6-65.6 65.6zm0-117.8v48.9c0 1.4 1.5 2.4 2.8 1.7l43.4-22.5c1-.5 1.3-1.7.8-2.7-9-15.8-25.7-26.6-45-27.3-1 0-2 .8-2 1.9zm-60.8-35.9l-5.7-5.7c-5.6-5.6-14.6-5.6-20.2 0l-6.8 6.8c-5.6 5.6-5.6 14.6 0 20.2l5.6 5.6c.9.9 2.2.7 3-.2 3.3-4.5 6.9-8.8 10.9-12.8 4.1-4.1 8.3-7.7 12.9-11 1-.6 1.1-2 .3-2.9zM217.5 89V77.7c0-7.9-6.4-14.3-14.3-14.3h-33.3c-7.9 0-14.3 6.4-14.3 14.3v11.6c0 1.3 1.2 2.2 2.5 1.9 9.3-2.7 19.1-4.1 29-4.1 9.5 0 18.9 1.3 28 3.8 1.2.3 2.4-.6 2.4-1.9z",
	    fill: "#FFFFFF"
	  }), _react.default.createElement("path", {
	    d: "M842.5 267.6c0 26.7-6.8 46.2-20.5 58.6-13.7 12.4-34.6 18.6-62.8 18.6-10.3 0-31.7-2-48.8-5.8l6.3-31c14.3 3 33.2 3.8 43.1 3.8 15.7 0 26.9-3.2 33.6-9.6s10-15.9 10-28.5v-6.4c-3.9 1.9-9 3.8-15.3 5.8-6.3 1.9-13.6 2.9-21.8 2.9-10.8 0-20.6-1.7-29.5-5.1-8.9-3.4-16.6-8.4-22.9-15-6.3-6.6-11.3-14.9-14.8-24.8s-5.3-27.6-5.3-40.6c0-12.2 1.9-27.5 5.6-37.7 3.8-10.2 9.2-19 16.5-26.3 7.2-7.3 16-12.9 26.3-17s22.4-6.7 35.5-6.7c12.7 0 24.4 1.6 35.8 3.5 11.4 1.9 21.1 3.9 29 6.1v155.2zm-108.7-77.2c0 16.4 3.6 34.6 10.8 42.2 7.2 7.6 16.5 11.4 27.9 11.4 6.2 0 12.1-.9 17.6-2.6 5.5-1.7 9.9-3.7 13.4-6.1v-97.1c-2.8-.6-14.5-3-25.8-3.3-14.2-.4-25 5.4-32.6 14.7-7.5 9.3-11.3 25.6-11.3 40.8zm294.3 0c0 13.2-1.9 23.2-5.8 34.1s-9.4 20.2-16.5 27.9c-7.1 7.7-15.6 13.7-25.6 17.9s-25.4 6.6-33.1 6.6c-7.7-.1-23-2.3-32.9-6.6-9.9-4.3-18.4-10.2-25.5-17.9-7.1-7.7-12.6-17-16.6-27.9s-6-20.9-6-34.1c0-13.2 1.8-25.9 5.8-36.7 4-10.8 9.6-20 16.8-27.7s15.8-13.6 25.6-17.8c9.9-4.2 20.8-6.2 32.6-6.2s22.7 2.1 32.7 6.2c10 4.2 18.6 10.1 25.6 17.8 7.1 7.7 12.6 16.9 16.6 27.7 4.2 10.8 6.3 23.5 6.3 36.7zm-40 .1c0-16.9-3.7-31-10.9-40.8-7.2-9.9-17.3-14.8-30.2-14.8-12.9 0-23 4.9-30.2 14.8-7.2 9.9-10.7 23.9-10.7 40.8 0 17.1 3.6 28.6 10.8 38.5 7.2 10 17.3 14.9 30.2 14.9 12.9 0 23-5 30.2-14.9 7.2-10 10.8-21.4 10.8-38.5zm127.1 86.4c-64.1.3-64.1-51.8-64.1-60.1L1051 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9zm68.9 0h-39.3V108.1l39.3-6.2v175zm-19.7-193.5c13.1 0 23.8-10.6 23.8-23.7S1177.6 36 1164.4 36s-23.8 10.6-23.8 23.7 10.7 23.7 23.8 23.7zm117.4 18.6c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4s8.9 13.5 11.1 21.7c2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6s-25.9 2.7-41.1 2.7c-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8s9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2s-10-3-16.7-3c-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1s19.5-2.6 30.3-2.6zm3.3 141.9c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18 5.9 3.6 13.7 5.3 23.6 5.3zM512.9 103c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4 5.3 5.8 8.9 13.5 11.1 21.7 2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6-12.2 1.8-25.9 2.7-41.1 2.7-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8 4.7.5 9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2-4.4-1.7-10-3-16.7-3-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1 9.4-1.8 19.5-2.6 30.3-2.6zm3.4 142c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18s13.7 5.3 23.6 5.3zm158.5 31.9c-64.1.3-64.1-51.8-64.1-60.1L610.6 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9z",
	    fill: "#182359"
	  }));
	};
	/* eslint-enable max-len */
	
	
	var PoweredBy =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(PoweredBy, _Component);
	
	  function PoweredBy() {
	    (0, _classCallCheck2.default)(this, PoweredBy);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PoweredBy).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(PoweredBy, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          url = _this$props.url,
	          translate = _this$props.translate,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement("span", {
	        className: cx('text')
	      }, translate('searchBy')), ' ', _react.default.createElement("a", {
	        href: url,
	        target: "_blank",
	        className: cx('link'),
	        "aria-label": "Algolia",
	        rel: "noopener noreferrer"
	      }, _react.default.createElement(AlgoliaLogo, null)));
	    }
	  }]);
	  return PoweredBy;
	}(_react.Component);
	
	(0, _defineProperty2.default)(PoweredBy, "propTypes", {
	  url: _propTypes.default.string.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  searchBy: 'Search by'
	})(PoweredBy);
	
	exports.default = _default;

/***/ }),
/* 1615 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('QueryRuleCustomData');
	
	var QueryRuleCustomData = function QueryRuleCustomData(_ref) {
	  var items = _ref.items,
	      className = _ref.className,
	      children = _ref.children;
	  return _react.default.createElement("div", {
	    className: (0, _classnames.default)(cx(''), className)
	  }, children({
	    items: items
	  }));
	};
	
	QueryRuleCustomData.propTypes = {
	  items: _propTypes.default.arrayOf(_propTypes.default.object).isRequired,
	  className: _propTypes.default.string,
	  children: _propTypes.default.func.isRequired
	};
	var _default = QueryRuleCustomData;
	exports.default = _default;

/***/ }),
/* 1616 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.RawRangeInput = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('RangeInput');
	
	var RawRangeInput =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(RawRangeInput, _Component);
	
	  function RawRangeInput(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, RawRangeInput);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RawRangeInput).call(this, props));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onSubmit", function (e) {
	      e.preventDefault();
	
	      _this.props.refine({
	        min: _this.state.from,
	        max: _this.state.to
	      });
	    });
	    _this.state = _this.normalizeStateForRendering(props);
	    return _this;
	  }
	
	  (0, _createClass2.default)(RawRangeInput, [{
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      // In react@16.0.0 the call to setState on the inputs trigger this lifecycle hook
	      // because the context has changed (for react). I don't think that the bug is related
	      // to react because I failed to reproduce it with a simple hierarchy of components.
	      // The workaround here is to check the differences between previous & next props in order
	      // to avoid to override current state when values are not yet refined. In the react documentation,
	      // they DON'T categorically say that setState never run componentWillReceiveProps.
	      // see: https://reactjs.org/docs/react-component.html#componentwillreceiveprops
	      if (nextProps.canRefine && (this.props.canRefine !== nextProps.canRefine || this.props.currentRefinement.min !== nextProps.currentRefinement.min || this.props.currentRefinement.max !== nextProps.currentRefinement.max)) {
	        this.setState(this.normalizeStateForRendering(nextProps));
	      }
	    }
	  }, {
	    key: "normalizeStateForRendering",
	    value: function normalizeStateForRendering(props) {
	      var canRefine = props.canRefine,
	          rangeMin = props.min,
	          rangeMax = props.max;
	      var _props$currentRefinem = props.currentRefinement,
	          valueMin = _props$currentRefinem.min,
	          valueMax = _props$currentRefinem.max;
	      return {
	        from: canRefine && valueMin !== undefined && valueMin !== rangeMin ? valueMin : '',
	        to: canRefine && valueMax !== undefined && valueMax !== rangeMax ? valueMax : ''
	      };
	    }
	  }, {
	    key: "normalizeRangeForRendering",
	    value: function normalizeRangeForRendering(_ref) {
	      var canRefine = _ref.canRefine,
	          min = _ref.min,
	          max = _ref.max;
	      var hasMin = min !== undefined;
	      var hasMax = max !== undefined;
	      return {
	        min: canRefine && hasMin && hasMax ? min : '',
	        max: canRefine && hasMin && hasMax ? max : ''
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _this$state = this.state,
	          from = _this$state.from,
	          to = _this$state.to;
	      var _this$props = this.props,
	          precision = _this$props.precision,
	          translate = _this$props.translate,
	          canRefine = _this$props.canRefine,
	          className = _this$props.className;
	
	      var _this$normalizeRangeF = this.normalizeRangeForRendering(this.props),
	          min = _this$normalizeRangeF.min,
	          max = _this$normalizeRangeF.max;
	
	      var step = 1 / Math.pow(10, precision);
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, _react.default.createElement("form", {
	        className: cx('form'),
	        onSubmit: this.onSubmit
	      }, _react.default.createElement("input", {
	        className: cx('input', 'input--min'),
	        type: "number",
	        min: min,
	        max: max,
	        value: from,
	        step: step,
	        placeholder: min,
	        disabled: !canRefine,
	        onChange: function onChange(e) {
	          return _this2.setState({
	            from: e.currentTarget.value
	          });
	        }
	      }), _react.default.createElement("span", {
	        className: cx('separator')
	      }, translate('separator')), _react.default.createElement("input", {
	        className: cx('input', 'input--max'),
	        type: "number",
	        min: min,
	        max: max,
	        value: to,
	        step: step,
	        placeholder: max,
	        disabled: !canRefine,
	        onChange: function onChange(e) {
	          return _this2.setState({
	            to: e.currentTarget.value
	          });
	        }
	      }), _react.default.createElement("button", {
	        className: cx('submit'),
	        type: "submit"
	      }, translate('submit'))));
	    }
	  }]);
	  return RawRangeInput;
	}(_react.Component);
	
	exports.RawRangeInput = RawRangeInput;
	(0, _defineProperty2.default)(RawRangeInput, "propTypes", {
	  canRefine: _propTypes.default.bool.isRequired,
	  precision: _propTypes.default.number.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  min: _propTypes.default.number,
	  max: _propTypes.default.number,
	  currentRefinement: _propTypes.default.shape({
	    min: _propTypes.default.number,
	    max: _propTypes.default.number
	  }),
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(RawRangeInput, "defaultProps", {
	  currentRefinement: {},
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  submit: 'ok',
	  separator: 'to'
	})(RawRangeInput);
	
	exports.default = _default;

/***/ }),
/* 1617 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(31));
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _fill2 = _interopRequireDefault(__webpack_require__(1490));
	
	var _find2 = _interopRequireDefault(__webpack_require__(71));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('RatingMenu');
	
	var RatingMenu =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(RatingMenu, _Component);
	
	  function RatingMenu() {
	    (0, _classCallCheck2.default)(this, RatingMenu);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RatingMenu).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(RatingMenu, [{
	    key: "onClick",
	    value: function onClick(min, max, e) {
	      e.preventDefault();
	      e.stopPropagation();
	
	      if (min === this.props.currentRefinement.min && max === this.props.currentRefinement.max) {
	        this.props.refine({
	          min: this.props.min,
	          max: this.props.max
	        });
	      } else {
	        this.props.refine({
	          min: min,
	          max: max
	        });
	      }
	    }
	  }, {
	    key: "buildItem",
	    value: function buildItem(_ref) {
	      var max = _ref.max,
	          lowerBound = _ref.lowerBound,
	          count = _ref.count,
	          translate = _ref.translate,
	          createURL = _ref.createURL,
	          isLastSelectableItem = _ref.isLastSelectableItem;
	      var disabled = !count;
	      var isCurrentMinLower = this.props.currentRefinement.min < lowerBound;
	      var selected = isLastSelectableItem && isCurrentMinLower || !disabled && lowerBound === this.props.currentRefinement.min && max === this.props.currentRefinement.max;
	      var icons = [];
	      var rating = 0;
	
	      for (var icon = 0; icon < max; icon++) {
	        if (icon < lowerBound) {
	          rating++;
	        }
	
	        icons.push([_react.default.createElement("svg", {
	          key: icon,
	          className: cx('starIcon', icon >= lowerBound ? 'starIcon--empty' : 'starIcon--full'),
	          "aria-hidden": "true",
	          width: "24",
	          height: "24"
	        }, _react.default.createElement("use", {
	          xlinkHref: "#".concat(cx(icon >= lowerBound ? 'starEmptySymbol' : 'starSymbol'))
	        })), ' ']);
	      } // The last item of the list (the default item), should not
	      // be clickable if it is selected.
	
	
	      var isLastAndSelect = isLastSelectableItem && selected;
	      var onClickHandler = disabled || isLastAndSelect ? {} : {
	        href: createURL({
	          min: lowerBound,
	          max: max
	        }),
	        onClick: this.onClick.bind(this, lowerBound, max)
	      };
	      return _react.default.createElement("li", {
	        key: lowerBound,
	        className: cx('item', selected && 'item--selected', disabled && 'item--disabled')
	      }, _react.default.createElement("a", (0, _extends2.default)({
	        className: cx('link'),
	        "aria-label": "".concat(rating).concat(translate('ratingLabel'))
	      }, onClickHandler), icons, _react.default.createElement("span", {
	        className: cx('label'),
	        "aria-hidden": "true"
	      }, translate('ratingLabel')), ' ', _react.default.createElement("span", {
	        className: cx('count')
	      }, count)));
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this = this;
	
	      var _this$props = this.props,
	          min = _this$props.min,
	          max = _this$props.max,
	          translate = _this$props.translate,
	          count = _this$props.count,
	          createURL = _this$props.createURL,
	          canRefine = _this$props.canRefine,
	          className = _this$props.className; // min & max are always set when there is a results, otherwise it means
	      // that we don't want to render anything since we don't have any values.
	
	      var limitMin = min !== undefined && min >= 0 ? min : 1;
	      var limitMax = max !== undefined && max >= 0 ? max : 0;
	      var inclusiveLength = limitMax - limitMin + 1;
	      var safeInclusiveLength = Math.max(inclusiveLength, 0);
	      var values = count.map(function (item) {
	        return (0, _objectSpread2.default)({}, item, {
	          value: parseFloat(item.value)
	        });
	      }).filter(function (item) {
	        return item.value >= limitMin && item.value <= limitMax;
	      });
	      var range = (0, _fill2.default)(new Array(safeInclusiveLength), null).map(function (_, index) {
	        var element = (0, _find2.default)(values, function (item) {
	          return item.value === limitMax - index;
	        });
	        var placeholder = {
	          value: limitMax - index,
	          count: 0,
	          total: 0
	        };
	        return element || placeholder;
	      }).reduce(function (acc, item, index) {
	        return acc.concat((0, _objectSpread2.default)({}, item, {
	          total: index === 0 ? item.count : acc[index - 1].total + item.count
	        }));
	      }, []);
	      var items = range.map(function (item, index) {
	        return _this.buildItem({
	          lowerBound: item.value,
	          count: item.total,
	          isLastSelectableItem: range.length - 1 === index,
	          max: limitMax,
	          translate: translate,
	          createURL: createURL
	        });
	      });
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, _react.default.createElement("svg", {
	        xmlns: "http://www.w3.org/2000/svg",
	        style: {
	          display: 'none'
	        }
	      }, _react.default.createElement("symbol", {
	        id: cx('starSymbol'),
	        viewBox: "0 0 24 24"
	      }, _react.default.createElement("path", {
	        d: "M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z"
	      })), _react.default.createElement("symbol", {
	        id: cx('starEmptySymbol'),
	        viewBox: "0 0 24 24"
	      }, _react.default.createElement("path", {
	        d: "M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z"
	      }))), _react.default.createElement("ul", {
	        className: cx('list', !canRefine && 'list--noRefinement')
	      }, items));
	    }
	  }]);
	  return RatingMenu;
	}(_react.Component);
	
	(0, _defineProperty2.default)(RatingMenu, "propTypes", {
	  translate: _propTypes.default.func.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  createURL: _propTypes.default.func.isRequired,
	  min: _propTypes.default.number,
	  max: _propTypes.default.number,
	  currentRefinement: _propTypes.default.shape({
	    min: _propTypes.default.number,
	    max: _propTypes.default.number
	  }),
	  count: _propTypes.default.arrayOf(_propTypes.default.shape({
	    value: _propTypes.default.string,
	    count: _propTypes.default.number
	  })),
	  canRefine: _propTypes.default.bool.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(RatingMenu, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  ratingLabel: ' & Up'
	})(RatingMenu);
	
	exports.default = _default;

/***/ }),
/* 1618 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _pick2 = _interopRequireDefault(__webpack_require__(212));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var _Highlight = _interopRequireDefault(__webpack_require__(333));
	
	var _List = _interopRequireDefault(__webpack_require__(218));
	
	var cx = (0, _utils.createClassNames)('RefinementList');
	
	var RefinementList =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(RefinementList, _Component);
	
	  function RefinementList() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, RefinementList);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(RefinementList)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
	      query: ''
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectItem", function (item, resetQuery) {
	      resetQuery();
	
	      _this.props.refine(item.value);
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderItem", function (item, resetQuery) {
	      var label = _this.props.isFromSearch ? _react.default.createElement(_Highlight.default, {
	        attribute: "label",
	        hit: item
	      }) : item.label;
	      return _react.default.createElement("label", {
	        className: cx('label')
	      }, _react.default.createElement("input", {
	        className: cx('checkbox'),
	        type: "checkbox",
	        checked: item.isRefined,
	        onChange: function onChange() {
	          return _this.selectItem(item, resetQuery);
	        }
	      }), _react.default.createElement("span", {
	        className: cx('labelText')
	      }, label), ' ', _react.default.createElement("span", {
	        className: cx('count')
	      }, item.count.toLocaleString()));
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(RefinementList, [{
	    key: "render",
	    value: function render() {
	      return _react.default.createElement(_List.default, (0, _extends2.default)({
	        renderItem: this.renderItem,
	        selectItem: this.selectItem,
	        cx: cx
	      }, (0, _pick2.default)(this.props, ['translate', 'items', 'showMore', 'limit', 'showMoreLimit', 'isFromSearch', 'searchForItems', 'searchable', 'canRefine', 'className']), {
	        query: this.state.query
	      }));
	    }
	  }]);
	  return RefinementList;
	}(_react.Component);
	
	(0, _defineProperty2.default)(RefinementList, "propTypes", {
	  translate: _propTypes.default.func.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  searchForItems: _propTypes.default.func.isRequired,
	  searchable: _propTypes.default.bool,
	  createURL: _propTypes.default.func.isRequired,
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    label: _propTypes.default.string.isRequired,
	    value: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
	    count: _propTypes.default.number.isRequired,
	    isRefined: _propTypes.default.bool.isRequired
	  })),
	  isFromSearch: _propTypes.default.bool.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  showMore: _propTypes.default.bool,
	  limit: _propTypes.default.number,
	  showMoreLimit: _propTypes.default.number,
	  transformItems: _propTypes.default.func,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(RefinementList, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  showMore: function showMore(extended) {
	    return extended ? 'Show less' : 'Show more';
	  },
	  noResults: 'No results',
	  submit: null,
	  reset: null,
	  resetTitle: 'Clear the search query.',
	  submitTitle: 'Submit your search query.',
	  placeholder: 'Search here…'
	})(RefinementList);
	
	exports.default = _default;

/***/ }),
/* 1619 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('ScrollTo');
	
	var ScrollTo =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(ScrollTo, _Component);
	
	  function ScrollTo() {
	    (0, _classCallCheck2.default)(this, ScrollTo);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ScrollTo).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(ScrollTo, [{
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      var _this$props = this.props,
	          value = _this$props.value,
	          hasNotChanged = _this$props.hasNotChanged;
	
	      if (value !== prevProps.value && hasNotChanged) {
	        this.el.scrollIntoView();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this = this;
	
	      return _react.default.createElement("div", {
	        ref: function ref(_ref) {
	          return _this.el = _ref;
	        },
	        className: cx('')
	      }, this.props.children);
	    }
	  }]);
	  return ScrollTo;
	}(_react.Component);
	
	(0, _defineProperty2.default)(ScrollTo, "propTypes", {
	  value: _propTypes.default.any,
	  children: _propTypes.default.node,
	  hasNotChanged: _propTypes.default.bool
	});
	var _default = ScrollTo;
	exports.default = _default;

/***/ }),
/* 1620 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(4));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _utils = __webpack_require__(20);
	
	var _Highlighter = _interopRequireDefault(__webpack_require__(539));
	
	var cx = (0, _utils.createClassNames)('Snippet');
	
	var Snippet = function Snippet(props) {
	  return _react.default.createElement(_Highlighter.default, (0, _extends2.default)({}, props, {
	    highlightProperty: "_snippetResult",
	    cx: cx
	  }));
	};
	
	var _default = Snippet;
	exports.default = _default;

/***/ }),
/* 1621 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _utils = __webpack_require__(20);
	
	var _Select = _interopRequireDefault(__webpack_require__(541));
	
	var cx = (0, _utils.createClassNames)('SortBy');
	
	var SortBy =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(SortBy, _Component);
	
	  function SortBy() {
	    (0, _classCallCheck2.default)(this, SortBy);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SortBy).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(SortBy, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          items = _this$props.items,
	          currentRefinement = _this$props.currentRefinement,
	          refine = _this$props.refine,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement(_Select.default, {
	        cx: cx,
	        items: items,
	        selectedItem: currentRefinement,
	        onSelect: refine
	      }));
	    }
	  }]);
	  return SortBy;
	}(_react.Component);
	
	(0, _defineProperty2.default)(SortBy, "propTypes", {
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    label: _propTypes.default.string,
	    value: _propTypes.default.string.isRequired
	  })).isRequired,
	  currentRefinement: _propTypes.default.string.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(SortBy, "defaultProps", {
	  className: ''
	});
	var _default = SortBy;
	exports.default = _default;

/***/ }),
/* 1622 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(12));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('Stats');
	
	var Stats =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Stats, _Component);
	
	  function Stats() {
	    (0, _classCallCheck2.default)(this, Stats);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Stats).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(Stats, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          translate = _this$props.translate,
	          nbHits = _this$props.nbHits,
	          processingTimeMS = _this$props.processingTimeMS,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement("span", {
	        className: cx('text')
	      }, translate('stats', nbHits, processingTimeMS)));
	    }
	  }]);
	  return Stats;
	}(_react.Component);
	
	(0, _defineProperty2.default)(Stats, "propTypes", {
	  translate: _propTypes.default.func.isRequired,
	  nbHits: _propTypes.default.number.isRequired,
	  processingTimeMS: _propTypes.default.number.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(Stats, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  stats: function stats(n, ms) {
	    return "".concat(n.toLocaleString(), " results found in ").concat(ms.toLocaleString(), "ms");
	  }
	})(Stats);
	
	exports.default = _default;

/***/ }),
/* 1623 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(7));
	
	var _utils = __webpack_require__(20);
	
	var cx = (0, _utils.createClassNames)('ToggleRefinement');
	
	var ToggleRefinement = function ToggleRefinement(_ref) {
	  var currentRefinement = _ref.currentRefinement,
	      label = _ref.label,
	      canRefine = _ref.canRefine,
	      refine = _ref.refine,
	      className = _ref.className;
	  return _react.default.createElement("div", {
	    className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	  }, _react.default.createElement("label", {
	    className: cx('label')
	  }, _react.default.createElement("input", {
	    className: cx('checkbox'),
	    type: "checkbox",
	    checked: currentRefinement,
	    onChange: function onChange(event) {
	      return refine(event.target.checked);
	    }
	  }), _react.default.createElement("span", {
	    className: cx('labelText')
	  }, label)));
	};
	
	ToggleRefinement.propTypes = {
	  currentRefinement: _propTypes.default.bool.isRequired,
	  label: _propTypes.default.string.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	};
	ToggleRefinement.defaultProps = {
	  className: ''
	};
	var _default = ToggleRefinement;
	exports.default = _default;

/***/ }),
/* 1624 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(18);
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(10));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(11));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(14));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(12));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(26));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(13));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(8));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _utils = __webpack_require__(20);
	
	var _voiceSearchHelper = _interopRequireDefault(__webpack_require__(542));
	
	var cx = (0, _utils.createClassNames)('VoiceSearch');
	
	var ButtonSvg = function ButtonSvg(_ref) {
	  var children = _ref.children;
	  return _react.default.createElement("svg", {
	    xmlns: "http://www.w3.org/2000/svg",
	    width: "16",
	    height: "16",
	    viewBox: "0 0 24 24",
	    fill: "none",
	    stroke: "currentColor",
	    strokeWidth: "2",
	    strokeLinecap: "round",
	    strokeLinejoin: "round"
	  }, children);
	};
	
	var DefaultButtonText = function DefaultButtonText(_ref2) {
	  var status = _ref2.status,
	      errorCode = _ref2.errorCode,
	      isListening = _ref2.isListening;
	  return status === 'error' && errorCode === 'not-allowed' ? _react.default.createElement(ButtonSvg, null, _react.default.createElement("line", {
	    x1: "1",
	    y1: "1",
	    x2: "23",
	    y2: "23"
	  }), _react.default.createElement("path", {
	    d: "M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"
	  }), _react.default.createElement("path", {
	    d: "M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"
	  }), _react.default.createElement("line", {
	    x1: "12",
	    y1: "19",
	    x2: "12",
	    y2: "23"
	  }), _react.default.createElement("line", {
	    x1: "8",
	    y1: "23",
	    x2: "16",
	    y2: "23"
	  })) : _react.default.createElement(ButtonSvg, null, _react.default.createElement("path", {
	    d: "M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z",
	    fill: isListening ? 'currentColor' : ''
	  }), _react.default.createElement("path", {
	    d: "M19 10v2a7 7 0 0 1-14 0v-2"
	  }), _react.default.createElement("line", {
	    x1: "12",
	    y1: "19",
	    x2: "12",
	    y2: "23"
	  }), _react.default.createElement("line", {
	    x1: "8",
	    y1: "23",
	    x2: "16",
	    y2: "23"
	  }));
	};
	
	var DefaultStatus = function DefaultStatus(_ref3) {
	  var transcript = _ref3.transcript;
	  return _react.default.createElement("p", null, transcript);
	};
	
	var VoiceSearch =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(VoiceSearch, _Component);
	
	  function VoiceSearch() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, VoiceSearch);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(VoiceSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "voiceSearchHelper", void 0);
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onClick", function (event) {
	      if (!_this.voiceSearchHelper) {
	        return;
	      }
	
	      event.currentTarget.blur();
	      var toggleListening = _this.voiceSearchHelper.toggleListening;
	      toggleListening();
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(VoiceSearch, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      var _this$props = this.props,
	          searchAsYouSpeak = _this$props.searchAsYouSpeak,
	          refine = _this$props.refine;
	      this.voiceSearchHelper = (0, _voiceSearchHelper.default)({
	        searchAsYouSpeak: searchAsYouSpeak,
	        onQueryChange: function onQueryChange(query) {
	          return refine(query);
	        },
	        onStateChange: function onStateChange() {
	          _this2.setState(_this2.voiceSearchHelper.getState());
	        }
	      });
	      this.setState(this.voiceSearchHelper.getState());
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      if (!this.voiceSearchHelper) {
	        return null;
	      }
	
	      var _this$state = this.state,
	          status = _this$state.status,
	          transcript = _this$state.transcript,
	          isSpeechFinal = _this$state.isSpeechFinal,
	          errorCode = _this$state.errorCode;
	      var _this$voiceSearchHelp = this.voiceSearchHelper,
	          isListening = _this$voiceSearchHelp.isListening,
	          isBrowserSupported = _this$voiceSearchHelp.isBrowserSupported;
	      var _this$props2 = this.props,
	          translate = _this$props2.translate,
	          ButtonTextComponent = _this$props2.buttonTextComponent,
	          StatusComponent = _this$props2.statusComponent;
	      var innerProps = {
	        status: status,
	        errorCode: errorCode,
	        isListening: isListening(),
	        transcript: transcript,
	        isSpeechFinal: isSpeechFinal,
	        isBrowserSupported: isBrowserSupported()
	      };
	      return _react.default.createElement("div", {
	        className: cx('')
	      }, _react.default.createElement("button", {
	        className: cx('button'),
	        type: "button",
	        title: isBrowserSupported() ? translate('buttonTitle') : translate('disabledButtonTitle'),
	        onClick: this.onClick,
	        disabled: !isBrowserSupported()
	      }, _react.default.createElement(ButtonTextComponent, innerProps)), _react.default.createElement("div", {
	        className: cx('status')
	      }, _react.default.createElement(StatusComponent, innerProps)));
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      if (this.voiceSearchHelper) {
	        this.voiceSearchHelper.dispose();
	      }
	    }
	  }]);
	  return VoiceSearch;
	}(_react.Component);
	
	(0, _defineProperty2.default)(VoiceSearch, "defaultProps", {
	  searchAsYouSpeak: false,
	  buttonTextComponent: DefaultButtonText,
	  statusComponent: DefaultStatus
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  buttonTitle: 'Search by voice',
	  disabledButtonTitle: 'Search by voice (not supported on this browser)'
	})(VoiceSearch);
	
	exports.default = _default;

/***/ }),
/* 1625 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "createConnector", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.createConnector;
	  }
	});
	Object.defineProperty(exports, "HIGHLIGHT_TAGS", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.HIGHLIGHT_TAGS;
	  }
	});
	Object.defineProperty(exports, "translatable", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.translatable;
	  }
	});
	Object.defineProperty(exports, "Configure", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.Configure;
	  }
	});
	Object.defineProperty(exports, "QueryRuleContext", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.QueryRuleContext;
	  }
	});
	Object.defineProperty(exports, "connectAutoComplete", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectAutoComplete;
	  }
	});
	Object.defineProperty(exports, "connectBreadcrumb", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectBreadcrumb;
	  }
	});
	Object.defineProperty(exports, "connectConfigure", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectConfigure;
	  }
	});
	Object.defineProperty(exports, "connectCurrentRefinements", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectCurrentRefinements;
	  }
	});
	Object.defineProperty(exports, "connectGeoSearch", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectGeoSearch;
	  }
	});
	Object.defineProperty(exports, "connectHierarchicalMenu", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHierarchicalMenu;
	  }
	});
	Object.defineProperty(exports, "connectHighlight", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHighlight;
	  }
	});
	Object.defineProperty(exports, "connectHitInsights", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHitInsights;
	  }
	});
	Object.defineProperty(exports, "connectHits", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHits;
	  }
	});
	Object.defineProperty(exports, "connectHitsPerPage", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHitsPerPage;
	  }
	});
	Object.defineProperty(exports, "connectInfiniteHits", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectInfiniteHits;
	  }
	});
	Object.defineProperty(exports, "connectMenu", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectMenu;
	  }
	});
	Object.defineProperty(exports, "connectNumericMenu", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectNumericMenu;
	  }
	});
	Object.defineProperty(exports, "connectPagination", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectPagination;
	  }
	});
	Object.defineProperty(exports, "connectPoweredBy", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectPoweredBy;
	  }
	});
	Object.defineProperty(exports, "connectQueryRules", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectQueryRules;
	  }
	});
	Object.defineProperty(exports, "connectRange", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectRange;
	  }
	});
	Object.defineProperty(exports, "connectRefinementList", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectRefinementList;
	  }
	});
	Object.defineProperty(exports, "connectScrollTo", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectScrollTo;
	  }
	});
	Object.defineProperty(exports, "connectSearchBox", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectSearchBox;
	  }
	});
	Object.defineProperty(exports, "connectSortBy", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectSortBy;
	  }
	});
	Object.defineProperty(exports, "connectStateResults", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectStateResults;
	  }
	});
	Object.defineProperty(exports, "connectStats", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectStats;
	  }
	});
	Object.defineProperty(exports, "connectToggleRefinement", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectToggleRefinement;
	  }
	});
	Object.defineProperty(exports, "InstantSearch", {
	  enumerable: true,
	  get: function get() {
	    return _InstantSearch.default;
	  }
	});
	Object.defineProperty(exports, "Index", {
	  enumerable: true,
	  get: function get() {
	    return _Index.default;
	  }
	});
	Object.defineProperty(exports, "Breadcrumb", {
	  enumerable: true,
	  get: function get() {
	    return _Breadcrumb.default;
	  }
	});
	Object.defineProperty(exports, "ClearRefinements", {
	  enumerable: true,
	  get: function get() {
	    return _ClearRefinements.default;
	  }
	});
	Object.defineProperty(exports, "CurrentRefinements", {
	  enumerable: true,
	  get: function get() {
	    return _CurrentRefinements.default;
	  }
	});
	Object.defineProperty(exports, "HierarchicalMenu", {
	  enumerable: true,
	  get: function get() {
	    return _HierarchicalMenu.default;
	  }
	});
	Object.defineProperty(exports, "Highlight", {
	  enumerable: true,
	  get: function get() {
	    return _Highlight.default;
	  }
	});
	Object.defineProperty(exports, "Hits", {
	  enumerable: true,
	  get: function get() {
	    return _Hits.default;
	  }
	});
	Object.defineProperty(exports, "HitsPerPage", {
	  enumerable: true,
	  get: function get() {
	    return _HitsPerPage.default;
	  }
	});
	Object.defineProperty(exports, "InfiniteHits", {
	  enumerable: true,
	  get: function get() {
	    return _InfiniteHits.default;
	  }
	});
	Object.defineProperty(exports, "Menu", {
	  enumerable: true,
	  get: function get() {
	    return _Menu.default;
	  }
	});
	Object.defineProperty(exports, "MenuSelect", {
	  enumerable: true,
	  get: function get() {
	    return _MenuSelect.default;
	  }
	});
	Object.defineProperty(exports, "NumericMenu", {
	  enumerable: true,
	  get: function get() {
	    return _NumericMenu.default;
	  }
	});
	Object.defineProperty(exports, "Pagination", {
	  enumerable: true,
	  get: function get() {
	    return _Pagination.default;
	  }
	});
	Object.defineProperty(exports, "Panel", {
	  enumerable: true,
	  get: function get() {
	    return _Panel.default;
	  }
	});
	Object.defineProperty(exports, "PoweredBy", {
	  enumerable: true,
	  get: function get() {
	    return _PoweredBy.default;
	  }
	});
	Object.defineProperty(exports, "RangeInput", {
	  enumerable: true,
	  get: function get() {
	    return _RangeInput.default;
	  }
	});
	Object.defineProperty(exports, "RangeSlider", {
	  enumerable: true,
	  get: function get() {
	    return _RangeSlider.default;
	  }
	});
	Object.defineProperty(exports, "RatingMenu", {
	  enumerable: true,
	  get: function get() {
	    return _RatingMenu.default;
	  }
	});
	Object.defineProperty(exports, "RefinementList", {
	  enumerable: true,
	  get: function get() {
	    return _RefinementList.default;
	  }
	});
	Object.defineProperty(exports, "ScrollTo", {
	  enumerable: true,
	  get: function get() {
	    return _ScrollTo.default;
	  }
	});
	Object.defineProperty(exports, "SearchBox", {
	  enumerable: true,
	  get: function get() {
	    return _SearchBox.default;
	  }
	});
	Object.defineProperty(exports, "Snippet", {
	  enumerable: true,
	  get: function get() {
	    return _Snippet.default;
	  }
	});
	Object.defineProperty(exports, "SortBy", {
	  enumerable: true,
	  get: function get() {
	    return _SortBy.default;
	  }
	});
	Object.defineProperty(exports, "Stats", {
	  enumerable: true,
	  get: function get() {
	    return _Stats.default;
	  }
	});
	Object.defineProperty(exports, "ToggleRefinement", {
	  enumerable: true,
	  get: function get() {
	    return _ToggleRefinement.default;
	  }
	});
	Object.defineProperty(exports, "VoiceSearch", {
	  enumerable: true,
	  get: function get() {
	    return _VoiceSearch.default;
	  }
	});
	Object.defineProperty(exports, "QueryRuleCustomData", {
	  enumerable: true,
	  get: function get() {
	    return _QueryRuleCustomData.default;
	  }
	});
	Object.defineProperty(exports, "createClassNames", {
	  enumerable: true,
	  get: function get() {
	    return _utils.createClassNames;
	  }
	});
	Object.defineProperty(exports, "createVoiceSearchHelper", {
	  enumerable: true,
	  get: function get() {
	    return _voiceSearchHelper.default;
	  }
	});
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _InstantSearch = _interopRequireDefault(__webpack_require__(1634));
	
	var _Index = _interopRequireDefault(__webpack_require__(1632));
	
	var _Breadcrumb = _interopRequireDefault(__webpack_require__(1626));
	
	var _ClearRefinements = _interopRequireDefault(__webpack_require__(1627));
	
	var _CurrentRefinements = _interopRequireDefault(__webpack_require__(1628));
	
	var _HierarchicalMenu = _interopRequireDefault(__webpack_require__(1629));
	
	var _Highlight = _interopRequireDefault(__webpack_require__(333));
	
	var _Hits = _interopRequireDefault(__webpack_require__(1630));
	
	var _HitsPerPage = _interopRequireDefault(__webpack_require__(1631));
	
	var _InfiniteHits = _interopRequireDefault(__webpack_require__(1633));
	
	var _Menu = _interopRequireDefault(__webpack_require__(1635));
	
	var _MenuSelect = _interopRequireDefault(__webpack_require__(1636));
	
	var _NumericMenu = _interopRequireDefault(__webpack_require__(1637));
	
	var _Pagination = _interopRequireDefault(__webpack_require__(1638));
	
	var _Panel = _interopRequireDefault(__webpack_require__(1639));
	
	var _PoweredBy = _interopRequireDefault(__webpack_require__(1640));
	
	var _RangeInput = _interopRequireDefault(__webpack_require__(1642));
	
	var _RangeSlider = _interopRequireDefault(__webpack_require__(1643));
	
	var _RatingMenu = _interopRequireDefault(__webpack_require__(1644));
	
	var _RefinementList = _interopRequireDefault(__webpack_require__(1645));
	
	var _ScrollTo = _interopRequireDefault(__webpack_require__(1646));
	
	var _SearchBox = _interopRequireDefault(__webpack_require__(1647));
	
	var _Snippet = _interopRequireDefault(__webpack_require__(1648));
	
	var _SortBy = _interopRequireDefault(__webpack_require__(1649));
	
	var _Stats = _interopRequireDefault(__webpack_require__(1650));
	
	var _ToggleRefinement = _interopRequireDefault(__webpack_require__(1651));
	
	var _VoiceSearch = _interopRequireDefault(__webpack_require__(1652));
	
	var _QueryRuleCustomData = _interopRequireDefault(__webpack_require__(1641));
	
	var _utils = __webpack_require__(20);
	
	var _voiceSearchHelper = _interopRequireDefault(__webpack_require__(542));

/***/ }),
/* 1626 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _Breadcrumb = _interopRequireDefault(__webpack_require__(1600));
	
	/**
	 * A breadcrumb is a secondary navigation scheme that allows the user to see where the current page
	 * is in relation to the website or web application’s hierarchy.
	 * In terms of usability, using a breadcrumb reduces the number of actions a visitor needs to take in
	 * order to get to a higher-level page.
	 *
	 * If you want to select a specific refinement for your Breadcrumb component, you will need to
	 * use a [Virtual Hierarchical Menu](https://community.algolia.com/react-instantsearch/guide/Virtual_widgets.html)
	 * and set its defaultRefinement that will be then used by the Breadcrumb.
	 *
	 * @name Breadcrumb
	 * @kind widget
	 * @requirements Breadcrumbs are used for websites with a large amount of content organised in a hierarchical manner.
	 * The typical example is an e-commerce website which has a large variety of products grouped into logical categories
	 * (with categories, subcategories which also have subcategories).To use this widget, your attributes must be formatted in a specific way.
	 *
	 * Keep in mind that breadcrumbs shouldn’t replace effective primary navigation menus:
	 * it is only an alternative way to navigate around the website.
	 *
	 * If, for instance, you would like to have a breadcrumb of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 *   "categories.lvl2": "products > fruits > citrus"
	 * }
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow
	 * @propType {node} [separator='>'] -  Symbol used for separating hyperlinks
	 * @propType {string} [rootURL=null] - The originating page (homepage)
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return
	 * @themeKey ais-Breadcrumb - the root div of the widget
	 * @themeKey ais-Breadcrumb--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-Breadcrumb-list - the list of all breadcrumb items
	 * @themeKey ais-Breadcrumb-item - the breadcrumb navigation item
	 * @themeKey ais-Breadcrumb-item--selected - the selected breadcrumb item
	 * @themeKey ais-Breadcrumb-separator - the separator of each breadcrumb item
	 * @themeKey ais-Breadcrumb-link - the clickable breadcrumb element
	 * @translationKey rootLabel - The root's label. Accepts a string
	 * @example
	 * import React from 'react';
	 * import { Breadcrumb, InstantSearch, HierarchicalMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Breadcrumb
	 *       attributes={[
	 *         'hierarchicalCategories.lvl0',
	 *         'hierarchicalCategories.lvl1',
	 *         'hierarchicalCategories.lvl2',
	 *       ]}
	 *     />
	 *     <HierarchicalMenu
	 *       defaultRefinement="Cameras & Camcorders"
	 *       attributes={[
	 *         'hierarchicalCategories.lvl0',
	 *         'hierarchicalCategories.lvl1',
	 *         'hierarchicalCategories.lvl2',
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var BreadcrumbWidget = function BreadcrumbWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_Breadcrumb.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectBreadcrumb)(BreadcrumbWidget);
	
	exports.default = _default;

/***/ }),
/* 1627 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _ClearRefinements = _interopRequireDefault(__webpack_require__(1601));
	
	/**
	 * The ClearRefinements widget displays a button that lets the user clean every refinement applied
	 * to the search.
	 * @name ClearRefinements
	 * @kind widget
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @propType {boolean} [clearsQuery=false] - Pass true to also clear the search query
	 * @themeKey ais-ClearRefinements - the root div of the widget
	 * @themeKey ais-ClearRefinements-button - the clickable button
	 * @themeKey ais-ClearRefinements-button--disabled - the disabled clickable button
	 * @translationKey reset - the clear all button value
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, ClearRefinements, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <ClearRefinements />
	 *     <RefinementList
	 *       attribute="brand"
	 *       defaultRefinement={['Apple']}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var ClearRefinementsWidget = function ClearRefinementsWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_ClearRefinements.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectCurrentRefinements)(ClearRefinementsWidget);
	
	exports.default = _default;

/***/ }),
/* 1628 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _CurrentRefinements = _interopRequireDefault(__webpack_require__(1602));
	
	/**
	 * The CurrentRefinements widget displays the list of currently applied filters.
	 *
	 * It allows the user to selectively remove them.
	 * @name CurrentRefinements
	 * @kind widget
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-CurrentRefinements - the root div of the widget
	 * @themeKey ais-CurrentRefinements--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-CurrentRefinements-list - the list of all refined items
	 * @themeKey ais-CurrentRefinements-list--noRefinement - the list of all refined items when there is no refinement
	 * @themeKey ais-CurrentRefinements-item - the refined list item
	 * @themeKey ais-CurrentRefinements-button - the button of each refined list item
	 * @themeKey ais-CurrentRefinements-label - the refined list label
	 * @themeKey ais-CurrentRefinements-category - the category of each item
	 * @themeKey ais-CurrentRefinements-categoryLabel - the label of each catgory
	 * @themeKey ais-CurrentRefinements-delete - the delete button of each label
	 * @translationKey clearFilter - the remove filter button label
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, CurrentRefinements, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <CurrentRefinements />
	 *     <RefinementList
	 *       attribute="brand"
	 *       defaultRefinement={['Colors']}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var CurrentRefinementsWidget = function CurrentRefinementsWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_CurrentRefinements.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectCurrentRefinements)(CurrentRefinementsWidget);
	
	exports.default = _default;

/***/ }),
/* 1629 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _HierarchicalMenu = _interopRequireDefault(__webpack_require__(1603));
	
	/**
	 * The hierarchical menu lets the user browse attributes using a tree-like structure.
	 *
	 * This is commonly used for multi-level categorization of products on e-commerce
	 * websites. From a UX point of view, we suggest not displaying more than two levels deep.
	 *
	 * @name HierarchicalMenu
	 * @kind widget
	 * @requirements To use this widget, your attributes must be formatted in a specific way.
	 * If you want for example to have a hiearchical menu of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * [{
	 *   "objectID": "321432",
	 *   "name": "lemon",
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 * },
	 * {
	 *   "objectID": "8976987",
	 *   "name": "orange",
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 * }]
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "objectID": "321432",
	 *   "name": "lemon",
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.
	 * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limit and showMoreLimit.
	 * @propType {number} [limit=10] -  The maximum number of items displayed.
	 * @propType {number} [showMoreLimit=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.
	 * @propType {string} [separator='>'] -  Specifies the level separator used in the data.
	 * @propType {string} [rootPath=null] - The path to use if the first level is not the root level.
	 * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.
	 * @propType {string} [defaultRefinement] - the item value selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-HierarchicalMenu - the root div of the widget
	 * @themeKey ais-HierarchicalMenu-noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-HierarchicalMenu-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.
	 * @themeKey ais-HierarchicalMenu-list - the list of menu items
	 * @themeKey ais-HierarchicalMenu-list--child - the child list of menu items
	 * @themeKey ais-HierarchicalMenu-item - the menu list item
	 * @themeKey ais-HierarchicalMenu-item--selected - the selected menu list item
	 * @themeKey ais-HierarchicalMenu-item--parent - the menu list item containing children
	 * @themeKey ais-HierarchicalMenu-link - the clickable menu element
	 * @themeKey ais-HierarchicalMenu-label - the label of each item
	 * @themeKey ais-HierarchicalMenu-count - the count of values for each item
	 * @themeKey ais-HierarchicalMenu-showMore - the button used to display more categories
	 * @themeKey ais-HierarchicalMenu-showMore--disabled - the disabled button used to display more categories
	 * @translationKey showMore - The label of the show more button. Accepts one parameter, a boolean that is true if the values are expanded
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, HierarchicalMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <HierarchicalMenu
	 *       attributes={[
	 *         'hierarchicalCategories.lvl0',
	 *         'hierarchicalCategories.lvl1',
	 *         'hierarchicalCategories.lvl2',
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var HierarchicalMenuWidget = function HierarchicalMenuWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_HierarchicalMenu.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectHierarchicalMenu)(HierarchicalMenuWidget);
	
	exports.default = _default;

/***/ }),
/* 1630 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _Hits = _interopRequireDefault(__webpack_require__(1605));
	
	/**
	 * Displays a list of hits.
	 *
	 * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).
	 *
	 * @name Hits
	 * @kind widget
	 * @propType {Component} [hitComponent] - Component used for rendering each hit from
	 *   the results. If it is not provided the rendering defaults to displaying the
	 *   hit in its JSON form. The component will be called with a `hit` prop.
	 * @themeKey ais-Hits - the root div of the widget
	 * @themeKey ais-Hits-list - the list of results
	 * @themeKey ais-Hits-item - the hit list item
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectHits)(_Hits.default);
	
	exports.default = _default;

/***/ }),
/* 1631 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _HitsPerPage = _interopRequireDefault(__webpack_require__(1606));
	
	/**
	 * The HitsPerPage widget displays a dropdown menu to let the user change the number
	 * of displayed hits.
	 *
	 * If you only want to configure the number of hits per page without
	 * displaying a widget, you should use the `<Configure hitsPerPage={20} />` widget. See [`<Configure />` documentation](widgets/Configure.html)
	 *
	 * @name HitsPerPage
	 * @kind widget
	 * @propType {{value: number, label: string}[]} items - List of available options.
	 * @propType {number} defaultRefinement - The number of items selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-HitsPerPage - the root div of the widget
	 * @themeKey ais-HitsPerPage-select - the select
	 * @themeKey ais-HitsPerPage-option - the select option
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, HitsPerPage, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <HitsPerPage
	 *       defaultRefinement={5}
	 *       items={[
	 *         { value: 5, label: 'Show 5 hits' },
	 *         { value: 10, label: 'Show 10 hits' },
	 *       ]}
	 *     />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectHitsPerPage)(_HitsPerPage.default);
	
	exports.default = _default;

/***/ }),
/* 1632 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var Index = (0, _reactInstantsearchCore.createIndex)({
	  Root: 'div',
	  props: {
	    className: 'ais-MultiIndex__root'
	  }
	});
	var _default = Index;
	exports.default = _default;

/***/ }),
/* 1633 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _InfiniteHits = _interopRequireDefault(__webpack_require__(1607));
	
	/**
	 * Displays an infinite list of hits along with a **load more** button.
	 *
	 * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).
	 *
	 * @name InfiniteHits
	 * @kind widget
	 * @propType {Component} [hitComponent] - Component used for rendering each hit from
	 *   the results. If it is not provided the rendering defaults to displaying the
	 *   hit in its JSON form. The component will be called with a `hit` prop.
	 * @themeKey ais-InfiniteHits - the root div of the widget
	 * @themeKey ais-InfiniteHits-list - the list of hits
	 * @themeKey ais-InfiniteHits-item - the hit list item
	 * @themeKey ais-InfiniteHits-loadMore - the button used to display more results
	 * @themeKey ais-InfiniteHits-loadMore--disabled - the disabled button used to display more results
	 * @translationKey loadMore - the label of load more button
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, InfiniteHits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <InfiniteHits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectInfiniteHits)(_InfiniteHits.default);
	
	exports.default = _default;

/***/ }),
/* 1634 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _lite = _interopRequireDefault(__webpack_require__(828));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var InstantSearch = (0, _reactInstantsearchCore.createInstantSearch)(_lite.default, {
	  Root: 'div',
	  props: {
	    className: 'ais-InstantSearch__root'
	  }
	});
	var _default = InstantSearch;
	exports.default = _default;

/***/ }),
/* 1635 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _Menu = _interopRequireDefault(__webpack_require__(1609));
	
	/**
	 * The Menu component displays a menu that lets the user choose a single value for a specific attribute.
	 * @name Menu
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * If you are using the `searchable` prop, you'll also need to make the attribute searchable using
	 * the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of diplayed items
	 * @propType {number} [showMoreLimit=20] - the maximun number of displayed items. Only used when showMore is set to `true`
	 * @propType {string} [defaultRefinement] - the value of the item selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @propType {boolean} [searchable=false] - true if the component should display an input to search for facet values. <br> In order to make this feature work, you need to make the attribute searchable [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting) or [the dashboard](https://www.algolia.com/explorer/display/).
	 * @themeKey ais-Menu - the root div of the widget
	 * @themeKey ais-Menu-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.
	 * @themeKey ais-Menu-list - the list of all menu items
	 * @themeKey ais-Menu-item - the menu list item
	 * @themeKey ais-Menu-item--selected - the selected menu list item
	 * @themeKey ais-Menu-link - the clickable menu element
	 * @themeKey ais-Menu-label - the label of each item
	 * @themeKey ais-Menu-count - the count of values for each item
	 * @themeKey ais-Menu-noResults - the div displayed when there are no results
	 * @themeKey ais-Menu-showMore - the button used to display more categories
	 * @themeKey ais-Menu-showMore--disabled - the disabled button used to display more categories
	 * @translationkey showMore - The label of the show more button. Accepts one parameters, a boolean that is true if the values are expanded
	 * @translationkey noResults - The label of the no results text when no search for facet values results are found.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Menu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Menu attribute="categories" />
	 *   </InstantSearch>
	 * );
	 */
	var MenuWidget = function MenuWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_Menu.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectMenu)(MenuWidget);
	
	exports.default = _default;

/***/ }),
/* 1636 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _MenuSelect = _interopRequireDefault(__webpack_require__(1610));
	
	/**
	 * The MenuSelect component displays a select that lets the user choose a single value for a specific attribute.
	 * @name MenuSelect
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {string} [defaultRefinement] - the value of the item selected by default
	 * @propType {number} [limit=10] - the minimum number of diplayed items
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-MenuSelect - the root div of the widget
	 * @themeKey ais-MenuSelect-noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-MenuSelect-select - the `<select>`
	 * @themeKey ais-MenuSelect-option - the select `<option>`
	 * @translationkey seeAllOption - The label of the option to select to remove the refinement
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, MenuSelect } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <MenuSelect attribute="categories" />
	 *   </InstantSearch>
	 * );
	 */
	var MenuSelectWidget = function MenuSelectWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_MenuSelect.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectMenu)(MenuSelectWidget);
	
	exports.default = _default;

/***/ }),
/* 1637 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _NumericMenu = _interopRequireDefault(__webpack_require__(1611));
	
	/**
	 * NumericMenu is a widget used for selecting the range value of a numeric attribute.
	 * @name NumericMenu
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be holding numerical values.
	 * @propType {string} attribute - the name of the attribute in the records
	 * @propType {{label: string, start: number, end: number}[]} items - List of options. With a text label, and upper and lower bounds.
	 * @propType {string} [defaultRefinement] - the value of the item selected by default, follow the format "min:max".
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-NumericMenu - the root div of the widget
	 * @themeKey ais-NumericMenu--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-NumericMenu-list - the list of all refinement items
	 * @themeKey ais-NumericMenu-item - the refinement list item
	 * @themeKey ais-NumericMenu-item--selected - the selected refinement list item
	 * @themeKey ais-NumericMenu-label - the label of each refinement item
	 * @themeKey ais-NumericMenu-radio - the radio input of each refinement item
	 * @themeKey ais-NumericMenu-labelText - the label text of each refinement item
	 * @translationkey all - The label of the largest range added automatically by react instantsearch
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, NumericMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <NumericMenu
	 *       attribute="price"
	 *       items={[
	 *         { end: 10, label: '< $10' },
	 *         { start: 10, end: 100, label: '$10 - $100' },
	 *         { start: 100, end: 500, label: '$100 - $500' },
	 *         { start: 500, label: '> $500' },
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var NumericMenuWidget = function NumericMenuWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_NumericMenu.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectNumericMenu)(NumericMenuWidget);
	
	exports.default = _default;

/***/ }),
/* 1638 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _Pagination = _interopRequireDefault(__webpack_require__(1612));
	
	/**
	 * The Pagination widget displays a simple pagination system allowing the user to
	 * change the current page.
	 * @name Pagination
	 * @kind widget
	 * @propType {boolean} [showFirst=true] - Display the first page link.
	 * @propType {boolean} [showLast=false] - Display the last page link.
	 * @propType {boolean} [showPrevious=true] - Display the previous page link.
	 * @propType {boolean} [showNext=true] - Display the next page link.
	 * @propType {number} [padding=3] - How many page links to display around the current page.
	 * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.
	 * @themeKey ais-Pagination - the root div of the widget
	 * @themeKey ais-Pagination--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-Pagination-list - the list of all pagination items
	 * @themeKey ais-Pagination-list--noRefinement - the list of all pagination items when there is no refinement
	 * @themeKey ais-Pagination-item - the pagination list item
	 * @themeKey ais-Pagination-item--firstPage - the "first" pagination list item
	 * @themeKey ais-Pagination-item--lastPage - the "last" pagination list item
	 * @themeKey ais-Pagination-item--previousPage - the "previous" pagination list item
	 * @themeKey ais-Pagination-item--nextPage - the "next" pagination list item
	 * @themeKey ais-Pagination-item--page - the "page" pagination list item
	 * @themeKey ais-Pagination-item--selected - the selected pagination list item
	 * @themeKey ais-Pagination-item--disabled - the disabled pagination list item
	 * @themeKey ais-Pagination-link - the pagination clickable element
	 * @translationKey previous - Label value for the previous page link
	 * @translationKey next - Label value for the next page link
	 * @translationKey first - Label value for the first page link
	 * @translationKey last - Label value for the last page link
	 * @translationkey page - Label value for a page item. You get function(currentRefinement) and you need to return a string
	 * @translationKey ariaPrevious - Accessibility label value for the previous page link
	 * @translationKey ariaNext - Accessibility label value for the next page link
	 * @translationKey ariaFirst - Accessibility label value for the first page link
	 * @translationKey ariaLast - Accessibility label value for the last page link
	 * @translationkey ariaPage - Accessibility label value for a page item. You get function(currentRefinement) and you need to return a string
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Pagination } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Pagination />
	 *   </InstantSearch>
	 * );
	 */
	var PaginationWidget = function PaginationWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_Pagination.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectPagination)(PaginationWidget);
	
	exports.default = _default;

/***/ }),
/* 1639 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _Panel = _interopRequireDefault(__webpack_require__(1613));
	
	/**
	 * The Panel widget wraps other widgets in a consistent panel design.
	 * It also reacts, indicates and set CSS classes when widgets are no more relevant for refining.
	 * E.g. when a RefinementList becomes empty because of the current search results.
	 *
	 * @name Panel
	 * @kind widget
	 * @propType {string} [className] - Adds a className on the root element.
	 * @propType {node} [header] - Adds a header to the widget.
	 * @propType {node} [footer] - Adds a footer to the widget.
	 * @themeKey ais-Panel - the root div of the Panel
	 * @themeKey ais-Panel--noRefinement - the root div of the Panel without refinement
	 * @themeKey ais-Panel-header - the header of the Panel (optional)
	 * @themeKey ais-Panel-body - the body of the Panel
	 * @themeKey ais-Panel-footer - the footer of the Panel (optional)
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Panel, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Panel header="Categories">
	 *       <RefinementList attribute="categories" />
	 *     </Panel>
	 *   </InstantSearch>
	 * );
	 */
	var _default = _Panel.default;
	exports.default = _default;

/***/ }),
/* 1640 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PoweredBy = _interopRequireDefault(__webpack_require__(1614));
	
	/**
	 * PoweredBy displays an Algolia logo.
	 *
	 * Algolia requires that you use this widget if you are on a [community or free plan](https://www.algolia.com/pricing).
	 * @name PoweredBy
	 * @kind widget
	 * @themeKey ais-PoweredBy - the root div of the widget
	 * @themeKey ais-PoweredBy-text - the text of the widget
	 * @themeKey ais-PoweredBy-link - the link of the logo
	 * @themeKey ais-PoweredBy-logo - the logo of the widget
	 * @translationKey searchBy - Label value for the powered by
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, PoweredBy } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <PoweredBy />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectPoweredBy)(_PoweredBy.default);
	
	exports.default = _default;

/***/ }),
/* 1641 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _QueryRuleCustomData = _interopRequireDefault(__webpack_require__(1615));
	
	var QueryRuleCustomDataWidget = function QueryRuleCustomDataWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_QueryRuleCustomData.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectQueryRules)(QueryRuleCustomDataWidget);
	
	exports.default = _default;

/***/ }),
/* 1642 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _RangeInput = _interopRequireDefault(__webpack_require__(1616));
	
	/**
	 * RangeInput allows a user to select a numeric range using a minimum and maximum input.
	 * @name RangeInput
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * The values inside the attribute must be JavaScript numbers (not strings).
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {{min: number, max: number}} [defaultRefinement] - Default state of the widget containing the start and the end of the range.
	 * @propType {number} [min] - Minimum value. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [max] - Maximum value. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [precision=0] - Number of digits after decimal point to use.
	 * @themeKey ais-RangeInput - the root div of the widget
	 * @themeKey ais-RangeInput-form - the wrapping form
	 * @themeKey ais-RangeInput-label - the label wrapping inputs
	 * @themeKey ais-RangeInput-input - the input (number)
	 * @themeKey ais-RangeInput-input--min - the minimum input
	 * @themeKey ais-RangeInput-input--max - the maximum input
	 * @themeKey ais-RangeInput-separator - the separator word used between the two inputs
	 * @themeKey ais-RangeInput-button - the submit button
	 * @translationKey submit - Label value for the submit button
	 * @translationKey separator - Label value for the input separator
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, RangeInput } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <RangeInput attribute="price" />
	 *   </InstantSearch>
	 * );
	 */
	var RangeInputWidget = function RangeInputWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_RangeInput.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectRange)(RangeInputWidget);
	
	exports.default = _default;

/***/ }),
/* 1643 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	/**
	 * Since a lot of sliders already exist, we did not include one by default.
	 * However you can easily connect React InstantSearch to an existing one
	 * using the [connectRange connector](connectors/connectRange.html).
	 *
	 * @name RangeSlider
	 * @requirements To connect any slider to Algolia, the underlying attribute used must be holding numerical values.
	 * @kind widget
	 * @example
	 *
	 * // Here's an example showing how to connect the AirBnb Rheostat Slider to React InstantSearch
	 * // using the range connector. ⚠️ This example only works with the version 2.x of Rheostat.
	
	import React, {Component} from 'react';
	import PropTypes from 'prop-types';
	import Rheostat from 'rheostat';
	import { connectRange } from 'react-instantsearch-dom';
	
	class Range extends React.Component {
	  static propTypes = {
	    min: PropTypes.number,
	    max: PropTypes.number,
	    currentRefinement: PropTypes.object,
	    refine: PropTypes.func.isRequired,
	    canRefine: PropTypes.bool.isRequired
	  };
	
	  state = { currentValues: { min: this.props.min, max: this.props.max } };
	
	  componentWillReceiveProps(sliderState) {
	    if (sliderState.canRefine) {
	      this.setState({
	        currentValues: {
	          min: sliderState.currentRefinement.min,
	          max: sliderState.currentRefinement.max
	        }
	      });
	    }
	  }
	
	  onValuesUpdated = sliderState => {
	    this.setState({
	      currentValues: { min: sliderState.values[0], max: sliderState.values[1] }
	    });
	  };
	
	  onChange = sliderState => {
	    if (
	      this.props.currentRefinement.min !== sliderState.values[0] ||
	      this.props.currentRefinement.max !== sliderState.values[1]
	    ) {
	      this.props.refine({
	        min: sliderState.values[0],
	        max: sliderState.values[1]
	      });
	    }
	  };
	
	  render() {
	    const { min, max, currentRefinement } = this.props;
	    const { currentValues } = this.state;
	    return min !== max ? (
	      <div>
	        <Rheostat
	          className="ais-RangeSlider"
	          min={min}
	          max={max}
	          values={[currentRefinement.min, currentRefinement.max]}
	          onChange={this.onChange}
	          onValuesUpdated={this.onValuesUpdated}
	        />
	        <div style={{ display: "flex", justifyContent: "space-between" }}>
	          <div>{currentValues.min}</div>
	          <div>{currentValues.max}</div>
	        </div>
	      </div>
	    ) : null;
	  }
	}
	
	const ConnectedRange = connectRange(Range);
	*/
	var _default = function _default() {
	  return _react.default.createElement("div", null, "We do not provide any Slider, see the documentation to learn how to connect one easily:", _react.default.createElement("a", {
	    target: "_blank",
	    rel: "noopener noreferrer",
	    href: "https://www.algolia.com/doc/api-reference/widgets/range-slider/react/"
	  }, "https://www.algolia.com/doc/api-reference/widgets/range-slider/react/"));
	};
	
	exports.default = _default;

/***/ }),
/* 1644 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _RatingMenu = _interopRequireDefault(__webpack_require__(1617));
	
	/**
	 * RatingMenu lets the user refine search results by clicking on stars.
	 *
	 * The stars are based on the selected `attribute`.
	 * @requirements The attribute passed to the `attribute` prop must be holding numerical values.
	 * @name RatingMenu
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * The values inside the attribute must be JavaScript numbers (not strings).
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {number} [min] - Minimum value for the rating. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [max] - Maximum value for the rating. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.
	 * @propType {{min: number, max: number}} [defaultRefinement] - Default state of the widget containing the lower bound (end) and the max for the rating.
	 * @themeKey ais-RatingMenu - the root div of the widget
	 * @themeKey ais-RatingMenu--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-RatingMenu-list - the list of ratings
	 * @themeKey ais-RatingMenu-list--noRefinement - the list of ratings when there is no refinement
	 * @themeKey ais-RatingMenu-item - the rating list item
	 * @themeKey ais-RatingMenu-item--selected - the selected rating list item
	 * @themeKey ais-RatingMenu-item--disabled - the disabled rating list item
	 * @themeKey ais-RatingMenu-link - the rating clickable item
	 * @themeKey ais-RatingMenu-starIcon - the star icon
	 * @themeKey ais-RatingMenu-starIcon--full - the filled star icon
	 * @themeKey ais-RatingMenu-starIcon--empty - the empty star icon
	 * @themeKey ais-RatingMenu-label - the label used after the stars
	 * @themeKey ais-RatingMenu-count - the count of ratings for a specific item
	 * @translationKey ratingLabel - Label value for the rating link
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, RatingMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <RatingMenu attribute="rating" />
	 *   </InstantSearch>
	 * );
	 */
	var RatingMenuWidget = function RatingMenuWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_RatingMenu.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectRange)(RatingMenuWidget);
	
	exports.default = _default;

/***/ }),
/* 1645 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(49));
	
	var _RefinementList = _interopRequireDefault(__webpack_require__(1618));
	
	/**
	 * The RefinementList component displays a list that let the end user choose multiple values for a specific facet.
	 * @name RefinementList
	 * @kind widget
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [searchable=false] - true if the component should display an input to search for facet values. <br> In order to make this feature work, you need to make the attribute searchable [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting) or [the dashboard](https://www.algolia.com/explorer/display/).
	 * @propType {string} [operator=or] - How to apply the refinements. Possible values: 'or' or 'and'.
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of displayed items
	 * @propType {number} [showMoreLimit=20] - the maximum number of displayed items. Only used when showMore is set to `true`
	 * @propType {string[]} [defaultRefinement] - the values of the items selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-RefinementList - the root div of the widget
	 * @themeKey ais-RefinementList--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-RefinementList-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.
	 * @themeKey ais-RefinementList-list - the list of refinement items
	 * @themeKey ais-RefinementList-item - the refinement list item
	 * @themeKey ais-RefinementList-item--selected - the refinement selected list item
	 * @themeKey ais-RefinementList-label - the label of each refinement item
	 * @themeKey ais-RefinementList-checkbox - the checkbox input of each refinement item
	 * @themeKey ais-RefinementList-labelText - the label text of each refinement item
	 * @themeKey ais-RefinementList-count - the count of values for each item
	 * @themeKey ais-RefinementList-noResults - the div displayed when there are no results
	 * @themeKey ais-RefinementList-showMore - the button used to display more categories
	 * @themeKey ais-RefinementList-showMore--disabled - the disabled button used to display more categories
	 * @translationkey showMore - The label of the show more button. Accepts one parameters, a boolean that is true if the values are expanded
	 * @translationkey noResults - The label of the no results text when no search for facet values results are found.
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * If you are using the `searchable` prop, you'll also need to make the attribute searchable using
	 * the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <RefinementList attribute="brand" />
	 *   </InstantSearch>
	 * );
	 */
	var RefinementListWidget = function RefinementListWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_RefinementList.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectRefinementList)(RefinementListWidget);
	
	exports.default = _default;

/***/ }),
/* 1646 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _ScrollTo = _interopRequireDefault(__webpack_require__(1619));
	
	/**
	 * The ScrollTo component will make the page scroll to the component wrapped by it when one of the
	 * [search state](guide/Search_state.html) prop is updated. By default when the page number changes,
	 * the scroll goes to the wrapped component.
	 *
	 * @name ScrollTo
	 * @kind widget
	 * @propType {string} [scrollOn="page"] - Widget state key on which to listen for changes.
	 * @themeKey ais-ScrollTo - the root div of the widget
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, ScrollTo, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <ScrollTo>
	 *       <Hits />
	 *     </ScrollTo>
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectScrollTo)(_ScrollTo.default);
	
	exports.default = _default;

/***/ }),
/* 1647 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _SearchBox = _interopRequireDefault(__webpack_require__(540));
	
	/**
	 * The SearchBox component displays a search box that lets the user search for a specific query.
	 * @name SearchBox
	 * @kind widget
	 * @propType {string[]} [focusShortcuts=['s','/']] - List of keyboard shortcuts that focus the search box. Accepts key names and key codes.
	 * @propType {boolean} [autoFocus=false] - Should the search box be focused on render?
	 * @propType {boolean} [searchAsYouType=true] - Should we search on every change to the query? If you disable this option, new searches will only be triggered by clicking the search button or by pressing the enter key while the search box is focused.
	 * @propType {function} [onSubmit] - Intercept submit event sent from the SearchBox form container.
	 * @propType {function} [onReset] - Listen to `reset` event sent from the SearchBox form container.
	 * @propType {function} [on*] - Listen to any events sent from the search input itself.
	 * @propType {node} [submit] - Change the apparence of the default submit button (magnifying glass).
	 * @propType {node} [reset] - Change the apparence of the default reset button (cross).
	 * @propType {node} [loadingIndicator] - Change the apparence of the default loading indicator (spinning circle).
	 * @propType {string} [defaultRefinement] - Provide default refinement value when component is mounted.
	 * @propType {boolean} [showLoadingIndicator=false] - Display that the search is loading. This only happens after a certain amount of time to avoid a blinking effect. This timer can be configured with `stalledSearchDelay` props on <InstantSearch>. By default, the value is 200ms.
	 * @themeKey ais-SearchBox - the root div of the widget
	 * @themeKey ais-SearchBox-form - the wrapping form
	 * @themeKey ais-SearchBox-input - the search input
	 * @themeKey ais-SearchBox-submit - the submit button
	 * @themeKey ais-SearchBox-submitIcon - the default magnifier icon used with the search input
	 * @themeKey ais-SearchBox-reset - the reset button used to clear the content of the input
	 * @themeKey ais-SearchBox-resetIcon - the default reset icon used inside the reset button
	 * @themeKey ais-SearchBox-loadingIndicator - the loading indicator container
	 * @themeKey ais-SearchBox-loadingIcon - the default loading icon
	 * @translationkey submitTitle - The submit button title
	 * @translationkey resetTitle - The reset button title
	 * @translationkey placeholder - The label of the input placeholder
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SearchBox />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectSearchBox)(_SearchBox.default);
	
	exports.default = _default;

/***/ }),
/* 1648 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _Snippet = _interopRequireDefault(__webpack_require__(1620));
	
	/**
	 * Renders any attribute from an hit into its highlighted snippet form when relevant.
	 *
	 * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.
	 * @name Snippet
	 * @kind widget
	 * @requirements To use this widget, the attribute name passed to the `attribute` prop must be
	 * present in "Attributes to snippet" on the Algolia dashboard or configured as `attributesToSnippet`
	 * via a set settings call to the Algolia API.
	 * @propType {string} attribute - location of the highlighted snippet attribute in the hit (the corresponding element can be either a string or an array of strings)
	 * @propType {object} hit - hit object containing the highlighted snippet attribute
	 * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the attribute
	 * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted
	 * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.
	 * @themeKey ais-Snippet - the root span of the widget
	 * @themeKey ais-Snippet-highlighted - the highlighted text
	 * @themeKey ais-Snippet-nonHighlighted - the normal text
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, Snippet } from 'react-instantsearch-dom';
	 *
	 * const Hit = ({ hit }) => (
	 *   <div>
	 *     <Snippet attribute="description" hit={hit} />
	 *   </div>
	 * );
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SearchBox defaultRefinement="adjustable" />
	 *     <Hits hitComponent={Hit} />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectHighlight)(_Snippet.default);
	
	exports.default = _default;

/***/ }),
/* 1649 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _SortBy = _interopRequireDefault(__webpack_require__(1621));
	
	/**
	 * The SortBy component displays a list of indexes allowing a user to change the hits are sorting.
	 * @name SortBy
	 * @requirements Algolia handles sorting by creating replica indices. [Read more about sorting](https://www.algolia.com/doc/guides/relevance/sorting/) on
	 * the Algolia website.
	 * @kind widget
	 * @propType {{value: string, label: string}[]} items - The list of indexes to search in.
	 * @propType {string} defaultRefinement - The default selected index.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-SortBy - the root div of the widget
	 * @themeKey ais-SortBy-select - the select
	 * @themeKey ais-SortBy-option - the select option
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SortBy } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SortBy
	 *       defaultRefinement="instant_search"
	 *       items={[
	 *         { value: 'instant_search', label: 'Featured' },
	 *         { value: 'instant_search_price_asc', label: 'Price asc.' },
	 *         { value: 'instant_search_price_desc', label: 'Price desc.' },
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectSortBy)(_SortBy.default);
	
	exports.default = _default;

/***/ }),
/* 1650 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _Stats = _interopRequireDefault(__webpack_require__(1622));
	
	/**
	 * The Stats component displays the total number of matching hits and the time it took to get them (time spent in the Algolia server).
	 * @name Stats
	 * @kind widget
	 * @themeKey ais-Stats - the root div of the widget
	 * @themeKey ais-Stats-text - the text of the widget - the count of items for each item
	 * @translationkey stats - The string displayed by the stats widget. You get function(n, ms) and you need to return a string. n is a number of hits retrieved, ms is a processed time.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Stats, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Stats />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectStats)(_Stats.default);
	
	exports.default = _default;

/***/ }),
/* 1651 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _ToggleRefinement = _interopRequireDefault(__webpack_require__(1623));
	
	/**
	 * The ToggleRefinement provides an on/off filtering feature based on an attribute value.
	 * @name ToggleRefinement
	 * @kind widget
	 * @requirements To use this widget, you'll need an attribute to toggle on.
	 *
	 * You can't toggle on null or not-null values. If you want to address this particular use-case you'll need to compute an
	 * extra boolean attribute saying if the value exists or not. See this [thread](https://discourse.algolia.com/t/how-to-create-a-toggle-for-the-absence-of-a-string-attribute/2460) for more details.
	 *
	 * @propType {string} attribute - Name of the attribute on which to apply the `value` refinement. Required when `value` is present.
	 * @propType {string} label - Label for the toggle.
	 * @propType {any} value - Value of the refinement to apply on `attribute` when checked.
	 * @propType {boolean} [defaultRefinement=false] - Default state of the widget. Should the toggle be checked by default?
	 * @themeKey ais-ToggleRefinement - the root div of the widget
	 * @themeKey ais-ToggleRefinement-list - the list of toggles
	 * @themeKey ais-ToggleRefinement-item - the toggle list item
	 * @themeKey ais-ToggleRefinement-label - the label of each toggle item
	 * @themeKey ais-ToggleRefinement-checkbox - the checkbox input of each toggle item
	 * @themeKey ais-ToggleRefinement-labelText - the label text of each toggle item
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, ToggleRefinement } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <ToggleRefinement
	 *       attribute="free_shipping"
	 *       label="Free Shipping"
	 *       value={true}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectToggleRefinement)(_ToggleRefinement.default);
	
	exports.default = _default;

/***/ }),
/* 1652 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(1);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(16);
	
	var _VoiceSearch = _interopRequireDefault(__webpack_require__(1624));
	
	var _default = (0, _reactInstantsearchCore.connectSearchBox)(_VoiceSearch.default);
	
	exports.default = _default;

/***/ }),
/* 1653 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchDom = __webpack_require__(1625);
	
	Object.defineProperty(exports, 'InstantSearch', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.InstantSearch;
	  }
	});
	Object.defineProperty(exports, 'Index', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Index;
	  }
	});
	Object.defineProperty(exports, 'Breadcrumb', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Breadcrumb;
	  }
	});
	Object.defineProperty(exports, 'ClearRefinements', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.ClearRefinements;
	  }
	});
	Object.defineProperty(exports, 'Configure', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Configure;
	  }
	});
	Object.defineProperty(exports, 'CurrentRefinements', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.CurrentRefinements;
	  }
	});
	Object.defineProperty(exports, 'HierarchicalMenu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.HierarchicalMenu;
	  }
	});
	Object.defineProperty(exports, 'Highlight', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Highlight;
	  }
	});
	Object.defineProperty(exports, 'Hits', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Hits;
	  }
	});
	Object.defineProperty(exports, 'HitsPerPage', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.HitsPerPage;
	  }
	});
	Object.defineProperty(exports, 'InfiniteHits', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.InfiniteHits;
	  }
	});
	Object.defineProperty(exports, 'Menu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Menu;
	  }
	});
	Object.defineProperty(exports, 'MenuSelect', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.MenuSelect;
	  }
	});
	Object.defineProperty(exports, 'NumericMenu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.NumericMenu;
	  }
	});
	Object.defineProperty(exports, 'Pagination', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Pagination;
	  }
	});
	Object.defineProperty(exports, 'Panel', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Panel;
	  }
	});
	Object.defineProperty(exports, 'PoweredBy', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.PoweredBy;
	  }
	});
	Object.defineProperty(exports, 'RangeInput', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.RangeInput;
	  }
	});
	Object.defineProperty(exports, 'RangeSlider', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.RangeSlider;
	  }
	});
	Object.defineProperty(exports, 'RatingMenu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.RatingMenu;
	  }
	});
	Object.defineProperty(exports, 'RefinementList', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.RefinementList;
	  }
	});
	Object.defineProperty(exports, 'ScrollTo', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.ScrollTo;
	  }
	});
	Object.defineProperty(exports, 'SearchBox', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.SearchBox;
	  }
	});
	Object.defineProperty(exports, 'Snippet', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Snippet;
	  }
	});
	Object.defineProperty(exports, 'SortBy', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.SortBy;
	  }
	});
	Object.defineProperty(exports, 'Stats', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Stats;
	  }
	});
	Object.defineProperty(exports, 'ToggleRefinement', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.ToggleRefinement;
	  }
	});

/***/ }),
/* 1654 */
/***/ (function(module, exports) {

	/** @license React v16.13.1
	 * react-is.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
	Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
	function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
	exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
	exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
	exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ }),
/* 1655 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _propTypes = __webpack_require__(3);
	
	var _jss = __webpack_require__(334);
	
	var _ns = __webpack_require__(335);
	
	var ns = _interopRequireWildcard(_ns);
	
	var _contextTypes = __webpack_require__(544);
	
	var _contextTypes2 = _interopRequireDefault(_contextTypes);
	
	var _propTypes2 = __webpack_require__(545);
	
	var _propTypes3 = _interopRequireDefault(_propTypes2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var JssProvider = function (_Component) {
	  _inherits(JssProvider, _Component);
	
	  function JssProvider() {
	    _classCallCheck(this, JssProvider);
	
	    return _possibleConstructorReturn(this, (JssProvider.__proto__ || Object.getPrototypeOf(JssProvider)).apply(this, arguments));
	  }
	
	  _createClass(JssProvider, [{
	    key: 'getChildContext',
	
	
	    // JssProvider can be nested. We allow to overwrite any context prop at any level.
	    // 1. Check if there is a value passed over props.
	    // 2. If value was passed, we set it on the child context.
	    // 3. If value was not passed, we proxy parent context (default context behaviour).
	    value: function getChildContext() {
	      var _props = this.props,
	          registry = _props.registry,
	          classNamePrefix = _props.classNamePrefix,
	          localJss = _props.jss,
	          generateClassName = _props.generateClassName,
	          disableStylesGeneration = _props.disableStylesGeneration;
	
	      var sheetOptions = this.context[ns.sheetOptions] || {};
	      var context = _defineProperty({}, ns.sheetOptions, sheetOptions);
	
	      if (registry) {
	        context[ns.sheetsRegistry] = registry;
	        // This way we identify a new request on the server, because user will create
	        // a new Registry instance for each.
	        if (registry !== this.registry) {
	          // We reset managers because we have to regenerate all sheets for the new request.
	          this.managers = {};
	          this.registry = registry;
	        }
	      }
	
	      // Make sure we don't loose managers when JssProvider is used inside of a stateful
	      // component which decides to rerender.
	      context[ns.managers] = this.managers;
	
	      if (generateClassName) {
	        sheetOptions.generateClassName = generateClassName;
	      } else if (!sheetOptions.generateClassName) {
	        if (!this.generateClassName) {
	          var createGenerateClassName = _jss.createGenerateClassNameDefault;
	          if (localJss && localJss.options.createGenerateClassName) {
	            createGenerateClassName = localJss.options.createGenerateClassName;
	          }
	          // Make sure we don't loose the generator when JssProvider is used inside of a stateful
	          // component which decides to rerender.
	          this.generateClassName = createGenerateClassName();
	        }
	
	        sheetOptions.generateClassName = this.generateClassName;
	      }
	
	      if (classNamePrefix) sheetOptions.classNamePrefix = classNamePrefix;
	      if (localJss) context[ns.jss] = localJss;
	      if (disableStylesGeneration !== undefined) {
	        sheetOptions.disableStylesGeneration = disableStylesGeneration;
	      }
	
	      return context;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react.Children.only(this.props.children);
	    }
	  }]);
	
	  return JssProvider;
	}(_react.Component);
	
	JssProvider.propTypes = _extends({}, _propTypes3['default'], {
	  generateClassName: _propTypes.func,
	  classNamePrefix: _propTypes.string,
	  disableStylesGeneration: _propTypes.bool,
	  children: _propTypes.node.isRequired
	});
	JssProvider.childContextTypes = _contextTypes2['default'];
	JssProvider.contextTypes = _contextTypes2['default'];
	exports['default'] = JssProvider;

/***/ }),
/* 1656 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	/**
	 * Adds `composes` property to each top level rule
	 * in order to have a composed class name for dynamic style sheets.
	 *
	 * It relies on jss-compose and jss-extend plugins.
	 *
	 * Example:
	 * classes:  {left: 'a', button: 'b'}
	 * styles:   {button: {height: () => { ... }}}
	 * composed: {
	 *   button: {
	 *     composes: 'b',
	 *     height: () => { ... }
	 *   },
	 *   left: {
	 *     composes: 'a'
	 *   }
	 * }
	 *
	 * @param {Object} classes static classes map
	 * @param {Object} styles dynamic styles object without static properties
	 * @return {Object|null}
	 */
	exports["default"] = function (staticClasses, dynamicClasses) {
	  var combinedClasses = _extends({}, staticClasses);
	
	  for (var name in dynamicClasses) {
	    combinedClasses[name] = staticClasses[name] ? staticClasses[name] + " " + dynamicClasses[name] : dynamicClasses[name];
	  }
	
	  return combinedClasses;
	};

/***/ }),
/* 1657 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _theming = __webpack_require__(567);
	
	var _theming2 = _interopRequireDefault(_theming);
	
	var _jss = __webpack_require__(334);
	
	var _jss2 = _interopRequireDefault(_jss);
	
	var _compose = __webpack_require__(1656);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	var _getDisplayName = __webpack_require__(1658);
	
	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);
	
	var _ns = __webpack_require__(335);
	
	var ns = _interopRequireWildcard(_ns);
	
	var _contextTypes = __webpack_require__(544);
	
	var _contextTypes2 = _interopRequireDefault(_contextTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var env = ("production");
	
	// Like a Symbol
	var dynamicStylesNs = Math.random();
	
	/*
	 * # Use cases
	 *
	 * - Unthemed component accepts styles object
	 * - Themed component accepts styles creator function which takes theme as a single argument
	 * - Multiple instances will re-use the same static sheet via sheets manager
	 * - Sheet manager identifies static sheets by theme as a key
	 * - For unthemed components theme is an empty object
	 * - The very first instance will add static sheet to sheets manager
	 * - Every further instances will get that static sheet from sheet manager
	 * - Every mount of every instance will call method `sheetsManager.manage`,
	 * thus incrementing reference counter.
	 * - Every unmount of every instance will call method `sheetsManager.unmanage`,
	 * thus decrementing reference counter.
	 * - `sheetsManager.unmanage` under the hood will detach static sheet once reference
	 * counter is zero.
	 * - Dynamic styles are not shared between instances
	 *
	 */
	
	var getStyles = function getStyles(stylesOrCreator, theme) {
	  if (typeof stylesOrCreator !== 'function') {
	    return stylesOrCreator;
	  }
	  return stylesOrCreator(theme);
	};
	
	// Returns an object with array property as a key and true as a value.
	var toMap = function toMap(arr) {
	  return arr.reduce(function (map, prop) {
	    map[prop] = true;
	    return map;
	  }, {});
	};
	
	var defaultInjectProps = {
	  sheet: false,
	  classes: true,
	  theme: true
	};
	
	var managersCounter = 0;
	
	/**
	 * Wrap a Component into a JSS Container Component.
	 *
	 * @param {Object|Function} stylesOrCreator
	 * @param {Component} InnerComponent
	 * @param {Object} [options]
	 * @return {Component}
	 */
	
	exports['default'] = function (stylesOrCreator, InnerComponent) {
	  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	  var isThemingEnabled = typeof stylesOrCreator === 'function';
	
	  var _options$theming = options.theming,
	      theming = _options$theming === undefined ? _theming2['default'] : _options$theming,
	      inject = options.inject,
	      optionsJss = options.jss,
	      sheetOptions = _objectWithoutProperties(options, ['theming', 'inject', 'jss']);
	
	  var injectMap = inject ? toMap(inject) : defaultInjectProps;
	  var themeListener = theming.themeListener;
	
	  var displayName = (0, _getDisplayName2['default'])(InnerComponent);
	  var defaultClassNamePrefix = env === 'production' ? undefined : displayName + '-';
	  var noTheme = {};
	  var managerId = managersCounter++;
	  var manager = new _jss.SheetsManager();
	  var defaultProps = _extends({}, InnerComponent.defaultProps);
	  delete defaultProps.classes;
	
	  var Jss = function (_Component) {
	    _inherits(Jss, _Component);
	
	    function Jss(props, context) {
	      _classCallCheck(this, Jss);
	
	      var _this = _possibleConstructorReturn(this, (Jss.__proto__ || Object.getPrototypeOf(Jss)).call(this, props, context));
	
	      _initialiseProps.call(_this);
	
	      var theme = isThemingEnabled ? themeListener.initial(context) : noTheme;
	
	      _this.state = _this.createState({ theme: theme }, props);
	      return _this;
	    }
	
	    _createClass(Jss, [{
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        this.manage(this.state);
	      }
	    }, {
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        if (isThemingEnabled) {
	          this.unsubscribeId = themeListener.subscribe(this.context, this.setTheme);
	        }
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps, nextContext) {
	        this.context = nextContext;
	        var dynamicSheet = this.state.dynamicSheet;
	
	        if (dynamicSheet) dynamicSheet.update(nextProps);
	      }
	    }, {
	      key: 'componentWillUpdate',
	      value: function componentWillUpdate(nextProps, nextState) {
	        if (isThemingEnabled && this.state.theme !== nextState.theme) {
	          var newState = this.createState(nextState, nextProps);
	          this.manage(newState);
	          this.manager.unmanage(this.state.theme);
	          this.setState(newState);
	        }
	      }
	    }, {
	      key: 'componentDidUpdate',
	      value: function componentDidUpdate(prevProps, prevState) {
	        // We remove previous dynamicSheet only after new one was created to avoid FOUC.
	        if (prevState.dynamicSheet !== this.state.dynamicSheet) {
	          this.jss.removeStyleSheet(prevState.dynamicSheet);
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        if (this.unsubscribeId) {
	          themeListener.unsubscribe(this.context, this.unsubscribeId);
	        }
	
	        this.manager.unmanage(this.state.theme);
	        if (this.state.dynamicSheet) {
	          this.state.dynamicSheet.detach();
	        }
	      }
	    }, {
	      key: 'createState',
	      value: function createState(_ref, _ref2) {
	        var theme = _ref.theme,
	            dynamicSheet = _ref.dynamicSheet;
	        var userClasses = _ref2.classes;
	
	        var contextSheetOptions = this.context[ns.sheetOptions];
	        if (contextSheetOptions && contextSheetOptions.disableStylesGeneration) {
	          return { theme: theme, dynamicSheet: dynamicSheet, classes: {} };
	        }
	
	        var classNamePrefix = defaultClassNamePrefix;
	        var staticSheet = this.manager.get(theme);
	
	        if (contextSheetOptions && contextSheetOptions.classNamePrefix) {
	          classNamePrefix = contextSheetOptions.classNamePrefix + classNamePrefix;
	        }
	
	        if (!staticSheet) {
	          var styles = getStyles(stylesOrCreator, theme);
	          staticSheet = this.jss.createStyleSheet(styles, _extends({}, sheetOptions, contextSheetOptions, {
	            meta: displayName + ', ' + (isThemingEnabled ? 'Themed' : 'Unthemed') + ', Static',
	            classNamePrefix: classNamePrefix
	          }));
	          this.manager.add(theme, staticSheet);
	          staticSheet[dynamicStylesNs] = (0, _jss.getDynamicStyles)(styles);
	        }
	
	        var dynamicStyles = staticSheet[dynamicStylesNs];
	
	        if (dynamicStyles) {
	          dynamicSheet = this.jss.createStyleSheet(dynamicStyles, _extends({}, sheetOptions, contextSheetOptions, {
	            meta: displayName + ', ' + (isThemingEnabled ? 'Themed' : 'Unthemed') + ', Dynamic',
	            classNamePrefix: classNamePrefix,
	            link: true
	          }));
	        }
	
	        var defaultClasses = InnerComponent.defaultProps ? InnerComponent.defaultProps.classes : {};
	        var jssClasses = dynamicSheet ? (0, _compose2['default'])(staticSheet.classes, dynamicSheet.classes) : staticSheet.classes;
	        var classes = _extends({}, defaultClasses, jssClasses, userClasses);
	
	        return { theme: theme, dynamicSheet: dynamicSheet, classes: classes };
	      }
	    }, {
	      key: 'manage',
	      value: function manage(_ref3) {
	        var theme = _ref3.theme,
	            dynamicSheet = _ref3.dynamicSheet;
	
	        var contextSheetOptions = this.context[ns.sheetOptions];
	        if (contextSheetOptions && contextSheetOptions.disableStylesGeneration) {
	          return;
	        }
	        var registry = this.context[ns.sheetsRegistry];
	
	        var staticSheet = this.manager.manage(theme);
	        if (registry) registry.add(staticSheet);
	
	        if (dynamicSheet) {
	          dynamicSheet.update(this.props).attach();
	          if (registry) registry.add(dynamicSheet);
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _state = this.state,
	            theme = _state.theme,
	            dynamicSheet = _state.dynamicSheet,
	            classes = _state.classes;
	
	        var _props = this.props,
	            innerRef = _props.innerRef,
	            props = _objectWithoutProperties(_props, ['innerRef']);
	
	        var sheet = dynamicSheet || this.manager.get(theme);
	
	        if (injectMap.sheet && !props.sheet) props.sheet = sheet;
	        if (isThemingEnabled && injectMap.theme && !props.theme) props.theme = theme;
	
	        // We have merged classes already.
	        if (injectMap.classes) props.classes = classes;
	
	        return _react2['default'].createElement(InnerComponent, _extends({ ref: innerRef }, props));
	      }
	    }, {
	      key: 'jss',
	      get: function get() {
	        return this.context[ns.jss] || optionsJss || _jss2['default'];
	      }
	    }, {
	      key: 'manager',
	      get: function get() {
	        var managers = this.context[ns.managers];
	
	        // If `managers` map is present in the context, we use it in order to
	        // let JssProvider reset them when new response has to render server-side.
	        if (managers) {
	          if (!managers[managerId]) {
	            managers[managerId] = new _jss.SheetsManager();
	          }
	          return managers[managerId];
	        }
	
	        return manager;
	      }
	    }]);
	
	    return Jss;
	  }(_react.Component);
	
	  Jss.displayName = 'Jss(' + displayName + ')';
	  Jss.InnerComponent = InnerComponent;
	  Jss.contextTypes = _extends({}, _contextTypes2['default'], isThemingEnabled && themeListener.contextTypes);
	  Jss.propTypes = {
	    innerRef: _propTypes2['default'].func
	  };
	  Jss.defaultProps = defaultProps;
	
	  var _initialiseProps = function _initialiseProps() {
	    var _this2 = this;
	
	    this.setTheme = function (theme) {
	      return _this2.setState({ theme: theme });
	    };
	  };
	
	  return Jss;
	};

/***/ }),
/* 1658 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports['default'] = function (Component) {
	  return Component.displayName || Component.name || 'Component';
	};

/***/ }),
/* 1659 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = injectSheet;
	
	var _hoistNonReactStatics = __webpack_require__(114);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _createHoc = __webpack_require__(1657);
	
	var _createHoc2 = _interopRequireDefault(_createHoc);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Global index counter to preserve source order.
	 * As we create the style sheet during componentWillMount lifecycle,
	 * children are handled after the parents, so the order of style elements would
	 * be parent->child. It is a problem though when a parent passes a className
	 * which needs to override any childs styles. StyleSheet of the child has a higher
	 * specificity, because of the source order.
	 * So our solution is to render sheets them in the reverse order child->sheet, so
	 * that parent has a higher specificity.
	 *
	 * @type {Number}
	 */
	var indexCounter = -100000;
	
	var NoRenderer = function NoRenderer(_ref) {
	  var children = _ref.children;
	  return children || null;
	};
	
	/**
	 * HOC creator function that wrapps the user component.
	 *
	 * `injectSheet(styles, [options])(Component)`
	 *
	 * @api public
	 */
	function injectSheet(stylesOrSheet) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  if (options.index === undefined) {
	    options.index = indexCounter++;
	  }
	  return function () {
	    var InnerComponent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NoRenderer;
	
	    var Jss = (0, _createHoc2['default'])(stylesOrSheet, InnerComponent, options);
	    return (0, _hoistNonReactStatics2['default'])(Jss, InnerComponent, { inner: true });
	  };
	}

/***/ }),
/* 1660 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(128);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getDisplayName = function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	};
	
	exports.default = function () {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  return function lazyload(WrappedComponent) {
	    return function (_Component) {
	      _inherits(LazyLoadDecorated, _Component);
	
	      function LazyLoadDecorated() {
	        _classCallCheck(this, LazyLoadDecorated);
	
	        var _this = _possibleConstructorReturn(this, (LazyLoadDecorated.__proto__ || Object.getPrototypeOf(LazyLoadDecorated)).call(this));
	
	        _this.displayName = 'LazyLoad' + getDisplayName(WrappedComponent);
	        return _this;
	      }
	
	      _createClass(LazyLoadDecorated, [{
	        key: 'render',
	        value: function render() {
	          return _react2.default.createElement(
	            _index2.default,
	            options,
	            _react2.default.createElement(WrappedComponent, this.props)
	          );
	        }
	      }]);
	
	      return LazyLoadDecorated;
	    }(_react.Component);
	  };
	};

/***/ }),
/* 1661 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = debounce;
	function debounce(func, wait, immediate) {
	  var timeout = void 0;
	  var args = void 0;
	  var context = void 0;
	  var timestamp = void 0;
	  var result = void 0;
	
	  var later = function later() {
	    var last = +new Date() - timestamp;
	
	    if (last < wait && last >= 0) {
	      timeout = setTimeout(later, wait - last);
	    } else {
	      timeout = null;
	      if (!immediate) {
	        result = func.apply(context, args);
	        if (!timeout) {
	          context = null;
	          args = null;
	        }
	      }
	    }
	  };
	
	  return function debounced() {
	    context = this;
	    args = arguments;
	    timestamp = +new Date();
	
	    var callNow = immediate && !timeout;
	    if (!timeout) {
	      timeout = setTimeout(later, wait);
	    }
	
	    if (callNow) {
	      result = func.apply(context, args);
	      context = null;
	      args = null;
	    }
	
	    return result;
	  };
	}

/***/ }),
/* 1662 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.on = on;
	exports.off = off;
	function on(el, eventName, callback, opts) {
	  opts = opts || false;
	  if (el.addEventListener) {
	    el.addEventListener(eventName, callback, opts);
	  } else if (el.attachEvent) {
	    el.attachEvent("on" + eventName, function (e) {
	      callback.call(el, e || window.event);
	    });
	  }
	}
	
	function off(el, eventName, callback, opts) {
	  opts = opts || false;
	  if (el.removeEventListener) {
	    el.removeEventListener(eventName, callback, opts);
	  } else if (el.detachEvent) {
	    el.detachEvent("on" + eventName, callback);
	  }
	}

/***/ }),
/* 1663 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	/**
	 * @fileOverview Find scroll parent
	 */
	
	exports.default = function (node) {
	  if (!node) {
	    return document.documentElement;
	  }
	
	  var excludeStaticParent = node.style.position === 'absolute';
	  var overflowRegex = /(scroll|auto)/;
	  var parent = node;
	
	  while (parent) {
	    if (!parent.parentNode) {
	      return node.ownerDocument || document.documentElement;
	    }
	
	    var style = window.getComputedStyle(parent);
	    var position = style.position;
	    var overflow = style.overflow;
	    var overflowX = style['overflow-x'];
	    var overflowY = style['overflow-y'];
	
	    if (position === 'static' && excludeStaticParent) {
	      parent = parent.parentNode;
	      continue;
	    }
	
	    if (overflowRegex.test(overflow) && overflowRegex.test(overflowX) && overflowRegex.test(overflowY)) {
	      return parent;
	    }
	
	    parent = parent.parentNode;
	  }
	
	  return node.ownerDocument || node.documentElement || document.documentElement;
	};

/***/ }),
/* 1664 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = throttle;
	/*eslint-disable */
	function throttle(fn, threshhold, scope) {
	  threshhold || (threshhold = 250);
	  var last, deferTimer;
	  return function () {
	    var context = scope || this;
	
	    var now = +new Date(),
	        args = arguments;
	    if (last && now < last + threshhold) {
	      // hold on to it
	      clearTimeout(deferTimer);
	      deferTimer = setTimeout(function () {
	        last = now;
	        fn.apply(context, args);
	      }, threshhold);
	    } else {
	      last = now;
	      fn.apply(context, args);
	    }
	  };
	}

/***/ }),
/* 1665 */,
/* 1666 */,
/* 1667 */,
/* 1668 */,
/* 1669 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.createProvider = createProvider;
	
	var _react = __webpack_require__(2);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _PropTypes = __webpack_require__(548);
	
	var _warning = __webpack_require__(338);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;
	
	  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}
	
	function createProvider() {
	  var _Provider$childContex;
	
	  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
	  var subKey = arguments[1];
	
	  var subscriptionKey = subKey || storeKey + 'Subscription';
	
	  var Provider = function (_Component) {
	    _inherits(Provider, _Component);
	
	    Provider.prototype.getChildContext = function getChildContext() {
	      var _ref;
	
	      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
	    };
	
	    function Provider(props, context) {
	      _classCallCheck(this, Provider);
	
	      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	      _this[storeKey] = props.store;
	      return _this;
	    }
	
	    Provider.prototype.render = function render() {
	      return _react.Children.only(this.props.children);
	    };
	
	    return Provider;
	  }(_react.Component);
	
	  if (false) {
	    Provider.prototype.componentWillReceiveProps = function (nextProps) {
	      if (this[storeKey] !== nextProps.store) {
	        warnAboutReceivingStore();
	      }
	    };
	  }
	
	  Provider.propTypes = {
	    store: _PropTypes.storeShape.isRequired,
	    children: _propTypes2.default.element.isRequired
	  };
	  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);
	
	  return Provider;
	}
	
	exports.default = createProvider();

/***/ }),
/* 1670 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.createConnect = createConnect;
	
	var _connectAdvanced = __webpack_require__(546);
	
	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);
	
	var _shallowEqual = __webpack_require__(1677);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _mapDispatchToProps = __webpack_require__(1671);
	
	var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);
	
	var _mapStateToProps = __webpack_require__(1672);
	
	var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);
	
	var _mergeProps = __webpack_require__(1673);
	
	var _mergeProps2 = _interopRequireDefault(_mergeProps);
	
	var _selectorFactory = __webpack_require__(1674);
	
	var _selectorFactory2 = _interopRequireDefault(_selectorFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/*
	  connect is a facade over connectAdvanced. It turns its args into a compatible
	  selectorFactory, which has the signature:
	
	    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
	  
	  connect passes its args to connectAdvanced as options, which will in turn pass them to
	  selectorFactory each time a Connect component instance is instantiated or hot reloaded.
	
	  selectorFactory returns a final props selector from its mapStateToProps,
	  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
	  mergePropsFactories, and pure args.
	
	  The resulting final props selector is called by the Connect component instance whenever
	  it receives new props or store state.
	 */
	
	function match(arg, factories, name) {
	  for (var i = factories.length - 1; i >= 0; i--) {
	    var result = factories[i](arg);
	    if (result) return result;
	  }
	
	  return function (dispatch, options) {
	    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
	  };
	}
	
	function strictEqual(a, b) {
	  return a === b;
	}
	
	// createConnect with default args builds the 'official' connect behavior. Calling it with
	// different options opens up some testing and extensibility scenarios
	function createConnect() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$connectHOC = _ref.connectHOC,
	      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
	      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
	      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
	      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
	      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
	      _ref$mergePropsFactor = _ref.mergePropsFactories,
	      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
	      _ref$selectorFactory = _ref.selectorFactory,
	      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;
	
	  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
	        _ref2$pure = _ref2.pure,
	        pure = _ref2$pure === undefined ? true : _ref2$pure,
	        _ref2$areStatesEqual = _ref2.areStatesEqual,
	        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
	        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
	        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
	        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
	        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
	        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
	        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
	        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);
	
	    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
	    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
	    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
	
	    return connectHOC(selectorFactory, _extends({
	      // used in error messages
	      methodName: 'connect',
	
	      // used to compute Connect's displayName from the wrapped component's displayName.
	      getDisplayName: function getDisplayName(name) {
	        return 'Connect(' + name + ')';
	      },
	
	      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
	      shouldHandleStateChanges: Boolean(mapStateToProps),
	
	      // passed through to selectorFactory
	      initMapStateToProps: initMapStateToProps,
	      initMapDispatchToProps: initMapDispatchToProps,
	      initMergeProps: initMergeProps,
	      pure: pure,
	      areStatesEqual: areStatesEqual,
	      areOwnPropsEqual: areOwnPropsEqual,
	      areStatePropsEqual: areStatePropsEqual,
	      areMergedPropsEqual: areMergedPropsEqual
	
	    }, extraOptions));
	  };
	}
	
	exports.default = createConnect();

/***/ }),
/* 1671 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
	exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
	exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;
	
	var _redux = __webpack_require__(342);
	
	var _wrapMapToProps = __webpack_require__(547);
	
	function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
	  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
	}
	
	function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
	  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return { dispatch: dispatch };
	  }) : undefined;
	}
	
	function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
	  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
	  }) : undefined;
	}
	
	exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

/***/ }),
/* 1672 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
	exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;
	
	var _wrapMapToProps = __webpack_require__(547);
	
	function whenMapStateToPropsIsFunction(mapStateToProps) {
	  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
	}
	
	function whenMapStateToPropsIsMissing(mapStateToProps) {
	  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
	    return {};
	  }) : undefined;
	}
	
	exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

/***/ }),
/* 1673 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.defaultMergeProps = defaultMergeProps;
	exports.wrapMergePropsFunc = wrapMergePropsFunc;
	exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
	exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;
	
	var _verifyPlainObject = __webpack_require__(549);
	
	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function defaultMergeProps(stateProps, dispatchProps, ownProps) {
	  return _extends({}, ownProps, stateProps, dispatchProps);
	}
	
	function wrapMergePropsFunc(mergeProps) {
	  return function initMergePropsProxy(dispatch, _ref) {
	    var displayName = _ref.displayName,
	        pure = _ref.pure,
	        areMergedPropsEqual = _ref.areMergedPropsEqual;
	
	    var hasRunOnce = false;
	    var mergedProps = void 0;
	
	    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
	      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	      if (hasRunOnce) {
	        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
	      } else {
	        hasRunOnce = true;
	        mergedProps = nextMergedProps;
	
	        if (false) (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
	      }
	
	      return mergedProps;
	    };
	  };
	}
	
	function whenMergePropsIsFunction(mergeProps) {
	  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
	}
	
	function whenMergePropsIsOmitted(mergeProps) {
	  return !mergeProps ? function () {
	    return defaultMergeProps;
	  } : undefined;
	}
	
	exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];

/***/ }),
/* 1674 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
	exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
	exports.default = finalPropsSelectorFactory;
	
	var _verifySubselectors = __webpack_require__(1675);
	
	var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
	  return function impureFinalPropsSelector(state, ownProps) {
	    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
	  };
	}
	
	function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
	  var areStatesEqual = _ref.areStatesEqual,
	      areOwnPropsEqual = _ref.areOwnPropsEqual,
	      areStatePropsEqual = _ref.areStatePropsEqual;
	
	  var hasRunAtLeastOnce = false;
	  var state = void 0;
	  var ownProps = void 0;
	  var stateProps = void 0;
	  var dispatchProps = void 0;
	  var mergedProps = void 0;
	
	  function handleFirstCall(firstState, firstOwnProps) {
	    state = firstState;
	    ownProps = firstOwnProps;
	    stateProps = mapStateToProps(state, ownProps);
	    dispatchProps = mapDispatchToProps(dispatch, ownProps);
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    hasRunAtLeastOnce = true;
	    return mergedProps;
	  }
	
	  function handleNewPropsAndNewState() {
	    stateProps = mapStateToProps(state, ownProps);
	
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewProps() {
	    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
	
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewState() {
	    var nextStateProps = mapStateToProps(state, ownProps);
	    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
	    stateProps = nextStateProps;
	
	    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	    return mergedProps;
	  }
	
	  function handleSubsequentCalls(nextState, nextOwnProps) {
	    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
	    var stateChanged = !areStatesEqual(nextState, state);
	    state = nextState;
	    ownProps = nextOwnProps;
	
	    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
	    if (propsChanged) return handleNewProps();
	    if (stateChanged) return handleNewState();
	    return mergedProps;
	  }
	
	  return function pureFinalPropsSelector(nextState, nextOwnProps) {
	    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
	  };
	}
	
	// TODO: Add more comments
	
	// If pure is true, the selector returned by selectorFactory will memoize its results,
	// allowing connectAdvanced's shouldComponentUpdate to return false if final
	// props have not changed. If false, the selector will always return a new
	// object and shouldComponentUpdate will always return true.
	
	function finalPropsSelectorFactory(dispatch, _ref2) {
	  var initMapStateToProps = _ref2.initMapStateToProps,
	      initMapDispatchToProps = _ref2.initMapDispatchToProps,
	      initMergeProps = _ref2.initMergeProps,
	      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);
	
	  var mapStateToProps = initMapStateToProps(dispatch, options);
	  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
	  var mergeProps = initMergeProps(dispatch, options);
	
	  if (false) {
	    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
	  }
	
	  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
	
	  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
	}

/***/ }),
/* 1675 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = verifySubselectors;
	
	var _warning = __webpack_require__(338);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function verify(selector, methodName, displayName) {
	  if (!selector) {
	    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
	  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
	    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
	      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
	    }
	  }
	}
	
	function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
	  verify(mapStateToProps, 'mapStateToProps', displayName);
	  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
	  verify(mergeProps, 'mergeProps', displayName);
	}

/***/ }),
/* 1676 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// encapsulates the subscription logic for connecting a component to the redux store, as
	// well as nesting subscriptions of descendant components, so that we can ensure the
	// ancestor components re-render before descendants
	
	var CLEARED = null;
	var nullListeners = {
	  notify: function notify() {}
	};
	
	function createListenerCollection() {
	  // the current/next pattern is copied from redux's createStore code.
	  // TODO: refactor+expose that code to be reusable here?
	  var current = [];
	  var next = [];
	
	  return {
	    clear: function clear() {
	      next = CLEARED;
	      current = CLEARED;
	    },
	    notify: function notify() {
	      var listeners = current = next;
	      for (var i = 0; i < listeners.length; i++) {
	        listeners[i]();
	      }
	    },
	    get: function get() {
	      return next;
	    },
	    subscribe: function subscribe(listener) {
	      var isSubscribed = true;
	      if (next === current) next = current.slice();
	      next.push(listener);
	
	      return function unsubscribe() {
	        if (!isSubscribed || current === CLEARED) return;
	        isSubscribed = false;
	
	        if (next === current) next = current.slice();
	        next.splice(next.indexOf(listener), 1);
	      };
	    }
	  };
	}
	
	var Subscription = function () {
	  function Subscription(store, parentSub, onStateChange) {
	    _classCallCheck(this, Subscription);
	
	    this.store = store;
	    this.parentSub = parentSub;
	    this.onStateChange = onStateChange;
	    this.unsubscribe = null;
	    this.listeners = nullListeners;
	  }
	
	  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
	    this.trySubscribe();
	    return this.listeners.subscribe(listener);
	  };
	
	  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
	    this.listeners.notify();
	  };
	
	  Subscription.prototype.isSubscribed = function isSubscribed() {
	    return Boolean(this.unsubscribe);
	  };
	
	  Subscription.prototype.trySubscribe = function trySubscribe() {
	    if (!this.unsubscribe) {
	      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);
	
	      this.listeners = createListenerCollection();
	    }
	  };
	
	  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
	    if (this.unsubscribe) {
	      this.unsubscribe();
	      this.unsubscribe = null;
	      this.listeners.clear();
	      this.listeners = nullListeners;
	    }
	  };
	
	  return Subscription;
	}();
	
	exports.default = Subscription;

/***/ }),
/* 1677 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = shallowEqual;
	var hasOwn = Object.prototype.hasOwnProperty;
	
	function is(x, y) {
	  if (x === y) {
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}
	
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) return true;
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) return false;
	
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}

/***/ }),
/* 1678 */,
/* 1679 */,
/* 1680 */,
/* 1681 */,
/* 1682 */,
/* 1683 */,
/* 1684 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _history = __webpack_require__(67);
	
	var _Router = __webpack_require__(339);
	
	var _Router2 = _interopRequireDefault(_Router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for a <Router> that uses HTML5 history.
	 */
	var BrowserRouter = function (_React$Component) {
	  _inherits(BrowserRouter, _React$Component);
	
	  function BrowserRouter() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, BrowserRouter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createBrowserHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  BrowserRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, "<BrowserRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { BrowserRouter as Router }`.");
	  };
	
	  BrowserRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };
	
	  return BrowserRouter;
	}(_react2.default.Component);
	
	BrowserRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  forceRefresh: _propTypes2.default.bool,
	  getUserConfirmation: _propTypes2.default.func,
	  keyLength: _propTypes2.default.number,
	  children: _propTypes2.default.node
	};
	exports.default = BrowserRouter;

/***/ }),
/* 1685 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _history = __webpack_require__(67);
	
	var _Router = __webpack_require__(339);
	
	var _Router2 = _interopRequireDefault(_Router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for a <Router> that uses window.location.hash.
	 */
	var HashRouter = function (_React$Component) {
	  _inherits(HashRouter, _React$Component);
	
	  function HashRouter() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, HashRouter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createHashHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  HashRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, "<HashRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { HashRouter as Router }`.");
	  };
	
	  HashRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };
	
	  return HashRouter;
	}(_react2.default.Component);
	
	HashRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  getUserConfirmation: _propTypes2.default.func,
	  hashType: _propTypes2.default.oneOf(["hashbang", "noslash", "slash"]),
	  children: _propTypes2.default.node
	};
	exports.default = HashRouter;

/***/ }),
/* 1686 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _MemoryRouter = __webpack_require__(1695);
	
	var _MemoryRouter2 = _interopRequireDefault(_MemoryRouter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _MemoryRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 1687 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _Route = __webpack_require__(551);
	
	var _Route2 = _interopRequireDefault(_Route);
	
	var _Link = __webpack_require__(550);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * A <Link> wrapper that knows if it's "active" or not.
	 */
	var NavLink = function NavLink(_ref) {
	  var to = _ref.to,
	      exact = _ref.exact,
	      strict = _ref.strict,
	      location = _ref.location,
	      activeClassName = _ref.activeClassName,
	      className = _ref.className,
	      activeStyle = _ref.activeStyle,
	      style = _ref.style,
	      getIsActive = _ref.isActive,
	      ariaCurrent = _ref["aria-current"],
	      rest = _objectWithoutProperties(_ref, ["to", "exact", "strict", "location", "activeClassName", "className", "activeStyle", "style", "isActive", "aria-current"]);
	
	  var path = (typeof to === "undefined" ? "undefined" : _typeof(to)) === "object" ? to.pathname : to;
	
	  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202
	  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
	
	  return _react2.default.createElement(_Route2.default, {
	    path: escapedPath,
	    exact: exact,
	    strict: strict,
	    location: location,
	    children: function children(_ref2) {
	      var location = _ref2.location,
	          match = _ref2.match;
	
	      var isActive = !!(getIsActive ? getIsActive(match, location) : match);
	
	      return _react2.default.createElement(_Link2.default, _extends({
	        to: to,
	        className: isActive ? [className, activeClassName].filter(function (i) {
	          return i;
	        }).join(" ") : className,
	        style: isActive ? _extends({}, style, activeStyle) : style,
	        "aria-current": isActive && ariaCurrent || null
	      }, rest));
	    }
	  });
	};
	
	NavLink.propTypes = {
	  to: _Link2.default.propTypes.to,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  location: _propTypes2.default.object,
	  activeClassName: _propTypes2.default.string,
	  className: _propTypes2.default.string,
	  activeStyle: _propTypes2.default.object,
	  style: _propTypes2.default.object,
	  isActive: _propTypes2.default.func,
	  "aria-current": _propTypes2.default.oneOf(["page", "step", "location", "date", "time", "true"])
	};
	
	NavLink.defaultProps = {
	  activeClassName: "active",
	  "aria-current": "page"
	};
	
	exports.default = NavLink;

/***/ }),
/* 1688 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Prompt = __webpack_require__(1696);
	
	var _Prompt2 = _interopRequireDefault(_Prompt);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Prompt2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 1689 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Redirect = __webpack_require__(1697);
	
	var _Redirect2 = _interopRequireDefault(_Redirect);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Redirect2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 1690 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _StaticRouter = __webpack_require__(1698);
	
	var _StaticRouter2 = _interopRequireDefault(_StaticRouter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _StaticRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 1691 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Switch = __webpack_require__(1699);
	
	var _Switch2 = _interopRequireDefault(_Switch);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Switch2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 1692 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _generatePath = __webpack_require__(553);
	
	var _generatePath2 = _interopRequireDefault(_generatePath);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _generatePath2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 1693 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _matchPath = __webpack_require__(341);
	
	var _matchPath2 = _interopRequireDefault(_matchPath);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _matchPath2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 1694 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _withRouter = __webpack_require__(1701);
	
	var _withRouter2 = _interopRequireDefault(_withRouter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _withRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 1695 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _history = __webpack_require__(67);
	
	var _Router = __webpack_require__(340);
	
	var _Router2 = _interopRequireDefault(_Router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for a <Router> that stores location in memory.
	 */
	var MemoryRouter = function (_React$Component) {
	  _inherits(MemoryRouter, _React$Component);
	
	  function MemoryRouter() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, MemoryRouter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createMemoryHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  MemoryRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { MemoryRouter as Router }`.");
	  };
	
	  MemoryRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };
	
	  return MemoryRouter;
	}(_react2.default.Component);
	
	MemoryRouter.propTypes = {
	  initialEntries: _propTypes2.default.array,
	  initialIndex: _propTypes2.default.number,
	  getUserConfirmation: _propTypes2.default.func,
	  keyLength: _propTypes2.default.number,
	  children: _propTypes2.default.node
	};
	exports.default = MemoryRouter;

/***/ }),
/* 1696 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _invariant = __webpack_require__(69);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for prompting the user before navigating away
	 * from a screen with a component.
	 */
	var Prompt = function (_React$Component) {
	  _inherits(Prompt, _React$Component);
	
	  function Prompt() {
	    _classCallCheck(this, Prompt);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  Prompt.prototype.enable = function enable(message) {
	    if (this.unblock) this.unblock();
	
	    this.unblock = this.context.router.history.block(message);
	  };
	
	  Prompt.prototype.disable = function disable() {
	    if (this.unblock) {
	      this.unblock();
	      this.unblock = null;
	    }
	  };
	
	  Prompt.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, "You should not use <Prompt> outside a <Router>");
	
	    if (this.props.when) this.enable(this.props.message);
	  };
	
	  Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (nextProps.when) {
	      if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);
	    } else {
	      this.disable();
	    }
	  };
	
	  Prompt.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.disable();
	  };
	
	  Prompt.prototype.render = function render() {
	    return null;
	  };
	
	  return Prompt;
	}(_react2.default.Component);
	
	Prompt.propTypes = {
	  when: _propTypes2.default.bool,
	  message: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired
	};
	Prompt.defaultProps = {
	  when: true
	};
	Prompt.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      block: _propTypes2.default.func.isRequired
	    }).isRequired
	  }).isRequired
	};
	exports.default = Prompt;

/***/ }),
/* 1697 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(69);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _history = __webpack_require__(67);
	
	var _generatePath = __webpack_require__(553);
	
	var _generatePath2 = _interopRequireDefault(_generatePath);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for updating the location programmatically
	 * with a component.
	 */
	var Redirect = function (_React$Component) {
	  _inherits(Redirect, _React$Component);
	
	  function Redirect() {
	    _classCallCheck(this, Redirect);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  Redirect.prototype.isStatic = function isStatic() {
	    return this.context.router && this.context.router.staticContext;
	  };
	
	  Redirect.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, "You should not use <Redirect> outside a <Router>");
	
	    if (this.isStatic()) this.perform();
	  };
	
	  Redirect.prototype.componentDidMount = function componentDidMount() {
	    if (!this.isStatic()) this.perform();
	  };
	
	  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var prevTo = (0, _history.createLocation)(prevProps.to);
	    var nextTo = (0, _history.createLocation)(this.props.to);
	
	    if ((0, _history.locationsAreEqual)(prevTo, nextTo)) {
	      (0, _warning2.default)(false, "You tried to redirect to the same route you're currently on: " + ("\"" + nextTo.pathname + nextTo.search + "\""));
	      return;
	    }
	
	    this.perform();
	  };
	
	  Redirect.prototype.computeTo = function computeTo(_ref) {
	    var computedMatch = _ref.computedMatch,
	        to = _ref.to;
	
	    if (computedMatch) {
	      if (typeof to === "string") {
	        return (0, _generatePath2.default)(to, computedMatch.params);
	      } else {
	        return _extends({}, to, {
	          pathname: (0, _generatePath2.default)(to.pathname, computedMatch.params)
	        });
	      }
	    }
	
	    return to;
	  };
	
	  Redirect.prototype.perform = function perform() {
	    var history = this.context.router.history;
	    var push = this.props.push;
	
	    var to = this.computeTo(this.props);
	
	    if (push) {
	      history.push(to);
	    } else {
	      history.replace(to);
	    }
	  };
	
	  Redirect.prototype.render = function render() {
	    return null;
	  };
	
	  return Redirect;
	}(_react2.default.Component);
	
	Redirect.propTypes = {
	  computedMatch: _propTypes2.default.object, // private, from <Switch>
	  push: _propTypes2.default.bool,
	  from: _propTypes2.default.string,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
	};
	Redirect.defaultProps = {
	  push: false
	};
	Redirect.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      push: _propTypes2.default.func.isRequired,
	      replace: _propTypes2.default.func.isRequired
	    }).isRequired,
	    staticContext: _propTypes2.default.object
	  }).isRequired
	};
	exports.default = Redirect;

/***/ }),
/* 1698 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(69);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _history = __webpack_require__(67);
	
	var _Router = __webpack_require__(340);
	
	var _Router2 = _interopRequireDefault(_Router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var addLeadingSlash = function addLeadingSlash(path) {
	  return path.charAt(0) === "/" ? path : "/" + path;
	};
	
	var addBasename = function addBasename(basename, location) {
	  if (!basename) return location;
	
	  return _extends({}, location, {
	    pathname: addLeadingSlash(basename) + location.pathname
	  });
	};
	
	var stripBasename = function stripBasename(basename, location) {
	  if (!basename) return location;
	
	  var base = addLeadingSlash(basename);
	
	  if (location.pathname.indexOf(base) !== 0) return location;
	
	  return _extends({}, location, {
	    pathname: location.pathname.substr(base.length)
	  });
	};
	
	var createURL = function createURL(location) {
	  return typeof location === "string" ? location : (0, _history.createPath)(location);
	};
	
	var staticHandler = function staticHandler(methodName) {
	  return function () {
	    (0, _invariant2.default)(false, "You cannot %s with <StaticRouter>", methodName);
	  };
	};
	
	var noop = function noop() {};
	
	/**
	 * The public top-level API for a "static" <Router>, so-called because it
	 * can't actually change the current location. Instead, it just records
	 * location changes in a context object. Useful mainly in testing and
	 * server-rendering scenarios.
	 */
	
	var StaticRouter = function (_React$Component) {
	  _inherits(StaticRouter, _React$Component);
	
	  function StaticRouter() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, StaticRouter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {
	      return addLeadingSlash(_this.props.basename + createURL(path));
	    }, _this.handlePush = function (location) {
	      var _this$props = _this.props,
	          basename = _this$props.basename,
	          context = _this$props.context;
	
	      context.action = "PUSH";
	      context.location = addBasename(basename, (0, _history.createLocation)(location));
	      context.url = createURL(context.location);
	    }, _this.handleReplace = function (location) {
	      var _this$props2 = _this.props,
	          basename = _this$props2.basename,
	          context = _this$props2.context;
	
	      context.action = "REPLACE";
	      context.location = addBasename(basename, (0, _history.createLocation)(location));
	      context.url = createURL(context.location);
	    }, _this.handleListen = function () {
	      return noop;
	    }, _this.handleBlock = function () {
	      return noop;
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  StaticRouter.prototype.getChildContext = function getChildContext() {
	    return {
	      router: {
	        staticContext: this.props.context
	      }
	    };
	  };
	
	  StaticRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { StaticRouter as Router }`.");
	  };
	
	  StaticRouter.prototype.render = function render() {
	    var _props = this.props,
	        basename = _props.basename,
	        context = _props.context,
	        location = _props.location,
	        props = _objectWithoutProperties(_props, ["basename", "context", "location"]);
	
	    var history = {
	      createHref: this.createHref,
	      action: "POP",
	      location: stripBasename(basename, (0, _history.createLocation)(location)),
	      push: this.handlePush,
	      replace: this.handleReplace,
	      go: staticHandler("go"),
	      goBack: staticHandler("goBack"),
	      goForward: staticHandler("goForward"),
	      listen: this.handleListen,
	      block: this.handleBlock
	    };
	
	    return _react2.default.createElement(_Router2.default, _extends({}, props, { history: history }));
	  };
	
	  return StaticRouter;
	}(_react2.default.Component);
	
	StaticRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  context: _propTypes2.default.object.isRequired,
	  location: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])
	};
	StaticRouter.defaultProps = {
	  basename: "",
	  location: "/"
	};
	StaticRouter.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = StaticRouter;

/***/ }),
/* 1699 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _warning = __webpack_require__(15);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(69);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _matchPath = __webpack_require__(341);
	
	var _matchPath2 = _interopRequireDefault(_matchPath);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for rendering the first <Route> that matches.
	 */
	var Switch = function (_React$Component) {
	  _inherits(Switch, _React$Component);
	
	  function Switch() {
	    _classCallCheck(this, Switch);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  Switch.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, "You should not use <Switch> outside a <Router>");
	  };
	
	  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');
	
	    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
	  };
	
	  Switch.prototype.render = function render() {
	    var route = this.context.router.route;
	    var children = this.props.children;
	
	    var location = this.props.location || route.location;
	
	    var match = void 0,
	        child = void 0;
	    _react2.default.Children.forEach(children, function (element) {
	      if (match == null && _react2.default.isValidElement(element)) {
	        var _element$props = element.props,
	            pathProp = _element$props.path,
	            exact = _element$props.exact,
	            strict = _element$props.strict,
	            sensitive = _element$props.sensitive,
	            from = _element$props.from;
	
	        var path = pathProp || from;
	
	        child = element;
	        match = (0, _matchPath2.default)(location.pathname, { path: path, exact: exact, strict: strict, sensitive: sensitive }, route.match);
	      }
	    });
	
	    return match ? _react2.default.cloneElement(child, { location: location, computedMatch: match }) : null;
	  };
	
	  return Switch;
	}(_react2.default.Component);
	
	Switch.contextTypes = {
	  router: _propTypes2.default.shape({
	    route: _propTypes2.default.object.isRequired
	  }).isRequired
	};
	Switch.propTypes = {
	  children: _propTypes2.default.node,
	  location: _propTypes2.default.object
	};
	exports.default = Switch;

/***/ }),
/* 1700 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    getDerivedStateFromProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};
	
	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    callee: true,
	    arguments: true,
	    arity: true
	};
	
	var defineProperty = Object.defineProperty;
	var getOwnPropertyNames = Object.getOwnPropertyNames;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
	var getPrototypeOf = Object.getPrototypeOf;
	var objectPrototype = getPrototypeOf && getPrototypeOf(Object);
	
	function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	
	        if (objectPrototype) {
	            var inheritedComponent = getPrototypeOf(sourceComponent);
	            if (inheritedComponent && inheritedComponent !== objectPrototype) {
	                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
	            }
	        }
	
	        var keys = getOwnPropertyNames(sourceComponent);
	
	        if (getOwnPropertySymbols) {
	            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
	        }
	
	        for (var i = 0; i < keys.length; ++i) {
	            var key = keys[i];
	            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
	                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
	                try { // Avoid failures from read-only properties
	                    defineProperty(targetComponent, key, descriptor);
	                } catch (e) {}
	            }
	        }
	
	        return targetComponent;
	    }
	
	    return targetComponent;
	}
	
	module.exports = hoistNonReactStatics;


/***/ }),
/* 1701 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _hoistNonReactStatics = __webpack_require__(1700);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _Route = __webpack_require__(552);
	
	var _Route2 = _interopRequireDefault(_Route);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * A public higher-order component to access the imperative API
	 */
	var withRouter = function withRouter(Component) {
	  var C = function C(props) {
	    var wrappedComponentRef = props.wrappedComponentRef,
	        remainingProps = _objectWithoutProperties(props, ["wrappedComponentRef"]);
	
	    return _react2.default.createElement(_Route2.default, {
	      children: function children(routeComponentProps) {
	        return _react2.default.createElement(Component, _extends({}, remainingProps, routeComponentProps, {
	          ref: wrappedComponentRef
	        }));
	      }
	    });
	  };
	
	  C.displayName = "withRouter(" + (Component.displayName || Component.name) + ")";
	  C.WrappedComponent = Component;
	  C.propTypes = {
	    wrappedComponentRef: _propTypes2.default.func
	  };
	
	  return (0, _hoistNonReactStatics2.default)(C, Component);
	};
	
	exports.default = withRouter;

/***/ }),
/* 1702 */,
/* 1703 */,
/* 1704 */,
/* 1705 */,
/* 1706 */,
/* 1707 */,
/* 1708 */,
/* 1709 */,
/* 1710 */,
/* 1711 */,
/* 1712 */,
/* 1713 */,
/* 1714 */,
/* 1715 */,
/* 1716 */,
/* 1717 */,
/* 1718 */,
/* 1719 */,
/* 1720 */,
/* 1721 */,
/* 1722 */,
/* 1723 */,
/* 1724 */,
/* 1725 */,
/* 1726 */,
/* 1727 */,
/* 1728 */,
/* 1729 */,
/* 1730 */,
/* 1731 */,
/* 1732 */,
/* 1733 */,
/* 1734 */,
/* 1735 */,
/* 1736 */,
/* 1737 */,
/* 1738 */,
/* 1739 */,
/* 1740 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	var shallowEqual = _interopDefault(__webpack_require__(1763));
	
	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	}
	
	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  subClass.__proto__ = superClass;
	}
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	function withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {
	  if (typeof reducePropsToState !== 'function') {
	    throw new Error('Expected reducePropsToState to be a function.');
	  }
	
	  if (typeof handleStateChangeOnClient !== 'function') {
	    throw new Error('Expected handleStateChangeOnClient to be a function.');
	  }
	
	  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {
	    throw new Error('Expected mapStateOnServer to either be undefined or a function.');
	  }
	
	  function getDisplayName(WrappedComponent) {
	    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	  }
	
	  return function wrap(WrappedComponent) {
	    if (typeof WrappedComponent !== 'function') {
	      throw new Error('Expected WrappedComponent to be a React component.');
	    }
	
	    var mountedInstances = [];
	    var state;
	
	    function emitChange() {
	      state = reducePropsToState(mountedInstances.map(function (instance) {
	        return instance.props;
	      }));
	
	      if (SideEffect.canUseDOM) {
	        handleStateChangeOnClient(state);
	      } else if (mapStateOnServer) {
	        state = mapStateOnServer(state);
	      }
	    }
	
	    var SideEffect =
	    /*#__PURE__*/
	    function (_Component) {
	      _inheritsLoose(SideEffect, _Component);
	
	      function SideEffect() {
	        return _Component.apply(this, arguments) || this;
	      }
	
	      // Try to use displayName of wrapped component
	      // Expose canUseDOM so tests can monkeypatch it
	      SideEffect.peek = function peek() {
	        return state;
	      };
	
	      SideEffect.rewind = function rewind() {
	        if (SideEffect.canUseDOM) {
	          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');
	        }
	
	        var recordedState = state;
	        state = undefined;
	        mountedInstances = [];
	        return recordedState;
	      };
	
	      var _proto = SideEffect.prototype;
	
	      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	        return !shallowEqual(nextProps, this.props);
	      };
	
	      _proto.componentWillMount = function componentWillMount() {
	        mountedInstances.push(this);
	        emitChange();
	      };
	
	      _proto.componentDidUpdate = function componentDidUpdate() {
	        emitChange();
	      };
	
	      _proto.componentWillUnmount = function componentWillUnmount() {
	        var index = mountedInstances.indexOf(this);
	        mountedInstances.splice(index, 1);
	        emitChange();
	      };
	
	      _proto.render = function render() {
	        return React__default.createElement(WrappedComponent, this.props);
	      };
	
	      return SideEffect;
	    }(React.Component);
	
	    _defineProperty(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");
	
	    _defineProperty(SideEffect, "canUseDOM", canUseDOM);
	
	    return SideEffect;
	  };
	}
	
	module.exports = withSideEffect;


/***/ }),
/* 1741 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _react = _interopRequireDefault(__webpack_require__(2));
	
	var _reactLifecyclesCompat = __webpack_require__(336);
	
	var _ChildMapping = __webpack_require__(1742);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
	
	function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
	
	function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }
	
	function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
	
	var values = Object.values || function (obj) {
	  return Object.keys(obj).map(function (k) {
	    return obj[k];
	  });
	};
	
	var defaultProps = {
	  component: 'div',
	  childFactory: function childFactory(child) {
	    return child;
	  }
	  /**
	   * The `<TransitionGroup>` component manages a set of transition components
	   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
	   * components, `<TransitionGroup>` is a state machine for managing the mounting
	   * and unmounting of components over time.
	   *
	   * Consider the example below. As items are removed or added to the TodoList the
	   * `in` prop is toggled automatically by the `<TransitionGroup>`.
	   *
	   * Note that `<TransitionGroup>`  does not define any animation behavior!
	   * Exactly _how_ a list item animates is up to the individual transition
	   * component. This means you can mix and match animations across different list
	   * items.
	   */
	
	};
	
	var TransitionGroup =
	/*#__PURE__*/
	function (_React$Component) {
	  _inheritsLoose(TransitionGroup, _React$Component);
	
	  function TransitionGroup(props, context) {
	    var _this;
	
	    _this = _React$Component.call(this, props, context) || this;
	
	    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear
	
	
	    _this.state = {
	      handleExited: handleExited,
	      firstRender: true
	    };
	    return _this;
	  }
	
	  var _proto = TransitionGroup.prototype;
	
	  _proto.getChildContext = function getChildContext() {
	    return {
	      transitionGroup: {
	        isMounting: !this.appeared
	      }
	    };
	  };
	
	  _proto.componentDidMount = function componentDidMount() {
	    this.appeared = true;
	    this.mounted = true;
	  };
	
	  _proto.componentWillUnmount = function componentWillUnmount() {
	    this.mounted = false;
	  };
	
	  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
	    var prevChildMapping = _ref.children,
	        handleExited = _ref.handleExited,
	        firstRender = _ref.firstRender;
	    return {
	      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
	      firstRender: false
	    };
	  };
	
	  _proto.handleExited = function handleExited(child, node) {
	    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
	    if (child.key in currentChildMapping) return;
	
	    if (child.props.onExited) {
	      child.props.onExited(node);
	    }
	
	    if (this.mounted) {
	      this.setState(function (state) {
	        var children = _extends({}, state.children);
	
	        delete children[child.key];
	        return {
	          children: children
	        };
	      });
	    }
	  };
	
	  _proto.render = function render() {
	    var _this$props = this.props,
	        Component = _this$props.component,
	        childFactory = _this$props.childFactory,
	        props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
	
	    var children = values(this.state.children).map(childFactory);
	    delete props.appear;
	    delete props.enter;
	    delete props.exit;
	
	    if (Component === null) {
	      return children;
	    }
	
	    return _react.default.createElement(Component, props, children);
	  };
	
	  return TransitionGroup;
	}(_react.default.Component);
	
	TransitionGroup.childContextTypes = {
	  transitionGroup: _propTypes.default.object.isRequired
	};
	TransitionGroup.propTypes =  false ? {
	  /**
	   * `<TransitionGroup>` renders a `<div>` by default. You can change this
	   * behavior by providing a `component` prop.
	   * If you use React v16+ and would like to avoid a wrapping `<div>` element
	   * you can pass in `component={null}`. This is useful if the wrapping div
	   * borks your css styles.
	   */
	  component: _propTypes.default.any,
	
	  /**
	   * A set of `<Transition>` components, that are toggled `in` and out as they
	   * leave. the `<TransitionGroup>` will inject specific transition props, so
	   * remember to spread them through if you are wrapping the `<Transition>` as
	   * with our `<Fade>` example.
	   *
	   * While this component is meant for multiple `Transition` or `CSSTransition`
	   * children, sometimes you may want to have a single transition child with
	   * content that you want to be transitioned out and in when you change it
	   * (e.g. routes, images etc.) In that case you can change the `key` prop of
	   * the transition child as you change its content, this will cause
	   * `TransitionGroup` to transition the child out and back in.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * A convenience prop that enables or disables appear animations
	   * for all children. Note that specifying this will override any defaults set
	   * on individual children Transitions.
	   */
	  appear: _propTypes.default.bool,
	
	  /**
	   * A convenience prop that enables or disables enter animations
	   * for all children. Note that specifying this will override any defaults set
	   * on individual children Transitions.
	   */
	  enter: _propTypes.default.bool,
	
	  /**
	   * A convenience prop that enables or disables exit animations
	   * for all children. Note that specifying this will override any defaults set
	   * on individual children Transitions.
	   */
	  exit: _propTypes.default.bool,
	
	  /**
	   * You may need to apply reactive updates to a child as it is exiting.
	   * This is generally done by using `cloneElement` however in the case of an exiting
	   * child the element has already been removed and not accessible to the consumer.
	   *
	   * If you do need to update a child as it leaves you can provide a `childFactory`
	   * to wrap every child, even the ones that are leaving.
	   *
	   * @type Function(child: ReactElement) -> ReactElement
	   */
	  childFactory: _propTypes.default.func
	} : {};
	TransitionGroup.defaultProps = defaultProps;
	
	var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);
	
	exports.default = _default;
	module.exports = exports["default"];

/***/ }),
/* 1742 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.getChildMapping = getChildMapping;
	exports.mergeChildMappings = mergeChildMappings;
	exports.getInitialChildMapping = getInitialChildMapping;
	exports.getNextChildMapping = getNextChildMapping;
	
	var _react = __webpack_require__(2);
	
	/**
	 * Given `this.props.children`, return an object mapping key to child.
	 *
	 * @param {*} children `this.props.children`
	 * @return {object} Mapping of key to child
	 */
	function getChildMapping(children, mapFn) {
	  var mapper = function mapper(child) {
	    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
	  };
	
	  var result = Object.create(null);
	  if (children) _react.Children.map(children, function (c) {
	    return c;
	  }).forEach(function (child) {
	    // run the map function here instead so that the key is the computed one
	    result[child.key] = mapper(child);
	  });
	  return result;
	}
	/**
	 * When you're adding or removing children some may be added or removed in the
	 * same render pass. We want to show *both* since we want to simultaneously
	 * animate elements in and out. This function takes a previous set of keys
	 * and a new set of keys and merges them with its best guess of the correct
	 * ordering. In the future we may expose some of the utilities in
	 * ReactMultiChild to make this easy, but for now React itself does not
	 * directly have this concept of the union of prevChildren and nextChildren
	 * so we implement it here.
	 *
	 * @param {object} prev prev children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @param {object} next next children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @return {object} a key set that contains all keys in `prev` and all keys
	 * in `next` in a reasonable order.
	 */
	
	
	function mergeChildMappings(prev, next) {
	  prev = prev || {};
	  next = next || {};
	
	  function getValueForKey(key) {
	    return key in next ? next[key] : prev[key];
	  } // For each key of `next`, the list of keys to insert before that key in
	  // the combined list
	
	
	  var nextKeysPending = Object.create(null);
	  var pendingKeys = [];
	
	  for (var prevKey in prev) {
	    if (prevKey in next) {
	      if (pendingKeys.length) {
	        nextKeysPending[prevKey] = pendingKeys;
	        pendingKeys = [];
	      }
	    } else {
	      pendingKeys.push(prevKey);
	    }
	  }
	
	  var i;
	  var childMapping = {};
	
	  for (var nextKey in next) {
	    if (nextKeysPending[nextKey]) {
	      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
	        var pendingNextKey = nextKeysPending[nextKey][i];
	        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
	      }
	    }
	
	    childMapping[nextKey] = getValueForKey(nextKey);
	  } // Finally, add the keys which didn't appear before any key in `next`
	
	
	  for (i = 0; i < pendingKeys.length; i++) {
	    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
	  }
	
	  return childMapping;
	}
	
	function getProp(child, prop, props) {
	  return props[prop] != null ? props[prop] : child.props[prop];
	}
	
	function getInitialChildMapping(props, onExited) {
	  return getChildMapping(props.children, function (child) {
	    return (0, _react.cloneElement)(child, {
	      onExited: onExited.bind(null, child),
	      in: true,
	      appear: getProp(child, 'appear', props),
	      enter: getProp(child, 'enter', props),
	      exit: getProp(child, 'exit', props)
	    });
	  });
	}
	
	function getNextChildMapping(nextProps, prevChildMapping, onExited) {
	  var nextChildMapping = getChildMapping(nextProps.children);
	  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
	  Object.keys(children).forEach(function (key) {
	    var child = children[key];
	    if (!(0, _react.isValidElement)(child)) return;
	    var hasPrev = key in prevChildMapping;
	    var hasNext = key in nextChildMapping;
	    var prevChild = prevChildMapping[key];
	    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)
	
	    if (hasNext && (!hasPrev || isLeaving)) {
	      // console.log('entering', key)
	      children[key] = (0, _react.cloneElement)(child, {
	        onExited: onExited.bind(null, child),
	        in: true,
	        exit: getProp(child, 'exit', nextProps),
	        enter: getProp(child, 'enter', nextProps)
	      });
	    } else if (!hasNext && hasPrev && !isLeaving) {
	      // item is old (exiting)
	      // console.log('leaving', key)
	      children[key] = (0, _react.cloneElement)(child, {
	        in: false
	      });
	    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
	      // item hasn't changed transition states
	      // copy over the last transition props;
	      // console.log('unchanged', key)
	      children[key] = (0, _react.cloneElement)(child, {
	        onExited: onExited.bind(null, child),
	        in: prevChild.props.in,
	        exit: getProp(child, 'exit', nextProps),
	        enter: getProp(child, 'enter', nextProps)
	      });
	    }
	  });
	  return children;
	}

/***/ }),
/* 1743 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.classNamesShape = exports.timeoutsShape = void 0;
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var timeoutsShape =  false ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	  enter: _propTypes.default.number,
	  exit: _propTypes.default.number,
	  appear: _propTypes.default.number
	}).isRequired]) : null;
	exports.timeoutsShape = timeoutsShape;
	var classNamesShape =  false ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
	  enter: _propTypes.default.string,
	  exit: _propTypes.default.string,
	  active: _propTypes.default.string
	}), _propTypes.default.shape({
	  enter: _propTypes.default.string,
	  enterDone: _propTypes.default.string,
	  enterActive: _propTypes.default.string,
	  exit: _propTypes.default.string,
	  exitDone: _propTypes.default.string,
	  exitActive: _propTypes.default.string
	})]) : null;
	exports.classNamesShape = classNamesShape;

/***/ }),
/* 1744 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, setImmediate) {/**
	 *  Copyright (c) 2013, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 */
	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.rebound = factory());
	}(this, (function () { 'use strict';
	
	var _onFrame = void 0;
	if (typeof window !== 'undefined') {
	  _onFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;
	}
	
	if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {
	  _onFrame = setImmediate;
	}
	
	_onFrame = _onFrame || function (callback) {
	  window.setTimeout(callback, 1000 / 60);
	};
	
	var _onFrame$1 = _onFrame;
	
	/* eslint-disable flowtype/no-weak-types */
	
	var concat = Array.prototype.concat;
	var slice = Array.prototype.slice;
	
	// Bind a function to a context object.
	function bind(func, context) {
	  for (var _len = arguments.length, outerArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    outerArgs[_key - 2] = arguments[_key];
	  }
	
	  return function () {
	    for (var _len2 = arguments.length, innerArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      innerArgs[_key2] = arguments[_key2];
	    }
	
	    func.apply(context, concat.call(outerArgs, slice.call(innerArgs)));
	  };
	}
	
	// Add all the properties in the source to the target.
	function extend(target, source) {
	  for (var key in source) {
	    if (source.hasOwnProperty(key)) {
	      target[key] = source[key];
	    }
	  }
	}
	
	// Cross browser/node timer functions.
	function onFrame(func) {
	  return _onFrame$1(func);
	}
	
	// Lop off the first occurence of the reference in the Array.
	function removeFirst(array, item) {
	  var idx = array.indexOf(item);
	  idx !== -1 && array.splice(idx, 1);
	}
	
	var colorCache = {};
	/**
	 * Converts a hex-formatted color string to its rgb-formatted equivalent. Handy
	 * when performing color tweening animations
	 * @public
	 * @param colorString A hex-formatted color string
	 * @return An rgb-formatted color string
	 */
	function hexToRGB(colorString) {
	  if (colorCache[colorString]) {
	    return colorCache[colorString];
	  }
	  var normalizedColor = colorString.replace('#', '');
	  if (normalizedColor.length === 3) {
	    normalizedColor = normalizedColor[0] + normalizedColor[0] + normalizedColor[1] + normalizedColor[1] + normalizedColor[2] + normalizedColor[2];
	  }
	  var parts = normalizedColor.match(/.{2}/g);
	  if (!parts || parts.length < 3) {
	    throw new Error('Expected a color string of format #rrggbb');
	  }
	
	  var ret = {
	    r: parseInt(parts[0], 16),
	    g: parseInt(parts[1], 16),
	    b: parseInt(parts[2], 16)
	  };
	
	  colorCache[colorString] = ret;
	  return ret;
	}
	
	/**
	 * Converts a rgb-formatted color string to its hex-formatted equivalent. Handy
	 * when performing color tweening animations
	 * @public
	 * @param colorString An rgb-formatted color string
	 * @return A hex-formatted color string
	 */
	function rgbToHex(rNum, gNum, bNum) {
	  var r = rNum.toString(16);
	  var g = gNum.toString(16);
	  var b = bNum.toString(16);
	  r = r.length < 2 ? '0' + r : r;
	  g = g.length < 2 ? '0' + g : g;
	  b = b.length < 2 ? '0' + b : b;
	  return '#' + r + g + b;
	}
	
	var util = Object.freeze({
		bind: bind,
		extend: extend,
		onFrame: onFrame,
		removeFirst: removeFirst,
		hexToRGB: hexToRGB,
		rgbToHex: rgbToHex
	});
	
	/**
	 * This helper function does a linear interpolation of a value from
	 * one range to another. This can be very useful for converting the
	 * motion of a Spring to a range of UI property values. For example a
	 * spring moving from position 0 to 1 could be interpolated to move a
	 * view from pixel 300 to 350 and scale it from 0.5 to 1. The current
	 * position of the `Spring` just needs to be run through this method
	 * taking its input range in the _from_ parameters with the property
	 * animation range in the _to_ parameters.
	 * @public
	 */
	function mapValueInRange(value, fromLow, fromHigh, toLow, toHigh) {
	  var fromRangeSize = fromHigh - fromLow;
	  var toRangeSize = toHigh - toLow;
	  var valueScale = (value - fromLow) / fromRangeSize;
	  return toLow + valueScale * toRangeSize;
	}
	
	/**
	 * Interpolate two hex colors in a 0 - 1 range or optionally provide a
	 * custom range with fromLow,fromHight. The output will be in hex by default
	 * unless asRGB is true in which case it will be returned as an rgb string.
	 *
	 * @public
	 * @param asRGB Whether to return an rgb-style string
	 * @return A string in hex color format unless asRGB is true, in which case a string in rgb format
	 */
	function interpolateColor(val, startColorStr, endColorStr) {
	  var fromLow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
	  var fromHigh = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
	  var asRGB = arguments[5];
	
	  var startColor = hexToRGB(startColorStr);
	  var endColor = hexToRGB(endColorStr);
	  var r = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));
	  var g = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));
	  var b = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));
	  if (asRGB) {
	    return 'rgb(' + r + ',' + g + ',' + b + ')';
	  } else {
	    return rgbToHex(r, g, b);
	  }
	}
	
	function degreesToRadians(deg) {
	  return deg * Math.PI / 180;
	}
	
	function radiansToDegrees(rad) {
	  return rad * 180 / Math.PI;
	}
	
	var MathUtil = Object.freeze({
		mapValueInRange: mapValueInRange,
		interpolateColor: interpolateColor,
		degreesToRadians: degreesToRadians,
		radiansToDegrees: radiansToDegrees
	});
	
	// Math for converting from
	// [Origami](http://facebook.github.io/origami/) to
	// [Rebound](http://facebook.github.io/rebound).
	// You mostly don't need to worry about this, just use
	// SpringConfig.fromOrigamiTensionAndFriction(v, v);
	
	function tensionFromOrigamiValue(oValue) {
	  return (oValue - 30.0) * 3.62 + 194.0;
	}
	
	function origamiValueFromTension(tension) {
	  return (tension - 194.0) / 3.62 + 30.0;
	}
	
	function frictionFromOrigamiValue(oValue) {
	  return (oValue - 8.0) * 3.0 + 25.0;
	}
	
	function origamiFromFriction(friction) {
	  return (friction - 25.0) / 3.0 + 8.0;
	}
	
	var OrigamiValueConverter = Object.freeze({
		tensionFromOrigamiValue: tensionFromOrigamiValue,
		origamiValueFromTension: origamiValueFromTension,
		frictionFromOrigamiValue: frictionFromOrigamiValue,
		origamiFromFriction: origamiFromFriction
	});
	
	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};
	
	
	
	
	
	
	
	
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};
	
	/**
	 * Plays each frame of the SpringSystem on animation
	 * timing loop. This is the default type of looper for a new spring system
	 * as it is the most common when developing UI.
	 * @public
	 */
	/**
	 *  Copyright (c) 2013, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var AnimationLooper = function () {
	  function AnimationLooper() {
	    classCallCheck(this, AnimationLooper);
	    this.springSystem = null;
	  }
	
	  AnimationLooper.prototype.run = function run() {
	    var springSystem = getSpringSystem.call(this);
	
	    onFrame(function () {
	      springSystem.loop(Date.now());
	    });
	  };
	
	  return AnimationLooper;
	}();
	
	/**
	 * Resolves the SpringSystem to a resting state in a
	 * tight and blocking loop. This is useful for synchronously generating
	 * pre-recorded animations that can then be played on a timing loop later.
	 * Sometimes this lead to better performance to pre-record a single spring
	 * curve and use it to drive many animations; however, it can make dynamic
	 * response to user input a bit trickier to implement.
	 * @public
	 */
	var SimulationLooper = function () {
	  function SimulationLooper(timestep) {
	    classCallCheck(this, SimulationLooper);
	    this.springSystem = null;
	    this.time = 0;
	    this.running = false;
	
	    this.timestep = timestep || 16.667;
	  }
	
	  SimulationLooper.prototype.run = function run() {
	    var springSystem = getSpringSystem.call(this);
	
	    if (this.running) {
	      return;
	    }
	    this.running = true;
	    while (!springSystem.getIsIdle()) {
	      springSystem.loop(this.time += this.timestep);
	    }
	    this.running = false;
	  };
	
	  return SimulationLooper;
	}();
	
	/**
	 * Resolves the SpringSystem one step at a
	 * time controlled by an outside loop. This is useful for testing and
	 * verifying the behavior of a SpringSystem or if you want to control your own
	 * timing loop for some reason e.g. slowing down or speeding up the
	 * simulation.
	 * @public
	 */
	var SteppingSimulationLooper = function () {
	  function SteppingSimulationLooper() {
	    classCallCheck(this, SteppingSimulationLooper);
	    this.springSystem = null;
	    this.time = 0;
	    this.running = false;
	  }
	
	  SteppingSimulationLooper.prototype.run = function run() {}
	  // this.run is NOOP'd here to allow control from the outside using
	  // this.step.
	
	
	  // Perform one step toward resolving the SpringSystem.
	  ;
	
	  SteppingSimulationLooper.prototype.step = function step(timestep) {
	    var springSystem = getSpringSystem.call(this);
	    springSystem.loop(this.time += timestep);
	  };
	
	  return SteppingSimulationLooper;
	}();
	
	function getSpringSystem() {
	  if (this.springSystem == null) {
	    throw new Error('cannot run looper without a springSystem');
	  }
	  return this.springSystem;
	}
	
	
	
	var Loopers = Object.freeze({
		AnimationLooper: AnimationLooper,
		SimulationLooper: SimulationLooper,
		SteppingSimulationLooper: SteppingSimulationLooper
	});
	
	/**
	 * Provides math for converting from Origami PopAnimation
	 * config values to regular Origami tension and friction values. If you are
	 * trying to replicate prototypes made with PopAnimation patches in Origami,
	 * then you should create your springs with
	 * SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math
	 * internally to create a spring to match the provided PopAnimation
	 * configuration from Origami.
	 */
	var BouncyConversion = function () {
	  function BouncyConversion(bounciness, speed) {
	    classCallCheck(this, BouncyConversion);
	
	    this.bounciness = bounciness;
	    this.speed = speed;
	
	    var b = this.normalize(bounciness / 1.7, 0, 20.0);
	    b = this.projectNormal(b, 0.0, 0.8);
	    var s = this.normalize(speed / 1.7, 0, 20.0);
	
	    this.bouncyTension = this.projectNormal(s, 0.5, 200);
	    this.bouncyFriction = this.quadraticOutInterpolation(b, this.b3Nobounce(this.bouncyTension), 0.01);
	  }
	
	  BouncyConversion.prototype.normalize = function normalize(value, startValue, endValue) {
	    return (value - startValue) / (endValue - startValue);
	  };
	
	  BouncyConversion.prototype.projectNormal = function projectNormal(n, start, end) {
	    return start + n * (end - start);
	  };
	
	  BouncyConversion.prototype.linearInterpolation = function linearInterpolation(t, start, end) {
	    return t * end + (1.0 - t) * start;
	  };
	
	  BouncyConversion.prototype.quadraticOutInterpolation = function quadraticOutInterpolation(t, start, end) {
	    return this.linearInterpolation(2 * t - t * t, start, end);
	  };
	
	  BouncyConversion.prototype.b3Friction1 = function b3Friction1(x) {
	    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
	  };
	
	  BouncyConversion.prototype.b3Friction2 = function b3Friction2(x) {
	    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;
	  };
	
	  BouncyConversion.prototype.b3Friction3 = function b3Friction3(x) {
	    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
	  };
	
	  BouncyConversion.prototype.b3Nobounce = function b3Nobounce(tension) {
	    var friction = 0;
	    if (tension <= 18) {
	      friction = this.b3Friction1(tension);
	    } else if (tension > 18 && tension <= 44) {
	      friction = this.b3Friction2(tension);
	    } else {
	      friction = this.b3Friction3(tension);
	    }
	    return friction;
	  };
	
	  return BouncyConversion;
	}();
	
	/**
	 * Maintains a set of tension and friction constants
	 * for a Spring. You can use fromOrigamiTensionAndFriction to convert
	 * values from the [Origami](http://facebook.github.io/origami/)
	 * design tool directly to Rebound spring constants.
	 * @public
	 */
	
	var SpringConfig = function () {
	
	  /**
	   * Convert an origami Spring tension and friction to Rebound spring
	   * constants. If you are prototyping a design with Origami, this
	   * makes it easy to make your springs behave exactly the same in
	   * Rebound.
	   * @public
	   */
	  SpringConfig.fromOrigamiTensionAndFriction = function fromOrigamiTensionAndFriction(tension, friction) {
	    return new SpringConfig(tensionFromOrigamiValue(tension), frictionFromOrigamiValue(friction));
	  };
	
	  /**
	   * Convert an origami PopAnimation Spring bounciness and speed to Rebound
	   * spring constants. If you are using PopAnimation patches in Origami, this
	   * utility will provide springs that match your prototype.
	   * @public
	   */
	
	
	  SpringConfig.fromBouncinessAndSpeed = function fromBouncinessAndSpeed(bounciness, speed) {
	    var bouncyConversion = new BouncyConversion(bounciness, speed);
	    return SpringConfig.fromOrigamiTensionAndFriction(bouncyConversion.bouncyTension, bouncyConversion.bouncyFriction);
	  };
	
	  /**
	   * Create a SpringConfig with no tension or a coasting spring with some
	   * amount of Friction so that it does not coast infininitely.
	   * @public
	   */
	
	
	  SpringConfig.coastingConfigWithOrigamiFriction = function coastingConfigWithOrigamiFriction(friction) {
	    return new SpringConfig(0, frictionFromOrigamiValue(friction));
	  };
	
	  function SpringConfig(tension, friction) {
	    classCallCheck(this, SpringConfig);
	
	    this.tension = tension;
	    this.friction = friction;
	  }
	
	  return SpringConfig;
	}();
	
	SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = SpringConfig.fromOrigamiTensionAndFriction(40, 7);
	
	/**
	 * Consists of a position and velocity. A Spring uses
	 * this internally to keep track of its current and prior position and
	 * velocity values.
	 */
	var PhysicsState = function PhysicsState() {
	  classCallCheck(this, PhysicsState);
	  this.position = 0;
	  this.velocity = 0;
	};
	
	/**
	 * Provides a model of a classical spring acting to
	 * resolve a body to equilibrium. Springs have configurable
	 * tension which is a force multipler on the displacement of the
	 * spring from its rest point or `endValue` as defined by [Hooke's
	 * law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have
	 * configurable friction, which ensures that they do not oscillate
	 * infinitely. When a Spring is displaced by updating it's resting
	 * or `currentValue`, the SpringSystems that contain that Spring
	 * will automatically start looping to solve for equilibrium. As each
	 * timestep passes, `SpringListener` objects attached to the Spring
	 * will be notified of the updates providing a way to drive an
	 * animation off of the spring's resolution curve.
	 * @public
	 */
	
	var Spring = function () {
	  function Spring(springSystem) {
	    classCallCheck(this, Spring);
	    this.listeners = [];
	    this._startValue = 0;
	    this._currentState = new PhysicsState();
	    this._displacementFromRestThreshold = 0.001;
	    this._endValue = 0;
	    this._overshootClampingEnabled = false;
	    this._previousState = new PhysicsState();
	    this._restSpeedThreshold = 0.001;
	    this._tempState = new PhysicsState();
	    this._timeAccumulator = 0;
	    this._wasAtRest = true;
	
	    this._id = 's' + Spring._ID++;
	    this._springSystem = springSystem;
	  }
	
	  /**
	   * Remove a Spring from simulation and clear its listeners.
	   * @public
	   */
	
	
	  Spring.prototype.destroy = function destroy() {
	    this.listeners = [];
	    this._springSystem.deregisterSpring(this);
	  };
	
	  /**
	   * Get the id of the spring, which can be used to retrieve it from
	   * the SpringSystems it participates in later.
	   * @public
	   */
	
	
	  Spring.prototype.getId = function getId() {
	    return this._id;
	  };
	
	  /**
	   * Set the configuration values for this Spring. A SpringConfig
	   * contains the tension and friction values used to solve for the
	   * equilibrium of the Spring in the physics loop.
	   * @public
	   */
	
	
	  Spring.prototype.setSpringConfig = function setSpringConfig(springConfig) {
	    this._springConfig = springConfig;
	    return this;
	  };
	
	  /**
	   * Retrieve the SpringConfig used by this Spring.
	   * @public
	   */
	
	
	  Spring.prototype.getSpringConfig = function getSpringConfig() {
	    return this._springConfig;
	  };
	
	  /**
	   * Set the current position of this Spring. Listeners will be updated
	   * with this value immediately. If the rest or `endValue` is not
	   * updated to match this value, then the spring will be dispalced and
	   * the SpringSystem will start to loop to restore the spring to the
	   * `endValue`.
	   *
	   * A common pattern is to move a Spring around without animation by
	   * calling.
	   *
	   * ```
	   * spring.setCurrentValue(n).setAtRest();
	   * ```
	   *
	   * This moves the Spring to a new position `n`, sets the endValue
	   * to `n`, and removes any velocity from the `Spring`. By doing
	   * this you can allow the `SpringListener` to manage the position
	   * of UI elements attached to the spring even when moving without
	   * animation. For example, when dragging an element you can
	   * update the position of an attached view through a spring
	   * by calling `spring.setCurrentValue(x)`. When
	   * the gesture ends you can update the Springs
	   * velocity and endValue
	   * `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`
	   * to cause it to naturally animate the UI element to the resting
	   * position taking into account existing velocity. The codepaths for
	   * synchronous movement and spring driven animation can
	   * be unified using this technique.
	   * @public
	   */
	
	
	  Spring.prototype.setCurrentValue = function setCurrentValue(currentValue, skipSetAtRest) {
	    this._startValue = currentValue;
	    this._currentState.position = currentValue;
	    if (!skipSetAtRest) {
	      this.setAtRest();
	    }
	    this.notifyPositionUpdated(false, false);
	    return this;
	  };
	
	  /**
	   * Get the position that the most recent animation started at. This
	   * can be useful for determining the number off oscillations that
	   * have occurred.
	   * @public
	   */
	
	
	  Spring.prototype.getStartValue = function getStartValue() {
	    return this._startValue;
	  };
	
	  /**
	   * Retrieve the current value of the Spring.
	   * @public
	   */
	
	
	  Spring.prototype.getCurrentValue = function getCurrentValue() {
	    return this._currentState.position;
	  };
	
	  /**
	   * Get the absolute distance of the Spring from its resting endValue
	   * position.
	   * @public
	   */
	
	
	  Spring.prototype.getCurrentDisplacementDistance = function getCurrentDisplacementDistance() {
	    return this.getDisplacementDistanceForState(this._currentState);
	  };
	
	  /**
	   * Get the absolute distance of the Spring from a given state value
	   */
	
	
	  Spring.prototype.getDisplacementDistanceForState = function getDisplacementDistanceForState(state) {
	    return Math.abs(this._endValue - state.position);
	  };
	
	  /**
	   * Set the endValue or resting position of the spring. If this
	   * value is different than the current value, the SpringSystem will
	   * be notified and will begin running its solver loop to resolve
	   * the Spring to equilibrium. Any listeners that are registered
	   * for onSpringEndStateChange will also be notified of this update
	   * immediately.
	   * @public
	   */
	
	
	  Spring.prototype.setEndValue = function setEndValue(endValue) {
	    if (this._endValue === endValue && this.isAtRest()) {
	      return this;
	    }
	    this._startValue = this.getCurrentValue();
	    this._endValue = endValue;
	    this._springSystem.activateSpring(this.getId());
	    for (var i = 0, len = this.listeners.length; i < len; i++) {
	      var listener = this.listeners[i];
	      var onChange = listener.onSpringEndStateChange;
	      onChange && onChange(this);
	    }
	    return this;
	  };
	
	  /**
	   * Retrieve the endValue or resting position of this spring.
	   * @public
	   */
	
	
	  Spring.prototype.getEndValue = function getEndValue() {
	    return this._endValue;
	  };
	
	  /**
	   * Set the current velocity of the Spring, in pixels per second. As
	   * previously mentioned, this can be useful when you are performing
	   * a direct manipulation gesture. When a UI element is released you
	   * may call setVelocity on its animation Spring so that the Spring
	   * continues with the same velocity as the gesture ended with. The
	   * friction, tension, and displacement of the Spring will then
	   * govern its motion to return to rest on a natural feeling curve.
	   * @public
	   */
	
	
	  Spring.prototype.setVelocity = function setVelocity(velocity) {
	    if (velocity === this._currentState.velocity) {
	      return this;
	    }
	    this._currentState.velocity = velocity;
	    this._springSystem.activateSpring(this.getId());
	    return this;
	  };
	
	  /**
	   * Get the current velocity of the Spring, in pixels per second.
	   * @public
	   */
	
	
	  Spring.prototype.getVelocity = function getVelocity() {
	    return this._currentState.velocity;
	  };
	
	  /**
	   * Set a threshold value for the movement speed of the Spring below
	   * which it will be considered to be not moving or resting.
	   * @public
	   */
	
	
	  Spring.prototype.setRestSpeedThreshold = function setRestSpeedThreshold(restSpeedThreshold) {
	    this._restSpeedThreshold = restSpeedThreshold;
	    return this;
	  };
	
	  /**
	   * Retrieve the rest speed threshold for this Spring.
	   * @public
	   */
	
	
	  Spring.prototype.getRestSpeedThreshold = function getRestSpeedThreshold() {
	    return this._restSpeedThreshold;
	  };
	
	  /**
	   * Set a threshold value for displacement below which the Spring
	   * will be considered to be not displaced i.e. at its resting
	   * `endValue`.
	   * @public
	   */
	
	
	  Spring.prototype.setRestDisplacementThreshold = function setRestDisplacementThreshold(displacementFromRestThreshold) {
	    this._displacementFromRestThreshold = displacementFromRestThreshold;
	  };
	
	  /**
	   * Retrieve the rest displacement threshold for this spring.
	   * @public
	   */
	
	
	  Spring.prototype.getRestDisplacementThreshold = function getRestDisplacementThreshold() {
	    return this._displacementFromRestThreshold;
	  };
	
	  /**
	   * Enable overshoot clamping. This means that the Spring will stop
	   * immediately when it reaches its resting position regardless of
	   * any existing momentum it may have. This can be useful for certain
	   * types of animations that should not oscillate such as a scale
	   * down to 0 or alpha fade.
	   * @public
	   */
	
	
	  Spring.prototype.setOvershootClampingEnabled = function setOvershootClampingEnabled(enabled) {
	    this._overshootClampingEnabled = enabled;
	    return this;
	  };
	
	  /**
	   * Check if overshoot clamping is enabled for this spring.
	   * @public
	   */
	
	
	  Spring.prototype.isOvershootClampingEnabled = function isOvershootClampingEnabled() {
	    return this._overshootClampingEnabled;
	  };
	
	  /**
	   * Check if the Spring has gone past its end point by comparing
	   * the direction it was moving in when it started to the current
	   * position and end value.
	   * @public
	   */
	
	
	  Spring.prototype.isOvershooting = function isOvershooting() {
	    var start = this._startValue;
	    var end = this._endValue;
	    return this._springConfig.tension > 0 && (start < end && this.getCurrentValue() > end || start > end && this.getCurrentValue() < end);
	  };
	
	  /**
	   * The main solver method for the Spring. It takes
	   * the current time and delta since the last time step and performs
	   * an RK4 integration to get the new position and velocity state
	   * for the Spring based on the tension, friction, velocity, and
	   * displacement of the Spring.
	   * @public
	   */
	
	
	  Spring.prototype.advance = function advance(time, realDeltaTime) {
	    var isAtRest = this.isAtRest();
	
	    if (isAtRest && this._wasAtRest) {
	      return;
	    }
	
	    var adjustedDeltaTime = realDeltaTime;
	    if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {
	      adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;
	    }
	
	    this._timeAccumulator += adjustedDeltaTime;
	
	    var tension = this._springConfig.tension;
	    var friction = this._springConfig.friction;
	    var position = this._currentState.position;
	    var velocity = this._currentState.velocity;
	    var tempPosition = this._tempState.position;
	    var tempVelocity = this._tempState.velocity;
	    var aVelocity = void 0;
	    var aAcceleration = void 0;
	    var bVelocity = void 0;
	    var bAcceleration = void 0;
	    var cVelocity = void 0;
	    var cAcceleration = void 0;
	    var dVelocity = void 0;
	    var dAcceleration = void 0;
	    var dxdt = void 0;
	    var dvdt = void 0;
	
	    while (this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {
	      this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;
	
	      if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {
	        this._previousState.position = position;
	        this._previousState.velocity = velocity;
	      }
	
	      aVelocity = velocity;
	      aAcceleration = tension * (this._endValue - tempPosition) - friction * velocity;
	
	      tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
	      tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
	      bVelocity = tempVelocity;
	      bAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;
	
	      tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
	      tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
	      cVelocity = tempVelocity;
	      cAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;
	
	      tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC;
	      tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC;
	      dVelocity = tempVelocity;
	      dAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;
	
	      dxdt = 1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
	      dvdt = 1.0 / 6.0 * (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);
	
	      position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
	      velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;
	    }
	
	    this._tempState.position = tempPosition;
	    this._tempState.velocity = tempVelocity;
	
	    this._currentState.position = position;
	    this._currentState.velocity = velocity;
	
	    if (this._timeAccumulator > 0) {
	      this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);
	    }
	
	    if (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) {
	      if (this._springConfig.tension > 0) {
	        this._startValue = this._endValue;
	        this._currentState.position = this._endValue;
	      } else {
	        this._endValue = this._currentState.position;
	        this._startValue = this._endValue;
	      }
	      this.setVelocity(0);
	      isAtRest = true;
	    }
	
	    var notifyActivate = false;
	    if (this._wasAtRest) {
	      this._wasAtRest = false;
	      notifyActivate = true;
	    }
	
	    var notifyAtRest = false;
	    if (isAtRest) {
	      this._wasAtRest = true;
	      notifyAtRest = true;
	    }
	
	    this.notifyPositionUpdated(notifyActivate, notifyAtRest);
	  };
	
	  Spring.prototype.notifyPositionUpdated = function notifyPositionUpdated(notifyActivate, notifyAtRest) {
	    for (var i = 0, len = this.listeners.length; i < len; i++) {
	      var listener = this.listeners[i];
	      if (notifyActivate && listener.onSpringActivate) {
	        listener.onSpringActivate(this);
	      }
	
	      if (listener.onSpringUpdate) {
	        listener.onSpringUpdate(this);
	      }
	
	      if (notifyAtRest && listener.onSpringAtRest) {
	        listener.onSpringAtRest(this);
	      }
	    }
	  };
	
	  /**
	   * Check if the SpringSystem should advance. Springs are advanced
	   * a final frame after they reach equilibrium to ensure that the
	   * currentValue is exactly the requested endValue regardless of the
	   * displacement threshold.
	   * @public
	   */
	
	
	  Spring.prototype.systemShouldAdvance = function systemShouldAdvance() {
	    return !this.isAtRest() || !this.wasAtRest();
	  };
	
	  Spring.prototype.wasAtRest = function wasAtRest() {
	    return this._wasAtRest;
	  };
	
	  /**
	   * Check if the Spring is atRest meaning that it's currentValue and
	   * endValue are the same and that it has no velocity. The previously
	   * described thresholds for speed and displacement define the bounds
	   * of this equivalence check. If the Spring has 0 tension, then it will
	   * be considered at rest whenever its absolute velocity drops below the
	   * restSpeedThreshold.
	   * @public
	   */
	
	
	  Spring.prototype.isAtRest = function isAtRest() {
	    return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || this._springConfig.tension === 0);
	  };
	
	  /**
	   * Force the spring to be at rest at its current position. As
	   * described in the documentation for setCurrentValue, this method
	   * makes it easy to do synchronous non-animated updates to ui
	   * elements that are attached to springs via SpringListeners.
	   * @public
	   */
	
	
	  Spring.prototype.setAtRest = function setAtRest() {
	    this._endValue = this._currentState.position;
	    this._tempState.position = this._currentState.position;
	    this._currentState.velocity = 0;
	    return this;
	  };
	
	  Spring.prototype._interpolate = function _interpolate(alpha) {
	    this._currentState.position = this._currentState.position * alpha + this._previousState.position * (1 - alpha);
	    this._currentState.velocity = this._currentState.velocity * alpha + this._previousState.velocity * (1 - alpha);
	  };
	
	  Spring.prototype.getListeners = function getListeners() {
	    return this.listeners;
	  };
	
	  Spring.prototype.addListener = function addListener(newListener) {
	    this.listeners.push(newListener);
	    return this;
	  };
	
	  Spring.prototype.removeListener = function removeListener(listenerToRemove) {
	    removeFirst(this.listeners, listenerToRemove);
	    return this;
	  };
	
	  Spring.prototype.removeAllListeners = function removeAllListeners() {
	    this.listeners = [];
	    return this;
	  };
	
	  Spring.prototype.currentValueIsApproximately = function currentValueIsApproximately(value) {
	    return Math.abs(this.getCurrentValue() - value) <= this.getRestDisplacementThreshold();
	  };
	
	  return Spring;
	}();
	
	Spring._ID = 0;
	Spring.MAX_DELTA_TIME_SEC = 0.064;
	Spring.SOLVER_TIMESTEP_SEC = 0.001;
	
	/**
	 * A set of Springs that all run on the same physics
	 * timing loop. To get started with a Rebound animation, first
	 * create a new SpringSystem and then add springs to it.
	 * @public
	 */
	
	var SpringSystem = function () {
	  function SpringSystem(looper) {
	    classCallCheck(this, SpringSystem);
	    this.listeners = [];
	    this._activeSprings = [];
	    this._idleSpringIndices = [];
	    this._isIdle = true;
	    this._lastTimeMillis = -1;
	    this._springRegistry = {};
	
	    this.looper = looper || new AnimationLooper();
	    this.looper.springSystem = this;
	  }
	
	  /**
	   * A SpringSystem is iterated by a looper. The looper is responsible
	   * for executing each frame as the SpringSystem is resolved to idle.
	   * There are three types of Loopers described below AnimationLooper,
	   * SimulationLooper, and SteppingSimulationLooper. AnimationLooper is
	   * the default as it is the most useful for common UI animations.
	   * @public
	   */
	
	
	  SpringSystem.prototype.setLooper = function setLooper(looper) {
	    this.looper = looper;
	    looper.springSystem = this;
	  };
	
	  /**
	   * Add a new spring to this SpringSystem. This Spring will now be solved for
	   * during the physics iteration loop. By default the spring will use the
	   * default Origami spring config with 40 tension and 7 friction, but you can
	   * also provide your own values here.
	   * @public
	   */
	
	
	  SpringSystem.prototype.createSpring = function createSpring(tension, friction) {
	    var springConfig = void 0;
	    if (tension === undefined || friction === undefined) {
	      springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;
	    } else {
	      springConfig = SpringConfig.fromOrigamiTensionAndFriction(tension, friction);
	    }
	    return this.createSpringWithConfig(springConfig);
	  };
	
	  /**
	   * Add a spring with a specified bounciness and speed. To replicate Origami
	   * compositions based on PopAnimation patches, use this factory method to
	   * create matching springs.
	   * @public
	   */
	
	
	  SpringSystem.prototype.createSpringWithBouncinessAndSpeed = function createSpringWithBouncinessAndSpeed(bounciness, speed) {
	    var springConfig = void 0;
	    if (bounciness === undefined || speed === undefined) {
	      springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;
	    } else {
	      springConfig = SpringConfig.fromBouncinessAndSpeed(bounciness, speed);
	    }
	    return this.createSpringWithConfig(springConfig);
	  };
	
	  /**
	   * Add a spring with the provided SpringConfig.
	   * @public
	   */
	
	
	  SpringSystem.prototype.createSpringWithConfig = function createSpringWithConfig(springConfig) {
	    var spring = new Spring(this);
	    this.registerSpring(spring);
	    spring.setSpringConfig(springConfig);
	    return spring;
	  };
	
	  /**
	   * Check if a SpringSystem is idle or active. If all of the Springs in the
	   * SpringSystem are at rest, i.e. the physics forces have reached equilibrium,
	   * then this method will return true.
	   * @public
	   */
	
	
	  SpringSystem.prototype.getIsIdle = function getIsIdle() {
	    return this._isIdle;
	  };
	
	  /**
	   * Retrieve a specific Spring from the SpringSystem by id. This
	   * can be useful for inspecting the state of a spring before
	   * or after an integration loop in the SpringSystem executes.
	   * @public
	   */
	
	
	  SpringSystem.prototype.getSpringById = function getSpringById(id) {
	    return this._springRegistry[id];
	  };
	
	  /**
	   * Get a listing of all the springs registered with this
	   * SpringSystem.
	   * @public
	   */
	
	
	  SpringSystem.prototype.getAllSprings = function getAllSprings() {
	    var vals = [];
	    for (var _id in this._springRegistry) {
	      if (this._springRegistry.hasOwnProperty(_id)) {
	        vals.push(this._springRegistry[_id]);
	      }
	    }
	    return vals;
	  };
	
	  /**
	   * Manually add a spring to this system. This is called automatically
	   * if a Spring is created with SpringSystem#createSpring.
	   *
	   * This method sets the spring up in the registry so that it can be solved
	   * in the solver loop.
	   * @public
	   */
	
	
	  SpringSystem.prototype.registerSpring = function registerSpring(spring) {
	    this._springRegistry[spring.getId()] = spring;
	  };
	
	  /**
	   * Deregister a spring with this SpringSystem. The SpringSystem will
	   * no longer consider this Spring during its integration loop once
	   * this is called. This is normally done automatically for you when
	   * you call Spring#destroy.
	   * @public
	   */
	
	
	  SpringSystem.prototype.deregisterSpring = function deregisterSpring(spring) {
	    removeFirst(this._activeSprings, spring);
	    delete this._springRegistry[spring.getId()];
	  };
	
	  SpringSystem.prototype.advance = function advance(time, deltaTime) {
	    while (this._idleSpringIndices.length > 0) {
	      this._idleSpringIndices.pop();
	    }
	    for (var i = 0, len = this._activeSprings.length; i < len; i++) {
	      var spring = this._activeSprings[i];
	      if (spring.systemShouldAdvance()) {
	        spring.advance(time / 1000.0, deltaTime / 1000.0);
	      } else {
	        this._idleSpringIndices.push(this._activeSprings.indexOf(spring));
	      }
	    }
	    while (this._idleSpringIndices.length > 0) {
	      var idx = this._idleSpringIndices.pop();
	      idx >= 0 && this._activeSprings.splice(idx, 1);
	    }
	  };
	
	  /**
	   * This is the main solver loop called to move the simulation
	   * forward through time. Before each pass in the solver loop
	   * onBeforeIntegrate is called on an any listeners that have
	   * registered themeselves with the SpringSystem. This gives you
	   * an opportunity to apply any constraints or adjustments to
	   * the springs that should be enforced before each iteration
	   * loop. Next the advance method is called to move each Spring in
	   * the systemShouldAdvance forward to the current time. After the
	   * integration step runs in advance, onAfterIntegrate is called
	   * on any listeners that have registered themselves with the
	   * SpringSystem. This gives you an opportunity to run any post
	   * integration constraints or adjustments on the Springs in the
	   * SpringSystem.
	   * @public
	   */
	
	
	  SpringSystem.prototype.loop = function loop(currentTimeMillis) {
	    var listener = void 0;
	    if (this._lastTimeMillis === -1) {
	      this._lastTimeMillis = currentTimeMillis - 1;
	    }
	    var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;
	    this._lastTimeMillis = currentTimeMillis;
	
	    var i = 0;
	    var len = this.listeners.length;
	    for (i = 0; i < len; i++) {
	      listener = this.listeners[i];
	      listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);
	    }
	
	    this.advance(currentTimeMillis, ellapsedMillis);
	    if (this._activeSprings.length === 0) {
	      this._isIdle = true;
	      this._lastTimeMillis = -1;
	    }
	
	    for (i = 0; i < len; i++) {
	      listener = this.listeners[i];
	      listener.onAfterIntegrate && listener.onAfterIntegrate(this);
	    }
	
	    if (!this._isIdle) {
	      this.looper.run();
	    }
	  };
	
	  /**
	   * Used to notify the SpringSystem that a Spring has become displaced.
	   * The system responds by starting its solver loop up if it is currently idle.
	   */
	
	
	  SpringSystem.prototype.activateSpring = function activateSpring(springId) {
	    var spring = this._springRegistry[springId];
	    if (this._activeSprings.indexOf(spring) === -1) {
	      this._activeSprings.push(spring);
	    }
	    if (this.getIsIdle()) {
	      this._isIdle = false;
	      this.looper.run();
	    }
	  };
	
	  /**
	   * Add a listener to the SpringSystem to receive before/after integration
	   * notifications allowing Springs to be constrained or adjusted.
	   * @public
	   */
	
	
	  SpringSystem.prototype.addListener = function addListener(listener) {
	    this.listeners.push(listener);
	  };
	
	  /**
	   * Remove a previously added listener on the SpringSystem.
	   * @public
	   */
	
	
	  SpringSystem.prototype.removeListener = function removeListener(listener) {
	    removeFirst(this.listeners, listener);
	  };
	
	  /**
	   * Remove all previously added listeners on the SpringSystem.
	   * @public
	   */
	
	
	  SpringSystem.prototype.removeAllListeners = function removeAllListeners() {
	    this.listeners = [];
	  };
	
	  return SpringSystem;
	}();
	
	var index = _extends({}, Loopers, {
	  OrigamiValueConverter: OrigamiValueConverter,
	  MathUtil: MathUtil,
	  Spring: Spring,
	  SpringConfig: SpringConfig,
	  SpringSystem: SpringSystem,
	  util: _extends({}, util, MathUtil)
	});
	
	return index;
	
	})));
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44), __webpack_require__(568).setImmediate))

/***/ }),
/* 1745 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var getDisplayName = function getDisplayName(Component) {
	  if (typeof Component === 'string') {
	    return Component;
	  }
	
	  if (!Component) {
	    return undefined;
	  }
	
	  return Component.displayName || Component.name || 'Component';
	};
	
	var _default = getDisplayName;
	exports.default = _default;

/***/ }),
/* 1746 */
/***/ (function(module, exports, __webpack_require__) {

	var setPrototypeOf = __webpack_require__(1747);
	
	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  setPrototypeOf(subClass, superClass);
	}
	
	module.exports = _inheritsLoose;
	module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),
/* 1747 */
/***/ (function(module, exports) {

	function _setPrototypeOf(o, p) {
	  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };
	
	  module.exports["default"] = module.exports, module.exports.__esModule = true;
	  return _setPrototypeOf(o, p);
	}
	
	module.exports = _setPrototypeOf;
	module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),
/* 1748 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var setStatic = function setStatic(key, value) {
	  return function (BaseComponent) {
	    /* eslint-disable no-param-reassign */
	    BaseComponent[key] = value;
	    /* eslint-enable no-param-reassign */
	
	    return BaseComponent;
	  };
	};
	
	var _default = setStatic;
	exports.default = _default;

/***/ }),
/* 1749 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(172);
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var _shallowEqual = _interopRequireDefault(__webpack_require__(1051));
	
	var _default = _shallowEqual.default;
	exports.default = _default;

/***/ }),
/* 1750 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(172);
	
	exports.__esModule = true;
	exports.default = void 0;
	
	var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(1746));
	
	var _react = __webpack_require__(2);
	
	var _setDisplayName = _interopRequireDefault(__webpack_require__(557));
	
	var _wrapDisplayName = _interopRequireDefault(__webpack_require__(558));
	
	var shouldUpdate = function shouldUpdate(test) {
	  return function (BaseComponent) {
	    var factory = (0, _react.createFactory)(BaseComponent);
	
	    var ShouldUpdate =
	    /*#__PURE__*/
	    function (_Component) {
	      (0, _inheritsLoose2.default)(ShouldUpdate, _Component);
	
	      function ShouldUpdate() {
	        return _Component.apply(this, arguments) || this;
	      }
	
	      var _proto = ShouldUpdate.prototype;
	
	      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	        return test(this.props, nextProps);
	      };
	
	      _proto.render = function render() {
	        return factory(this.props);
	      };
	
	      return ShouldUpdate;
	    }(_react.Component);
	
	    if (false) {
	      return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);
	    }
	
	    return ShouldUpdate;
	  };
	};
	
	var _default = shouldUpdate;
	exports.default = _default;

/***/ }),
/* 1751 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var compose = __webpack_require__(342).compose;
	
	exports.__esModule = true;
	exports.composeWithDevTools = (
	  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?
	    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :
	    function() {
	      if (arguments.length === 0) return undefined;
	      if (typeof arguments[0] === 'object') return compose;
	      return compose.apply(null, arguments);
	    }
	);
	
	exports.devToolsEnhancer = (
	  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ?
	    window.__REDUX_DEVTOOLS_EXTENSION__ :
	    function() { return function(noop) { return noop; } }
	);


/***/ }),
/* 1752 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var define = __webpack_require__(151);
	var callBind = __webpack_require__(258);
	
	var implementation = __webpack_require__(559);
	var getPolyfill = __webpack_require__(560);
	var shim = __webpack_require__(1753);
	
	var flagsBound = callBind(implementation);
	
	define(flagsBound, {
		getPolyfill: getPolyfill,
		implementation: implementation,
		shim: shim
	});
	
	module.exports = flagsBound;


/***/ }),
/* 1753 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var supportsDescriptors = __webpack_require__(151).supportsDescriptors;
	var getPolyfill = __webpack_require__(560);
	var gOPD = Object.getOwnPropertyDescriptor;
	var defineProperty = Object.defineProperty;
	var TypeErr = TypeError;
	var getProto = Object.getPrototypeOf;
	var regex = /a/;
	
	module.exports = function shimFlags() {
		if (!supportsDescriptors || !getProto) {
			throw new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
		}
		var polyfill = getPolyfill();
		var proto = getProto(regex);
		var descriptor = gOPD(proto, 'flags');
		if (!descriptor || descriptor.get !== polyfill) {
			defineProperty(proto, 'flags', {
				configurable: true,
				enumerable: false,
				get: polyfill
			});
		}
		return polyfill;
	};


/***/ }),
/* 1754 */
/***/ (function(module, exports) {

	"use strict";function isAbsolute(e){return"/"===e.charAt(0)}function spliceOne(e,t){for(var s=t,n=s+1,i=e.length;n<i;s+=1,n+=1)e[s]=e[n];e.pop()}function resolvePathname(e,t){void 0===t&&(t="");var s,n=e&&e.split("/")||[],i=t&&t.split("/")||[],l=e&&isAbsolute(e),r=t&&isAbsolute(t),o=l||r;if(e&&isAbsolute(e)?i=n:n.length&&(i.pop(),i=i.concat(n)),!i.length)return"/";if(i.length){var u=i[i.length-1];s="."===u||".."===u||""===u}else s=!1;for(var a=0,c=i.length;0<=c;c--){var f=i[c];"."===f?spliceOne(i,c):".."===f?(spliceOne(i,c),a++):a&&(spliceOne(i,c),a--)}if(!o)for(;a--;a)i.unshift("..");!o||""===i[0]||i[0]&&isAbsolute(i[0])||i.unshift("");var h=i.join("/");return s&&"/"!==h.substr(-1)&&(h+="/"),h}module.exports=resolvePathname;


/***/ }),
/* 1755 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(1754);
	} else {
	  module.exports = require('./cjs/resolve-pathname.js');
	}


/***/ }),
/* 1756 */
/***/ (function(module, exports) {

	/** @license React v0.19.1
	 * scheduler.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';var f,g,h,k,l;
	if("undefined"===typeof window||"function"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,
	y=window.setTimeout,z=window.clearTimeout;if("undefined"!==typeof console){var A=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");"function"!==typeof A&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===
	typeof w&&"function"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=
	function(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}
	function M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;
	function V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}
	function X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}
	function Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};
	exports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=Z;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};
	exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if("object"===typeof c&&null!==c){var e=c.delay;e="number"===typeof e&&0<e?d+e:d;c="number"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};
	exports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};


/***/ }),
/* 1757 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(1756);
	} else {
	  module.exports = require('./cjs/scheduler.development.js');
	}


/***/ }),
/* 1758 */,
/* 1759 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = void 0;
	
	var _off = _interopRequireDefault(__webpack_require__(1024));
	
	var _on = _interopRequireDefault(__webpack_require__(1025));
	
	var _scrollLeft = _interopRequireDefault(__webpack_require__(1026));
	
	var _scrollTop = _interopRequireDefault(__webpack_require__(1027));
	
	var _requestAnimationFrame = _interopRequireDefault(__webpack_require__(1036));
	
	var _invariant = _interopRequireDefault(__webpack_require__(69));
	
	var _utils = __webpack_require__(1760);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	/* eslint-disable no-underscore-dangle */
	// Try at most this many times to scroll, to avoid getting stuck.
	var MAX_SCROLL_ATTEMPTS = 2;
	
	var ScrollBehavior = /*#__PURE__*/function () {
	  function ScrollBehavior(_ref) {
	    var _this = this;
	
	    var addTransitionHook = _ref.addTransitionHook,
	        stateStorage = _ref.stateStorage,
	        getCurrentLocation = _ref.getCurrentLocation,
	        shouldUpdateScroll = _ref.shouldUpdateScroll;
	
	    this._restoreScrollRestoration = function () {
	      /* istanbul ignore if: not supported by any browsers on Travis */
	      if (_this._oldScrollRestoration) {
	        try {
	          window.history.scrollRestoration = _this._oldScrollRestoration;
	        } catch (e) {
	          /* silence */
	        }
	      }
	    };
	
	    this._onWindowScroll = function () {
	      if (_this._ignoreScrollEvents) {
	        // Don't save the scroll position until the transition is complete
	        return;
	      } // It's possible that this scroll operation was triggered by what will be a
	      // `POP` transition. Instead of updating the saved location immediately, we
	      // have to enqueue the update, then potentially cancel it if we observe a
	      // location update.
	
	
	      if (!_this._saveWindowPositionHandle) {
	        _this._saveWindowPositionHandle = (0, _requestAnimationFrame["default"])(_this._saveWindowPosition);
	      }
	
	      if (_this._windowScrollTarget) {
	        var _this$_windowScrollTa = _this._windowScrollTarget,
	            xTarget = _this$_windowScrollTa[0],
	            yTarget = _this$_windowScrollTa[1];
	        var x = (0, _scrollLeft["default"])(window);
	        var y = (0, _scrollTop["default"])(window);
	
	        if (x === xTarget && y === yTarget) {
	          _this._windowScrollTarget = null;
	
	          _this._cancelCheckWindowScroll();
	        }
	      }
	    };
	
	    this._saveWindowPosition = function () {
	      _this._saveWindowPositionHandle = null;
	
	      _this._savePosition(null, window);
	    };
	
	    this._checkWindowScrollPosition = function () {
	      _this._checkWindowScrollHandle = null; // We can only get here if scrollTarget is set. Every code path that unsets
	      // scroll target also cancels the handle to avoid calling this handler.
	      // Still, check anyway just in case.
	
	      /* istanbul ignore if: paranoid guard */
	
	      if (!_this._windowScrollTarget) {
	        return Promise.resolve();
	      }
	
	      _this.scrollToTarget(window, _this._windowScrollTarget);
	
	      ++_this._numWindowScrollAttempts;
	      /* istanbul ignore if: paranoid guard */
	
	      if (_this._numWindowScrollAttempts >= MAX_SCROLL_ATTEMPTS) {
	        // This might happen if the scroll position was already set to the target
	        _this._windowScrollTarget = null;
	        return Promise.resolve();
	      }
	
	      return new Promise(function (resolve) {
	        _this._checkWindowScrollHandle = (0, _requestAnimationFrame["default"])(function () {
	          return resolve(_this._checkWindowScrollPosition());
	        });
	      });
	    };
	
	    this._stateStorage = stateStorage;
	    this._getCurrentLocation = getCurrentLocation;
	    this._shouldUpdateScroll = shouldUpdateScroll; // This helps avoid some jankiness in fighting against the browser's
	    // default scroll behavior on `POP` transitions.
	
	    /* istanbul ignore else: Travis browsers all support this */
	
	    if ('scrollRestoration' in window.history && // Unfortunately, Safari on iOS freezes for 2-6s after the user swipes to
	    // navigate through history with scrollRestoration being 'manual', so we
	    // need to detect this browser and exclude it from the following code
	    // until this bug is fixed by Apple.
	    !(0, _utils.isMobileSafari)()) {
	      this._oldScrollRestoration = window.history.scrollRestoration;
	
	      try {
	        window.history.scrollRestoration = 'manual'; // Scroll restoration persists across page reloads. We want to reset
	        // this to the original value, so that we can let the browser handle
	        // restoring the initial scroll position on server-rendered pages.
	
	        (0, _on["default"])(window, 'beforeunload', this._restoreScrollRestoration);
	      } catch (e) {
	        this._oldScrollRestoration = null;
	      }
	    } else {
	      this._oldScrollRestoration = null;
	    }
	
	    this._saveWindowPositionHandle = null;
	    this._checkWindowScrollHandle = null;
	    this._windowScrollTarget = null;
	    this._numWindowScrollAttempts = 0;
	    this._ignoreScrollEvents = false;
	    this._scrollElements = {}; // We have to listen to each window scroll update rather than to just
	    // location updates, because some browsers will update scroll position
	    // before emitting the location change.
	
	    (0, _on["default"])(window, 'scroll', this._onWindowScroll);
	    this._removeTransitionHook = addTransitionHook(function () {
	      _requestAnimationFrame["default"].cancel(_this._saveWindowPositionHandle);
	
	      _this._saveWindowPositionHandle = null;
	      Object.keys(_this._scrollElements).forEach(function (key) {
	        var scrollElement = _this._scrollElements[key];
	
	        _requestAnimationFrame["default"].cancel(scrollElement.savePositionHandle);
	
	        scrollElement.savePositionHandle = null; // It's fine to save element scroll positions here, though; the browser
	        // won't modify them.
	
	        if (!_this._ignoreScrollEvents) {
	          _this._saveElementPosition(key);
	        }
	      });
	    });
	  }
	
	  var _proto = ScrollBehavior.prototype;
	
	  _proto.registerElement = function registerElement(key, element, shouldUpdateScroll, context) {
	    var _this2 = this;
	
	    !!this._scrollElements[key] ?  false ? (0, _invariant["default"])(false, 'ScrollBehavior: There is already an element registered for `%s`.', key) : invariant(false) : void 0;
	
	    var saveElementPosition = function saveElementPosition() {
	      _this2._saveElementPosition(key);
	    };
	
	    var scrollElement = {
	      element: element,
	      shouldUpdateScroll: shouldUpdateScroll,
	      savePositionHandle: null,
	      onScroll: function onScroll() {
	        if (!scrollElement.savePositionHandle && !_this2._ignoreScrollEvents) {
	          scrollElement.savePositionHandle = (0, _requestAnimationFrame["default"])(saveElementPosition);
	        }
	      }
	    }; // In case no scrolling occurs, save the initial position
	
	    if (!scrollElement.savePositionHandle && !this._ignoreScrollEvents) {
	      scrollElement.savePositionHandle = (0, _requestAnimationFrame["default"])(saveElementPosition);
	    }
	
	    this._scrollElements[key] = scrollElement;
	    (0, _on["default"])(element, 'scroll', scrollElement.onScroll);
	
	    this._updateElementScroll(key, null, context);
	  };
	
	  _proto.unregisterElement = function unregisterElement(key) {
	    !this._scrollElements[key] ?  false ? (0, _invariant["default"])(false, 'ScrollBehavior: There is no element registered for `%s`.', key) : invariant(false) : void 0;
	    var _this$_scrollElements = this._scrollElements[key],
	        element = _this$_scrollElements.element,
	        onScroll = _this$_scrollElements.onScroll,
	        savePositionHandle = _this$_scrollElements.savePositionHandle;
	    (0, _off["default"])(element, 'scroll', onScroll);
	
	    _requestAnimationFrame["default"].cancel(savePositionHandle);
	
	    delete this._scrollElements[key];
	  };
	
	  _proto.updateScroll = function updateScroll(prevContext, context) {
	    var _this3 = this;
	
	    this._updateWindowScroll(prevContext, context).then(function () {
	      // Save the position immediately after a transition so that if no
	      // scrolling occurs, there is still a saved position
	      if (!_this3._saveWindowPositionHandle) {
	        _this3._saveWindowPositionHandle = (0, _requestAnimationFrame["default"])(_this3._saveWindowPosition);
	      }
	    });
	
	    Object.keys(this._scrollElements).forEach(function (key) {
	      _this3._updateElementScroll(key, prevContext, context);
	    });
	  };
	
	  _proto.stop = function stop() {
	    this._restoreScrollRestoration();
	
	    (0, _off["default"])(window, 'scroll', this._onWindowScroll);
	
	    this._cancelCheckWindowScroll();
	
	    this._removeTransitionHook();
	  };
	
	  _proto.startIgnoringScrollEvents = function startIgnoringScrollEvents() {
	    this._ignoreScrollEvents = true;
	  };
	
	  _proto.stopIgnoringScrollEvents = function stopIgnoringScrollEvents() {
	    this._ignoreScrollEvents = false;
	  };
	
	  _proto._cancelCheckWindowScroll = function _cancelCheckWindowScroll() {
	    _requestAnimationFrame["default"].cancel(this._checkWindowScrollHandle);
	
	    this._checkWindowScrollHandle = null;
	  };
	
	  _proto._saveElementPosition = function _saveElementPosition(key) {
	    var scrollElement = this._scrollElements[key];
	    scrollElement.savePositionHandle = null;
	
	    this._savePosition(key, scrollElement.element);
	  };
	
	  _proto._savePosition = function _savePosition(key, element) {
	    this._stateStorage.save(this._getCurrentLocation(), key, [(0, _scrollLeft["default"])(element), (0, _scrollTop["default"])(element)]);
	  };
	
	  _proto._updateWindowScroll = function _updateWindowScroll(prevContext, context) {
	    // Whatever we were doing before isn't relevant any more.
	    this._cancelCheckWindowScroll();
	
	    this._windowScrollTarget = this._getScrollTarget(null, this._shouldUpdateScroll, prevContext, context); // Updating the window scroll position is really flaky. Just trying to
	    // scroll it isn't enough. Instead, try to scroll a few times until it
	    // works.
	
	    this._numWindowScrollAttempts = 0;
	    return this._checkWindowScrollPosition();
	  };
	
	  _proto._updateElementScroll = function _updateElementScroll(key, prevContext, context) {
	    var _this$_scrollElements2 = this._scrollElements[key],
	        element = _this$_scrollElements2.element,
	        shouldUpdateScroll = _this$_scrollElements2.shouldUpdateScroll;
	
	    var scrollTarget = this._getScrollTarget(key, shouldUpdateScroll, prevContext, context);
	
	    if (!scrollTarget) {
	      return;
	    } // Unlike with the window, there shouldn't be any flakiness to deal with
	    // here.
	
	
	    this.scrollToTarget(element, scrollTarget);
	  };
	
	  _proto._getDefaultScrollTarget = function _getDefaultScrollTarget(location) {
	    var hash = location.hash;
	
	    if (hash && hash !== '#') {
	      return hash.charAt(0) === '#' ? hash.slice(1) : hash;
	    }
	
	    return [0, 0];
	  };
	
	  _proto._getScrollTarget = function _getScrollTarget(key, shouldUpdateScroll, prevContext, context) {
	    var scrollTarget = shouldUpdateScroll ? shouldUpdateScroll.call(this, prevContext, context) : true;
	
	    if (!scrollTarget || Array.isArray(scrollTarget) || typeof scrollTarget === 'string') {
	      return scrollTarget;
	    }
	
	    var location = this._getCurrentLocation();
	
	    return this._getSavedScrollTarget(key, location) || this._getDefaultScrollTarget(location);
	  };
	
	  _proto._getSavedScrollTarget = function _getSavedScrollTarget(key, location) {
	    if (location.action === 'PUSH') {
	      return null;
	    }
	
	    return this._stateStorage.read(location, key);
	  };
	
	  _proto.scrollToTarget = function scrollToTarget(element, target) {
	    if (typeof target === 'string') {
	      var targetElement = document.getElementById(target) || document.getElementsByName(target)[0];
	
	      if (targetElement) {
	        targetElement.scrollIntoView();
	        return;
	      } // Fallback to scrolling to top when target fragment doesn't exist.
	
	
	      target = [0, 0]; // eslint-disable-line no-param-reassign
	    }
	
	    var _target = target,
	        left = _target[0],
	        top = _target[1];
	    (0, _scrollLeft["default"])(element, left);
	    (0, _scrollTop["default"])(element, top);
	  };
	
	  return ScrollBehavior;
	}();
	
	exports["default"] = ScrollBehavior;
	module.exports = exports.default;

/***/ }),
/* 1760 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.isMobileSafari = isMobileSafari;
	
	function isMobileSafari() {
	  return /iPad|iPhone|iPod/.test(window.navigator.platform) && /^((?!CriOS).)*Safari/.test(window.navigator.userAgent);
	}

/***/ }),
/* 1761 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
	    "use strict";
	
	    if (global.setImmediate) {
	        return;
	    }
	
	    var nextHandle = 1; // Spec says greater than zero
	    var tasksByHandle = {};
	    var currentlyRunningATask = false;
	    var doc = global.document;
	    var registerImmediate;
	
	    function setImmediate(callback) {
	      // Callback can either be a function or a string
	      if (typeof callback !== "function") {
	        callback = new Function("" + callback);
	      }
	      // Copy function arguments
	      var args = new Array(arguments.length - 1);
	      for (var i = 0; i < args.length; i++) {
	          args[i] = arguments[i + 1];
	      }
	      // Store and register the task
	      var task = { callback: callback, args: args };
	      tasksByHandle[nextHandle] = task;
	      registerImmediate(nextHandle);
	      return nextHandle++;
	    }
	
	    function clearImmediate(handle) {
	        delete tasksByHandle[handle];
	    }
	
	    function run(task) {
	        var callback = task.callback;
	        var args = task.args;
	        switch (args.length) {
	        case 0:
	            callback();
	            break;
	        case 1:
	            callback(args[0]);
	            break;
	        case 2:
	            callback(args[0], args[1]);
	            break;
	        case 3:
	            callback(args[0], args[1], args[2]);
	            break;
	        default:
	            callback.apply(undefined, args);
	            break;
	        }
	    }
	
	    function runIfPresent(handle) {
	        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
	        // So if we're currently running a task, we'll need to delay this invocation.
	        if (currentlyRunningATask) {
	            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
	            // "too much recursion" error.
	            setTimeout(runIfPresent, 0, handle);
	        } else {
	            var task = tasksByHandle[handle];
	            if (task) {
	                currentlyRunningATask = true;
	                try {
	                    run(task);
	                } finally {
	                    clearImmediate(handle);
	                    currentlyRunningATask = false;
	                }
	            }
	        }
	    }
	
	    function installNextTickImplementation() {
	        registerImmediate = function(handle) {
	            process.nextTick(function () { runIfPresent(handle); });
	        };
	    }
	
	    function canUsePostMessage() {
	        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
	        // where `global.postMessage` means something completely different and can't be used for this purpose.
	        if (global.postMessage && !global.importScripts) {
	            var postMessageIsAsynchronous = true;
	            var oldOnMessage = global.onmessage;
	            global.onmessage = function() {
	                postMessageIsAsynchronous = false;
	            };
	            global.postMessage("", "*");
	            global.onmessage = oldOnMessage;
	            return postMessageIsAsynchronous;
	        }
	    }
	
	    function installPostMessageImplementation() {
	        // Installs an event handler on `global` for the `message` event: see
	        // * https://developer.mozilla.org/en/DOM/window.postMessage
	        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
	
	        var messagePrefix = "setImmediate$" + Math.random() + "$";
	        var onGlobalMessage = function(event) {
	            if (event.source === global &&
	                typeof event.data === "string" &&
	                event.data.indexOf(messagePrefix) === 0) {
	                runIfPresent(+event.data.slice(messagePrefix.length));
	            }
	        };
	
	        if (global.addEventListener) {
	            global.addEventListener("message", onGlobalMessage, false);
	        } else {
	            global.attachEvent("onmessage", onGlobalMessage);
	        }
	
	        registerImmediate = function(handle) {
	            global.postMessage(messagePrefix + handle, "*");
	        };
	    }
	
	    function installMessageChannelImplementation() {
	        var channel = new MessageChannel();
	        channel.port1.onmessage = function(event) {
	            var handle = event.data;
	            runIfPresent(handle);
	        };
	
	        registerImmediate = function(handle) {
	            channel.port2.postMessage(handle);
	        };
	    }
	
	    function installReadyStateChangeImplementation() {
	        var html = doc.documentElement;
	        registerImmediate = function(handle) {
	            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
	            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
	            var script = doc.createElement("script");
	            script.onreadystatechange = function () {
	                runIfPresent(handle);
	                script.onreadystatechange = null;
	                html.removeChild(script);
	                script = null;
	            };
	            html.appendChild(script);
	        };
	    }
	
	    function installSetTimeoutImplementation() {
	        registerImmediate = function(handle) {
	            setTimeout(runIfPresent, 0, handle);
	        };
	    }
	
	    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
	    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
	    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;
	
	    // Don't get fooled by e.g. browserify environments.
	    if ({}.toString.call(global.process) === "[object process]") {
	        // For Node.js before 0.9
	        installNextTickImplementation();
	
	    } else if (canUsePostMessage()) {
	        // For non-IE10 modern browsers
	        installPostMessageImplementation();
	
	    } else if (global.MessageChannel) {
	        // For web workers, where supported
	        installMessageChannelImplementation();
	
	    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
	        // For IE 6–8
	        installReadyStateChangeImplementation();
	
	    } else {
	        // For older browsers
	        installSetTimeoutImplementation();
	    }
	
	    attachTo.setImmediate = setImmediate;
	    attachTo.clearImmediate = clearImmediate;
	}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(44)))

/***/ }),
/* 1762 */,
/* 1763 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var fetchKeys = __webpack_require__(1360);
	
	module.exports = function shallowEqual(objA, objB, compare, compareContext) {
	
	    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
	
	    if (ret !== void 0) {
	        return !!ret;
	    }
	
	    if (objA === objB) {
	        return true;
	    }
	
	    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	        return false;
	    }
	
	    var keysA = fetchKeys(objA);
	    var keysB = fetchKeys(objB);
	
	    var len = keysA.length;
	    if (len !== keysB.length) {
	        return false;
	    }
	
	    compareContext = compareContext || null;
	
	    // Test for A's keys different from B.
	    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
	    for (var i = 0; i < len; i++) {
	        var key = keysA[i];
	        if (!bHasOwnProperty(key)) {
	            return false;
	        }
	        var valueA = objA[key];
	        var valueB = objB[key];
	
	        var _ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
	        if (_ret === false || _ret === void 0 && valueA !== valueB) {
	            return false;
	        }
	    }
	
	    return true;
	};

/***/ }),
/* 1764 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var isArrayish = __webpack_require__(1210);
	
	var concat = Array.prototype.concat;
	var slice = Array.prototype.slice;
	
	var swizzle = module.exports = function swizzle(args) {
		var results = [];
	
		for (var i = 0, len = args.length; i < len; i++) {
			var arg = args[i];
	
			if (isArrayish(arg)) {
				// http://jsperf.com/javascript-array-concat-vs-push/98
				results = concat.call(results, slice.call(arg));
			} else {
				results.push(arg);
			}
		}
	
		return results;
	};
	
	swizzle.wrap = function (fn) {
		return function () {
			return fn(swizzle(arguments));
		};
	};


/***/ }),
/* 1765 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(99);


/***/ }),
/* 1766 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// a passthrough stream.
	// basically just the most minimal sort of Transform stream.
	// Every written chunk gets output as-is.
	
	'use strict';
	
	module.exports = PassThrough;
	
	var Transform = __webpack_require__(562);
	
	/*<replacement>*/
	var util = Object.create(__webpack_require__(146));
	util.inherits = __webpack_require__(43);
	/*</replacement>*/
	
	util.inherits(PassThrough, Transform);
	
	function PassThrough(options) {
	  if (!(this instanceof PassThrough)) return new PassThrough(options);
	
	  Transform.call(this, options);
	}
	
	PassThrough.prototype._transform = function (chunk, encoding, cb) {
	  cb(null, chunk);
	};

/***/ }),
/* 1767 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Buffer = __webpack_require__(219).Buffer;
	var util = __webpack_require__(1790);
	
	function copyBuffer(src, target, offset) {
	  src.copy(target, offset);
	}
	
	module.exports = function () {
	  function BufferList() {
	    _classCallCheck(this, BufferList);
	
	    this.head = null;
	    this.tail = null;
	    this.length = 0;
	  }
	
	  BufferList.prototype.push = function push(v) {
	    var entry = { data: v, next: null };
	    if (this.length > 0) this.tail.next = entry;else this.head = entry;
	    this.tail = entry;
	    ++this.length;
	  };
	
	  BufferList.prototype.unshift = function unshift(v) {
	    var entry = { data: v, next: this.head };
	    if (this.length === 0) this.tail = entry;
	    this.head = entry;
	    ++this.length;
	  };
	
	  BufferList.prototype.shift = function shift() {
	    if (this.length === 0) return;
	    var ret = this.head.data;
	    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
	    --this.length;
	    return ret;
	  };
	
	  BufferList.prototype.clear = function clear() {
	    this.head = this.tail = null;
	    this.length = 0;
	  };
	
	  BufferList.prototype.join = function join(s) {
	    if (this.length === 0) return '';
	    var p = this.head;
	    var ret = '' + p.data;
	    while (p = p.next) {
	      ret += s + p.data;
	    }return ret;
	  };
	
	  BufferList.prototype.concat = function concat(n) {
	    if (this.length === 0) return Buffer.alloc(0);
	    if (this.length === 1) return this.head.data;
	    var ret = Buffer.allocUnsafe(n >>> 0);
	    var p = this.head;
	    var i = 0;
	    while (p) {
	      copyBuffer(p.data, ret, i);
	      i += p.data.length;
	      p = p.next;
	    }
	    return ret;
	  };
	
	  return BufferList;
	}();
	
	if (util && util.inspect && util.inspect.custom) {
	  module.exports.prototype[util.inspect.custom] = function () {
	    var obj = util.inspect({ length: this.length });
	    return this.constructor.name + ' ' + obj;
	  };
	}

/***/ }),
/* 1768 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(344).PassThrough


/***/ }),
/* 1769 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(344).Transform


/***/ }),
/* 1770 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(343);


/***/ }),
/* 1771 */,
/* 1772 */
/***/ (function(module, exports, __webpack_require__) {

	var React = __webpack_require__(2);
	
	function AlgoliaIcon (props) {
	    return React.createElement("svg",props,[React.createElement("linearGradient",{"id":"a","x1":"428.258","x2":"434.145","y1":"404.15","y2":"409.85","gradientUnits":"userSpaceOnUse","gradientTransform":"matrix(94.045 0 0 -94.072 -40381.527 38479.52)","key":0},[React.createElement("stop",{"offset":"0","stopColor":"#00aeff","key":0}),React.createElement("stop",{"offset":"1","stopColor":"#3369e7","key":1})]),React.createElement("path",{"fill":"url(#a)","d":"M61.8 15.4h242.8c23.9 0 43.4 19.4 43.4 43.4v242.9c0 23.9-19.4 43.4-43.4 43.4H61.8c-23.9 0-43.4-19.4-43.4-43.4v-243c0-23.9 19.4-43.3 43.4-43.3z","key":1}),React.createElement("path",{"fill":"#FFF","d":"M187 98.7c-51.4 0-93.1 41.7-93.1 93.2S135.6 285 187 285s93.1-41.7 93.1-93.2-41.6-93.1-93.1-93.1zm0 158.8c-36.2 0-65.6-29.4-65.6-65.6s29.4-65.6 65.6-65.6 65.6 29.4 65.6 65.6-29.3 65.6-65.6 65.6zm0-117.8v48.9c0 1.4 1.5 2.4 2.8 1.7l43.4-22.5c1-.5 1.3-1.7.8-2.7-9-15.8-25.7-26.6-45-27.3-1 0-2 .8-2 1.9zm-60.8-35.9l-5.7-5.7c-5.6-5.6-14.6-5.6-20.2 0l-6.8 6.8c-5.6 5.6-5.6 14.6 0 20.2l5.6 5.6c.9.9 2.2.7 3-.2 3.3-4.5 6.9-8.8 10.9-12.8 4.1-4.1 8.3-7.7 12.9-11 1-.6 1.1-2 .3-2.9zM217.5 89V77.7c0-7.9-6.4-14.3-14.3-14.3h-33.3c-7.9 0-14.3 6.4-14.3 14.3v11.6c0 1.3 1.2 2.2 2.5 1.9 9.3-2.7 19.1-4.1 29-4.1 9.5 0 18.9 1.3 28 3.8 1.2.3 2.4-.6 2.4-1.9z","key":2}),React.createElement("path",{"fill":"#182359","d":"M842.5 267.6c0 26.7-6.8 46.2-20.5 58.6-13.7 12.4-34.6 18.6-62.8 18.6-10.3 0-31.7-2-48.8-5.8l6.3-31c14.3 3 33.2 3.8 43.1 3.8 15.7 0 26.9-3.2 33.6-9.6s10-15.9 10-28.5v-6.4c-3.9 1.9-9 3.8-15.3 5.8-6.3 1.9-13.6 2.9-21.8 2.9-10.8 0-20.6-1.7-29.5-5.1-8.9-3.4-16.6-8.4-22.9-15-6.3-6.6-11.3-14.9-14.8-24.8s-5.3-27.6-5.3-40.6c0-12.2 1.9-27.5 5.6-37.7 3.8-10.2 9.2-19 16.5-26.3 7.2-7.3 16-12.9 26.3-17s22.4-6.7 35.5-6.7c12.7 0 24.4 1.6 35.8 3.5 11.4 1.9 21.1 3.9 29 6.1v155.2zm-108.7-77.2c0 16.4 3.6 34.6 10.8 42.2 7.2 7.6 16.5 11.4 27.9 11.4 6.2 0 12.1-.9 17.6-2.6 5.5-1.7 9.9-3.7 13.4-6.1v-97.1c-2.8-.6-14.5-3-25.8-3.3-14.2-.4-25 5.4-32.6 14.7-7.5 9.3-11.3 25.6-11.3 40.8zm294.3 0c0 13.2-1.9 23.2-5.8 34.1s-9.4 20.2-16.5 27.9c-7.1 7.7-15.6 13.7-25.6 17.9s-25.4 6.6-33.1 6.6c-7.7-.1-23-2.3-32.9-6.6-9.9-4.3-18.4-10.2-25.5-17.9-7.1-7.7-12.6-17-16.6-27.9s-6-20.9-6-34.1c0-13.2 1.8-25.9 5.8-36.7 4-10.8 9.6-20 16.8-27.7s15.8-13.6 25.6-17.8c9.9-4.2 20.8-6.2 32.6-6.2s22.7 2.1 32.7 6.2c10 4.2 18.6 10.1 25.6 17.8 7.1 7.7 12.6 16.9 16.6 27.7 4.2 10.8 6.3 23.5 6.3 36.7zm-40 .1c0-16.9-3.7-31-10.9-40.8-7.2-9.9-17.3-14.8-30.2-14.8-12.9 0-23 4.9-30.2 14.8-7.2 9.9-10.7 23.9-10.7 40.8 0 17.1 3.6 28.6 10.8 38.5 7.2 10 17.3 14.9 30.2 14.9 12.9 0 23-5 30.2-14.9 7.2-10 10.8-21.4 10.8-38.5zm127.1 86.4c-64.1.3-64.1-51.8-64.1-60.1L1051 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9zm68.9 0h-39.3V108.1l39.3-6.2v175zm-19.7-193.5c13.1 0 23.8-10.6 23.8-23.7S1177.6 36 1164.4 36s-23.8 10.6-23.8 23.7 10.7 23.7 23.8 23.7zm117.4 18.6c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4s8.9 13.5 11.1 21.7c2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6s-25.9 2.7-41.1 2.7c-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8s9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2s-10-3-16.7-3c-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1s19.5-2.6 30.3-2.6zm3.3 141.9c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18 5.9 3.6 13.7 5.3 23.6 5.3zM512.9 103c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4 5.3 5.8 8.9 13.5 11.1 21.7 2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6-12.2 1.8-25.9 2.7-41.1 2.7-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8 4.7.5 9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2-4.4-1.7-10-3-16.7-3-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1 9.4-1.8 19.5-2.6 30.3-2.6zm3.4 142c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18s13.7 5.3 23.6 5.3zm158.5 31.9c-64.1.3-64.1-51.8-64.1-60.1L610.6 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9z","key":3})]);
	}
	
	AlgoliaIcon.defaultProps = {"viewBox":"0 0 1366 362"};
	
	module.exports = AlgoliaIcon;
	
	AlgoliaIcon.default = AlgoliaIcon;


/***/ }),
/* 1773 */,
/* 1774 */,
/* 1775 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;
	
		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};

/***/ }),
/* 1776 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.default = createThemeProvider;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _isFunction = __webpack_require__(1212);
	
	var _isFunction2 = _interopRequireDefault(_isFunction);
	
	var _isPlainObject = __webpack_require__(451);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _channel = __webpack_require__(221);
	
	var _channel2 = _interopRequireDefault(_channel);
	
	var _brcast = __webpack_require__(404);
	
	var _brcast2 = _interopRequireDefault(_brcast);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Provide a theme to an entire react component tree via context
	 * and event listeners (have to do both context
	 * and event emitter as pure components block context updates)
	 */
	
	function createThemeProvider() {
	  var _class, _temp2;
	
	  var CHANNEL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _channel2.default;
	
	  return _temp2 = _class = function (_React$Component) {
	    _inherits(ThemeProvider, _React$Component);
	
	    function ThemeProvider() {
	      var _ref;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, ThemeProvider);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ThemeProvider.__proto__ || Object.getPrototypeOf(ThemeProvider)).call.apply(_ref, [this].concat(args))), _this), _this.broadcast = (0, _brcast2.default)(_this.getTheme()), _this.setOuterTheme = function (theme) {
	        _this.outerTheme = theme;
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(ThemeProvider, [{
	      key: 'getTheme',
	
	
	      // Get the theme from the props, supporting both (outerTheme) => {} as well as object notation
	      value: function getTheme(passedTheme) {
	        var theme = passedTheme || this.props.theme;
	        if ((0, _isFunction2.default)(theme)) {
	          var mergedTheme = theme(this.outerTheme);
	          if (!(0, _isPlainObject2.default)(mergedTheme)) {
	            throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');
	          }
	          return mergedTheme;
	        }
	        if (!(0, _isPlainObject2.default)(theme)) {
	          throw new Error('[ThemeProvider] Please make your theme prop a plain object');
	        }
	
	        if (!this.outerTheme) {
	          return theme;
	        }
	
	        return _extends({}, this.outerTheme, theme);
	      }
	    }, {
	      key: 'getChildContext',
	      value: function getChildContext() {
	        return _defineProperty({}, CHANNEL, this.broadcast);
	      }
	    }, {
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        // create a new subscription for keeping track of outer theme, if present
	        if (this.context[CHANNEL]) {
	          this.subscriptionId = this.context[CHANNEL].subscribe(this.setOuterTheme);
	        }
	      }
	
	      // set broadcast state by merging outer theme with own
	
	    }, {
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        if (this.context[CHANNEL]) {
	          this.setOuterTheme(this.context[CHANNEL].getState());
	          this.broadcast.setState(this.getTheme());
	        }
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (this.props.theme !== nextProps.theme) {
	          this.broadcast.setState(this.getTheme(nextProps.theme));
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        if (this.subscriptionId !== undefined) {
	          this.context[CHANNEL].unsubscribe(this.subscriptionId);
	          delete this.subscriptionId;
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        if (!this.props.children) {
	          return null;
	        }
	        return _react2.default.Children.only(this.props.children);
	      }
	    }]);
	
	    return ThemeProvider;
	  }(_react2.default.Component), _class.propTypes = {
	    children: _propTypes2.default.element,
	    theme: _propTypes2.default.oneOfType([_propTypes2.default.shape({}), _propTypes2.default.func]).isRequired
	  }, _class.childContextTypes = _defineProperty({}, CHANNEL, _propTypes2.default.object.isRequired), _class.contextTypes = _defineProperty({}, CHANNEL, _propTypes2.default.object), _temp2;
	}

/***/ }),
/* 1777 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.default = createWithTheme;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _channel = __webpack_require__(221);
	
	var _channel2 = _interopRequireDefault(_channel);
	
	var _createThemeListener = __webpack_require__(566);
	
	var _createThemeListener2 = _interopRequireDefault(_createThemeListener);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getDisplayName = function getDisplayName(Component) {
	  return Component.displayName || Component.name || 'Component';
	};
	
	function createWithTheme() {
	  var CHANNEL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _channel2.default;
	
	  var themeListener = (0, _createThemeListener2.default)(CHANNEL);
	  return function (Component) {
	    var _class, _temp;
	
	    return _temp = _class = function (_React$Component) {
	      _inherits(WithTheme, _React$Component);
	
	      function WithTheme(props, context) {
	        _classCallCheck(this, WithTheme);
	
	        var _this = _possibleConstructorReturn(this, (WithTheme.__proto__ || Object.getPrototypeOf(WithTheme)).call(this, props, context));
	
	        _this.state = { theme: themeListener.initial(context) };
	        _this.setTheme = function (theme) {
	          return _this.setState({ theme: theme });
	        };
	        return _this;
	      }
	
	      _createClass(WithTheme, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	          this.unsubscribe = themeListener.subscribe(this.context, this.setTheme);
	        }
	      }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	          if (typeof this.unsubscribe === 'function') {
	            this.unsubscribe();
	          }
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          var theme = this.state.theme;
	
	
	          return _react2.default.createElement(Component, _extends({ theme: theme }, this.props));
	        }
	      }]);
	
	      return WithTheme;
	    }(_react2.default.Component), _class.displayName = 'WithTheme(' + getDisplayName(Component) + ')', _class.contextTypes = themeListener.contextTypes, _temp;
	  };
	}

/***/ }),
/* 1778 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", { value: true });
	var isProduction = ("production") === 'production';
	var prefix = 'Invariant failed';
	function invariant(condition, message) {
	    if (condition) {
	        return;
	    }
	    if (isProduction) {
	        throw new Error(prefix);
	    }
	    throw new Error(prefix + ": " + (message || ''));
	}
	exports.default = invariant;


/***/ }),
/* 1779 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var isProduction = ("production") === 'production';
	function warning(condition, message) {
	  if (!isProduction) {
	    if (condition) {
	      return;
	    }
	
	    var text = "Warning: " + message;
	
	    if (typeof console !== 'undefined') {
	      console.warn(text);
	    }
	
	    try {
	      throw Error(text);
	    } catch (x) {}
	  }
	}
	
	module.exports = warning;


/***/ }),
/* 1780 */
/***/ (function(module, exports, __webpack_require__) {

	
	var space = __webpack_require__(1782)
	
	/**
	 * Export.
	 */
	
	module.exports = toCamelCase
	
	/**
	 * Convert a `string` to camel case.
	 *
	 * @param {String} string
	 * @return {String}
	 */
	
	function toCamelCase(string) {
	  return space(string).replace(/\s(\w)/g, function (matches, letter) {
	    return letter.toUpperCase()
	  })
	}


/***/ }),
/* 1781 */
/***/ (function(module, exports) {

	
	/**
	 * Export.
	 */
	
	module.exports = toNoCase
	
	/**
	 * Test whether a string is camel-case.
	 */
	
	var hasSpace = /\s/
	var hasSeparator = /(_|-|\.|:)/
	var hasCamel = /([a-z][A-Z]|[A-Z][a-z])/
	
	/**
	 * Remove any starting case from a `string`, like camel or snake, but keep
	 * spaces and punctuation that may be important otherwise.
	 *
	 * @param {String} string
	 * @return {String}
	 */
	
	function toNoCase(string) {
	  if (hasSpace.test(string)) return string.toLowerCase()
	  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()
	  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()
	  return string.toLowerCase()
	}
	
	/**
	 * Separator splitter.
	 */
	
	var separatorSplitter = /[\W_]+(.|$)/g
	
	/**
	 * Un-separate a `string`.
	 *
	 * @param {String} string
	 * @return {String}
	 */
	
	function unseparate(string) {
	  return string.replace(separatorSplitter, function (m, next) {
	    return next ? ' ' + next : ''
	  })
	}
	
	/**
	 * Camelcase splitter.
	 */
	
	var camelSplitter = /(.)([A-Z]+)/g
	
	/**
	 * Un-camelcase a `string`.
	 *
	 * @param {String} string
	 * @return {String}
	 */
	
	function uncamelize(string) {
	  return string.replace(camelSplitter, function (m, previous, uppers) {
	    return previous + ' ' + uppers.toLowerCase().split('').join(' ')
	  })
	}


/***/ }),
/* 1782 */
/***/ (function(module, exports, __webpack_require__) {

	
	var clean = __webpack_require__(1781)
	
	/**
	 * Export.
	 */
	
	module.exports = toSpaceCase
	
	/**
	 * Convert a `string` to space case.
	 *
	 * @param {String} string
	 * @return {String}
	 */
	
	function toSpaceCase(string) {
	  return clean(string).replace(/[\W_]+(.|$)/g, function (matches, match) {
	    return match ? ' ' + match : ''
	  }).trim()
	}


/***/ }),
/* 1783 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {
	/**
	 * Module exports.
	 */
	
	module.exports = deprecate;
	
	/**
	 * Mark that a method should not be used.
	 * Returns a modified function which warns once by default.
	 *
	 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
	 *
	 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
	 * will throw an Error when invoked.
	 *
	 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
	 * will invoke `console.trace()` instead of `console.error()`.
	 *
	 * @param {Function} fn - the function to deprecate
	 * @param {String} msg - the string to print to the console when `fn` is invoked
	 * @returns {Function} a new "deprecated" version of `fn`
	 * @api public
	 */
	
	function deprecate (fn, msg) {
	  if (config('noDeprecation')) {
	    return fn;
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (config('throwDeprecation')) {
	        throw new Error(msg);
	      } else if (config('traceDeprecation')) {
	        console.trace(msg);
	      } else {
	        console.warn(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	}
	
	/**
	 * Checks `localStorage` for boolean values for the given `name`.
	 *
	 * @param {String} name
	 * @returns {Boolean}
	 * @api private
	 */
	
	function config (name) {
	  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
	  try {
	    if (!global.localStorage) return false;
	  } catch (_) {
	    return false;
	  }
	  var val = global.localStorage[name];
	  if (null == val) return false;
	  return String(val).toLowerCase() === 'true';
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 1784 */
/***/ (function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ }),
/* 1785 */
/***/ (function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ }),
/* 1786 */
/***/ (function(module, exports) {

	"use strict";function valueOf(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}function valueEqual(u,r){if(u===r)return!0;if(null==u||null==r)return!1;if(Array.isArray(u))return Array.isArray(r)&&u.length===r.length&&u.every(function(e,u){return valueEqual(e,r[u])});if("object"!=typeof u&&"object"!=typeof r)return!1;var e=valueOf(u),t=valueOf(r);return e!==u||t!==r?valueEqual(e,t):Object.keys(Object.assign({},u,r)).every(function(e){return valueEqual(u[e],r[e])})}module.exports=valueEqual;


/***/ }),
/* 1787 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(1786);
	} else {
	  module.exports = require('./cjs/value-equal.js');
	}


/***/ }),
/* 1788 */
/***/ (function(module, exports) {

	/* (ignored) */

/***/ }),
/* 1789 */
/***/ (function(module, exports) {

	/* (ignored) */

/***/ }),
/* 1790 */
/***/ (function(module, exports) {

	/* (ignored) */

/***/ })
/******/ ]);
//# sourceMappingURL=commons-0acf0ec09265f2166eb3.js.map