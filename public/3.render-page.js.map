{"version":3,"sources":["webpack:///./src/components/Post/PostComments.js"],"names":["DiscussionEmbed","then","module","catch","styles","postComments","margin","padding","borderTop","DISQUS_DELAY","PostComments","showComments","setShowComments","props","classes","slug","post","title","frontmatter","category","url","config","siteUrl","pathPrefix","disqusConfig","identifier","fields","prefix","isSSR","globalThis","setTimeout","disqusShortname","propTypes","PropTypes","object","isRequired","string","theme"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;;;AAEA;AACA;AACA;;AAPA;AACA;AAOA,KAAMA,kBAAkB,8BAAe;AAAA,UACrC;AAAA;AAAA,mCAAO,GAAP;AAAA;AAAA,MACGC,IADH,CACQ,kBAAU;AACd,YAAOC,OAAOF,eAAd;AACD,IAHH,EAIGG,KAJH,CAIS,iBAAS,CAAE,CAJpB,CADqC;AAAA,EAAf,CAAxB;;AAQA,KAAMC,SAAS,SAATA,MAAS;AAAA,UAAU;AACvBC,mBAAc;AACZC,eAAQ,SADI;AAEZC,gBAAS,SAFG;AAGZC,kBAAW;AAHC;AADS,IAAV;AAAA,EAAf;;AAQA;AACA;AACA;;AAEA,KAAMC,eAAe,IAArB;;AAEA,KAAMC,eAAe,SAAfA,YAAe,QAAS;AAAA,mBACY,qBAAS,KAAT,CADZ;AAAA,OACrBC,YADqB;AAAA,OACPC,eADO;;AAAA,cAEIC,SAAS,EAFb;AAAA,OAEpBC,OAFoB,QAEpBA,OAFoB;AAAA,OAEXC,IAFW,QAEXA,IAFW;AAAA,OAELC,IAFK,QAELA,IAFK;;AAG5B,OAAMC,QAAQD,QAAQA,KAAKE,WAAb,IAA4BF,KAAKE,WAAL,CAAiBD,KAA3D;AACA,OAAME,WAAWH,QAAQA,KAAKE,WAAb,IAA4BF,KAAKE,WAAL,CAAiBC,QAA9D;;AAEA,OAAMC,MAAMC,iBAAOC,OAAP,GAAiBD,iBAAOE,UAAxB,GAAqCR,IAAjD;AACA,OAAMS,eAAe;AACnBC,kBAAeT,QAAQA,KAAKU,MAAb,IAAuBV,KAAKU,MAAL,CAAYC,MAAlD,UAA4DR,QADzC;AAEnBF,YAAOA,SAASF,IAFG;AAGnBK;AAHmB,IAArB;;AAMA;AACA,OAAMQ,QAAQ,OAAOC,UAAP,KAAsB,WAApC;;AAEA,OAAID,KAAJ,EAAW,OAAO,uCAAK,WAAU,+BAAf,GAAP;;AAEX,yBAAU,YAAM;AACdE,gBAAWlB,eAAX,EAA4BH,YAA5B,EAA0C,IAA1C;AACD,IAFD,EAEG,EAFH;;AAIA,UACE;AAAA;AAAA,OAAK,IAAG,eAAR,EAAwB,WAAWK,QAAQT,YAA3C;AACGM,qBAAgB,8BAAC,eAAD,IAAiB,WAAWU,iBAAOU,eAAnC,EAAoD,QAAQP,YAA5D;AADnB,IADF;AAaD,EAnCD;;AAqCAd,cAAasB,SAAb,GAAyB;AACvBlB,YAASmB,oBAAUC,MAAV,CAAiBC,UADH;AAEvBnB,SAAMiB,oBAAUC,MAAV,CAAiBC,UAFA;AAGvBpB,SAAMkB,oBAAUG,MAAV,CAAiBD,UAHA;AAIvBE,UAAOJ,oBAAUC,MAAV,CAAiBC;AACxB;AALuB,EAAzB;;mBAQe,wBAAY/B,MAAZ,EAAoBM,YAApB,C","file":"3.render-page.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport injectSheet from \"react-jss\";\n// import FacebookProvider, { Comments } from \"react-facebook\";\n// import { DiscussionEmbed } from \"disqus-react\";\nimport config from \"../../../content/meta/config\";\nimport asyncComponent from \"../common/AsyncComponent\";\n\n// const DiscussionEmbedAsync = React.lazy(() =>\n//   import(\"disqus-react\").then(({ DiscussionEmbed }) => DiscussionEmbed)\n// );\nconst DiscussionEmbed = asyncComponent(() =>\n  import(\"disqus-react\")\n    .then(module => {\n      return module.DiscussionEmbed;\n    })\n    .catch(error => {})\n);\n\nconst styles = theme => ({\n  postComments: {\n    margin: \"3em 0 0\",\n    padding: \"3em 0 0\",\n    borderTop: \"1px solid #ddd\"\n  }\n});\n\n// {/* <Disqus.CommentCount shortname={disqusShortname} config={disqusConfig}>\n//   Comments\n// </Disqus.CommentCount> */}\n\nconst DISQUS_DELAY = 6000;\n\nconst PostComments = props => {\n  const [showComments, setShowComments] = useState(false);\n  const { classes, slug, post } = props || {};\n  const title = post && post.frontmatter && post.frontmatter.title;\n  const category = post && post.frontmatter && post.frontmatter.category;\n\n  const url = config.siteUrl + config.pathPrefix + slug;\n  const disqusConfig = {\n    identifier: `${post && post.fields && post.fields.prefix}/${category}`,\n    title: title || slug,\n    url\n  };\n\n  // eslint-disable-next-line no-undef\n  const isSSR = typeof globalThis === \"undefined\";\n\n  if (isSSR) return <div className=\"post-comments-ssr-placeholder\" />;\n\n  useEffect(() => {\n    setTimeout(setShowComments, DISQUS_DELAY, true);\n  }, []);\n\n  return (\n    <div id=\"post-comments\" className={classes.postComments}>\n      {showComments && <DiscussionEmbed shortname={config.disqusShortname} config={disqusConfig} />}\n\n      {/* <FacebookProvider appId={facebook}>\n        <Comments\n          href={`${config.siteUrl}${slug}`}\n          width=\"100%\"\n          colorScheme={props.theme.main.colors.fbCommentsColorscheme}\n        />\n      </FacebookProvider> */}\n    </div>\n  );\n};\n\nPostComments.propTypes = {\n  classes: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  slug: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired\n  // facebook: PropTypes.object.isRequired\n};\n\nexport default injectSheet(styles)(PostComments);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Post/PostComments.js"],"sourceRoot":""}